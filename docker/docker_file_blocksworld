# Base image with CUDA support for ML workloads
FROM ferrazzipietro/nvidia_toolkit:toolkit_12_2

# Set environment variables to avoid interactive installation prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install basic dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    git \
    python3 \
    python3-pip \
    python3-dev \
    ca-certificates \
    build-essential \
    curl \
    xvfb \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    && apt-get clean \
    bzip2 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# # Install Miniconda (much smaller than Anaconda)
# RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh \
#     && bash /tmp/miniconda.sh -b -p /opt/conda \
#     && rm /tmp/miniconda.sh

# Add conda to path
# ENV PATH="/opt/conda/bin:${PATH}"
# Make conda activate command available

# Set working directory
WORKDIR /app

# Clone the repository (alternatively, use COPY . . if building from local files)
RUN git clone https://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@github.com/merlerm/ViPlan.git .

# Create and activate the environment
RUN conda env create -f environment.yml \
    && echo "conda activate viplan" > ~/.bashrc

# Install Flash Attention (optional)
# RUN pip install flash-attn --no-build-isolation \
#     && pip install flashinfer-python -i https://flashinfer.ai/whl/cu124/torch2.6/
# Set up Blender for Blocksworld environment
RUN wget https://download.blender.org/release/Blender3.0/blender-3.0.0-linux-x64.tar.xz \
    && tar xf blender-3.0.0-linux-x64.tar.xz \
    && echo $PWD > $(echo blender*/3.*/python/lib/python*/site-packages/)clevr.pth \
    && rm blender-3.0.0-linux-x64.tar.xz

RUN apt-get update && apt-get install -y --no-install-recommends \
    libxi6 \
    libxfixes3 \
    libgl1 \
    libxcomposite1 \
    libxcursor1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# RUN conda run init && conda activate viplan_env &&\
#     pip install fire
# RUN echo '#!/bin/bash\n\
# source $(conda info --base)/etc/profile.d/conda.sh\n\
# conda activate viplan\n\
# pip install fire\n\
# conda list\n\
# \n\
# # Check if we are using mounted volume\n\
# if [ -d "/workspace/ViPlan" ] && [ ! -L "/app/data" ]; then\n\
#     # Create symbolic links to relevant directories\n\
#     ln -sf /workspace/ViPlan/results /app/results\n\
#     echo "Linked mounted directories from host"\n\
# fi\n\
# \n\
# # Execute the command passed to docker run\n\
# exec "$@"' > /app/entrypoint.sh \
#     && chmod +x /app/entrypoint.sh
# RUN echo "WHICH PYTHON $(which python)"
# RUN echo '#!/bin/bash\n\
# source $(conda info --base)/etc/profile.d/conda.sh\n\
# conda activate viplan\n\
# \n\
# # Execute the command passed to docker run\n\
# exec "$@"' > /app/entrypoint.sh \
#     && chmod +x /app/entrypoint.sh
# # Set the entrypoint
# ENTRYPOINT ["/app/entrypoint.sh"]

RUN echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
RUN git pull
# Default command
CMD ["bash"]