{"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_1, it appears that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".", false, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_1, it appears that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is on the right side of the image, close to the robotic arm. The arm appears to be positioned in such a way that it can reach the cabinet_1 without any obstructions. Therefore, the cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is on the right side of the image, close to the robotic arm. The arm appears to be positioned in such a way that it can reach the cabinet_1 without any obstructions. Therefore, the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the right side of the room. The cabinet doors appear to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the right side of the room. The cabinet doors appear to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the document_1, but it is not actually holding it. The document_1 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the document_1, but it is not actually holding it. The document_1 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not actually holding it. The folder_1 is on the table, and the robotic arm is not grasping it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not actually holding it. The folder_1 is on the table, and the robotic arm is not grasping it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_2": [true, false, false], "holding document_4": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the cabinet labeled as \"cabinet_1\" in the image. The cabinet is located on the right side of the room. Observing the cabinet, it appears that the doors are open, as indicated by the visible interior and the red outline around the open section. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will identify the cabinet labeled as \"cabinet_1\" in the image. The cabinet is located on the right side of the room. Observing the cabinet, it appears that the doors are open, as indicated by the visible interior and the red outline around the open section. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["yes", 0.0, 0.0, "First, I will identify the position of the document_2 in the image. The document_2 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_2. Given the proximity of the robotic arm to the table and the document_2, it seems that the document_2 is within the reach of the agent.", true, "Question: Is the document_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_2 in the image. The document_2 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_2. Given the proximity of the robotic arm to the table and the document_2, it seems that the document_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 0.0, 0.0, "First, I will identify the location of the document_4 in the image. The document_4 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_4, it appears that the robotic arm can reach the document_4. Therefore, the answer is \"Yes\".", true, "Question: Is the document_4 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the document_4 in the image. The document_4 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_4, it appears that the robotic arm can reach the document_4. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_1. Given the proximity of the robotic arm to the table and the document_1, it seems that the document_1 is within the reach of the agent.", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_1. Given the proximity of the robotic arm to the table and the document_1, it seems that the document_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the cabinet, and the document_3 is located on the cabinet. The robotic arm does not appear to be holding the document_3. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the cabinet, and the document_3 is located on the cabinet. The robotic arm does not appear to be holding the document_3. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_4 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_4. The document_4 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_4?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_4 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_4. The document_4 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not clearly holding it. The folder_1 is on the desk, and the robotic arm appears to be reaching towards it but not grasping it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not clearly holding it. The folder_1 is on the desk, and the robotic arm appears to be reaching towards it but not grasping it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_1. Given the proximity of the robotic arm to the table and the document_1, it seems that the document_1 is within the reach of the agent.", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be within a reasonable distance to reach the document_1. Given the proximity of the robotic arm to the table and the document_1, it seems that the document_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the cabinet, and the document_3 is located on the cabinet. The robotic arm does not appear to be holding the document_3. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the cabinet, and the document_3 is located on the cabinet. The robotic arm does not appear to be holding the document_3. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_4 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_4. The document_4 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_4?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_4 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_4. The document_4 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not clearly holding it. The folder_1 is on the desk, and the robotic arm appears to be reaching towards it but not grasping it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not clearly holding it. The folder_1 is on the desk, and the robotic arm appears to be reaching towards it but not grasping it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.625, "no_correct": 25, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "no"], "reachable document_2": ["yes", "yes"], "reachable document_3": ["no", "no"], "reachable document_4": ["yes", "yes"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["yes", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["yes", "yes"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["yes", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "no"], "ontop document_4,document_3": ["no", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["yes", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["yes", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_2": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["no", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["no", "no"], "nextto document_3,document_4": ["no", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["yes", "no"], "nextto document_4,document_2": ["no", "yes"], "nextto document_4,document_3": ["no", "no"], "nextto document_4,table_1": ["no", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6063829787234043, "yes_accuracy": 0.5625, "yes_correct": 9, "yes_total": 16, "no_accuracy": 0.6153846153846154, "no_correct": 48, "no_total": 78, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7096774193548387, "no_correct": 22, "no_total": 31}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "nextto": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.43333333333333335, "no_correct": 13, "no_total": 30}}}, "step": 3, "actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_1, it appears that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".", false, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table. Given the proximity of the robotic arm to the table and the document_1, it appears that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is on the right side of the image, close to the robotic arm. The arm appears to be positioned in such a way that it can reach the cabinet_1 without any obstructions. Therefore, the cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is on the right side of the image, close to the robotic arm. The arm appears to be positioned in such a way that it can reach the cabinet_1 without any obstructions. Therefore, the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the right side of the room. The cabinet doors appear to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the right side of the room. The cabinet doors appear to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the document_1, but it is not actually holding it. The document_1 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the document_1, but it is not actually holding it. The document_1 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the document_3 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not actually holding it. The folder_1 is on the table, and the robotic arm is not grasping it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is positioned near the folder_1, but it is not actually holding it. The folder_1 is on the table, and the robotic arm is not grasping it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_2": [true, false, false], "holding document_4": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet labeled \"cabinet_1\" and it appears to have its doors open. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet labeled \"cabinet_1\" and it appears to have its doors open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["yes", 0.0, 0.0, "First, I will identify the position of the document_2 in the image. The document_2 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the desk, extending towards the area where the document_2 is placed. Given the proximity of the robotic arm to the desk and the document_2, it appears that the robotic arm can reach the document_2 without any significant obstruction. Therefore, the answer is \"Yes\".", true, "Question: Is the document_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_2 in the image. The document_2 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the desk, extending towards the area where the document_2 is placed. Given the proximity of the robotic arm to the desk and the document_2, it appears that the robotic arm can reach the document_2 without any significant obstruction. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 0.0, 0.0, "First, I will identify the position of the document_4 in the image. The document_4 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the desk, extending towards the area where the document_4 is placed. Given the proximity of the robotic arm to the desk and the document_4, it appears that the robotic arm can reach the document_4 without any significant obstruction. Therefore, the answer is \"Yes\".", true, "Question: Is the document_4 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_4 in the image. The document_4 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the desk, extending towards the area where the document_4 is placed. Given the proximity of the robotic arm to the desk and the document_4, it appears that the robotic arm can reach the document_4 without any significant obstruction. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be extended towards it. Given the proximity of the robotic arm to the table and the document_1, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be extended towards it. Given the proximity of the robotic arm to the table and the document_1, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_3. The document_3 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_3. The document_3 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_4\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, and the document_4 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_4?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_4\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, and the document_4 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the folder_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the folder_1. The folder_1 is on the desk. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the folder_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the folder_1. The folder_1 is on the desk. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be extended towards it. Given the proximity of the robotic arm to the table and the document_1, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the table and appears to be extended towards it. Given the proximity of the robotic arm to the table and the document_1, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_2. The document_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_3. The document_3 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the document_3. The document_3 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_4\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, and the document_4 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_4?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_4\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, and the document_4 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the folder_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the folder_1. The folder_1 is on the desk. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the folder_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the desk, but it is not holding the folder_1. The folder_1 is on the desk. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.625, "no_correct": 25, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "no"], "reachable document_2": ["yes", "yes"], "reachable document_3": ["yes", "no"], "reachable document_4": ["yes", "yes"], "reachable table_1": ["no", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["yes", "no"], "ontop document_1,document_3": ["yes", "no"], "ontop document_1,document_4": ["yes", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["yes", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,table_1": ["no", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,document_2": ["yes", "no"], "ontop document_3,document_4": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["no", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,document_4": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_2": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,document_4": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["no", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["yes", "no"], "nextto document_4,document_2": ["no", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["no", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4574468085106383, "yes_accuracy": 0.6, "yes_correct": 9, "yes_total": 15, "no_accuracy": 0.43037974683544306, "no_correct": 34, "no_total": 79, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.45714285714285713, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.40625, "no_correct": 13, "no_total": 32}, "inside": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.2571428571428571, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.23333333333333334, "no_correct": 7, "no_total": 30}}}, "step": 3, "actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the table and appears to be within a reasonable distance to interact with objects on the table. Given the proximity of the document_1 to the robotic arm, it seems that the document_1 is within the reach of the agent.", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the table. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the table and appears to be within a reasonable distance to interact with objects on the table. Given the proximity of the document_1 to the robotic arm, it seems that the document_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, the marker_1 is likely within reach of the agent.", false, "Question: Is the marker_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, the marker_1 is likely within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 and the robotic arm in the image. The table_1 is located in the center of the room, and the robotic arm is positioned above it. The arm appears to be extended over the table, indicating that it can reach the objects on the table. Therefore, the table_1 is within the reach of the agent.", false, "Question: Is the table_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the table_1 and the robotic arm in the image. The table_1 is located in the center of the room, and the robotic arm is positioned above it. The arm appears to be extended over the table, indicating that it can reach the objects on the table. Therefore, the table_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the desk. The cabinet_1 is positioned on the right side of the room, behind the desk. The robotic arm appears to be long enough to reach across the desk, but the cabinet_1 is located further back in the room. Based on the image, the robotic arm does not seem to extend far enough to reach the cabinet_1 directly. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the desk. The cabinet_1 is positioned on the right side of the room, behind the desk. The robotic arm appears to be long enough to reach across the desk, but the cabinet_1 is located further back in the room. Based on the image, the robotic arm does not seem to extend far enough to reach the cabinet_1 directly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_3": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate document_3, which is on the desk near the center. I will then assess the distance between the robotic arm and document_3. Given the position of the robotic arm and the layout of the desk, it appears that document_3 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, "Question: Is the document_3 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate document_3, which is on the desk near the center. I will then assess the distance between the robotic arm and document_3. Given the position of the robotic arm and the layout of the desk, it appears that document_3 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate folder_1, which is on the left side of the desk. I will then assess the distance and orientation between the robotic arm and folder_1. The robotic arm appears to be positioned in such a way that it can extend towards the left side of the desk. Given the length and reach of the robotic arm, it seems capable of reaching folder_1. Therefore, the answer is \"Yes\".", false, "Question: Is the folder_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate folder_1, which is on the left side of the desk. I will then assess the distance and orientation between the robotic arm and folder_1. The robotic arm appears to be positioned in such a way that it can extend towards the left side of the desk. Given the length and reach of the robotic arm, it seems capable of reaching folder_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate folder_2, which is on the desk near the bottom right corner. I will then assess the distance and orientation of the robotic arm relative to folder_2. The robotic arm appears to be positioned in such a way that it can extend towards folder_2. Given the arm's reach and the proximity of folder_2 to the arm, it seems feasible for the robotic arm to reach folder_2. Therefore, the answer is \"Yes\".", false, "Question: Is the folder_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate folder_2, which is on the desk near the bottom right corner. I will then assess the distance and orientation of the robotic arm relative to folder_2. The robotic arm appears to be positioned in such a way that it can extend towards folder_2. Given the arm's reach and the proximity of folder_2 to the arm, it seems feasible for the robotic arm to reach folder_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the room. The cabinet_1 is positioned against the wall on the right side of the image, near the robotic arm. The arm appears to be long enough to reach across the desk and towards the cabinet. Given the proximity and the length of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 2, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 3, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 4, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 5, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 6, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 7, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 8, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 9, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 10, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 11, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 12, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 13, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 14, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 15, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 16, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 17, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 18, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 19, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 20, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 21, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 22, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 23, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 24, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 25, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 26, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 27, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 28, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 29, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7676767676767676, "yes_accuracy": 0.8666666666666667, "yes_correct": 13, "yes_total": 15, "no_accuracy": 0.75, "no_correct": 63, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 30, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the document_1 in the image. The document_1 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the desk, extending towards the shelves. Given the proximity of the document_1 to the robotic arm and the arm's apparent range of motion, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the document_1 in the image. The document_1 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the desk, extending towards the shelves. Given the proximity of the document_1 to the robotic arm and the arm's apparent range of motion, it seems that the robotic arm can reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, it is likely that the marker_1 is within reach of the agent.", false, "Question: Is the marker_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, it is likely that the marker_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the position of the table_1 and the robotic arm in the image. The table_1 is located in the foreground, and the robotic arm is positioned above it. The arm appears to be extended towards the table, suggesting it can interact with objects on the table. Given the proximity and orientation of the robotic arm relative to the table, it seems that the table is within the reach of the agent.", false, "Question: Is the table_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the table_1 and the robotic arm in the image. The table_1 is located in the foreground, and the robotic arm is positioned above it. The arm appears to be extended towards the table, suggesting it can interact with objects on the table. Given the proximity and orientation of the robotic arm relative to the table, it seems that the table is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the desk. The cabinet_1 is positioned on the right side of the image, behind the desk. The robotic arm appears to be long enough to reach across the desk, but the cabinet_1 is located further back in the room. Based on the image, the robotic arm does not seem to extend far enough to reach the cabinet_1 directly. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the desk, extending towards the center of the desk. The cabinet_1 is positioned on the right side of the image, behind the desk. The robotic arm appears to be long enough to reach across the desk, but the cabinet_1 is located further back in the room. Based on the image, the robotic arm does not seem to extend far enough to reach the cabinet_1 directly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_3": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the document_3 in the image. The robotic arm is located on the right side of the desk, extending towards the center. The document_3 is placed on the desk, closer to the center. Given the position and reach of the robotic arm, it appears that the arm can extend to the document_3. Therefore, the document_3 is within the reach of the agent.", false, "Question: Is the document_3 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the document_3 in the image. The robotic arm is located on the right side of the desk, extending towards the center. The document_3 is placed on the desk, closer to the center. Given the position and reach of the robotic arm, it appears that the arm can extend to the document_3. Therefore, the document_3 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 0.0, 0.0, "First, I will identify the position of the folder_1 in the image. The folder_1 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the desk and appears to be within a reasonable range to interact with objects on the desk. Given the proximity of the folder_1 to the robotic arm, it seems that the robotic arm can reach the folder_1 without any significant obstruction. Therefore, the answer is \"Yes\".", false, "Question: Is the folder_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the folder_1 in the image. The folder_1 is located on the desk. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the desk and appears to be within a reasonable range to interact with objects on the desk. Given the proximity of the folder_1 to the robotic arm, it seems that the robotic arm can reach the folder_1 without any significant obstruction. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the folder_2 in the image. The robotic arm is located on the right side of the desk, extending towards the center. The folder_2 is on the desk, towards the bottom right corner of the image. The arm appears to be positioned in such a way that it can reach across the desk. Given the arm's range of motion and its current position, it seems capable of reaching the folder_2. Therefore, the answer is \"Yes\".", false, "Question: Is the folder_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the folder_2 in the image. The robotic arm is located on the right side of the desk, extending towards the center. The folder_2 is on the desk, towards the bottom right corner of the image. The arm appears to be positioned in such a way that it can reach across the desk. Given the arm's range of motion and its current position, it seems capable of reaching the folder_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(marker_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable marker_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, it is likely that the marker_1 is within reach of the agent.", true, "Question: Is the marker_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the desk. Next, I will locate the marker_1. The marker_1 is not explicitly labeled in the image, but there are several objects on the desk, including folders and documents. Assuming marker_1 is one of these objects, I will check their positions relative to the robotic arm. The objects on the desk are within the workspace of the robotic arm, which is positioned over the desk. Therefore, it is likely that the marker_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding document_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object labeled as \"document_1\". In the image, the robotic arm is not holding any object labeled as \"document_1\". Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object labeled as \"document_1\". In the image, the robotic arm is not holding any object labeled as \"document_1\". Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the object labeled \"document_3\". In the image, the robotic arm is positioned near the desk, but it is not holding the \"document_3\". The \"document_3\" is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the object labeled \"document_3\". In the image, the robotic arm is positioned near the desk, but it is not holding the \"document_3\". The \"document_3\" is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder labeled \"folder_1\". In the image, the robotic arm is positioned above the desk, but it is not holding the folder_1. The folder_1 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder labeled \"folder_1\". In the image, the robotic arm is positioned above the desk, but it is not holding the folder_1. The folder_1 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder labeled \"folder_2\". In the image, the robotic arm is positioned near the desk, but it is not holding the folder_2. The folder_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the folder labeled \"folder_2\". In the image, the robotic arm is positioned near the desk, but it is not holding the folder_2. The folder_2 is on the desk, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding document_2": [true, false, false], "holding document_4": [true, false, false], "all_correct": true}, "effects_results": {"holding marker_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the marker_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop marker_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the marker_1 in the image. Then, I will check if the marker_1 is located on top of the table_1. In the image, the marker_1 is visible and it is placed on the surface of the table_1. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 on top of the table_1?\n<explanation>\nFirst, I will identify the marker_1 in the image. Then, I will check if the marker_1 is located on top of the table_1. In the image, the marker_1 is visible and it is placed on the surface of the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of marker_1 in the image. Then, I will check if it is positioned on top of cabinet_1. In the image, marker_1 is located on the desk, not on top of cabinet_1. Therefore, the answer is \"No\".", true, "Question: Is the marker_1 on top of the cabinet_1?\n<explanation>\nFirst, I will identify the location of marker_1 in the image. Then, I will check if it is positioned on top of cabinet_1. In the image, marker_1 is located on the desk, not on top of cabinet_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop marker_1,document_1": ["yes", 0.0, 0.0, "First, I will identify the marker_1 and document_1 in the image. The marker_1 is labeled and located on the desk. The document_1 is also labeled and located on the desk. By examining their positions, it appears that the marker_1 is placed on top of the document_1. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 on top of the document_1?\n<explanation>\nFirst, I will identify the marker_1 and document_1 in the image. The marker_1 is labeled and located on the desk. The document_1 is also labeled and located on the desk. By examining their positions, it appears that the marker_1 is placed on top of the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,document_3": ["yes", 0.0, 0.0, "First, I will identify the marker_1 and document_3 in the image. The marker_1 is labeled and located on the desk. The document_3 is also labeled and located on the desk. By examining their positions, it appears that the marker_1 is placed on top of the document_3. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 on top of the document_3?\n<explanation>\nFirst, I will identify the marker_1 and document_3 in the image. The marker_1 is labeled and located on the desk. The document_3 is also labeled and located on the desk. By examining their positions, it appears that the marker_1 is placed on top of the document_3. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,folder_1": ["yes", 0.0, 0.0, "First, I will identify the location of marker_1 and folder_1 in the image. The marker_1 is labeled and appears to be on the desk. The folder_1 is also labeled and is located on the desk. By examining their positions, it is clear that the marker_1 is placed on top of the folder_1. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 on top of the folder_1?\n<explanation>\nFirst, I will identify the location of marker_1 and folder_1 in the image. The marker_1 is labeled and appears to be on the desk. The folder_1 is also labeled and is located on the desk. By examining their positions, it is clear that the marker_1 is placed on top of the folder_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,folder_2": ["no", 0.0, 0.0, "First, I will identify the marker_1 and folder_2 in the image. The marker_1 is labeled and located on the desk. The folder_2 is also labeled and located on the desk. By examining their positions, I can see that the marker_1 is not on top of the folder_2; instead, it is placed next to it. Therefore, the answer is \"No\".", true, "Question: Is the marker_1 on top of the folder_2?\n<explanation>\nFirst, I will identify the marker_1 and folder_2 in the image. The marker_1 is labeled and located on the desk. The folder_2 is also labeled and located on the desk. By examining their positions, I can see that the marker_1 is not on top of the folder_2; instead, it is placed next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,table_1": ["yes", 0.0, 0.0, "First, I will identify the location of the marker_1 in the image. The marker_1 is labeled and appears to be on the table_1. Next, I will check the position of the table_1, which is clearly visible in the image. Since the marker_1 is on the table_1, it is indeed next to the table_1.", false, "Question: Is the marker_1 next to the table_1?\n<explanation>\nFirst, I will identify the location of the marker_1 in the image. The marker_1 is labeled and appears to be on the table_1. Next, I will check the position of the table_1, which is clearly visible in the image. Since the marker_1 is on the table_1, it is indeed next to the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of marker_1 and cabinet_1 in the image. The marker_1 is labeled and appears to be on the desk. The cabinet_1 is also labeled and is located on the right side of the image, near the shelves. The desk and the cabinet are not adjacent to each other; the desk is in the foreground while the cabinet is in the background. Therefore, the marker_1 is not next to the cabinet_1.", true, "Question: Is the marker_1 next to the cabinet_1?\n<explanation>\nFirst, I will identify the location of marker_1 and cabinet_1 in the image. The marker_1 is labeled and appears to be on the desk. The cabinet_1 is also labeled and is located on the right side of the image, near the shelves. The desk and the cabinet are not adjacent to each other; the desk is in the foreground while the cabinet is in the background. Therefore, the marker_1 is not next to the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,document_1": ["no", 0.0, 0.0, "First, I will identify the positions of marker_1 and document_1 in the image. The marker_1 is located on the left side of the desk, while document_1 is positioned more towards the center of the desk. Based on their relative positions, marker_1 is not directly next to document_1. Therefore, the answer is \"No\".", true, "Question: Is the marker_1 next to the document_1?\n<explanation>\nFirst, I will identify the positions of marker_1 and document_1 in the image. The marker_1 is located on the left side of the desk, while document_1 is positioned more towards the center of the desk. Based on their relative positions, marker_1 is not directly next to document_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,document_3": ["no", 0.0, 0.0, "First, I will identify the positions of marker_1 and document_3 in the image. Marker_1 is located on the left side of the desk, while document_3 is positioned towards the center-right of the desk. They are not adjacent to each other. Therefore, the answer is \"No\".", true, "Question: Is the marker_1 next to the document_3?\n<explanation>\nFirst, I will identify the positions of marker_1 and document_3 in the image. Marker_1 is located on the left side of the desk, while document_3 is positioned towards the center-right of the desk. They are not adjacent to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,folder_1": ["yes", 0.0, 0.0, "First, I will identify the location of marker_1 and folder_1 in the image. The marker_1 is located on the desk, and the folder_1 is also on the desk. By examining their positions, it appears that the marker_1 is placed close to the folder_1. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 next to the folder_1?\n<explanation>\nFirst, I will identify the location of marker_1 and folder_1 in the image. The marker_1 is located on the desk, and the folder_1 is also on the desk. By examining their positions, it appears that the marker_1 is placed close to the folder_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,folder_2": ["yes", 0.0, 0.0, "First, I will identify the positions of marker_1 and folder_2 in the image. The marker_1 is located on the desk, and folder_2 is also on the desk. By examining their relative positions, it appears that marker_1 is placed close to folder_2. Therefore, the answer is \"Yes\".", false, "Question: Is the marker_1 next to the folder_2?\n<explanation>\nFirst, I will identify the positions of marker_1 and folder_2 in the image. The marker_1 is located on the desk, and folder_2 is also on the desk. By examining their relative positions, it appears that marker_1 is placed close to folder_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop marker_1,marker_1": {"before": null, "after": false}, "ontop marker_1,document_2": {"before": false, "after": false}, "ontop marker_1,document_4": {"before": false, "after": false}, "nextto marker_1,marker_1": {"before": null, "after": false}, "nextto marker_1,document_2": {"before": false, "after": false}, "nextto marker_1,document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the agent and the document_1 in the image. The agent is represented by the robotic arm, which is located near the top right corner of the image. The document_1 is on the table, towards the left side of the image. The table appears to be within the reach of the robotic arm, as the arm is positioned above the table. Therefore, the document_1 is in reach of the agent.", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent and the document_1 in the image. The agent is represented by the robotic arm, which is located near the top right corner of the image. The document_1 is on the table, towards the left side of the image. The table appears to be within the reach of the robotic arm, as the arm is positioned above the table. Therefore, the document_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding marker_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the marker_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any objects. In the image, the robotic arm is not holding any objects, including folder_1. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any objects. In the image, the robotic arm is not holding any objects, including folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding folder_2. In the image, the robotic arm is not holding any object, and folder_2 is placed on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding folder_2. In the image, the robotic arm is not holding any object, and folder_2 is placed on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding document_2": [true, false, false], "holding document_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the position of the agent and the document_1 in the image. The agent is represented by the robotic arm, which is located near the top right corner of the image. The document_1 is on the table, towards the left side of the image. The table appears to be within the reach of the robotic arm, as the arm is positioned above the table. Therefore, the document_1 is in reach of the agent.", true, "Question: Is the document_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent and the document_1 in the image. The agent is represented by the robotic arm, which is located near the top right corner of the image. The document_1 is on the table, towards the left side of the image. The table appears to be within the reach of the robotic arm, as the arm is positioned above the table. Therefore, the document_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding marker_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the marker_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any object. In the image, the robotic arm is not holding any object, including marker_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding document_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the document_3?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"document_3\" and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the document_3. The document_3 is on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any objects. In the image, the robotic arm is not holding any objects, including folder_1. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is the robotic arm located at the top of the image. Next, I will check if the agent is holding any objects. In the image, the robotic arm is not holding any objects, including folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding folder_2. In the image, the robotic arm is not holding any object, and folder_2 is placed on the table. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the folder_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding folder_2. In the image, the robotic arm is not holding any object, and folder_2 is placed on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding document_2": [true, false, false], "holding document_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7575757575757576, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.7619047619047619, "no_correct": 64, "no_total": 84, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.45714285714285713, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 1, "actions": ["grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "yes"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "no"], "ontop marker_1,document_1": ["yes", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["yes", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["yes", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["yes", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "no"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.6823529411764706, "no_correct": 58, "no_total": 85, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.7714285714285715, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.75, "no_correct": 24, "no_total": 32}, "inside": {"accuracy": 0.8461538461538461, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}, "nextto": {"accuracy": 0.5142857142857142, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.53125, "no_correct": 17, "no_total": 32}}}, "step": 2, "actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "yes"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "no"], "ontop marker_1,document_1": ["yes", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["yes", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["yes", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["yes", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["yes", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "no"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7070707070707071, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.6941176470588235, "no_correct": 59, "no_total": 85, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.78125, "no_correct": 25, "no_total": 32}, "inside": {"accuracy": 0.8461538461538461, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}, "nextto": {"accuracy": 0.5142857142857142, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.53125, "no_correct": 17, "no_total": 32}}}, "step": 3, "actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".", false, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable bowl_2": {"before": false, "after": true}, "reachable piece_of_cloth_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is positioned above the countertop, and the cabinet_1 is located below the countertop. The arm appears to be extended over the countertop, suggesting it has the capability to reach down to the cabinet. Given the proximity and the apparent range of motion of the robotic arm, it seems that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet with its door open, revealing the inside. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet with its door open, revealing the inside. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned near the countertop, with its end effector close to the bowl_1. Given the proximity of the robotic arm to the bowl_1, it appears that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned near the countertop, with its end effector close to the bowl_1. Given the proximity of the robotic arm to the bowl_1, it appears that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the countertop, with its end effector close to the bowl_2. Given the proximity of the robotic arm to the bowl_2, it appears that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the countertop, with its end effector close to the bowl_2. Given the proximity of the robotic arm to the bowl_2, it appears that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned near the countertop, with its end effector close to the bowl_1. Given the proximity of the robotic arm to the bowl_1, it appears that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned near the countertop, with its end effector close to the bowl_1. Given the proximity of the robotic arm to the bowl_1, it appears that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_2\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".", false, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_2\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. The piece_of_cloth_1 is on the counter, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. The piece_of_cloth_1 is on the counter, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_1\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_1\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(bowl_1, piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_1\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding an object labeled as \"bowl_1\". In the image, the robotic arm is holding an object that appears to be a bowl. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the piece_of_cloth_1 is located. Given the proximity of the piece_of_cloth_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "yes"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.4666666666666667, "yes_correct": 7, "yes_total": 15, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 4, "actions": ["place-next-to(bowl_1, piece_of_cloth_1)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "yes"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "yes"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5333333333333333, "yes_correct": 8, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 5, "actions": ["place-next-to(bowl_1, piece_of_cloth_1)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}], "remaining_actions": ["place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is situated in the middle of the kitchen island. The red outline indicates the area around the cabinet_1, and the robotic arm appears to be positioned close to this area. Given the proximity of the robotic arm to the cabinet_1, it seems that the cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is situated in the middle of the kitchen island. The red outline indicates the area around the cabinet_1, and the robotic arm appears to be positioned close to this area. Given the proximity of the robotic arm to the cabinet_1, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the position of the sink_1 and the robotic arm (agent) in the image. The sink_1 is located on the left side of the image, while the robotic arm is positioned on the right side, above the countertop. The robotic arm appears to be mounted on the countertop and has a long reach. Given the layout and the length of the robotic arm, it seems plausible that the arm can extend towards the sink_1. Therefore, the sink_1 is likely within the reach of the agent.", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the sink_1 and the robotic arm (agent) in the image. The sink_1 is located on the left side of the image, while the robotic arm is positioned on the right side, above the countertop. The robotic arm appears to be mounted on the countertop and has a long reach. Given the layout and the length of the robotic arm, it seems plausible that the arm can extend towards the sink_1. Therefore, the sink_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is situated in the middle of the kitchen island. The red outline indicates the area around the cabinet_1, which appears to be within the range of the robotic arm's movement. Given the proximity and the orientation of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is situated in the middle of the kitchen island. The red outline indicates the area around the cabinet_1, which appears to be within the range of the robotic arm's movement. Given the proximity and the orientation of the robotic arm, it seems that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open or closed. In the image, cabinet_1 is visible, and the doors appear to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open or closed. In the image, cabinet_1 is visible, and the doors appear to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open. In the image, there is a cabinet with its doors open. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open. In the image, there is a cabinet with its doors open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the countertop area where the bowl_1 is placed. Given the proximity of the robotic arm to the bowl_1 and the fact that the arm is designed to interact with objects on the countertop, it seems that the bowl_1 is within the reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the countertop area where the bowl_1 is placed. Given the proximity of the robotic arm to the bowl_1 and the fact that the arm is designed to interact with objects on the countertop, it seems that the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_2 and the robotic arm in the image. The bowl_2 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the countertop area where the bowl_2 is placed. Given the proximity of the robotic arm to the bowl_2 and the fact that the arm is designed to interact with objects on the countertop, it seems that the bowl_2 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_2 and the robotic arm in the image. The bowl_2 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the countertop area where the bowl_2 is placed. Given the proximity of the robotic arm to the bowl_2 and the fact that the arm is designed to interact with objects on the countertop, it seems that the bowl_2 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach the piece_of_cloth_1. Given the proximity of the robotic arm to the piece_of_cloth_1, it seems that the agent can reach the piece_of_cloth_1.", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach the piece_of_cloth_1. Given the proximity of the robotic arm to the piece_of_cloth_1, it seems that the agent can reach the piece_of_cloth_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach the bowl_1. Given the proximity of the robotic arm to the bowl_1, it seems that the bowl_1 is within the agent's reach.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach the bowl_1. Given the proximity of the robotic arm to the bowl_1, it seems that the bowl_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is positioned above the countertop, but it is not holding the bowl_2. The bowl_2 is on the countertop, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is positioned above the countertop, but it is not holding the bowl_2. The bowl_2 is on the countertop, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the robotic arm is positioned near the countertop, but it is not holding the piece_of_cloth_1. The piece_of_cloth_1 is on the countertop, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the robotic arm is positioned near the countertop, but it is not holding the piece_of_cloth_1. The piece_of_cloth_1 is on the countertop, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the robotic arm is holding the bowl_1. In the image, the bowl_1 is on the countertop, and the robotic arm is not holding it. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the robotic arm is holding the bowl_1. In the image, the bowl_1 is on the countertop, and the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is not visible in the image. Since bowl_2 is not present, it is impossible for bowl_1 to be on top of it. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the bowl_2?\n<explanation>\nFirst, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is not visible in the image. Since bowl_2 is not present, it is impossible for bowl_1 to be on top of it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is visible on the countertop. Next, I will identify the location of the cabinet_1, which is below the countertop. The bowl_1 is placed on the surface above the cabinet_1, which is the countertop. Therefore, the bowl_1 is on top of the cabinet_1.", false, "Question: Is the bowl_1 on top of the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is visible on the countertop. Next, I will identify the location of the cabinet_1, which is below the countertop. The bowl_1 is placed on the surface above the cabinet_1, which is the countertop. Therefore, the bowl_1 is on top of the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is a large, oval-shaped object located on the counter. The piece_of_cloth_1 is a folded cloth also on the counter. Observing their positions, the bowl_1 is placed next to the piece_of_cloth_1, not on top of it. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is a large, oval-shaped object located on the counter. The piece_of_cloth_1 is a folded cloth also on the counter. Observing their positions, the bowl_1 is placed next to the piece_of_cloth_1, not on top of it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,sink_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 and the sink_1 in the image. The bowl_1 is located on the countertop, and the sink_1 is positioned to the left of the countertop. The bowl_1 is not placed on top of the sink_1 but rather on the countertop next to it. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the sink_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 and the sink_1 in the image. The bowl_1 is located on the countertop, and the sink_1 is positioned to the left of the countertop. The bowl_1 is not placed on top of the sink_1 but rather on the countertop next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["yes", 0.0, 0.0, "First, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is on the countertop, and bowl_2 is on the same countertop. I will then check the proximity of bowl_1 to bowl_2. In the image, bowl_1 and bowl_2 are placed close to each other on the countertop. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the bowl_2?\n<explanation>\nFirst, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is on the countertop, and bowl_2 is on the same countertop. I will then check the proximity of bowl_1 to bowl_2. In the image, bowl_1 and bowl_2 are placed close to each other on the countertop. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 and the cabinet_1 in the image. The bowl_1 is on the countertop, and the cabinet_1 is also part of the same kitchen counter structure. The bowl_1 is positioned on the countertop near the cabinet_1, indicating that they are next to each other. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 and the cabinet_1 in the image. The bowl_1 is on the countertop, and the cabinet_1 is also part of the same kitchen counter structure. The bowl_1 is positioned on the countertop near the cabinet_1, indicating that they are next to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is also on the countertop. Observing their positions, the bowl_1 is placed to the left of the piece_of_cloth_1. Since both objects are on the same surface and in close proximity to each other, they are indeed next to each other. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is also on the countertop. Observing their positions, the bowl_1 is placed to the left of the piece_of_cloth_1. Since both objects are on the same surface and in close proximity to each other, they are indeed next to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,sink_1": ["no", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the image. Next, I will look for bowl_1. The bowl_1 is on the countertop, but it is not immediately next to the sink_1. Instead, it is positioned further to the right on the countertop. Therefore, the bowl_1 is not next to the sink_1.", true, "Question: Is the bowl_1 next to the sink_1?\n<explanation>\nFirst, I will identify the location of the sink_1 in the image. The sink_1 is located on the left side of the image. Next, I will look for bowl_1. The bowl_1 is on the countertop, but it is not immediately next to the sink_1. Instead, it is positioned further to the right on the countertop. Therefore, the bowl_1 is not next to the sink_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 and the cabinet_1 in the image. The bowl_1 is on the countertop, and the cabinet_1 is below the countertop with its doors open. Since the bowl_1 is not inside the cabinet_1 but rather on the countertop above it, the answer is \"No\".", true, "Question: Is the bowl_1 inside the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 and the cabinet_1 in the image. The bowl_1 is on the countertop, and the cabinet_1 is below the countertop with its doors open. Since the bowl_1 is not inside the cabinet_1 but rather on the countertop above it, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm appears to be positioned near the countertop. Given the proximity of the bowl_1 to the robotic arm and the fact that the arm is designed to interact with objects on the countertop, it is reasonable to conclude that the bowl_1 is within reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm appears to be positioned near the countertop. Given the proximity of the bowl_1 to the robotic arm and the fact that the arm is designed to interact with objects on the countertop, it is reasonable to conclude that the bowl_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is not visible, and there is no indication that it is holding the bowl_2. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is not visible, and there is no indication that it is holding the bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the piece_of_cloth_1 is on the countertop, not being held by the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will look for the agent in the image. The agent is a robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the piece_of_cloth_1 is on the countertop, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable sink_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.48936170212765956, "yes_accuracy": 0.7, "yes_correct": 7, "yes_total": 10, "no_accuracy": 0.43243243243243246, "no_correct": 16, "no_total": 37, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.5333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5333333333333333, "no_correct": 8, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.26666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.15384615384615385, "no_correct": 2, "no_total": 13}}}, "step": 3, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending over the countertop. The cabinet_1 is situated directly below the countertop where the robotic arm is positioned. Given the proximity of the robotic arm to the cabinet_1, it appears that the cabinet_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending over the countertop. The cabinet_1 is situated directly below the countertop where the robotic arm is positioned. Given the proximity of the robotic arm to the cabinet_1, it appears that the cabinet_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending over the countertop. The cabinet_1 is situated directly below the countertop where the robotic arm is positioned. Given the proximity of the robotic arm to the cabinet_1, it appears that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending over the countertop. The cabinet_1 is situated directly below the countertop where the robotic arm is positioned. Given the proximity of the robotic arm to the cabinet_1, it appears that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open or closed. In the image, cabinet_1 is visible, and the doors appear to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open or closed. In the image, cabinet_1 is visible, and the doors appear to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open. In the image, there is a cabinet with its doors open, revealing the contents inside. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet doors are open. In the image, there is a cabinet with its doors open, revealing the contents inside. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop within an open cabinet. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinet area. Given the proximity of the robotic arm to the bowl_1 and the open cabinet, it seems that the bowl_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop within an open cabinet. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinet area. Given the proximity of the robotic arm to the bowl_1 and the open cabinet, it seems that the bowl_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinets. Since the bowl_2 is on the countertop and the robotic arm is positioned above it, it seems that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinets. Since the bowl_2 is on the countertop and the robotic arm is positioned above it, it seems that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop. Given that the robotic arm is directly above the countertop and the piece_of_cloth_1 is on the countertop, it appears that the robotic arm can reach the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located on the countertop. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop. Given that the robotic arm is directly above the countertop and the piece_of_cloth_1 is on the countertop, it appears that the robotic arm can reach the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop within an open cabinet. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinet area. Given the proximity of the robotic arm to the bowl_1 and the open cabinet, it seems that the bowl_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop within an open cabinet. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the cabinet area. Given the proximity of the robotic arm to the bowl_1 and the open cabinet, it seems that the bowl_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the bowl_2. The bowl_2 is located inside the cabinet. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the bowl_2. The bowl_2 is located inside the cabinet. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the piece_of_cloth_1 is located inside an open cabinet, not in the robotic arm's grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the robotic arm's grasp. In the image, the piece_of_cloth_1 is located inside an open cabinet, not in the robotic arm's grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the bowl_1. The bowl_1 is located on the countertop. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but it is not holding the bowl_1. The bowl_1 is located on the countertop. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will look for bowl_1 and bowl_2 in the image. In the image, there is a bowl labeled as bowl_1 on the countertop. However, there is no visible bowl labeled as bowl_2 in the image. Since bowl_2 is not present, it is not possible for bowl_1 to be on top of bowl_2. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the bowl_2?\n<explanation>\nFirst, I will look for bowl_1 and bowl_2 in the image. In the image, there is a bowl labeled as bowl_1 on the countertop. However, there is no visible bowl labeled as bowl_2 in the image. Since bowl_2 is not present, it is not possible for bowl_1 to be on top of bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is visible on the countertop. Next, I will identify the location of the cabinet_1, which is below the countertop. The bowl_1 is placed on the surface of the cabinet_1, which is the countertop. Therefore, the bowl_1 is on top of the cabinet_1.", false, "Question: Is the bowl_1 on top of the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is visible on the countertop. Next, I will identify the location of the cabinet_1, which is below the countertop. The bowl_1 is placed on the surface of the cabinet_1, which is the countertop. Therefore, the bowl_1 is on top of the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is inside an open cabinet. Since the bowl_1 is on the countertop and the piece_of_cloth_1 is inside the cabinet, the bowl_1 is not on top of the piece_of_cloth_1. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is inside an open cabinet. Since the bowl_1 is on the countertop and the piece_of_cloth_1 is inside the cabinet, the bowl_1 is not on top of the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will look for bowl_1 and bowl_2 in the image. In the image, there is a bowl labeled \"bowl_1\" on the countertop. However, there is no visible bowl labeled \"bowl_2\" in the image. Since bowl_2 is not present, it cannot be next to bowl_1. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 next to the bowl_2?\n<explanation>\nFirst, I will look for bowl_1 and bowl_2 in the image. In the image, there is a bowl labeled \"bowl_1\" on the countertop. However, there is no visible bowl labeled \"bowl_2\" in the image. Since bowl_2 is not present, it cannot be next to bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 and cabinet_1 in the image. The bowl_1 is on the countertop, and cabinet_1 is below the countertop. The bowl_1 is positioned directly above the cabinet_1, not next to it. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 next to the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 and cabinet_1 in the image. The bowl_1 is on the countertop, and cabinet_1 is below the countertop. The bowl_1 is positioned directly above the cabinet_1, not next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the locations of bowl_1 and piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is inside an open cabinet. Since the bowl_1 is on the countertop and the piece_of_cloth_1 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 next to the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the locations of bowl_1 and piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is inside an open cabinet. Since the bowl_1 is on the countertop and the piece_of_cloth_1 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop, not inside any cabinet. Next, I will check the location of the cabinet_1, which is below the countertop and is open, showing its contents. Since the bowl_1 is on the countertop and not within the cabinet_1, the answer is \"No\".", true, "Question: Is the bowl_1 inside the cabinet_1?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop, not inside any cabinet. Next, I will check the location of the cabinet_1, which is below the countertop and is open, showing its contents. Since the bowl_1 is on the countertop and not within the cabinet_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(piece_of_cloth_1, piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the agent's hand. In the image, the robotic arm is holding an object, and it appears to be the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the agent's hand. In the image, the robotic arm is holding an object, and it appears to be the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located inside an open cabinet. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned above the cabinet. Since the cabinet is open and the piece_of_cloth_1 is inside it, the robotic arm can reach into the cabinet to grab the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is in reach of the agent.", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located inside an open cabinet. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned above the cabinet. Since the cabinet is open and the piece_of_cloth_1 is inside it, the robotic arm can reach into the cabinet to grab the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(piece_of_cloth_1, piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the agent's hand. In the image, the robotic arm is holding an object, and it appears to be the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the piece_of_cloth_1 is in the agent's hand. In the image, the robotic arm is holding an object, and it appears to be the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located inside an open cabinet. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned above the cabinet. Since the cabinet is open and the piece_of_cloth_1 is inside it, the robotic arm can reach into the cabinet to grab the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is in reach of the agent.", true, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located inside an open cabinet. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned above the cabinet. Since the cabinet is open and the piece_of_cloth_1 is inside it, the robotic arm can reach into the cabinet to grab the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.725, "yes_accuracy": 0.6363636363636364, "yes_correct": 7, "yes_total": 11, "no_accuracy": 0.7586206896551724, "no_correct": 22, "no_total": 29, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}}}, "step": 3, "actions": ["place-next-to(piece_of_cloth_1, piece_of_cloth_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.725, "yes_accuracy": 0.6363636363636364, "yes_correct": 7, "yes_total": 11, "no_accuracy": 0.7586206896551724, "no_correct": 22, "no_total": 29, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}}}, "step": 4, "actions": ["place-next-to(piece_of_cloth_1, piece_of_cloth_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the image. Next, I will locate cabinet_1. Cabinet_1 appears to be on the left side of the image, near the refrigerator. The distance between the robotic arm and cabinet_1 seems significant, and there are no indications that the robotic arm can extend far enough to reach cabinet_1 directly. Therefore, the cabinet_1 is not in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the right side of the image. Next, I will locate cabinet_1. Cabinet_1 appears to be on the left side of the image, near the refrigerator. The distance between the robotic arm and cabinet_1 seems significant, and there are no indications that the robotic arm can extend far enough to reach cabinet_1 directly. Therefore, the cabinet_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the left side of the image, extending towards the center. Cabinet_1 appears to be part of the kitchen setup, located above the oven and other kitchen appliances. The arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the left side of the image, extending towards the center. Cabinet_1 appears to be part of the kitchen setup, located above the oven and other kitchen appliances. The arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the left side of the image, extending towards the center. Next, I will locate cabinet_1, which appears to be the wooden cabinet on the right side of the image. I will then assess the distance and orientation between the robotic arm and cabinet_1. The robotic arm seems to be positioned in such a way that it can extend towards the cabinet. Given the arm's reach and the proximity of the cabinet, it appears that the cabinet_1 is within the range of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the left side of the image, extending towards the center. Next, I will locate cabinet_1, which appears to be the wooden cabinet on the right side of the image. I will then assess the distance and orientation between the robotic arm and cabinet_1. The robotic arm seems to be positioned in such a way that it can extend towards the cabinet. Given the arm's reach and the proximity of the cabinet, it appears that the cabinet_1 is within the range of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, and it appears to be open as the contents inside are visible. Therefore, the answer is \"Yes\".", false, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, and it appears to be open as the contents inside are visible. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the left side of the image, extending towards the center. Next, I will locate cabinet_1, which appears to be the wooden cabinet on the right side of the image. I will then assess the distance and orientation between the robotic arm and cabinet_1. The robotic arm seems to be positioned close enough to the cabinet, and its reach appears to extend towards it. Therefore, the cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located on the left side of the image, extending towards the center. Next, I will locate cabinet_1, which appears to be the wooden cabinet on the right side of the image. I will then assess the distance and orientation between the robotic arm and cabinet_1. The robotic arm seems to be positioned close enough to the cabinet, and its reach appears to extend towards it. Therefore, the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the left side of the image, extending towards the center. Cabinet_1 appears to be part of the kitchen setup, located above the oven and other kitchen appliances. The arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the left side of the image, extending towards the center. Cabinet_1 appears to be part of the kitchen setup, located above the oven and other kitchen appliances. The arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".", false, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet, but it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable bowl_2": {"before": false, "after": true}, "reachable piece_of_cloth_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) in the image. The robotic arm is located on the right side of the image, extending towards the left. Next, I will locate cabinet_1. Cabinet_1 appears to be part of the kitchen setup, located on the left side of the image. The robotic arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) in the image. The robotic arm is located on the right side of the image, extending towards the left. Next, I will locate cabinet_1. Cabinet_1 appears to be part of the kitchen setup, located on the left side of the image. The robotic arm seems to be positioned close to the cabinet, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it appears that cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the left side, and it appears to be closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the left side, and it appears to be closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the left side, and it appears to be open as the contents inside are visible. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet is open. In the image, there is a cabinet on the left side, and it appears to be open as the contents inside are visible. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable bowl_2": {"before": false, "after": true}, "reachable piece_of_cloth_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(bowl_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located near the cabinet_1, and it appears to be positioned close enough to interact with it. The arm is extended towards the cabinet, indicating that it is within the agent's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located near the cabinet_1, and it appears to be positioned close enough to interact with it. The arm is extended towards the cabinet, indicating that it is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located to the right of the cabinet_1. The arm appears to be extended towards the cabinet, suggesting it is within the arm's range. The cabinet_1 is positioned close to the robotic arm, and there are no visible obstructions between the arm and the cabinet. Therefore, the cabinet_1 is within reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located to the right of the cabinet_1. The arm appears to be extended towards the cabinet, suggesting it is within the arm's range. The cabinet_1 is positioned close to the robotic arm, and there are no visible obstructions between the arm and the cabinet. Therefore, the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located near the robotic arm. Next, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed as there is no visible gap or opening. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located near the robotic arm. Next, I will check if the cabinet door is open or closed. In the image, the cabinet door appears to be closed as there is no visible gap or opening. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located at the top left of the image. Next, I will check if the cabinet doors are open or closed. In the image, the cabinet doors appear to be closed, as there are no visible gaps or openings. Therefore, the answer is \"No\".", false, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located at the top left of the image. Next, I will check if the cabinet doors are open or closed. In the image, the cabinet doors appear to be closed, as there are no visible gaps or openings. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable bowl_2": ["no", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located near the cabinet and the oven. Next, I will look for the bowl_2 in the image. The image does not show a bowl_2, so I cannot determine its position relative to the robotic arm. Since the bowl_2 is not visible, I cannot confirm if it is within reach of the agent. Therefore, the answer is \"No\".", false, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) in the image. The robotic arm is located near the cabinet and the oven. Next, I will look for the bowl_2 in the image. The image does not show a bowl_2, so I cannot determine its position relative to the robotic arm. Since the bowl_2 is not visible, I cannot confirm if it is within reach of the agent. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable piece_of_cloth_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the cabinet_1. The cabinet_1 is positioned above the robotic arm. The red lines in the image indicate the reach or interaction range of the robotic arm. Since the red lines connect the robotic arm to the cabinet_1, it suggests that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the cabinet_1. The cabinet_1 is positioned above the robotic arm. The red lines in the image indicate the reach or interaction range of the robotic arm. Since the red lines connect the robotic arm to the cabinet_1, it suggests that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located at the top left of the image. Next, I will check if the cabinet doors are open or closed. In the image, the cabinet doors appear to be closed, as there are no visible gaps or openings. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. The cabinet is labeled as \"cabinet_1\" and is located at the top left of the image. Next, I will check if the cabinet doors are open or closed. In the image, the cabinet doors appear to be closed, as there are no visible gaps or openings. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for any object labeled as \"bowl_2\" in the image. In the image, the robotic arm is visible, but there is no object labeled as \"bowl_2\" being held by the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for any object labeled as \"bowl_2\" in the image. In the image, the robotic arm is visible, but there is no object labeled as \"bowl_2\" being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 appears to be closed as there is no visible opening or items inside that are exposed. Therefore, the answer is \"No\".", false, "Question: Is the cabinet_1 open?\n<explanation>\nFirst, I will look for cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 appears to be closed as there is no visible opening or items inside that are exposed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located near the top left corner of the image, and the robotic arm is positioned on the right side. The arm appears to be extended towards the area where the bowl_1 is located. Given the proximity and the orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located near the top left corner of the image, and the robotic arm is positioned on the right side. The arm appears to be extended towards the area where the bowl_1 is located. Given the proximity and the orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_2 and the robotic arm in the image. The bowl_2 is located near the top right corner of the image, close to the robotic arm. The robotic arm appears to be positioned in such a way that it can extend towards the bowl_2. Given the proximity of the bowl_2 to the robotic arm, it seems that the arm can reach the bowl_2 without any significant obstruction. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_2 and the robotic arm in the image. The bowl_2 is located near the top right corner of the image, close to the robotic arm. The robotic arm appears to be positioned in such a way that it can extend towards the bowl_2. Given the proximity of the bowl_2 to the robotic arm, it seems that the arm can reach the bowl_2 without any significant obstruction. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is not explicitly labeled in the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the cabinets and the oven. Since the piece_of_cloth_1 is not visible or labeled, I cannot confirm its exact location relative to the robotic arm. Therefore, I cannot determine if it is within reach of the agent.", false, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is not explicitly labeled in the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned near the cabinets and the oven. Since the piece_of_cloth_1 is not visible or labeled, I cannot confirm its exact location relative to the robotic arm. Therefore, I cannot determine if it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located near the top left corner of the image, and the robotic arm is positioned on the right side. The arm appears to be extended towards the area where the bowl_1 is located. Given the proximity and the orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 and the robotic arm in the image. The bowl_1 is located near the top left corner of the image, and the robotic arm is positioned on the right side. The arm appears to be extended towards the area where the bowl_1 is located. Given the proximity and the orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near bowl_2, but it does not appear to be holding it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near bowl_2, but it does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for any object labeled as \"piece_of_cloth_1\" in the image. In the image, there is a robotic arm, but there is no visible object labeled as \"piece_of_cloth_1\" being held by the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for any object labeled as \"piece_of_cloth_1\" in the image. In the image, there is a robotic arm, but there is no visible object labeled as \"piece_of_cloth_1\" being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding bowl_1": {"before": false, "after": true}, "ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,bowl_2": {"before": false, "after": false}, "ontop bowl_1,cabinet_1": {"before": false, "after": false}, "ontop bowl_1,piece_of_cloth_1": {"before": false, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_2": {"before": true, "after": false}, "nextto bowl_1,cabinet_1": {"before": false, "after": false}, "nextto bowl_1,piece_of_cloth_1": {"before": false, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}, "inside bowl_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable sink_1": ["no", 0.0, 0.0, "First, I will identify the position of the agent, which is the robotic arm, in the image. The robotic arm is located on the left side of the image. Next, I will locate the sink_1. The sink_1 is not visible in the provided image, but based on the typical layout of a kitchen, it might be near the cabinets or countertop area. The image shows a countertop and cabinets, but the sink_1 is not clearly visible. The agent's reach would depend on its position relative to the sink_1. Since the sink_1 is not visible and the agent is on the left side, it is unclear if the sink_1 is within the agent's reach. Therefore, the answer is \"No\".", true, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent, which is the robotic arm, in the image. The robotic arm is located on the left side of the image. Next, I will locate the sink_1. The sink_1 is not visible in the provided image, but based on the typical layout of a kitchen, it might be near the cabinets or countertop area. The image shows a countertop and cabinets, but the sink_1 is not clearly visible. The agent's reach would depend on its position relative to the sink_1. Since the sink_1 is not visible and the agent is on the left side, it is unclear if the sink_1 is within the agent's reach. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the position of the agent and the sink_1 in the image. The agent appears to be a robotic arm located on the left side of the image. The sink_1 is situated on the countertop near the center of the image. The distance between the agent and the sink_1 seems to be within a reasonable range for the robotic arm to reach, considering the typical range of motion for such an arm in a virtual household simulator. Therefore, the sink_1 is likely in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent and the sink_1 in the image. The agent appears to be a robotic arm located on the left side of the image. The sink_1 is situated on the countertop near the center of the image. The distance between the agent and the sink_1 seems to be within a reasonable range for the robotic arm to reach, considering the typical range of motion for such an arm in a virtual household simulator. Therefore, the sink_1 is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the position of the agent and the sink_1 in the image. The agent appears to be a robotic arm located on the left side of the image. The sink_1 is situated on the countertop near the center of the image. The distance between the agent and the sink_1 seems to be within a reasonable range for the robotic arm to reach, considering the typical range of motion for such an arm in a virtual household simulator. Therefore, the sink_1 is likely in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent and the sink_1 in the image. The agent appears to be a robotic arm located on the left side of the image. The sink_1 is situated on the countertop near the center of the image. The distance between the agent and the sink_1 seems to be within a reasonable range for the robotic arm to reach, considering the typical range of motion for such an arm in a virtual household simulator. Therefore, the sink_1 is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, true, true], "all_correct": true}, "effects_results": {"ontop bowl_1,sink_1": ["yes", 0.0, 0.0, "First, I will identify the bowl_1 and the sink_1 in the image. The bowl_1 is a white bowl with a plant inside it, and the sink_1 is the white tiled surface. The bowl_1 is placed directly on the sink_1. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 on top of the sink_1?\n<explanation>\nFirst, I will identify the bowl_1 and the sink_1 in the image. The bowl_1 is a white bowl with a plant inside it, and the sink_1 is the white tiled surface. The bowl_1 is placed directly on the sink_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the bowl_1. In the image, the robotic arm is positioned above the bowl_1, but it is not actually holding it. The bowl_1 is on the countertop, and the robotic arm is not in contact with it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding the bowl_1. In the image, the robotic arm is positioned above the bowl_1, but it is not actually holding it. The bowl_1 is on the countertop, and the robotic arm is not in contact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(bowl_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable bowl_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_2 to the sink and the position of the robotic arm, it seems that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_2 in the image. The bowl_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_2 to the sink and the position of the robotic arm, it seems that the bowl_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_1 to the sink and the position of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_1 to the sink and the position of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. Cabinet_1 is labeled and located on the left side of the image, near the top. The arm appears to be positioned close to cabinet_1, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it seems that cabinet_1 is within the reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. Cabinet_1 is labeled and located on the left side of the image, near the top. The arm appears to be positioned close to cabinet_1, and its reach extends towards it. Given the proximity and the orientation of the robotic arm, it seems that cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located near the sink, which is on the right side of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the cabinets and appears to be extending towards the sink area. Given the proximity of the piece_of_cloth_1 to the sink and the reach of the robotic arm, it seems that the piece_of_cloth_1 is within the agent's reach. Therefore, the answer is \"Yes\".", false, "Question: Is the piece_of_cloth_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is located near the sink, which is on the right side of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the cabinets and appears to be extending towards the sink area. Given the proximity of the piece_of_cloth_1 to the sink and the reach of the robotic arm, it seems that the piece_of_cloth_1 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the position of the sink_1 and the agent (robotic arm) in the image. The sink_1 is located on the right side of the image, near the window. The robotic arm is positioned above the cabinets and appears to be extending towards the sink area. The arm's reach seems to extend over the sink_1, indicating that it can interact with objects in that area. Therefore, the sink_1 is within the reach of the agent.", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the sink_1 and the agent (robotic arm) in the image. The sink_1 is located on the right side of the image, near the window. The robotic arm is positioned above the cabinets and appears to be extending towards the sink area. The arm's reach seems to extend over the sink_1, indicating that it can interact with objects in that area. Therefore, the sink_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_1 to the sink and the position of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 in the image. The bowl_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the bowl_1 to the sink and the position of the robotic arm, it seems that the bowl_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but the bowl_2 is not in its grasp. The bowl_2 is located on the countertop near the sink. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but the bowl_2 is not in its grasp. The bowl_2 is located on the countertop near the sink. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but there is no piece_of_cloth_1 in its grasp. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is visible, but there is no piece_of_cloth_1 in its grasp. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the bowl_1, but the bowl_1 is placed on the countertop and not being held by the robotic arm. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_1 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the bowl_1, but the bowl_1 is placed on the countertop and not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, and bowl_2 is also on the countertop. Both bowls are placed side by side, not one on top of the other. Therefore, bowl_1 is not on top of bowl_2.", true, "Question: Is the bowl_1 on top of the bowl_2?\n<explanation>\nFirst, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, and bowl_2 is also on the countertop. Both bowls are placed side by side, not one on top of the other. Therefore, bowl_1 is not on top of bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the bowl_1 and cabinet_1 in the image. The bowl_1 is labeled and appears to be on a surface. The cabinet_1 is also labeled and is a piece of furniture in the kitchen. Observing the positions, the bowl_1 is placed on top of the cabinet_1. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 on top of the cabinet_1?\n<explanation>\nFirst, I will identify the bowl_1 and cabinet_1 in the image. The bowl_1 is labeled and appears to be on a surface. The cabinet_1 is also labeled and is a piece of furniture in the kitchen. Observing the positions, the bowl_1 is placed on top of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is clearly visible and is placed on a surface. The piece_of_cloth_1 is also visible and is located on the same surface. However, the bowl_1 is not on top of the piece_of_cloth_1; instead, they are both placed side by side on the same surface. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is clearly visible and is placed on a surface. The piece_of_cloth_1 is also visible and is located on the same surface. However, the bowl_1 is not on top of the piece_of_cloth_1; instead, they are both placed side by side on the same surface. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,sink_1": ["no", 0.0, 0.0, "First, I will identify the bowl_1 and the sink_1 in the image. The bowl_1 is located on the countertop, and the sink_1 is positioned to the right of the countertop. The bowl_1 is not placed on top of the sink_1 but rather on the countertop next to it. Therefore, the answer is \"No\".", true, "Question: Is the bowl_1 on top of the sink_1?\n<explanation>\nFirst, I will identify the bowl_1 and the sink_1 in the image. The bowl_1 is located on the countertop, and the sink_1 is positioned to the right of the countertop. The bowl_1 is not placed on top of the sink_1 but rather on the countertop next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["yes", 0.0, 0.0, "First, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, and bowl_2 is also on the countertop. They are both placed on the same surface and appear to be adjacent to each other. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the bowl_2?\n<explanation>\nFirst, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, and bowl_2 is also on the countertop. They are both placed on the same surface and appear to be adjacent to each other. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of bowl_1 and cabinet_1 in the image. The bowl_1 is placed on top of cabinet_2, which is adjacent to cabinet_1. Since cabinet_2 is next to cabinet_1, and bowl_1 is on top of cabinet_2, it can be inferred that bowl_1 is next to cabinet_1. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the cabinet_1?\n<explanation>\nFirst, I will identify the location of bowl_1 and cabinet_1 in the image. The bowl_1 is placed on top of cabinet_2, which is adjacent to cabinet_1. Since cabinet_2 is next to cabinet_1, and bowl_1 is on top of cabinet_2, it can be inferred that bowl_1 is next to cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is also on the countertop. They are both in close proximity to each other, with the piece_of_cloth_1 being directly next to the bowl_1. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the bowl_1 and the piece_of_cloth_1 in the image. The bowl_1 is located on the countertop, and the piece_of_cloth_1 is also on the countertop. They are both in close proximity to each other, with the piece_of_cloth_1 being directly next to the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of bowl_1 and sink_1 in the image. The bowl_1 is placed on a surface near the sink_1. The sink_1 is located to the right of the bowl_1. Since the bowl_1 is adjacent to the sink_1, the answer is \"Yes\".", false, "Question: Is the bowl_1 next to the sink_1?\n<explanation>\nFirst, I will identify the location of bowl_1 and sink_1 in the image. The bowl_1 is placed on a surface near the sink_1. The sink_1 is located to the right of the bowl_1. Since the bowl_1 is adjacent to the sink_1, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the position of the bowl_1 and the agent (robotic arm) in the image. The bowl_1 is located on the countertop near the sink, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the bowl_1, indicating that it is within the range of the arm's movement. Therefore, the bowl_1 is in reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the bowl_1 and the agent (robotic arm) in the image. The bowl_1 is located on the countertop near the sink, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the bowl_1, indicating that it is within the range of the arm's movement. Therefore, the bowl_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the bowl_2, but the bowl_2 is placed on the countertop and not being held by the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the bowl_2 and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the bowl_2, but the bowl_2 is placed on the countertop and not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is holding an object, but it is not the piece_of_cloth_1. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the piece_of_cloth_1 and check if it is being held by the robotic arm. In the image, the robotic arm is holding an object, but it is not the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "holding bowl_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.375, "yes_correct": 6, "yes_total": 16, "no_accuracy": 1.0, "no_correct": 24, "no_total": 24, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}}}, "step": 3, "actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "yes"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "yes"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.5384615384615384, "yes_correct": 7, "yes_total": 13, "no_accuracy": 0.6764705882352942, "no_correct": 23, "no_total": 34, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.26666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.25, "no_correct": 3, "no_total": 12}}}, "step": 7, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5957446808510638, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.6, "no_correct": 21, "no_total": 35, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 10, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3076923076923077, "no_correct": 4, "no_total": 13}}}, "step": 8, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": true, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the apple_1, indicating that it is within the arm's range. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop, and the robotic arm is positioned above the countertop. The arm appears to be extended towards the apple_1, indicating that it is within the arm's range. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the objects on it. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the agent's reach. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the objects on it. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the electric refrigerator in the image. The robotic arm is positioned very close to the refrigerator, with its end effector near the refrigerator door handle. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the electric refrigerator in the image. The robotic arm is positioned very close to the refrigerator, with its end effector near the refrigerator door handle. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the electric refrigerator in the image. The robotic arm is positioned very close to the refrigerator, with its end effector near the refrigerator door handle. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the electric refrigerator in the image. The robotic arm is positioned very close to the refrigerator, with its end effector near the refrigerator door handle. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The robotic arm is positioned near the refrigerator, but there is no indication that the door is open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The robotic arm is positioned near the refrigerator, but there is no indication that the door is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.3430446991009444e-05, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door is visibly open, revealing the inside shelves and contents. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door is visibly open, revealing the inside shelves and contents. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop near the sink. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop near the sink. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the apple_2 and check if it is being held by the robotic arm. In the image, the apple_2 is on the counter, and the robotic arm is positioned above it but not holding it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the apple_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the apple_2 and check if it is being held by the robotic arm. In the image, the apple_2 is on the counter, and the robotic arm is positioned above it but not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the apple_1 is in the grasp of the robotic arm. In the image, the apple_1 is clearly being held by the robotic arm. Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the apple_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the apple_1 is in the grasp of the robotic arm. In the image, the apple_1 is clearly being held by the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["no", 0.0, 0.0, "First, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is labeled and appears to be held by the robotic arm. Apple_2 is also labeled and is located on the cabinet. By examining their relative positions, it is clear that apple_1 is not on top of apple_2; instead, apple_1 is being held above the cabinet where apple_2 is placed. Therefore, the answer is \"No\".", true, "Question: Is the apple_1 on top of the apple_2?\n<explanation>\nFirst, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is labeled and appears to be held by the robotic arm. Apple_2 is also labeled and is located on the cabinet. By examining their relative positions, it is clear that apple_1 is not on top of apple_2; instead, apple_1 is being held above the cabinet where apple_2 is placed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["no", 0.0, 0.0, "First, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the robotic arm, while apple_2 is on the cabinet. The two apples are not adjacent to each other; apple_1 is being held by the robotic arm, and apple_2 is placed on the cabinet. Therefore, they are not next to each other.", true, "Question: Is the apple_1 next to the apple_2?\n<explanation>\nFirst, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the robotic arm, while apple_2 is on the cabinet. The two apples are not adjacent to each other; apple_1 is being held by the robotic arm, and apple_2 is placed on the cabinet. Therefore, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check the position of the electric_refrigerator_1 relative to the robotic arm. In the image, the robotic arm is inside the refrigerator, indicating that the refrigerator is open and the arm is interacting with objects inside it. Since the arm is inside the refrigerator, it is within reach of the refrigerator. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check the position of the electric_refrigerator_1 relative to the robotic arm. In the image, the robotic arm is inside the refrigerator, indicating that the refrigerator is open and the arm is interacting with objects inside it. Since the arm is inside the refrigerator, it is within reach of the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the middle shelf of the refrigerator. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned inside the refrigerator, reaching towards the middle shelf. The arm appears to be close enough to the apple_1 to grasp it. Therefore, the apple_1 is within reach of the agent.", false, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the middle shelf of the refrigerator. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned inside the refrigerator, reaching towards the middle shelf. The arm appears to be close enough to the apple_1 to grasp it. Therefore, the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.654320987654321, "yes_accuracy": 0.7857142857142857, "yes_correct": 22, "yes_total": 28, "no_accuracy": 0.6268656716417911, "no_correct": 84, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.9545454545454546, "no_correct": 63, "no_total": 66}, "nextto": {"accuracy": 0.3194444444444444, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.20689655172413793, "no_correct": 12, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.546875, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.42, "no_correct": 42, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "ontop": {"accuracy": 0.6964285714285714, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.66, "no_correct": 33, "no_total": 50}, "nextto": {"accuracy": 0.26785714285714285, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.023809523809523808, "no_correct": 1, "no_total": 42}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be close to the apple_1. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the agent's reach.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be close to the apple_1. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be close to the apple_2. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the agent's reach.", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be close to the apple_2. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The robotic arm is positioned near the refrigerator, but there is no indication that the door is open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The robotic arm is positioned near the refrigerator, but there is no indication that the door is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed, as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".", false, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed, as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the electric_refrigerator_1 in the image. The refrigerator is prominently visible and appears to be close to the robotic arm, which is the agent. The handle of the refrigerator is within the immediate vicinity of the robotic arm, suggesting that the arm can reach it. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the electric_refrigerator_1 in the image. The refrigerator is prominently visible and appears to be close to the robotic arm, which is the agent. The handle of the refrigerator is within the immediate vicinity of the robotic arm, suggesting that the arm can reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed, as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed, as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["yes", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5493827160493827, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.4552238805970149, "no_correct": 61, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.7916666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.7727272727272727, "no_correct": 51, "no_total": 66}, "nextto": {"accuracy": 0.20833333333333334, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.017241379310344827, "no_correct": 1, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it seems that the apple_1 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent range of motion, it seems that the apple_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric_refrigerator_1 in the image. The refrigerator is visible in the image. Next, I will check if the refrigerator door is open. The door appears to be closed as there is no visible gap or interior lighting that would indicate it is open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look for the electric_refrigerator_1 in the image. The refrigerator is visible in the image. Next, I will check if the refrigerator door is open. The door appears to be closed as there is no visible gap or interior lighting that would indicate it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.473639406555935e-05, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door is clearly visible and appears to be open, as the inside shelves and contents are exposed. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door is clearly visible and appears to be open, as the inside shelves and contents are exposed. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the counter, and the robotic arm is positioned above the counter. The arm appears to be extended towards the counter, suggesting it can reach objects placed there. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily grasp the apple_1. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the counter, and the robotic arm is positioned above the counter. The arm appears to be extended towards the counter, suggesting it can reach objects placed there. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily grasp the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned above the countertop and appears to be close to the apple_2. Given the proximity of the apple_2 to the robotic arm, it seems that the arm can easily reach and interact with the apple_2. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned above the countertop and appears to be close to the apple_2. Given the proximity of the apple_2 to the robotic arm, it seems that the arm can easily reach and interact with the apple_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the counter, and the robotic arm is positioned above the counter. The arm appears to be extended towards the counter, suggesting it can reach objects placed there. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily grasp the apple_1. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the counter, and the robotic arm is positioned above the counter. The arm appears to be extended towards the counter, suggesting it can reach objects placed there. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily grasp the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the apple_2 and check if it is being held by the robotic arm. In the image, the apple_2 is on the counter, and the robotic arm is not holding it. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the apple_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the apple_2 and check if it is being held by the robotic arm. In the image, the apple_2 is on the counter, and the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding apple_1": {"before": false, "after": true}, "ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": true, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the agent, which is the robotic arm, in the image. Then, I will determine the location of the electric_refrigerator_1. The image shows the interior of the refrigerator, suggesting that the refrigerator door is open and the robotic arm is likely positioned in front of it. Given that the contents of the refrigerator are visible and appear to be within the operational range of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent, which is the robotic arm, in the image. Then, I will determine the location of the electric_refrigerator_1. The image shows the interior of the refrigerator, suggesting that the refrigerator door is open and the robotic arm is likely positioned in front of it. Given that the contents of the refrigerator are visible and appear to be within the operational range of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["yes", "no"], "ontop flour_1,carrot_2": ["yes", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5617283950617284, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.4701492537313433, "no_correct": 63, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8181818181818182, "no_correct": 54, "no_total": 66}, "nextto": {"accuracy": 0.19444444444444445, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.0, "no_correct": 0, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6172839506172839, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5373134328358209, "no_correct": 72, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9444444444444444, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9393939393939394, "no_correct": 62, "no_total": 66}, "nextto": {"accuracy": 0.20833333333333334, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.017241379310344827, "no_correct": 1, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the kitchen counter, extending towards the sink area. The apple_1 is within the area that the robotic arm can reach, as it is on the counter and the arm is positioned over the counter. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the kitchen counter. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the kitchen counter, extending towards the sink area. The apple_1 is within the area that the robotic arm can reach, as it is on the counter and the arm is positioned over the counter. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. The arm appears to be close enough to the apple_2 to interact with it. Therefore, the apple_2 is within reach of the agent.", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. The arm appears to be close enough to the apple_2 to interact with it. Therefore, the apple_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric_refrigerator_1 in the image. The refrigerator is visible in the image. Next, I will check if the refrigerator door is open. The door appears to be closed as there is no visible gap or interior lighting that would indicate it is open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look for the electric_refrigerator_1 in the image. The refrigerator is visible in the image. Next, I will check if the refrigerator door is open. The door appears to be closed as there is no visible gap or interior lighting that would indicate it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".", false, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "executed but failed"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (agent) and the electric refrigerator in the image. The robotic arm is positioned close to the refrigerator, with its end effector near the refrigerator door. Given the proximity and the orientation of the robotic arm, it appears that the refrigerator is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look at the refrigerator in the image. The refrigerator door appears to be closed as there is no visible gap or opening. The handle is in place, and the front of the refrigerator is fully visible, indicating that it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.073994155868759e-05, 0.0, "First, I will look for the electric refrigerator in the image. The refrigerator door appears to be open, as indicated by the visible interior and the angle of the door. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 open?\n<explanation>\nFirst, I will look for the electric refrigerator in the image. The refrigerator door appears to be open, as indicated by the visible interior and the angle of the door. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's reach, it appears that the apple_1 is within the agent's range. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's reach, it appears that the apple_1 is within the agent's range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent reach, it seems that the apple_2 is within the agent's reach. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be extended towards the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's apparent reach, it seems that the apple_2 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's reach, it appears that the apple_1 is within the agent's range. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. Given the proximity of the apple_1 to the robotic arm and the arm's reach, it appears that the apple_1 is within the agent's range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"apple_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the countertop, and the \"apple_2\" is on the countertop, not in the grasp of the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the apple_2?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"apple_2\" and check if it is being held by the robotic arm. In the image, the robotic arm is positioned near the countertop, and the \"apple_2\" is on the countertop, not in the grasp of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the agent is holding an object labeled \"apple_1\". In the image, the robotic arm is holding an object, but it is labeled \"apple_3\", not \"apple_1\". Therefore, the answer is \"No\".", false, "Question: Is the agent holding the apple_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the agent is holding an object labeled \"apple_1\". In the image, the robotic arm is holding an object, but it is labeled \"apple_3\", not \"apple_1\". Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop apple_1,apple_2": ["no", 0.0, 0.0, "First, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the countertop, and apple_2 is also on the countertop. By examining their relative positions, it appears that apple_1 is not on top of apple_2; they are both placed side by side on the countertop. Therefore, the answer is \"No\".", true, "Question: Is the apple_1 on top of the apple_2?\n<explanation>\nFirst, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the countertop, and apple_2 is also on the countertop. By examining their relative positions, it appears that apple_1 is not on top of apple_2; they are both placed side by side on the countertop. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["yes", 0.0, 0.0, "First, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the counter, and apple_2 is also on the counter. Observing their relative positions, apple_1 is to the left of apple_2. Since both apples are on the same surface and close to each other, they are indeed next to each other.", false, "Question: Is the apple_1 next to the apple_2?\n<explanation>\nFirst, I will identify the positions of apple_1 and apple_2 in the image. Apple_1 is located on the counter, and apple_2 is also on the counter. Observing their relative positions, apple_1 is to the left of apple_2. Since both apples are on the same surface and close to each other, they are indeed next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, true, true], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'apple_1' in object names, expected exactly one. Matches: []"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5679012345679012, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.47761194029850745, "no_correct": 64, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.8472222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8333333333333334, "no_correct": 55, "no_total": 66}, "nextto": {"accuracy": 0.19444444444444445, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.0, "no_correct": 0, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6111111111111112, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5298507462686567, "no_correct": 71, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9090909090909091, "no_correct": 60, "no_total": 66}, "nextto": {"accuracy": 0.2222222222222222, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.034482758620689655, "no_correct": 2, "no_total": 58}}}, "step": 5, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6790123456790124, "yes_accuracy": 0.8076923076923077, "yes_correct": 21, "yes_total": 26, "no_accuracy": 0.6544117647058824, "no_correct": 89, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "ontop": {"accuracy": 0.9305555555555556, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.9402985074626866, "no_correct": 63, "no_total": 67}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.75, "yes_correct": 9, "yes_total": 12, "no_accuracy": 0.3, "no_correct": 18, "no_total": 60}}}, "step": 6, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the counter to the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the refrigerator. The distance between the apple_1 and the robotic arm appears to be significant, as the apple is on the opposite side of the kitchen. Given the layout of the kitchen and the positions of the objects, the apple_1 is not within immediate reach of the robotic arm without moving.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the apple_1 is placed. Given the proximity of the apple_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned close to the countertop where the apple_1 is placed. Given the proximity of the apple_1 to the robotic arm, it appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. The apple_2 is within the immediate vicinity of the robotic arm, suggesting that it is within the arm's reach. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, extending towards the sink area. The apple_2 is within the immediate vicinity of the robotic arm, suggesting that it is within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 0.0, 0.0, "First, I will identify the position of the agent, which is the robotic arm, in the image. The robotic arm is located on the right side of the image, positioned above the counter. Next, I will locate the orange_2, which is marked in the image. The orange_2 is on the counter, close to the robotic arm. Given the proximity of the orange_2 to the robotic arm and the arm's range of motion, it appears that the orange_2 is within the reach of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the orange_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the agent, which is the robotic arm, in the image. The robotic arm is located on the right side of the image, positioned above the counter. Next, I will locate the orange_2, which is marked in the image. The orange_2 is on the counter, close to the robotic arm. Given the proximity of the orange_2 to the robotic arm and the arm's range of motion, it appears that the orange_2 is within the reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'electric_refrigerator_1' in object names, expected exactly one. Matches: []"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop bread_1,orange_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.57, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5, "no_correct": 86, "no_total": 172, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8809523809523809, "no_correct": 74, "no_total": 84}, "nextto": {"accuracy": 0.17777777777777778, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.02631578947368421, "no_correct": 2, "no_total": 76}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {}], "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned above the countertop and appears to be close to the apple_1. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily reach the apple_1 without any significant movement. Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 in the image. The apple_1 is located on the countertop near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is positioned above the countertop and appears to be close to the apple_1. Given the proximity of the apple_1 to the robotic arm, it seems that the arm can easily reach the apple_1 without any significant movement. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, close to the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's range of motion, it appears that the apple_2 is within reach of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_2 in the image. The apple_2 is located on the countertop near the sink. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, close to the sink area. Given the proximity of the apple_2 to the robotic arm and the arm's range of motion, it appears that the apple_2 is within reach of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_1)", "grasp(orange_1)", "navigate-to(orange_2)", "place-next-to(orange_1, orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop near the robotic arm. The robotic arm is positioned close to the apple_1, and its reach appears to extend over the countertop area where the apple_1 is placed. Given the proximity and the positioning of the robotic arm, it seems that the apple_1 is within the reach of the agent.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the apple_1 and the robotic arm in the image. The apple_1 is located on the countertop near the robotic arm. The robotic arm is positioned close to the apple_1, and its reach appears to extend over the countertop area where the apple_1 is placed. Given the proximity and the positioning of the robotic arm, it seems that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, mounted on the wall above the counter. Next, I will locate the orange_2. In the image, there is a green apple on the counter, but no orange is visible. Since the orange_2 is not present in the image, it cannot be in reach of the agent. Therefore, the answer is \"No\".", true, "Question: Is the orange_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, mounted on the wall above the counter. Next, I will locate the orange_2. In the image, there is a green apple on the counter, but no orange is visible. Since the orange_2 is not present in the image, it cannot be in reach of the agent. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'electric_refrigerator_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_1)", "grasp(orange_1)", "navigate-to(orange_2)", "place-next-to(orange_1, orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will identify the position of the ball_1 and the robotic arm in the image. The ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be extended towards the ball, suggesting it is within the arm's range. Given the proximity and the orientation of the robotic arm, it seems that the ball_1 is within reach of the agent.", true, "Question: Is the ball_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the ball_1 and the robotic arm in the image. The ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be extended towards the ball, suggesting it is within the arm's range. Given the proximity and the orientation of the robotic arm, it seems that the ball_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plate_2 in the image. The plate_2 is labeled and appears to be on a surface near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is extended towards the plate_2, and it seems to be within the arm's range. Given the proximity and the orientation of the robotic arm, it appears that the plate_2 is within the agent's reach.", false, "Question: Is the plate_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the plate_2 in the image. The plate_2 is labeled and appears to be on a surface near the robotic arm. Next, I will assess the position and reach of the robotic arm. The robotic arm is extended towards the plate_2, and it seems to be within the arm's range. Given the proximity and the orientation of the robotic arm, it appears that the plate_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 0.0, 0.0, "First, I will identify the position of the plate_3 and the robotic arm in the image. The plate_3 is located on a wooden cabinet near the wall. The robotic arm is positioned above and slightly to the right of the cabinet. The arm appears to be extended towards the cabinet, suggesting it can reach the plate_3. Given the proximity and the orientation of the robotic arm, it seems that the plate_3 is within the reach of the agent.", false, "Question: Is the plate_3 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the plate_3 and the robotic arm in the image. The plate_3 is located on a wooden cabinet near the wall. The robotic arm is positioned above and slightly to the right of the cabinet. The arm appears to be extended towards the cabinet, suggesting it can reach the plate_3. Given the proximity and the orientation of the robotic arm, it seems that the plate_3 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the shelf_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The shelf_1 is positioned on the right side of the room, near the wall. The arm appears to be close to the shelf_1, and its reach extends towards the shelf. Given the proximity and the orientation of the robotic arm, it seems that the shelf_1 is within the reach of the agent.", false, "Question: Is the shelf_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the shelf_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The shelf_1 is positioned on the right side of the room, near the wall. The arm appears to be close to the shelf_1, and its reach extends towards the shelf. Given the proximity and the orientation of the robotic arm, it seems that the shelf_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is positioned against the wall on the right side, near the robotic arm. The arm appears to be close enough to the cabinet_1 to interact with it. Therefore, the cabinet_1 is in reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the position of the robotic arm (the agent) and the cabinet_1 in the image. The robotic arm is located on the right side of the image, extending towards the center. The cabinet_1 is positioned against the wall on the right side, near the robotic arm. The arm appears to be close enough to the cabinet_1 to interact with it. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": true, "after": false}, "reachable saucepan_1": {"before": true, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"all_correct": true, "goal_reached": false, "action_results": [], "replans": [], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"all_correct": true, "goal_reached": false, "action_results": [], "replans": [], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'ball_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'ball_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'plaything_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'plaything_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'plaything_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "Invalid action: Found 0 matches for 'plaything_1' in object names, expected exactly one. Matches: []"}], "replans": [{}], "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "problem_stats": {"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"action_correct": 1, "action_total": 9, "remaining_actions": ["place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"action_correct": 1, "action_total": 11, "remaining_actions": ["place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.09090909090909091, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"action_correct": 1, "action_total": 41, "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.024390243902439025, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"action_correct": 1, "action_total": 7, "remaining_actions": ["place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.14285714285714285, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"action_correct": 3, "action_total": 19, "remaining_actions": ["place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"], "action_accuracy": 0.15789473684210525, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"action_correct": 1, "action_total": 9, "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"action_correct": 2, "action_total": 17, "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.11764705882352941, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"action_correct": 3, "action_total": 15, "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.2, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"action_correct": 4, "action_total": 14, "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.2857142857142857, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"action_correct": 6, "action_total": 6, "remaining_actions": [], "action_accuracy": 1.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"action_correct": 2, "action_total": 8, "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"action_correct": 6, "action_total": 6, "remaining_actions": [], "action_accuracy": 1.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"action_correct": 5, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.5555555555555556, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"action_correct": 0, "action_total": 7, "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"action_correct": 1, "action_total": 15, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_1)", "grasp(orange_1)", "navigate-to(orange_2)", "place-next-to(orange_1, orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"], "action_accuracy": 0.06666666666666667, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"action_correct": 1, "action_total": 15, "remaining_actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_1)", "grasp(orange_1)", "navigate-to(orange_2)", "place-next-to(orange_1, orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"], "action_accuracy": 0.06666666666666667, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"action_correct": 0, "action_total": 11, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"action_correct": 0, "action_total": 11, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.9228971962616822, "yes_accuracy": 0.9890710382513661, "yes_correct": 362, "yes_total": 366, "no_accuracy": 0.532258064516129, "no_correct": 33, "no_total": 62, "correct": 395, "total": 428}, "holding": {"accuracy": 0.9548611111111112, "yes_accuracy": 0.125, "yes_correct": 1, "yes_total": 8, "no_accuracy": 0.9785714285714285, "no_correct": 274, "no_total": 280, "correct": 275, "total": 288}, "open": {"accuracy": 0.696969696969697, "yes_accuracy": 0.75, "yes_correct": 9, "yes_total": 12, "no_accuracy": 0.6916666666666667, "no_correct": 83, "no_total": 120, "correct": 92, "total": 132}, "ontop": {"accuracy": 0.8579970104633782, "yes_accuracy": 0.8121827411167513, "yes_correct": 160, "yes_total": 197, "no_accuracy": 0.8629834254143647, "no_correct": 1562, "no_total": 1810, "correct": 1722, "total": 2007}, "inside": {"accuracy": 0.9422310756972112, "yes_accuracy": 0.12, "yes_correct": 3, "yes_total": 25, "no_accuracy": 0.9853249475890985, "no_correct": 470, "no_total": 477, "correct": 473, "total": 502}, "nextto": {"accuracy": 0.40059790732436473, "yes_accuracy": 0.76, "yes_correct": 228, "yes_total": 300, "no_accuracy": 0.3374340949033392, "no_correct": 576, "no_total": 1707, "correct": 804, "total": 2007}}, "predicate_accuracy": 0.7011558538404176, "macro_predicate_accuracy": 0.7959256663045741, "action_accuracy": 0.11801242236024845, "task_accuracy": 0.04, "fail_ratio": 0.0, "metadata": {"model_name": "OpenGVLab/InternVL3-78B", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/hard", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7232262_0"}}