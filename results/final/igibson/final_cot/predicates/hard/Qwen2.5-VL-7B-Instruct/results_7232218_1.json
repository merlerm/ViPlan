{"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["no", 1.2220894859638065e-05, 6.470342486863956e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the document relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the document_1: It appears to be on the desk near the left side of the room.\n2. Observe the position of the robotic arm: The robotic arm is positioned towards the right side of the room, away from the desk where the document_1 is located.\n3. Consider the range of motion of the robotic arm: The robotic arm seems capable of reaching across the room, but it is currently not extended towards the document_1.\n\nGiven these observations, the robotic arm is not currently in a position to reach the document_1.", true, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the document relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the document_1: It appears to be on the desk near the left side of the room.\n2. Observe the position of the robotic arm: The robotic arm is positioned towards the right side of the room, away from the desk where the document_1 is located.\n3. Consider the range of motion of the robotic arm: The robotic arm seems capable of reaching across the room, but it is currently not extended towards the document_1.\n\nGiven these observations, the robotic arm is not currently in a position to reach the document_1.\n\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable document_1": ["no", 1.3772736565442756e-05, 4.021014319732785e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm is positioned above the document_1, suggesting that it could potentially pick up the document_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm is positioned above the document_1, suggesting that it could potentially pick up the document_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable marker_1": ["yes", 6.740381650160998e-06, 4.019854168291204e-05, "To determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (agent). The marker appears to be placed on a surface near the agent's arm, suggesting that the agent could potentially reach it. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether the marker is within its reach.\n\nSince the question does not provide additional details about the robotic arm's reach or the precise location of the marker, we must assume that the marker is within the general vicinity where the agent could potentially reach it.\n\nTherefore, based on the available information, the answer is \"Yes.\"", false, "<explanation>\nTo determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (agent). The marker appears to be placed on a surface near the agent's arm, suggesting that the agent could potentially reach it. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether the marker is within its reach.\n\nSince the question does not provide additional details about the robotic arm's reach or the precise location of the marker, we must assume that the marker is within the general vicinity where the agent could potentially reach it.\n\nTherefore, based on the available information, the answer is \"Yes.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.1521410669956822e-05, 2.651047907420434e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be close to the table's surface. Given the typical range of motion for robotic arms, it seems plausible that the robotic arm could reach the table_1 to interact with it.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be close to the table's surface. Given the typical range of motion for robotic arms, it seems plausible that the robotic arm could reach the table_1 to interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_3": ["no", 1.2980685824004468e-05, 3.1700110412202775e-05, "To determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially pick up the document_3. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially pick up the document_3. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable folder_1": ["yes", 1.023067488858942e-05, 2.4984288756968454e-05, "To determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the desk, suggesting it has the capability to move towards the folder. Given this information, it seems reasonable to conclude that the folder is indeed in reach of the agent.", false, "<explanation>\nTo determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the desk, suggesting it has the capability to move towards the folder. Given this information, it seems reasonable to conclude that the folder is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 8.051890290516894e-06, 0.00014879577793180943, "The image shows a robotic arm (agent) positioned near a desk. The agent appears to be interacting with an object, which is highlighted in red. The highlighted object is labeled as \"folder_1\". Since the agent is positioned close to this object and it is highlighted, it suggests that the agent is likely holding or interacting with the folder_1.", true, "<explanation>\nThe image shows a robotic arm (agent) positioned near a desk. The agent appears to be interacting with an object, which is highlighted in red. The highlighted object is labeled as \"folder_1\". Since the agent is positioned close to this object and it is highlighted, it suggests that the agent is likely holding or interacting with the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.1521410669956822e-05, 2.651047907420434e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the red bounding box labeled \"agent_1\". This suggests that the robotic arm can potentially interact with the objects on the table_1.\n\nSince the robotic arm's end effector is within the reach of the table_1, we can conclude that the table_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the red bounding box labeled \"agent_1\". This suggests that the robotic arm can potentially interact with the objects on the table_1.\n\nSince the robotic arm's end effector is within the reach of the table_1, we can conclude that the table_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(folder_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 8.051890290516894e-06, 0.00014879577793180943, "The image shows a robotic arm (agent) positioned near a desk. The agent appears to be interacting with an object, which is highlighted in red. The highlighted object is labeled as \"folder_1\". Since the agent is positioned close to this object and it is highlighted, it suggests that the agent is likely holding or interacting with the folder_1.", true, "<explanation>\nThe image shows a robotic arm (agent) positioned near a desk. The agent appears to be interacting with an object, which is highlighted in red. The highlighted object is labeled as \"folder_1\". Since the agent is positioned close to this object and it is highlighted, it suggests that the agent is likely holding or interacting with the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.1521410669956822e-05, 2.651047907420434e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the red bounding box labeled \"agent_1\". This suggests that the robotic arm can potentially interact with the objects on the table_1.\n\nSince the robotic arm's end effector is within the reach of the table_1, we can conclude that the table_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the red bounding box labeled \"agent_1\". This suggests that the robotic arm can potentially interact with the objects on the table_1.\n\nSince the robotic arm's end effector is within the reach of the table_1, we can conclude that the table_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable folder_1": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "open folder_1": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "inside marker_1,folder_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6875, "no_correct": 11, "no_total": 16}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.45, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3888888888888889, "no_correct": 7, "no_total": 18}}}, "step": 1, "actions": ["place-next-to(folder_1, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable folder_1": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "open folder_1": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "inside marker_1,folder_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6875, "no_correct": 11, "no_total": 16}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.45, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3888888888888889, "no_correct": 7, "no_total": 18}}}, "step": 2, "actions": ["place-next-to(folder_1, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["no", 1.2220894859638065e-05, 6.470342486863956e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the document relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the document_1: It appears to be on the desk near the left side of the room.\n2. Observe the position of the robotic arm: The robotic arm is positioned towards the right side of the room, away from the desk where the document_1 is located.\n3. Consider the range of motion of the robotic arm: The robotic arm seems capable of reaching across the room, but it is currently not extended towards the document_1.\n\nGiven these observations, the robotic arm is not currently in a position to reach the document_1.", true, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the document relative to the robotic arm's current position and its range of motion.\n\n1. Identify the location of the document_1: It appears to be on the desk near the left side of the room.\n2. Observe the position of the robotic arm: The robotic arm is positioned towards the right side of the room, away from the desk where the document_1 is located.\n3. Consider the range of motion of the robotic arm: The robotic arm seems capable of reaching across the room, but it is currently not extended towards the document_1.\n\nGiven these observations, the robotic arm is not currently in a position to reach the document_1.\n\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable document_1": ["no", 1.0858338100661058e-05, 2.814344406942837e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the document_1, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", false, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the document_1, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable marker_1": ["yes", 5.9845406212843955e-06, 2.985412356792949e-05, "To determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (agent). The marker appears to be placed on a surface near the agent, and the robotic arm's end effector (the part that holds objects) is positioned close to the marker. Given the proximity and the orientation of the robotic arm, it seems likely that the marker is within the reach of the agent.\n\nTherefore, based on this reasoning, the answer is \"Yes\".", false, "<explanation>\nTo determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (agent). The marker appears to be placed on a surface near the agent, and the robotic arm's end effector (the part that holds objects) is positioned close to the marker. Given the proximity and the orientation of the robotic arm, it seems likely that the marker is within the reach of the agent.\n\nTherefore, based on this reasoning, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.0855314940272365e-05, 2.3534425054094754e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and apparent reach of the robotic arm, the answer is \"Yes\".", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and apparent reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_3": ["no", 1.2231472283019684e-05, 2.498556386854034e-05, "To determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable folder_1": ["yes", 9.083289114641957e-06, 2.0900442905258387e-05, "To determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the desk, suggesting it has the capability to move towards the folder. Given this information, it seems reasonable to conclude that the folder is indeed in reach of the agent.", false, "<explanation>\nTo determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the desk, suggesting it has the capability to move towards the folder. Given this information, it seems reasonable to conclude that the folder is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(document_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_1": ["yes", 1.1509388059494086e-05, 0.0001488124398747459, "The image shows a robotic arm (agent) positioned near a desk. The robotic arm appears to be interacting with a document labeled \"document_1,\" which is placed on the desk. The robotic arm's claw-like structure is in contact with the document, suggesting that it is holding or manipulating the document.", true, "<explanation>\nThe image shows a robotic arm (agent) positioned near a desk. The robotic arm appears to be interacting with a document labeled \"document_1,\" which is placed on the desk. The robotic arm's claw-like structure is in contact with the document, suggesting that it is holding or manipulating the document.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.0855314940272365e-05, 2.3534425054094754e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(document_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_1": ["yes", 1.1509388059494086e-05, 0.0001488124398747459, "The image shows a robotic arm (agent) positioned near a desk. The robotic arm appears to be interacting with a document labeled \"document_1,\" which is placed on the desk. The robotic arm's claw-like structure is in contact with the document, suggesting that it is holding or manipulating the document.", true, "<explanation>\nThe image shows a robotic arm (agent) positioned near a desk. The robotic arm appears to be interacting with a document labeled \"document_1,\" which is placed on the desk. The robotic arm's claw-like structure is in contact with the document, suggesting that it is holding or manipulating the document.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.0855314940272365e-05, 2.3534425054094754e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm is positioned above the table_1, and its end effector (the part that can hold objects) appears to be within the area where the table_1 is located. This suggests that the robotic arm could potentially interact with the table_1.\n\nTherefore, based on the positioning and the apparent reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable folder_1": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["yes", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "inside marker_1,folder_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.65, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.45, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3888888888888889, "no_correct": 7, "no_total": 18}}}, "step": 1, "actions": ["place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable folder_1": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["yes", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "inside marker_1,folder_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["yes", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.65, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.45, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3888888888888889, "no_correct": 7, "no_total": 18}}}, "step": 2, "actions": ["place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 1.4622693925048225e-05, 3.170214040437713e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the desk, and the document_1 is located on the desk. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to grab the document_1.", true, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the desk, and the document_1 is located on the desk. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to grab the document_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 1.2964705092599615e-05, 6.467489583883435e-05, "To determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (the agent). The marker appears to be placed on a surface, likely a desk, and the robotic arm is positioned above this surface. The robotic arm seems capable of reaching down to interact with objects on the desk. Given its current position and orientation, it appears that the robotic arm could potentially grasp the marker_1.\n\nTherefore, based on the positioning and capabilities of the robotic arm, the marker_1 is indeed in reach.", false, "<explanation>\nTo determine if the marker_1 is in reach of the agent, we need to consider the position of the marker relative to the robotic arm (the agent). The marker appears to be placed on a surface, likely a desk, and the robotic arm is positioned above this surface. The robotic arm seems capable of reaching down to interact with objects on the desk. Given its current position and orientation, it appears that the robotic arm could potentially grasp the marker_1.\n\nTherefore, based on the positioning and capabilities of the robotic arm, the marker_1 is indeed in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.460502426198218e-05, 5.0976545026060194e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the table, suggesting it has the capability to move and manipulate objects.\n2. **Table Position**: The table_1 is located on the floor, directly beneath the robotic arm.\n3. **Reachability**: Given the robotic arm's position and its ability to hold objects, it appears capable of reaching down to the table_1 to interact with it.\n\nSince the robotic arm is positioned above the table and seems capable of moving, it is reasonable to conclude that the table_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned above the table, suggesting it has the capability to move and manipulate objects.\n2. **Table Position**: The table_1 is located on the floor, directly beneath the robotic arm.\n3. **Reachability**: Given the robotic arm's position and its ability to hold objects, it appears capable of reaching down to the table_1 to interact with it.\n\nSince the robotic arm is positioned above the table and seems capable of moving, it is reasonable to conclude that the table_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 9.063879588211421e-06, 8.1996651715599e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned near the desk, with its end effector (the part that holds objects) extended towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located on the far right side of the image, attached to the wall above the desk.\n3. **Reachability Analysis**:\n   - The robotic arm's end effector appears to be able to extend horizontally across the desk area.\n   - The vertical distance from the robotic arm to the cabinet_1 seems manageable as the robotic arm can likely reach up to the height of the cabinet.\n4. **Conclusion**: Given the robotic arm's current position and its ability to extend horizontally and vertically, it appears that the cabinet_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned near the desk, with its end effector (the part that holds objects) extended towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located on the far right side of the image, attached to the wall above the desk.\n3. **Reachability Analysis**:\n   - The robotic arm's end effector appears to be able to extend horizontally across the desk area.\n   - The vertical distance from the robotic arm to the cabinet_1 seems manageable as the robotic arm can likely reach up to the height of the cabinet.\n4. **Conclusion**: Given the robotic arm's current position and its ability to extend horizontally and vertically, it appears that the cabinet_1 is within the reach of the agent.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 1.3775022125628311e-05, 3.1695984944235533e-05, "To determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the desk, and the document_3 is located on the desk. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to grab the document_3.", false, "<explanation>\nTo determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the desk, and the document_3 is located on the desk. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to grab the document_3.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 1.224080642714398e-05, 1.224080642714398e-05, "To determine if the folder_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the folder_1. The robotic arm appears to be positioned above the desk, and its end effector (the part that holds objects) is close to the folder_1. Given the proximity and orientation, it seems likely that the robotic arm could reach the folder_1.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the folder_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the folder_1. The robotic arm appears to be positioned above the desk, and its end effector (the part that holds objects) is close to the folder_1. Given the proximity and orientation, it seems likely that the robotic arm could reach the folder_1.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 1.2238263479957823e-05, 1.970274570339825e-05, "To determine if the folder_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the folder_2. The robotic arm appears to be positioned above the desk, and its end effector (the part that holds objects) is extended towards the folder_2. Given the orientation and positioning of the robotic arm, it seems that the end effector could potentially reach the folder_2 without any significant obstruction.\n\nTherefore, based on the visual information provided, the folder_2 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the folder_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the folder_2. The robotic arm appears to be positioned above the desk, and its end effector (the part that holds objects) is extended towards the folder_2. Given the orientation and positioning of the robotic arm, it seems that the end effector could potentially reach the folder_2 without any significant obstruction.\n\nTherefore, based on the visual information provided, the folder_2 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 9.082263204618357e-06, 9.25502463360317e-05, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk, as indicated by its bounding box.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on the positioning and interaction, it seems likely that the agent is holding the folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 7.151981662900653e-06, 5.743893780163489e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center of the image, extending upwards towards the ceiling.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the image, near the top corner of the room.\n3. **Reachability**: The robotic arm appears to be able to extend its arm upwards and slightly to the right, but it does not seem to have enough horizontal reach to grab the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the cabinet_1 directly.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 1, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 2, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 3, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 4, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 5, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 6, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 7, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 8, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 9, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 10, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 11, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 12, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 13, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 14, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 15, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 16, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 17, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 18, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 19, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 20, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 21, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 22, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 23, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 24, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 25, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 26, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 27, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 28, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 29, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.696969696969697, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.6904761904761905, "no_correct": 58, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4838709677419355, "no_correct": 15, "no_total": 31}}}, "step": 30, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["no", 1.4629425095336046e-05, 1.970071389223449e-05, "To determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the document_1, suggesting that it could potentially pick up the document. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the document_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_1. The robotic arm appears to be positioned above the document_1, suggesting that it could potentially pick up the document. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable marker_1": ["yes", 1.4599250789615326e-05, 8.203622564906254e-05, "To determine if the marker_1 is in reach of the agent, we need to assess the spatial relationship between the marker and the robotic arm (agent). The marker appears to be located on a surface near the agent, and the robotic arm seems capable of reaching out towards it. Given the proximity and orientation of the marker relative to the robotic arm, it is reasonable to conclude that the marker is within the reach of the agent.", false, "<explanation>\nTo determine if the marker_1 is in reach of the agent, we need to assess the spatial relationship between the marker and the robotic arm (agent). The marker appears to be located on a surface near the agent, and the robotic arm seems capable of reaching out towards it. Given the proximity and orientation of the marker relative to the robotic arm, it is reasonable to conclude that the marker is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.8525790437706746e-05, 6.466136983362958e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 1.1499886568344664e-05, 9.235779725713655e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, close to the bottom corner.\n3. **Reachability**: The robotic arm's reach seems to extend horizontally across the room, but it does not appear to extend far enough to reach the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not seem to have direct reach to the cabinet_1 based on its current position and orientation.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned near the center of the image, extending towards the right side.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, close to the bottom corner.\n3. **Reachability**: The robotic arm's reach seems to extend horizontally across the room, but it does not appear to extend far enough to reach the cabinet_1 from its current position.\n\nGiven these observations, the robotic arm does not seem to have direct reach to the cabinet_1 based on its current position and orientation.\n\n</explanation>\n<answer>No</answer>", true], "reachable document_3": ["no", 1.4623787137679756e-05, 2.3543270799564198e-05, "To determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially pick up the document. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the document_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the document_3. The robotic arm appears to be positioned above the document_3, suggesting that it could potentially pick up the document. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable folder_1": ["yes", 1.648036231927108e-05, 1.4630703844886739e-05, "To determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder_1 appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the surface, suggesting it has the capability to interact with objects at this level.\n\nTherefore, based on the positioning and the context provided, the folder_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the folder_1 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder_1 appears to be placed on a surface that is within the range where the robotic arm could potentially reach it. The robotic arm is positioned above the surface, suggesting it has the capability to interact with objects at this level.\n\nTherefore, based on the positioning and the context provided, the folder_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 1.647476528887637e-05, 2.4990527890622616e-05, "To determine if the folder_2 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder_2 appears to be placed on a surface that is within the range where the robotic arm could potentially reach. The robotic arm is positioned above the surface, suggesting it has the capability to interact with objects on that surface.\n\nTherefore, based on the positioning and the context provided, the folder_2 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the folder_2 is in reach of the agent, we need to consider the position of the folder relative to the robotic arm (the agent). The folder_2 appears to be placed on a surface that is within the range where the robotic arm could potentially reach. The robotic arm is positioned above the surface, suggesting it has the capability to interact with objects on that surface.\n\nTherefore, based on the positioning and the context provided, the folder_2 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 1.3766058145847637e-05, 0.00014888259465806186, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk in front of the agent.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on this analysis, the agent seems to be interacting with the folder_1, indicating it is likely holding it.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk in front of the agent.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on this analysis, the agent seems to be interacting with the folder_1, indicating it is likely holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.8524897313909605e-05, 7.283253216883168e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(folder_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 1.3766058145847637e-05, 0.00014888259465806186, "To determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk in front of the agent.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on this analysis, the agent seems to be interacting with the folder_1, indicating it is likely holding it.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the folder_1: The folder_1 is located on the desk in front of the agent.\n3. Check if the agent is interacting with the folder_1: The robotic arm appears to be positioned near the folder_1, suggesting it might be interacting with it.\n\nBased on this analysis, the agent seems to be interacting with the folder_1, indicating it is likely holding it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.8524897313909605e-05, 7.283253216883168e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned above the table, suggesting it has the capability to interact with objects on the table.\n2. **Table Position**: The table_1 is located directly below the robotic arm, indicating that the arm could potentially reach down to interact with it.\n3. **Reachability**: Given the proximity and alignment between the robotic arm and the table_1, it seems reasonable to conclude that the robotic arm is in reach of the table_1.\n\nTherefore, based on the positioning and potential interaction capabilities, the answer is affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["yes", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["yes", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6565656565656566, "yes_accuracy": 0.6, "yes_correct": 9, "yes_total": 15, "no_accuracy": 0.6666666666666666, "no_correct": 56, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.7428571428571429, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.7741935483870968, "no_correct": 24, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 1, "actions": ["place-next-to(folder_1, table_1)", "place-next-to(folder_2, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["no", "yes"], "reachable document_1": ["no", "yes"], "reachable document_3": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["yes", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["yes", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["yes", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6565656565656566, "yes_accuracy": 0.6, "yes_correct": 9, "yes_total": 15, "no_accuracy": 0.6666666666666666, "no_correct": 56, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.2, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.7428571428571429, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.7741935483870968, "no_correct": 24, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 2, "actions": ["place-next-to(folder_1, table_1)", "place-next-to(folder_2, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(folder_2, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 1.1510410331538878e-05, 4.8029894969658926e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact distance between the arm and the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the information provided does not allow us to make a definitive conclusion.\n\nTherefore, the answer is \"No\" because we cannot confirm that the cabinet is definitely within the reach of the agent.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact distance between the arm and the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the information provided does not allow us to make a definitive conclusion.\n\nTherefore, the answer is \"No\" because we cannot confirm that the cabinet is definitely within the reach of the agent.\n</explanation>\n<answer>No</answer>", false], "open cabinet_1": ["no", 2.899401351896813e-06, 0.00018701155204325914, "To determine if the cabinet_1 is open, I'll look at the image for any indication that the cabinet doors are not closed. In this image, the cabinet doors appear to be closed, as there are no visible gaps or openings where one might expect to see them if they were open. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image for any indication that the cabinet doors are not closed. In this image, the cabinet doors appear to be closed, as there are no visible gaps or openings where one might expect to see them if they were open. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.629628038965166e-06, 5.0983937398996204e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach down to interact with the cabinet_1. However, without specific information about the arm's reach or the exact dimensions of the cabinet, we cannot definitively say whether the cabinet is within the arm's reach.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 9, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 11, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 15, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 19, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 20, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 21, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 22, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 23, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 24, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 25, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 26, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 27, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 28, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 29, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 30, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.5504661860177293e-05, 3.786386514548212e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_1 is located on the left side of the image, near the bottom corner, close to the floor.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_1 is located on the left side of the image, near the bottom corner, close to the floor.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 1.549885382701177e-05, 4.0171074942918494e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_1 is located on the left side of the image, near the bottom corner, close to the floor.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: Cabinet_1 is located on the left side of the image, near the bottom corner, close to the floor.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 5.910456366109429e-06, 0.0002667325607035309, "To determine if the cabinet_1 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_1 appears to have its doors closed, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to visually inspect the image for any indication that the cabinet door is not closed. In this image, the cabinet_1 appears to have its doors closed, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 1.647268254600931e-05, 4.022790744784288e-05, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. Upon inspection, the cabinet appears to have its doors slightly ajar, indicating that it is indeed open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. Upon inspection, the cabinet appears to have its doors slightly ajar, indicating that it is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 1.7482174371252768e-05, 2.9871234801248647e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_1. Given the proximity and orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_1. Given the proximity and orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.7482843759353273e-05, 2.4987171855173074e-05, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_2. Given the proximity and orientation of the robotic arm, it seems likely that the bowl_2 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_2. Given the proximity and orientation of the robotic arm, it seems likely that the bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.647450335440226e-05, 3.3652919228188694e-05, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent).\n\n1. **Position of the Piece_of_Cloth_1**: The piece_of_cloth_1 appears to be placed on a surface, likely a cabinet or a countertop, at a height that is accessible to the robotic arm.\n\n2. **Position and Orientation of the Robotic Arm**: The robotic arm is positioned above the piece_of_cloth_1, suggesting that it could potentially reach down to interact with it. The arm's end effector (the part that holds objects) is oriented towards the piece_of_cloth_1, indicating that it is in a position to grab or manipulate it.\n\n3. **Reachability**: Given the proximity and alignment of the robotic arm with the piece_of_cloth_1, it seems plausible that the robotic arm could reach the piece_of_cloth_1 without any significant obstruction.\n\nBased on this analysis, the piece_of_cloth_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent).\n\n1. **Position of the Piece_of_Cloth_1**: The piece_of_cloth_1 appears to be placed on a surface, likely a cabinet or a countertop, at a height that is accessible to the robotic arm.\n\n2. **Position and Orientation of the Robotic Arm**: The robotic arm is positioned above the piece_of_cloth_1, suggesting that it could potentially reach down to interact with it. The arm's end effector (the part that holds objects) is oriented towards the piece_of_cloth_1, indicating that it is in a position to grab or manipulate it.\n\n3. **Reachability**: Given the proximity and alignment of the robotic arm with the piece_of_cloth_1, it seems plausible that the robotic arm could reach the piece_of_cloth_1 without any significant obstruction.\n\nBased on this analysis, the piece_of_cloth_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 1.748676186252851e-05, 2.090557427436579e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_1. Given the proximity and orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the counter, and its end effector (the part that holds objects) appears to be close to the bowl_1. Given the proximity and orientation of the robotic arm, it seems that the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 1.6461579434690066e-05, 0.00014892002218402922, "The image shows a robotic arm (the agent) in a virtual household setting. The robotic arm appears to be positioned above a cabinet, and there is a bowl labeled as \"bowl_2\" visible near the bottom right of the image. However, the robotic arm itself does not appear to be directly interacting with the bowl. It's important to note that the robotic arm is not shown holding the bowl; rather, it seems to be positioned above it, possibly preparing to interact with it.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household setting. The robotic arm appears to be positioned above a cabinet, and there is a bowl labeled as \"bowl_2\" visible near the bottom right of the image. However, the robotic arm itself does not appear to be directly interacting with the bowl. It's important to note that the robotic arm is not shown holding the bowl; rather, it seems to be positioned above it, possibly preparing to interact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 1.7462971300119534e-05, 0.00016766827320680022, "To determine if the agent is holding the piece_of_cloth_1, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look at what the agent is interacting with: The robotic arm appears to be positioned above a cabinet, suggesting it might be interacting with something inside or near the cabinet.\n3. Check for the presence of the piece_of_cloth_1: There is no visible piece_of_cloth_1 in the image.\n4. Confirm the agent's interaction: Since the robotic arm is not visibly holding any object, and there is no piece_of_cloth_1 present, we can conclude that the agent is not holding the piece_of_cloth_1.\n\nTherefore, based on the visual information provided, the answer is \"No\".", true, "<explanation>\nTo determine if the agent is holding the piece_of_cloth_1, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look at what the agent is interacting with: The robotic arm appears to be positioned above a cabinet, suggesting it might be interacting with something inside or near the cabinet.\n3. Check for the presence of the piece_of_cloth_1: There is no visible piece_of_cloth_1 in the image.\n4. Confirm the agent's interaction: Since the robotic arm is not visibly holding any object, and there is no piece_of_cloth_1 present, we can conclude that the agent is not holding the piece_of_cloth_1.\n\nTherefore, based on the visual information provided, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["yes", 1.2991398762096651e-05, 4.534444451564923e-05, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located on the counter near the sink.\n3. Check if the agent is interacting with the bowl_1: The red bounding box around the bowl_1 suggests that the agent is interacting with it.\n\nSince the red bounding box indicates interaction and the agent's position relative to the bowl_1, it appears that the agent is indeed holding the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located on the counter near the sink.\n3. Check if the agent is interacting with the bowl_1: The red bounding box around the bowl_1 suggests that the agent is interacting with it.\n\nSince the red bounding box indicates interaction and the agent's position relative to the bowl_1, it appears that the agent is indeed holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop bowl_1,bowl_2": ["no", 5.010469067201484e-06, 7.297384581761435e-05, "To determine if the bowl_1 is on top of the bowl_2, I'll follow these steps:\n\n1. Identify the location of bowl_1.\n2. Identify the location of bowl_2.\n3. Check if bowl_1 is positioned above bowl_2.\n\nFrom the image, I can see that bowl_1 is located on the countertop, and bowl_2 is also on the countertop. However, bowl_1 is not directly on top of bowl_2; they are side by side. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the bowl_1 is on top of the bowl_2, I'll follow these steps:\n\n1. Identify the location of bowl_1.\n2. Identify the location of bowl_2.\n3. Check if bowl_1 is positioned above bowl_2.\n\nFrom the image, I can see that bowl_1 is located on the countertop, and bowl_2 is also on the countertop. However, bowl_1 is not directly on top of bowl_2; they are side by side. Therefore, the answer is \"No\".\n\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["yes", 1.3785052033199463e-05, 4.5334181777434424e-05, "To determine if the bowl_1 is on top of the cabinet_1, I'll follow these steps:\n\n1. Identify the bowl_1: It's located near the center of the image, slightly to the left.\n2. Identify the cabinet_1: It's a large piece of furniture with a flat surface at the top, located towards the bottom right of the image.\n3. Check the spatial relationship: The bowl_1 appears to be resting on the flat surface of the cabinet_1.\n\nBased on this analysis, the bowl_1 is indeed on top of the cabinet_1.", false, "<explanation>\nTo determine if the bowl_1 is on top of the cabinet_1, I'll follow these steps:\n\n1. Identify the bowl_1: It's located near the center of the image, slightly to the left.\n2. Identify the cabinet_1: It's a large piece of furniture with a flat surface at the top, located towards the bottom right of the image.\n3. Check the spatial relationship: The bowl_1 appears to be resting on the flat surface of the cabinet_1.\n\nBased on this analysis, the bowl_1 is indeed on top of the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["yes", 5.992229489493184e-06, 5.7533554354449734e-05, "To determine if the bowl_1 is on top of the piece_of_cloth_1, I'll follow these steps:\n\n1. Identify the bowl_1: It's located on the countertop near the sink.\n2. Identify the piece_of_cloth_1: It's on the counter next to the bowl_1.\n3. Check the spatial relationship: The bowl_1 is positioned above the piece_of_cloth_1, indicating it is on top of it.\n\nSince the bowl_1 is indeed placed on top of the piece_of_cloth_1, the answer is affirmative.", false, "<explanation>\nTo determine if the bowl_1 is on top of the piece_of_cloth_1, I'll follow these steps:\n\n1. Identify the bowl_1: It's located on the countertop near the sink.\n2. Identify the piece_of_cloth_1: It's on the counter next to the bowl_1.\n3. Check the spatial relationship: The bowl_1 is positioned above the piece_of_cloth_1, indicating it is on top of it.\n\nSince the bowl_1 is indeed placed on top of the piece_of_cloth_1, the answer is affirmative.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,sink_1": ["no", 1.0231915439362638e-05, 8.217448339564726e-05, "To determine if the bowl_1 is on top of the sink_1, I'll follow these steps:\n\n1. Identify the sink_1: It's located on the left side of the image, under the countertop.\n2. Identify the bowl_1: It's located on the countertop, to the right of the sink_1.\n3. Check the spatial relationship: The bowl_1 is positioned above the sink_1, not directly on top of it.\n\nSince the bowl_1 is not directly on top of the sink_1, the answer is \"No\".", true, "<explanation>\nTo determine if the bowl_1 is on top of the sink_1, I'll follow these steps:\n\n1. Identify the sink_1: It's located on the left side of the image, under the countertop.\n2. Identify the bowl_1: It's located on the countertop, to the right of the sink_1.\n3. Check the spatial relationship: The bowl_1 is positioned above the sink_1, not directly on top of it.\n\nSince the bowl_1 is not directly on top of the sink_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["yes", 9.647245860833209e-06, 2.355949800403323e-05, "To determine if the bowl_1 is next to the bowl_2, I'll first locate both bowls in the image. Bowl_1 appears to be on the countertop near the left side of the image, while bowl_2 is on the right side of the countertop. They are positioned close to each other, suggesting they are next to each other.", false, "<explanation>\nTo determine if the bowl_1 is next to the bowl_2, I'll first locate both bowls in the image. Bowl_1 appears to be on the countertop near the left side of the image, while bowl_2 is on the right side of the countertop. They are positioned close to each other, suggesting they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,cabinet_1": ["yes", 1.0866783668461721e-05, 1.5531250028288923e-05, "To determine if the bowl_1 is next to the cabinet_1, I'll follow these steps:\n\n1. Identify the location of the cabinet_1.\n2. Identify the location of the bowl_1.\n3. Check if the bowl_1 is positioned close to the cabinet_1.\n\nFrom the image:\n- The cabinet_1 appears to be a wooden structure located near the center-left of the image.\n- The bowl_1 is visible on the countertop to the right of the cabinet_1.\n\nThe bowl_1 is indeed positioned close to the cabinet_1, as it's on the same surface and relatively nearby.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the bowl_1 is next to the cabinet_1, I'll follow these steps:\n\n1. Identify the location of the cabinet_1.\n2. Identify the location of the bowl_1.\n3. Check if the bowl_1 is positioned close to the cabinet_1.\n\nFrom the image:\n- The cabinet_1 appears to be a wooden structure located near the center-left of the image.\n- The bowl_1 is visible on the countertop to the right of the cabinet_1.\n\nThe bowl_1 is indeed positioned close to the cabinet_1, as it's on the same surface and relatively nearby.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,piece_of_cloth_1": ["yes", 9.645561476645526e-06, 1.4631310477852821e-05, "To determine if the bowl_1 is next to the piece_of_cloth_1, I'll check their relative positions in the image. The bowl_1 appears to be placed on a surface, likely a countertop, while the piece_of_cloth_1 is also on a surface, possibly a cabinet or shelf. They are positioned close to each other, suggesting they could be considered next to each other.", false, "<explanation>\nTo determine if the bowl_1 is next to the piece_of_cloth_1, I'll check their relative positions in the image. The bowl_1 appears to be placed on a surface, likely a countertop, while the piece_of_cloth_1 is also on a surface, possibly a cabinet or shelf. They are positioned close to each other, suggesting they could be considered next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,sink_1": ["no", 9.645824320614338e-06, 1.7492351616965607e-05, "To determine if the bowl_1 is next to the sink_1, I'll first locate both the bowl_1 and the sink_1 in the image. The bowl_1 appears to be on a countertop near the left side of the image, while the sink_1 is located further back, closer to the center of the image. They are not directly adjacent to each other; instead, they are separated by some distance and other objects.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the bowl_1 is next to the sink_1, I'll first locate both the bowl_1 and the sink_1 in the image. The bowl_1 appears to be on a countertop near the left side of the image, while the sink_1 is located further back, closer to the center of the image. They are not directly adjacent to each other; instead, they are separated by some distance and other objects.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 5.988699740555603e-06, 5.104623414808884e-05, "To determine if the bowl_1 is inside the cabinet_1, I'll follow these steps:\n\n1. Identify the cabinet_1: It's located on the right side of the image, with a red bounding box around it.\n2. Look for the bowl_1: It's visible on the countertop in front of the cabinet_1.\n3. Check if the bowl_1 is inside the cabinet_1: The bowl_1 is not inside the cabinet_1; it's placed on the countertop outside the cabinet.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the bowl_1 is inside the cabinet_1, I'll follow these steps:\n\n1. Identify the cabinet_1: It's located on the right side of the image, with a red bounding box around it.\n2. Look for the bowl_1: It's visible on the countertop in front of the cabinet_1.\n3. Check if the bowl_1 is inside the cabinet_1: The bowl_1 is not inside the cabinet_1; it's placed on the countertop outside the cabinet.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 1.2241065633133985e-05, 4.534590698312968e-05, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is described as a robotic arm.\n2. Look for the robotic arm in the image: The robotic arm is visible on the right side of the image.\n3. Check if the robotic arm is interacting with any object: The robotic arm appears to be positioned near the bowl_1.\n4. Confirm if the robotic arm is holding the bowl_1: The red bounding box around the robotic arm suggests it is interacting with the bowl_1.\n\nBased on this reasoning, the answer is \"Yes\".", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is described as a robotic arm.\n2. Look for the robotic arm in the image: The robotic arm is visible on the right side of the image.\n3. Check if the robotic arm is interacting with any object: The robotic arm appears to be positioned near the bowl_1.\n4. Confirm if the robotic arm is holding the bowl_1: The red bounding box around the robotic arm suggests it is interacting with the bowl_1.\n\nBased on this reasoning, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 1.2975114259461407e-05, 2.9855447792215273e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (the agent). The sink appears to be located at a height and distance that would allow the robotic arm to reach it without any obstructions. The robotic arm is positioned in such a way that it could potentially extend towards the sink.\n\nTherefore, based on the visual information provided, the sink_1 seems to be within the reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (the agent). The sink appears to be located at a height and distance that would allow the robotic arm to reach it without any obstructions. The robotic arm is positioned in such a way that it could potentially extend towards the sink.\n\nTherefore, based on the visual information provided, the sink_1 seems to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 1.2241065633133985e-05, 4.534590698312968e-05, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is described as a robotic arm.\n2. Look for the robotic arm in the image: The robotic arm is visible on the right side of the image.\n3. Check if the robotic arm is interacting with any object: The robotic arm appears to be positioned near the bowl_1.\n4. Confirm if the robotic arm is holding the bowl_1: The red bounding box around the robotic arm suggests it is interacting with the bowl_1.\n\nBased on this reasoning, the answer is \"Yes\".", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is described as a robotic arm.\n2. Look for the robotic arm in the image: The robotic arm is visible on the right side of the image.\n3. Check if the robotic arm is interacting with any object: The robotic arm appears to be positioned near the bowl_1.\n4. Confirm if the robotic arm is holding the bowl_1: The red bounding box around the robotic arm suggests it is interacting with the bowl_1.\n\nBased on this reasoning, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 1.2975114259461407e-05, 2.9855447792215273e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (the agent). The sink appears to be located at a height and distance that would allow the robotic arm to reach it without any obstructions. The robotic arm is positioned in such a way that it could potentially extend towards the sink.\n\nTherefore, based on the visual information provided, the sink_1 seems to be within the reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (the agent). The sink appears to be located at a height and distance that would allow the robotic arm to reach it without any obstructions. The robotic arm is positioned in such a way that it could potentially extend towards the sink.\n\nTherefore, based on the visual information provided, the sink_1 seems to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "yes"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.8, "yes_correct": 8, "yes_total": 10, "no_accuracy": 0.2692307692307692, "no_correct": 7, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 4, "no_total": 12}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2, "no_correct": 2, "no_total": 10}}}, "step": 3, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "yes"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.8, "yes_correct": 8, "yes_total": 10, "no_accuracy": 0.2692307692307692, "no_correct": 7, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 4, "no_total": 12}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2, "no_correct": 2, "no_total": 10}}}, "step": 4, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 6.7425230554363225e-06, 4.267754411557689e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact dimensions of the cabinet, we cannot definitively say whether the arm can reach the cabinet.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact dimensions of the cabinet, we cannot definitively say whether the arm can reach the cabinet.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.15612532076193e-06, 4.021175118396059e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact dimensions of the cabinet, we cannot definitively say whether the arm can reach the cabinet.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet as it is positioned above it.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach the cabinet. However, without specific information about the arm's range or the exact dimensions of the cabinet, we cannot definitively say whether the arm can reach the cabinet.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet as it is positioned above it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 2.1475811990967486e-06, 0.00021011945500504225, "To determine if the cabinet_1 is open, I need to look at the image and identify any cabinet labeled as cabinet_1. If the cabinet appears to have its door(s) open, then it would be considered open. However, in this image, the cabinet does not appear to have its doors open; they seem to be closed. Therefore, based on the visual information provided, the cabinet_1 is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look at the image and identify any cabinet labeled as cabinet_1. If the cabinet appears to have its door(s) open, then it would be considered open. However, in this image, the cabinet does not appear to have its doors open; they seem to be closed. Therefore, based on the visual information provided, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 1.2989820788789075e-05, 1.1531919881235808e-05, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to have a door that is slightly ajar, indicating that it is not fully closed. This suggests that the cabinet_1 is indeed open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to have a door that is slightly ajar, indicating that it is not fully closed. This suggests that the cabinet_1 is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["no", 2.4996641514007933e-05, 1.748947033775039e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the bowl_1, suggesting that it could potentially pick up the bowl_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the bowl_1, suggesting that it could potentially pick up the bowl_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_2": ["no", 2.218779263785109e-05, 1.748681279423181e-05, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm appears to be positioned above the bowl_2, suggesting that it could potentially pick up the bowl_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm appears to be positioned above the bowl_2, suggesting that it could potentially pick up the bowl_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["no", 1.0230658517684788e-05, 4.5308024709811434e-05, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the piece_of_cloth_1. The robotic arm appears to be positioned above the piece_of_cloth_1, suggesting that it could potentially pick up the piece_of_cloth_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the piece_of_cloth_1. The robotic arm appears to be positioned above the piece_of_cloth_1, suggesting that it could potentially pick up the piece_of_cloth_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 2.652596049301792e-05, 1.8559476302471012e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the bowl_1, suggesting that it could potentially pick up the bowl_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm appears to be positioned above the bowl_1, suggesting that it could potentially pick up the bowl_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.7480999304098077e-05, 2.3540760594187304e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is shown in the image, and its end effector (the part that holds objects) appears to be positioned near the bowl_1. Given the proximity and orientation of the robotic arm towards the bowl_1, it seems that the bowl_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is shown in the image, and its end effector (the part that holds objects) appears to be positioned near the bowl_1. Given the proximity and orientation of the robotic arm towards the bowl_1, it seems that the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.7475755157647654e-05, 2.9860266295145266e-05, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is shown in the image, and its end effector (the part that holds objects) appears to be positioned near the bowl_2. Given the proximity and orientation of the robotic arm towards the bowl_2, it seems that the bowl_2 is within the reach of the agent.", false, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is shown in the image, and its end effector (the part that holds objects) appears to be positioned near the bowl_2. Given the proximity and orientation of the robotic arm towards the bowl_2, it seems that the bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 1.2975190657016356e-05, 3.3630061807343736e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the cabinet_1. The robotic arm is shown in the image, and its position appears to be above and slightly to the right of the cabinet_1. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the cabinet_1.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the cabinet_1. The robotic arm is shown in the image, and its position appears to be above and slightly to the right of the cabinet_1. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the cabinet_1.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.2981432519154623e-05, 3.7899899325566366e-05, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the piece_of_cloth_1. The robotic arm is shown in the image, and its end effector appears to be positioned near the piece_of_cloth_1. Given the proximity and orientation of the robotic arm towards the piece_of_cloth_1, it seems likely that the piece_of_cloth_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the piece_of_cloth_1. The robotic arm is shown in the image, and its end effector appears to be positioned near the piece_of_cloth_1. Given the proximity and orientation of the robotic arm towards the piece_of_cloth_1, it seems likely that the piece_of_cloth_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["no", 1.0841708899533842e-05, 0.00014877704961691052, "To determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to identify both the agent (the robotic arm) and the bowl_1 in the image. The robotic arm is visible in the image, and it appears to be positioned near the cabinet. However, there is no bowl_1 visible in the image. Since the bowl_1 is not present, the agent cannot be holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["no", 1.7459740774938837e-05, 4.525345138972625e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the sink relative to the robotic arm (agent). The sink appears to be located at a lower level than the robotic arm, and the arm seems to have a range of motion that allows it to reach down to the sink. However, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively say whether it can reach the sink.\n\nSince the image does not provide enough detail about the robotic arm's reach, we cannot conclusively state that the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.3103448275862069, "yes_accuracy": 0.38461538461538464, "yes_correct": 5, "yes_total": 13, "no_accuracy": 0.25, "no_correct": 4, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.1111111111111111, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 2, "actions": ["navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 3, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 4, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 5, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 6, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 7, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 8, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 9, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 10, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 11, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 12, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 13, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 14, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 15, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 16, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 17, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 18, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 19, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 20, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 21, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 22, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 23, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 24, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 25, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 26, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 27, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 28, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 29, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["yes", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 30, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.15951591701014e-06, 1.5521898603765294e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.597766852995846e-06, 1.5520166925853118e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 4.960653768648626e-06, 0.00014758350152987987, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In this image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door. Based on these observations, it seems that the cabinet_1 is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In this image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door. Based on these observations, it seems that the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.597766852995846e-06, 1.5520166925853118e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 4.960653768648626e-06, 0.00014758350152987987, "To determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In this image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door. Based on these observations, it seems that the cabinet_1 is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look for any indication that the cabinet door is not closed. In this image, the cabinet appears to have a closed door, as there are no visible gaps or openings where one might expect to see the interior of the cabinet. Additionally, the robotic arm is positioned in front of the cabinet, suggesting that it is not currently interacting with the cabinet door. Based on these observations, it seems that the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.9676366719068028e-05, 4.527482815319672e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The robotic arm appears to be positioned near the cabinet_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can reach the cabinet_1.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned close to it.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The robotic arm appears to be positioned near the cabinet_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can reach the cabinet_1.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the cabinet_1 as it is positioned close to it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 2.215744461864233e-05, 9.245714318240061e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can reach the cabinet_1.\n\nSince the question asks if the cabinet_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the cabinet_1, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The robotic arm appears to be positioned above the cabinet_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can reach the cabinet_1.\n\nSince the question asks if the cabinet_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the cabinet_1, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 8.010273631953169e-06, 0.0002684406063053757, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. Upon inspection, the cabinet appears to have its door closed, as there's no visible gap or opening where one would expect to see the interior of the cabinet. Therefore, based on this observation, the cabinet_1 is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet labeled as 'cabinet_1'. Upon inspection, the cabinet appears to have its door closed, as there's no visible gap or opening where one would expect to see the interior of the cabinet. Therefore, based on this observation, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 4.973323029844323e-06, 0.00013135423068888485, "To determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to be a closed structure with no visible gap or opening. There are no signs of the cabinet being opened, such as a door being pulled out or a gap where the door would be. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.", false, "<explanation>\nTo determine if the cabinet_1 is open, I'll look at the image and identify the cabinet_1. The cabinet_1 appears to be a closed structure with no visible gap or opening. There are no signs of the cabinet being opened, such as a door being pulled out or a gap where the door would be. Therefore, based on the visual information provided, the cabinet_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 1.2235915164637845e-05, 2.218936788267456e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned near the cabinet_2, and the red bounding box around the bowl_1 indicates its location. The robotic arm appears to be able to extend towards the bowl_1, suggesting that the bowl_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned near the cabinet_2, and the red bounding box around the bowl_1 indicates its location. The robotic arm appears to be able to extend towards the bowl_1, suggesting that the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.0223481694993097e-05, 4.019470725324936e-05, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned near the cabinet_1, and the red bounding box around the bowl_2 indicates its location. The robotic arm appears to be able to extend towards the bowl_2, suggesting that the bowl_2 is within the reach of the agent.", true, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned near the cabinet_1, and the red bounding box around the bowl_2 indicates its location. The robotic arm appears to be able to extend towards the bowl_2, suggesting that the bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 5.2926257012586575e-06, 0.0001483610103605315, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The image shows the robotic arm positioned near a cabinet, and there is no visible piece_of_cloth_1 in the immediate vicinity of the arm. Additionally, the robotic arm appears to be in a position where it could potentially reach into the cabinet, but there's no indication that it is currently interacting with any object, let alone a piece_of_cloth_1.\n\nSince the piece_of_cloth_1 is not visible and there's no clear evidence of it being in the reach of the robotic arm, we cannot conclude that the piece_of_cloth_1 is in reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The image shows the robotic arm positioned near a cabinet, and there is no visible piece_of_cloth_1 in the immediate vicinity of the arm. Additionally, the robotic arm appears to be in a position where it could potentially reach into the cabinet, but there's no indication that it is currently interacting with any object, let alone a piece_of_cloth_1.\n\nSince the piece_of_cloth_1 is not visible and there's no clear evidence of it being in the reach of the robotic arm, we cannot conclude that the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sink_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable sink_1": ["no", 1.222524224431254e-05, 2.8130007194704376e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink. The robotic arm appears to be positioned near the sink, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it can reach the sink or not.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink. The robotic arm appears to be positioned near the sink, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it can reach the sink or not.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 9.072355169337243e-06, 7.286189793376252e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The cabinet appears to be located at a distance from the agent's current position, and the robotic arm is extended towards it. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the cabinet is within its reach without more information.\n\nSince the reach of the robotic arm is not explicitly mentioned, we cannot confirm that the cabinet_1 is definitely within the agent's reach.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The cabinet appears to be located at a distance from the agent's current position, and the robotic arm is extended towards it. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the cabinet is within its reach without more information.\n\nSince the reach of the robotic arm is not explicitly mentioned, we cannot confirm that the cabinet_1 is definitely within the agent's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 8.031279321585316e-06, 0.00016717780090402812, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the piece_of_cloth_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the piece_of_cloth_1 is within the reach of the robotic arm.\n\nFrom the image, the piece_of_cloth_1 appears to be located near the sink area, close to the edge of the counter. The robotic arm is positioned in such a way that its end effector (the part that can hold objects) is extended towards the sink area. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the piece_of_cloth_1.\n\nTherefore, based on the visual information provided, the answer is likely \"Yes\".", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the piece_of_cloth_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the piece_of_cloth_1 is within the reach of the robotic arm.\n\nFrom the image, the piece_of_cloth_1 appears to be located near the sink area, close to the edge of the counter. The robotic arm is positioned in such a way that its end effector (the part that can hold objects) is extended towards the sink area. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the piece_of_cloth_1.\n\nTherefore, based on the visual information provided, the answer is likely \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 1.0213687346549705e-05, 9.239841892849654e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The cabinet appears to be located at a distance from the agent's current position, and the robotic arm is extended towards it. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the cabinet is within its reach without more information.\n\nSince the reach of the robotic arm is not explicitly mentioned, we cannot confirm that the cabinet_1 is definitely in reach.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the cabinet and the robotic arm (agent). The cabinet appears to be located at a distance from the agent's current position, and the robotic arm is extended towards it. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the cabinet is within its reach without more information.\n\nSince the reach of the robotic arm is not explicitly mentioned, we cannot confirm that the cabinet_1 is definitely in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.746817542880308e-05, 3.7871166568947956e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned above the oven, extending towards the upper part of the image.\n2. The cabinet_1 is located to the right of the oven and appears to be at a similar height as the robotic arm.\n3. The robotic arm seems to have enough length to reach the cabinet_1, as it is positioned close to the cabinet's top edge.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned above the oven, extending towards the upper part of the image.\n2. The cabinet_1 is located to the right of the oven and appears to be at a similar height as the robotic arm.\n3. The robotic arm seems to have enough length to reach the cabinet_1, as it is positioned close to the cabinet's top edge.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 2.089776171487756e-05, 3.1699761166237295e-05, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the bowl_1, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_1. The red bounding box around the bowl_1 indicates its approximate location, and the robotic arm's position suggests it could potentially reach and interact with the bowl_1.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the bowl_1, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_1. The red bounding box around the bowl_1 indicates its approximate location, and the robotic arm's position suggests it could potentially reach and interact with the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.6477390090585686e-05, 1.7487980585428886e-05, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the bowl_2, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_2. The red bounding box around the bowl_2 indicates its approximate location, and the robotic arm's position suggests that it could potentially reach and interact with the bowl_2.", true, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the bowl_2, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_2. The red bounding box around the bowl_2 indicates its approximate location, and the robotic arm's position suggests that it could potentially reach and interact with the bowl_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.4610057405661792e-05, 8.20969435153529e-05, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The piece_of_cloth_1 appears to be located above the robotic arm, and the robotic arm seems to be positioned in such a way that it could potentially reach up to the piece_of_cloth_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether it can actually grasp the piece_of_cloth_1.\n\nSince the question asks if the piece_of_cloth_1 is in reach, and based on the visual information provided, it seems plausible that the robotic arm could reach the piece_of_cloth_1, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The piece_of_cloth_1 appears to be located above the robotic arm, and the robotic arm seems to be positioned in such a way that it could potentially reach up to the piece_of_cloth_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether it can actually grasp the piece_of_cloth_1.\n\nSince the question asks if the piece_of_cloth_1 is in reach, and based on the visual information provided, it seems plausible that the robotic arm could reach the piece_of_cloth_1, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.9673963834065944e-05, 3.7866138882236555e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned above the oven, extending towards the upper part of the image.\n2. **Cabinet Position**: The cabinet_1 is located to the right of the oven, at a lower level than the robotic arm's current position.\n3. **Reachability**: The robotic arm appears to be able to extend its arm horizontally and vertically to reach the cabinet_1. The arm's length and flexibility suggest it could potentially reach the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned above the oven, extending towards the upper part of the image.\n2. **Cabinet Position**: The cabinet_1 is located to the right of the oven, at a lower level than the robotic arm's current position.\n3. **Reachability**: The robotic arm appears to be able to extend its arm horizontally and vertically to reach the cabinet_1. The arm's length and flexibility suggest it could potentially reach the cabinet_1 without any obstructions.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 1.1477659427328035e-05, 0.00013174640480428934, "To determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet_1 appears to have its door closed, and no contents are visible inside. Therefore, the cabinet_1 is not open.", true, "<explanation>\nTo determine if the cabinet_1 is open, I'll look for any indication such as the door being ajar or the contents visible inside. Upon examining the image, the cabinet_1 appears to have its door closed, and no contents are visible inside. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding bowl_1": ["yes", 1.6463804058730602e-05, 0.000117383839096874, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look for the bowl_1: The bowl_1 is located in the upper left corner of the image, near the ceiling.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent (robotic arm) is indeed holding the bowl_1.", false, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look for the bowl_1: The bowl_1 is located in the upper left corner of the image, near the ceiling.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent (robotic arm) is indeed holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding bowl_2": ["yes", 1.8547334548202343e-05, 9.252404561266303e-05, "To determine if the agent is holding the bowl_2, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look for the bowl_2: The bowl_2 is located in the upper cabinet.\n3. Check if the agent is interacting with the bowl_2: The robotic arm appears to be positioned near the upper cabinet where the bowl_2 is located, suggesting it might be interacting with it.\n\nBased on this analysis, it seems the agent (robotic arm) is indeed holding the bowl_2.", false, "<explanation>\nTo determine if the agent is holding the bowl_2, I'll follow these steps:\n\n1. Identify the agent: The robotic arm is the agent.\n2. Look for the bowl_2: The bowl_2 is located in the upper cabinet.\n3. Check if the agent is interacting with the bowl_2: The robotic arm appears to be positioned near the upper cabinet where the bowl_2 is located, suggesting it might be interacting with it.\n\nBased on this analysis, it seems the agent (robotic arm) is indeed holding the bowl_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding piece_of_cloth_1": ["yes", 1.4567141079169232e-05, 0.0002389820001553744, "To determine if the agent is holding the piece_of_cloth_1, I need to look at the robotic arm and see if it is gripping any object. The robotic arm is visible in the image, and it appears to be holding a green object, which looks like a piece_of_cloth_1 based on its shape and color. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the agent is holding the piece_of_cloth_1, I need to look at the robotic arm and see if it is gripping any object. The robotic arm is visible in the image, and it appears to be holding a green object, which looks like a piece_of_cloth_1 based on its shape and color. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sink_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable sink_1": ["no", 1.0230813131784089e-05, 3.1701274565421045e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned close to the sink_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm appears to be positioned close to the sink_1, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.746878660924267e-05, 4.0195278415922076e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned near the oven, extending towards the upper part of the image.\n2. **Cabinet Position**: The cabinet_1 is located above the oven, slightly to the right.\n3. **Reachability**: The robotic arm appears to be extended upwards and to the right, suggesting it could potentially reach the cabinet_1 if it were to move in that direction.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 based on its current position and orientation.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned near the oven, extending towards the upper part of the image.\n2. **Cabinet Position**: The cabinet_1 is located above the oven, slightly to the right.\n3. **Reachability**: The robotic arm appears to be extended upwards and to the right, suggesting it could potentially reach the cabinet_1 if it were to move in that direction.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1 based on its current position and orientation.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 1.5528465155512094e-05, 9.64543050940847e-06, "To determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the bowl_1, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_1. The red bounding box around the robotic arm suggests that it has the capability to move towards the bowl_1.\n\nGiven this information, we can conclude that the bowl_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_1. The robotic arm is positioned above the bowl_1, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_1. The red bounding box around the robotic arm suggests that it has the capability to move towards the bowl_1.\n\nGiven this information, we can conclude that the bowl_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.3785664123133756e-05, 8.562897164665628e-06, "To determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the bowl_2, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_2. The red bounding box around the robotic arm suggests that it has the capability to move and interact with objects within its reach.\n\nGiven this information, we can conclude that the bowl_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the bowl_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the bowl_2. The robotic arm is positioned above the bowl_2, and its end effector (the part that holds objects) appears to be close enough to grasp the bowl_2. The red bounding box around the robotic arm suggests that it has the capability to move and interact with objects within its reach.\n\nGiven this information, we can conclude that the bowl_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.2990027244086377e-05, 1.3786714589514304e-05, "To determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The piece_of_cloth_1 appears to be located above the robotic arm, and the robotic arm seems to be positioned in such a way that it could potentially reach up to grab the piece_of_cloth_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether it can actually reach the piece_of_cloth_1.\n\nSince the question asks if the piece_of_cloth_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the piece_of_cloth_1, even though this cannot be confirmed with absolute certainty from the image alone.", true, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, we need to consider the position and orientation of both the piece_of_cloth_1 and the robotic arm (agent). The piece_of_cloth_1 appears to be located above the robotic arm, and the robotic arm seems to be positioned in such a way that it could potentially reach up to grab the piece_of_cloth_1. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively say whether it can actually reach the piece_of_cloth_1.\n\nSince the question asks if the piece_of_cloth_1 is in reach of the agent, and based on the visual information provided, it seems plausible that the robotic arm could reach the piece_of_cloth_1, even though this cannot be confirmed with absolute certainty from the image alone.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 1.852503373811487e-05, 4.801455361302942e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. The red bounding box around the robotic arm suggests that it has the capability to reach the sink_1.\n\nTherefore, based on the positioning and the bounding box, the sink_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. The red bounding box around the robotic arm suggests that it has the capability to reach the sink_1.\n\nTherefore, based on the positioning and the bounding box, the sink_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 2.0909228624077514e-05, 4.533140963758342e-05, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located in the red bounding box near the top right corner of the image.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent is indeed holding the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located in the red bounding box near the top right corner of the image.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent is indeed holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 1.852503373811487e-05, 4.801455361302942e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 2.0909228624077514e-05, 4.533140963758342e-05, "To determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located in the red bounding box near the top right corner of the image.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent is indeed holding the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the bowl_1: The bowl_1 is located in the red bounding box near the top right corner of the image.\n3. Check if the agent is interacting with the bowl_1: The robotic arm appears to be positioned close to the bowl_1, suggesting it might be holding it.\n\nBased on this analysis, it seems the agent is indeed holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 1.852503373811487e-05, 4.801455361302942e-05, "To determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the sink_1. The robotic arm is positioned above the sink_1, and its end effector (the part that holds objects) appears to be close enough to interact with the sink_1. Given the proximity and orientation of the robotic arm, it seems that the sink_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.23529411764705882, "yes_correct": 4, "yes_total": 17, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}}}, "step": 2, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "place-next-to(bowl_1, bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.675, "yes_accuracy": 0.631578947368421, "yes_correct": 12, "yes_total": 19, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}}}, "step": 5, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "yes"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "no"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5531914893617021, "yes_accuracy": 0.42105263157894735, "yes_correct": 8, "yes_total": 19, "no_accuracy": 0.6428571428571429, "no_correct": 18, "no_total": 28, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.4166666666666667, "no_correct": 5, "no_total": 12}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}}}, "step": 7, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "yes"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "no"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5531914893617021, "yes_accuracy": 0.42105263157894735, "yes_correct": 8, "yes_total": 19, "no_accuracy": 0.6428571428571429, "no_correct": 18, "no_total": 28, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.4166666666666667, "no_correct": 5, "no_total": 12}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}}}, "step": 8, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.379177047056146e-05, 8.071650881902315e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the countertop where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.85634708032012e-05, 1.7490750906290486e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.2955522834090516e-05, 8.20034256321378e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.856983726611361e-05, 1.0868020581256133e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's range.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's range.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.553446054458618e-05, 1.1535646081028972e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable orange_2": ["yes", 1.0238159120490309e-05, 1.2990483810426667e-05, "To determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["no", 1.5517502106376924e-05, 2.4982087779790163e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned above the table_1, suggesting that it could potentially interact with objects on the table. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the agent's reach without more information.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the table_1. The robotic arm appears to be positioned above the table_1, suggesting that it could potentially interact with objects on the table. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the agent's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.6487401808262803e-05, 1.0241070413030684e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.4636462765338365e-05, 1.0240725714538712e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.463657281419728e-05, 9.091435458685737e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.463505941501353e-05, 1.0239754374197219e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the apple_1 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.5532748875557445e-05, 1.2241788681421895e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.5532732504652813e-05, 1.0239805305900518e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description, so we cannot definitively say whether the apple_2 is within the robotic arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description, so we cannot definitively say whether the apple_2 is within the robotic arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.4635886145697441e-05, 1.0868379831663333e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.3788780961476732e-05, 9.090121238841675e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.553407491883263e-05, 7.165125680330675e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.2219432392157614e-05, 4.526576594798826e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.85676271939883e-05, 1.2240542673680466e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to the apple_1.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to the apple_1.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.7489592210040428e-05, 1.970069934031926e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_2.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_2.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 7.588059361296473e-06, 5.741958011640236e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm is capable of reaching the refrigerator based on its typical design and the positioning shown.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm is capable of reaching the refrigerator based on its typical design and the positioning shown.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 7.587181698909262e-06, 6.467125058406964e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n</explanation>\n<answer>\nNo\n</answer>", false], "open electric_refrigerator_1": ["no", 2.147583018086152e-06, 0.00018653686856850982, "To determine if the electric_refrigerator_1 is open, I'll look at the image and check the state of the refrigerator door. The image shows a closed refrigerator with no visible signs of being opened, such as a partially open door or a different angle that would suggest it's open. Since the door appears to be closed and there are no indicators of it being open, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and check the state of the refrigerator door. The image shows a closed refrigerator with no visible signs of being opened, such as a partially open door or a different angle that would suggest it's open. Since the door appears to be closed and there are no indicators of it being open, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.9702241843333468e-05, 2.2193058612174354e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.5529434676864184e-05, 1.9704215446836315e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.550236998416949e-06, 7.288008782779798e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm may have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm may have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 8.054043973970693e-06, 7.286114123417065e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of both the arm and the refrigerator, it's difficult to definitively state whether the refrigerator is within the arm's reach.\n\nSince the image does not provide clear details about the arm's range or the exact positioning relative to the refrigerator, we cannot conclusively determine if the refrigerator is within reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of both the arm and the refrigerator, it's difficult to definitively state whether the refrigerator is within the arm's reach.\n\nSince the image does not provide clear details about the arm's range or the exact positioning relative to the refrigerator, we cannot conclusively determine if the refrigerator is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "open electric_refrigerator_1": ["no", 1.912179868668318e-06, 0.00018708758580032736, "To determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. Upon examining the image, the refrigerator door appears to be closed as there are no visible signs of it being open, such as a gap or a different angle of the door.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. Upon examining the image, the refrigerator door appears to be closed as there are no visible signs of it being open, such as a gap or a different angle of the door.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.5533365512965247e-05, 6.750774900865508e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["yes", 1.4634304534411058e-05, 8.564744348404929e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2 from the counter.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2 from the counter.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.2995084944122937e-05, 5.994017556076869e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach or not.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach or not.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.0871458471228834e-05, 5.99486429564422e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.2244622666912619e-05, 6.361884516081773e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.2244614481460303e-05, 6.752065019099973e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0242956705042161e-05, 6.75257115290151e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the arm is capable of reaching the apple_1.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 9.651388609199785e-06, 5.994912953610765e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. The arm's end effector (the part that holds objects) is extended towards the apple_2, suggesting that the arm is capable of reaching the apple_2.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_2 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. The arm's end effector (the part that holds objects) is extended towards the apple_2, suggesting that the arm is capable of reaching the apple_2.\n\nTherefore, based on the positioning and orientation of the robotic arm, it can be concluded that the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.1513732715684455e-05, 5.099031841382384e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 5.995188075758051e-06, 2.605496320029488e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 5.995281753712334e-06, 2.4549740373913664e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 5.995347692078212e-06, 2.605568170110928e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.024185348796891e-05, 1.08700041892007e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The red bounding box around the apple_1 suggests that it is within the operational range of the robotic arm.\n\nTherefore, based on the positioning of the robotic arm and the bounding box around the apple_1, it appears that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The red bounding box around the apple_1 suggests that it is within the operational range of the robotic arm.\n\nTherefore, based on the positioning of the robotic arm and the bounding box around the apple_1, it appears that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 9.095244422496762e-06, 4.195204837742494e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially pick up the apple_2. The red bounding box around the apple_2 suggests that it is within the operational range of the robotic arm.\n\nTherefore, based on the positioning of the robotic arm and the bounding box around the apple_2, it appears that the apple_2 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially pick up the apple_2. The red bounding box around the apple_2 suggests that it is within the operational range of the robotic arm.\n\nTherefore, based on the positioning of the robotic arm and the bounding box around the apple_2, it appears that the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 9.093152584682684e-06, 8.56768929224927e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.7495100109954365e-05, 8.069660907494836e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.3790338016406167e-05, 8.070811418292578e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially pick up the apple_2. Given this positioning, it appears that the robotic arm could reach the apple_2.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially pick up the apple_2. Given this positioning, it appears that the robotic arm could reach the apple_2.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 8.565189091314096e-06, 7.164473117882153e-06, "To determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.2987473382963799e-05, 1.0235787158308085e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of the robotic arm relative to the table_1.\n\n1. The robotic arm is extended towards the table_1.\n2. The arm appears to be positioned above the table_1, suggesting it could potentially interact with objects on the table.\n3. The arm's end effector (the part that holds objects) is close to the surface of the table_1, indicating that it is within the range where it can pick up items from the table.\n\nGiven these observations, the robotic arm is indeed in a position where it can interact with the table_1.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of the robotic arm relative to the table_1.\n\n1. The robotic arm is extended towards the table_1.\n2. The arm appears to be positioned above the table_1, suggesting it could potentially interact with objects on the table.\n3. The arm's end effector (the part that holds objects) is close to the surface of the table_1, indicating that it is within the range where it can pick up items from the table.\n\nGiven these observations, the robotic arm is indeed in a position where it can interact with the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 7.148362783482298e-06, 5.7409928558627144e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes.\"", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 7.588543667225167e-06, 5.74232435610611e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm may have the capability to interact with the refrigerator based on its proximity and typical design features.\n\nTherefore, the answer is \"Yes.\"", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm relative to the refrigerator, we must assume that the arm may have the capability to interact with the refrigerator based on its proximity and typical design features.\n\nTherefore, the answer is \"Yes.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 1.9129452084598597e-06, 0.00016615648928564042, "To determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. Upon examining the image, the refrigerator door appears to be closed as there are no visible signs of it being open, such as the door being pulled back or the interior light being on.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. Upon examining the image, the refrigerator door appears to be closed as there are no visible signs of it being open, such as the door being pulled back or the interior light being on.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 1.647485260036774e-05, 1.4625798030465376e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is currently open, as indicated by the visible interior shelves and the position of the robotic arm inside. The door is not closed, allowing us to see the contents inside.\n\nTherefore, based on this observation, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is currently open, as indicated by the visible interior shelves and the position of the robotic arm inside. The door is not closed, allowing us to see the contents inside.\n\nTherefore, based on this observation, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.2244436220498756e-05, 6.7519672484195326e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially interact with the apple_1. The red bounding box around the apple_1 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_1 is indeed within the range where the agent could reach it.\n\nTherefore, based on the positioning and orientation of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially interact with the apple_1. The red bounding box around the apple_1 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_1 is indeed within the range where the agent could reach it.\n\nTherefore, based on the positioning and orientation of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.0872225175262429e-05, 5.9952867559331935e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially interact with the apple_2. The red bounding box around the apple_2 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_2 is indeed within the range where the agent can reach it.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm is extended towards the apple_2, indicating that it is positioned to potentially interact with the apple_2. The red bounding box around the apple_2 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_2 is indeed within the range where the agent can reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.2244436220498756e-05, 6.7519672484195326e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the red bounding box around the apple_1, it seems to be within the range of the robotic arm's movement.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the red bounding box around the apple_1, it seems to be within the range of the robotic arm's movement.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 1.461898227717029e-05, 0.00010423071216791868, "The image shows a robotic arm interacting with various objects on a counter. The robotic arm appears to be positioned near an apple labeled as \"apple_2\". However, the robotic arm itself does not seem to be directly holding the apple; instead, it seems to be in close proximity to it, possibly preparing to pick it up. The robotic arm's end effector (the part that interacts with objects) is not visibly gripping the apple.\n\nTherefore, based on the current observation, the robotic arm is not actively holding the apple_2.", true, "<explanation>\nThe image shows a robotic arm interacting with various objects on a counter. The robotic arm appears to be positioned near an apple labeled as \"apple_2\". However, the robotic arm itself does not seem to be directly holding the apple; instead, it seems to be in close proximity to it, possibly preparing to pick it up. The robotic arm's end effector (the part that interacts with objects) is not visibly gripping the apple.\n\nTherefore, based on the current observation, the robotic arm is not actively holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 2.8152895538369194e-05, 7.296868716366589e-05, "The image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several items, including an apple labeled as \"apple_1,\" are present. The red lines indicate the agent's interaction with these objects. Since the red line is pointing towards the apple_1, it suggests that the agent is likely holding or interacting with this apple.", true, "<explanation>\nThe image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several items, including an apple labeled as \"apple_1,\" are present. The red lines indicate the agent's interaction with these objects. Since the red line is pointing towards the apple_1, it suggests that the agent is likely holding or interacting with this apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["yes", 6.720804321957985e-06, 0.00030330303707160056, "I will analyze the image to determine if the apple_1 is on top of the apple_2. Upon examining the image, I see two apples labeled as apple_1 and apple_2. Apple_1 appears to be positioned above apple_2, suggesting that apple_1 is indeed on top of apple_2.", false, "<explanation>\nI will analyze the image to determine if the apple_1 is on top of the apple_2. Upon examining the image, I see two apples labeled as apple_1 and apple_2. Apple_1 appears to be positioned above apple_2, suggesting that apple_1 is indeed on top of apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto apple_1,apple_2": ["no", 2.215194581367541e-05, 0.00014881257084198296, "I will analyze the positions of the apple_1 and apple_2 in the image. The apple_1 appears to be located on the left side of the image, while the apple_2 is positioned further to the right. They are not adjacent to each other; instead, they are separated by some distance. Therefore, the answer is \"No\".", true, "<explanation>\nI will analyze the positions of the apple_1 and apple_2 in the image. The apple_1 appears to be located on the left side of the image, while the apple_2 is positioned further to the right. They are not adjacent to each other; instead, they are separated by some distance. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 1.3766714801022317e-05, 0.00016771277296356857, "The image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several objects, including an apple labeled as \"apple_2,\" are present. The red lines indicate the agent's interaction points, suggesting that it is currently holding or attempting to interact with one of these objects. Given the proximity of the red line to the apple_2 object, it is reasonable to infer that the agent is holding this apple.", true, "<explanation>\nThe image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several objects, including an apple labeled as \"apple_2,\" are present. The red lines indicate the agent's interaction points, suggesting that it is currently holding or attempting to interact with one of these objects. Given the proximity of the red line to the apple_2 object, it is reasonable to infer that the agent is holding this apple.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 2.50104239967186e-05, 1.0869478501263075e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned in front of the apple_1, and its end effector (the part that holds objects) appears to be close enough to grasp the apple_1. The red lines indicate the range of motion of the robotic arm, and since the apple_1 is within this range, it can be considered in reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned in front of the apple_1, and its end effector (the part that holds objects) appears to be close enough to grasp the apple_1. The red lines indicate the range of motion of the robotic arm, and since the apple_1 is within this range, it can be considered in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 1.3766714801022317e-05, 0.00016771277296356857, "The image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several objects, including an apple labeled as \"apple_2,\" are present. The red lines indicate the agent's interaction points, suggesting that it is currently holding or attempting to interact with one of these objects. Given the proximity of the red line to the apple_2 object, it is reasonable to infer that the agent is holding this apple.", true, "<explanation>\nThe image shows a robotic arm (agent) interacting with various objects in a virtual household setting. The agent appears to be positioned near a table where several objects, including an apple labeled as \"apple_2,\" are present. The red lines indicate the agent's interaction points, suggesting that it is currently holding or attempting to interact with one of these objects. Given the proximity of the red line to the apple_2 object, it is reasonable to infer that the agent is holding this apple.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 2.50104239967186e-05, 1.0869478501263075e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned in front of the apple_1, and its end effector (the part that holds objects) appears to be close enough to grasp the apple_1. The red lines indicate the range of motion of the robotic arm, and since the apple_1 is within this range, it can be considered in reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is positioned in front of the apple_1, and its end effector (the part that holds objects) appears to be close enough to grasp the apple_1. The red lines indicate the range of motion of the robotic arm, and since the apple_1 is within this range, it can be considered in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["yes", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["yes", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["yes", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,carrot_1": ["yes", "no"], "ontop orange_2,carrot_2": ["yes", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,chair_1": ["no", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5659722222222222, "yes_accuracy": 0.6333333333333333, "yes_correct": 19, "yes_total": 30, "no_accuracy": 0.5581395348837209, "no_correct": 144, "no_total": 258, "predicates": {"reachable": {"accuracy": 0.46153846153846156, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "holding": {"accuracy": 0.6363636363636364, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6363636363636364, "no_correct": 7, "no_total": 11}, "ontop": {"accuracy": 0.6893939393939394, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.6693548387096774, "no_correct": 83, "no_total": 124}, "nextto": {"accuracy": 0.44696969696969696, "yes_accuracy": 0.5714285714285714, "yes_correct": 8, "yes_total": 14, "no_accuracy": 0.4322033898305085, "no_correct": 51, "no_total": 118}}}, "step": 3, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4876543209876543, "yes_accuracy": 0.75, "yes_correct": 21, "yes_total": 28, "no_accuracy": 0.43283582089552236, "no_correct": 58, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6388888888888888, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.6515151515151515, "no_correct": 43, "no_total": 66}, "nextto": {"accuracy": 0.2916666666666667, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.15517241379310345, "no_correct": 9, "no_total": 58}}}, "step": 4, "actions": ["navigate-to(apple_1)", "place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["yes", "no"], "ontop flour_1,apple_2": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5246913580246914, "yes_accuracy": 0.6923076923076923, "yes_correct": 18, "yes_total": 26, "no_accuracy": 0.49264705882352944, "no_correct": 67, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.625, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.6212121212121212, "no_correct": 41, "no_total": 66}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.75, "yes_correct": 9, "yes_total": 12, "no_accuracy": 0.3, "no_correct": 18, "no_total": 60}}}, "step": 5, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["yes", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6234567901234568, "yes_accuracy": 0.6785714285714286, "yes_correct": 19, "yes_total": 28, "no_accuracy": 0.6119402985074627, "no_correct": 82, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.6805555555555556, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.6666666666666666, "no_correct": 44, "no_total": 66}, "nextto": {"accuracy": 0.5277777777777778, "yes_accuracy": 0.5714285714285714, "yes_correct": 8, "yes_total": 14, "no_accuracy": 0.5172413793103449, "no_correct": 30, "no_total": 58}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6358024691358025, "yes_accuracy": 0.8928571428571429, "yes_correct": 25, "yes_total": 28, "no_accuracy": 0.582089552238806, "no_correct": 78, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "ontop": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.7121212121212122, "no_correct": 47, "no_total": 66}, "nextto": {"accuracy": 0.5277777777777778, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.4482758620689655, "no_correct": 26, "no_total": 58}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5493827160493827, "yes_accuracy": 0.8928571428571429, "yes_correct": 25, "yes_total": 28, "no_accuracy": 0.47761194029850745, "no_correct": 64, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "ontop": {"accuracy": 0.6944444444444444, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6666666666666666, "no_correct": 44, "no_total": 66}, "nextto": {"accuracy": 0.3611111111111111, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.25862068965517243, "no_correct": 15, "no_total": 58}}}, "step": 11, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["yes", "no"], "ontop flour_1,apple_2": ["yes", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["yes", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6234567901234568, "yes_accuracy": 0.5357142857142857, "yes_correct": 15, "yes_total": 28, "no_accuracy": 0.6417910447761194, "no_correct": 86, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.7083333333333334, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.7121212121212122, "no_correct": 47, "no_total": 66}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.35714285714285715, "yes_correct": 5, "yes_total": 14, "no_accuracy": 0.5344827586206896, "no_correct": 31, "no_total": 58}}}, "step": 14, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5925925925925926, "yes_accuracy": 0.8214285714285714, "yes_correct": 23, "yes_total": 28, "no_accuracy": 0.5447761194029851, "no_correct": 73, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.7083333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.696969696969697, "no_correct": 46, "no_total": 66}, "nextto": {"accuracy": 0.4583333333333333, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.3620689655172414, "no_correct": 21, "no_total": 58}}}, "step": 15, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.71875, "yes_accuracy": 0.5, "yes_correct": 14, "yes_total": 28, "no_accuracy": 0.78, "no_correct": 78, "no_total": 100, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.92, "no_correct": 46, "no_total": 50}, "nextto": {"accuracy": 0.5178571428571429, "yes_accuracy": 0.35714285714285715, "yes_correct": 5, "yes_total": 14, "no_accuracy": 0.5714285714285714, "no_correct": 24, "no_total": 42}}}, "step": 16, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.59375, "yes_accuracy": 0.5357142857142857, "yes_correct": 15, "yes_total": 28, "no_accuracy": 0.61, "no_correct": 61, "no_total": 100, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.7857142857142857, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.82, "no_correct": 41, "no_total": 50}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.5714285714285714, "yes_correct": 8, "yes_total": 14, "no_accuracy": 0.30952380952380953, "no_correct": 13, "no_total": 42}}}, "step": 18, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6728395061728395, "yes_accuracy": 0.2857142857142857, "yes_correct": 8, "yes_total": 28, "no_accuracy": 0.753731343283582, "no_correct": 101, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.2222222222222222, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.8194444444444444, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.8484848484848485, "no_correct": 56, "no_total": 66}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.21428571428571427, "yes_correct": 3, "yes_total": 14, "no_accuracy": 0.6379310344827587, "no_correct": 37, "no_total": 58}}}, "step": 19, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["yes", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop carrot_3,orange_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["yes", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5132075471698113, "yes_accuracy": 0.9333333333333333, "yes_correct": 28, "yes_total": 30, "no_accuracy": 0.4595744680851064, "no_correct": 108, "no_total": 235, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.628099173553719, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.6017699115044248, "no_correct": 68, "no_total": 113}, "nextto": {"accuracy": 0.38016528925619836, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.29906542056074764, "no_correct": 32, "no_total": 107}}}, "step": 20, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["yes", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["yes", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5493827160493827, "yes_accuracy": 0.7857142857142857, "yes_correct": 22, "yes_total": 28, "no_accuracy": 0.5, "no_correct": 67, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.6805555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6515151515151515, "no_correct": 43, "no_total": 66}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.27586206896551724, "no_correct": 16, "no_total": 58}}}, "step": 23, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6728395061728395, "yes_accuracy": 0.8846153846153846, "yes_correct": 23, "yes_total": 26, "no_accuracy": 0.6323529411764706, "no_correct": 86, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "ontop": {"accuracy": 0.8194444444444444, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.8059701492537313, "no_correct": 54, "no_total": 67}, "nextto": {"accuracy": 0.5138888888888888, "yes_accuracy": 0.8333333333333334, "yes_correct": 10, "yes_total": 12, "no_accuracy": 0.45, "no_correct": 27, "no_total": 60}}}, "step": 24, "actions": ["place-next-to(apple_2, apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6728395061728395, "yes_accuracy": 0.8846153846153846, "yes_correct": 23, "yes_total": 26, "no_accuracy": 0.6323529411764706, "no_correct": 86, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "ontop": {"accuracy": 0.8194444444444444, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.8059701492537313, "no_correct": 54, "no_total": 67}, "nextto": {"accuracy": 0.5138888888888888, "yes_accuracy": 0.8333333333333334, "yes_correct": 10, "yes_total": 12, "no_accuracy": 0.45, "no_correct": 27, "no_total": 60}}}, "step": 25, "actions": ["place-next-to(apple_2, apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.1536232705111615e-05, 5.647465968650067e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.2991407857043669e-05, 7.60323700887966e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to the apple_2.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the arm could reach down to the apple_2.\n\nTherefore, based on the positioning and apparent reachability, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 8.56472433952149e-06, 1.0867179298656993e-05, "To determine if the orange_2 is in reach of the agent, we need to consider the position of the orange_2 relative to the robotic arm (the agent). The orange_2 appears to be placed on a surface, likely a countertop, and the robotic arm is positioned above this surface. The robotic arm seems to have a gripper at its end, which is extended towards the orange_2. Given the orientation and positioning of the robotic arm, it appears that the gripper could potentially reach the orange_2.\n\nTherefore, based on the visual information provided, the orange_2 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the orange_2 is in reach of the agent, we need to consider the position of the orange_2 relative to the robotic arm (the agent). The orange_2 appears to be placed on a surface, likely a countertop, and the robotic arm is positioned above this surface. The robotic arm seems to have a gripper at its end, which is extended towards the orange_2. Given the orientation and positioning of the robotic arm, it appears that the gripper could potentially reach the orange_2.\n\nTherefore, based on the visual information provided, the orange_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.9687544408952817e-05, 1.8549848391558044e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems to be in a position where it can interact with the objects on the table_1, suggesting that the table_1 is indeed in reach of the agent.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems to be in a position where it can interact with the objects on the table_1, suggesting that the table_1 is indeed in reach of the agent.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(orange_2, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_2": ["no", 6.7361825131229125e-06, 0.0001888260740088299, "The image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.", false, "<explanation>\nThe image shows a robotic arm in a virtual household simulator. The robotic arm appears to be positioned near a counter where various items such as bread and an apple are placed. However, there is no visible orange_2 being held by the robotic arm. The orange_2 is not present in the image at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.4624170034949202e-05, 1.4624170034949202e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is extended towards the table_1, indicating that it is actively trying to interact with the objects on the table.\n2. **Table Position**: The table_1 is positioned in front of the agent, and the robotic arm appears to be able to reach across the table to interact with the objects on it.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1 and its contents.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 1, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 2, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 3, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 4, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 5, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 6, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 7, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 8, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 9, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 10, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 11, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 12, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 13, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 14, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 15, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 16, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 17, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 18, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 19, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 20, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 21, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 22, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 23, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 24, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 25, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 26, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 27, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 28, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 29, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["yes", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5886792452830188, "yes_accuracy": 0.59375, "yes_correct": 19, "yes_total": 32, "no_accuracy": 0.5879828326180258, "no_correct": 137, "no_total": 233, "predicates": {"reachable": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.7272727272727273, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7272727272727273, "no_correct": 8, "no_total": 11}, "ontop": {"accuracy": 0.8264462809917356, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.8495575221238938, "no_correct": 96, "no_total": 113}, "nextto": {"accuracy": 0.33884297520661155, "yes_accuracy": 0.5, "yes_correct": 8, "yes_total": 16, "no_accuracy": 0.3142857142857143, "no_correct": 33, "no_total": 105}}}, "step": 30, "actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.224267907673493e-05, 7.604479833389632e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The red bounding box around the apple_1 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_1 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.086947122530546e-05, 6.361370651575271e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. The red bounding box around the apple_2 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_2 if it were to move downward.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. The red bounding box around the apple_2 suggests its approximate location. Given the orientation and position of the robotic arm, it seems that the arm could potentially reach the apple_2 if it were to move downward.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.3751174265053123e-05, 8.200976299121976e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that based on typical robotic arm capabilities, it might be within reach. However, this is an assumption and not a definitive statement.\n\nGiven the lack of clear evidence from the image, the most accurate response is to acknowledge the uncertainty.\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.153342873294605e-05, 1.02389749372378e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.1535135854501277e-05, 6.36083677818533e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned near the apple_2, suggesting that it could potentially pick up the apple_2. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned near the apple_2, suggesting that it could potentially pick up the apple_2. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable orange_2": ["no", 6.748337909812108e-06, 1.223786694026785e-05, "To determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm is positioned near the orange_2, suggesting that it could potentially pick up the orange_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the orange_2 is within its reach without more information.", true, "<explanation>\nTo determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm is positioned near the orange_2, suggesting that it could potentially pick up the orange_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the orange_2 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.2240259820828214e-05, 1.1532935786817688e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned near the apple_1, suggesting that it could potentially pick up the apple_1. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0867377568501979e-05, 8.564879863115493e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.1535697922226973e-05, 5.6472044889233075e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.3736333130509593e-05, 0.00010394414857728407, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.2208901353005785e-05, 6.463992031058297e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a significant range, as it extends far enough to reach the refrigerator.\n3. **Check the position of the refrigerator**: The electric_refrigerator_1 is positioned to the left of the robotic arm and appears to be within the reach of the arm's extended position.\n\nGiven these observations, the robotic arm (agent) can indeed reach the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a significant range, as it extends far enough to reach the refrigerator.\n3. **Check the position of the refrigerator**: The electric_refrigerator_1 is positioned to the left of the robotic arm and appears to be within the reach of the arm's extended position.\n\nGiven these observations, the robotic arm (agent) can indeed reach the electric_refrigerator_1.\n\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 8.030253411561716e-06, 9.217541082762182e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["no", 1.2186047570139635e-05, 0.00010387094516772777, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door, and no part of its interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have a closed door, and no part of its interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.0847314115380868e-05, 6.469160871347412e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a significant range, as it can extend far enough to reach various objects in the kitchen.\n3. **Locate the electric_refrigerator_1**: The electric_refrigerator_1 is located on the left side of the image, near the bottom.\n4. **Check the reachability**: The robotic arm extends far enough to reach the area where the electric_refrigerator_1 is located.\n\nGiven these observations, the robotic arm (agent) is indeed in reach of the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm, which is the agent in this context.\n\n1. **Identify the robotic arm**: The robotic arm is visible in the image, extending from the right side towards the center.\n2. **Determine the range of the robotic arm**: The robotic arm appears to have a significant range, as it can extend far enough to reach various objects in the kitchen.\n3. **Locate the electric_refrigerator_1**: The electric_refrigerator_1 is located on the left side of the image, near the bottom.\n4. **Check the reachability**: The robotic arm extends far enough to reach the area where the electric_refrigerator_1 is located.\n\nGiven these observations, the robotic arm (agent) is indeed in reach of the electric_refrigerator_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 9.607151696400251e-06, 0.00010390318493591622, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have its door closed, and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have its door closed, and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4876543209876543, "yes_accuracy": 0.8571428571428571, "yes_correct": 24, "yes_total": 28, "no_accuracy": 0.41044776119402987, "no_correct": 55, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.5151515151515151, "no_correct": 34, "no_total": 66}, "nextto": {"accuracy": 0.3472222222222222, "yes_accuracy": 0.7142857142857143, "yes_correct": 10, "yes_total": 14, "no_accuracy": 0.25862068965517243, "no_correct": 15, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "reachable orange_2": ["no", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["yes", "no"], "ontop meat_1,apple_2": ["yes", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["yes", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["yes", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6735537190082644, "yes_accuracy": 0.5357142857142857, "yes_correct": 15, "yes_total": 28, "no_accuracy": 0.6915887850467289, "no_correct": 148, "no_total": 214, "predicates": {"reachable": {"accuracy": 0.45454545454545453, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.6363636363636364, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6363636363636364, "no_correct": 7, "no_total": 11}, "ontop": {"accuracy": 0.8272727272727273, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.8557692307692307, "no_correct": 89, "no_total": 104}, "nextto": {"accuracy": 0.5454545454545454, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.53125, "no_correct": 51, "no_total": 96}}}, "step": 3, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7407407407407407, "yes_accuracy": 0.4642857142857143, "yes_correct": 13, "yes_total": 28, "no_accuracy": 0.7985074626865671, "no_correct": 107, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.9242424242424242, "no_correct": 61, "no_total": 66}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.21428571428571427, "yes_correct": 3, "yes_total": 14, "no_accuracy": 0.6379310344827587, "no_correct": 37, "no_total": 58}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 6.362944077409338e-06, 3.952311089960858e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm is positioned above the counter where the apple_1 is located. The red bounding box around the apple_1 indicates its approximate location.\n\nGiven that the robotic arm is extended towards the apple_1 and appears to be positioned in a way that suggests it could potentially grab the apple_1, we can infer that the apple_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_1. The robotic arm is positioned above the counter where the apple_1 is located. The red bounding box around the apple_1 indicates its approximate location.\n\nGiven that the robotic arm is extended towards the apple_1 and appears to be positioned in a way that suggests it could potentially grab the apple_1, we can infer that the apple_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 5.9952867559331935e-06, 3.952335191570455e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm is positioned above the counter where the apple_2 is located. The arm appears to have a range of motion that allows it to reach down towards the counter. Given this information, it seems plausible that the robotic arm could reach the apple_2.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the apple_2. The robotic arm is positioned above the counter where the apple_2 is located. The arm appears to have a range of motion that allows it to reach down towards the counter. Given this information, it seems plausible that the robotic arm could reach the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.054858881223481e-06, 5.098406472825445e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have the capability to reach the refrigerator based on its typical design and the proximity shown in the image.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.547499419364613e-06, 5.742047869716771e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm is capable of reaching the refrigerator based on its proximity and typical robotic arm capabilities.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm is capable of reaching the refrigerator based on its proximity and typical robotic arm capabilities.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 2.5768922569113784e-06, 0.00016620985115878284, "To determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. In the image, the refrigerator appears to have its door closed, as there are no visible gaps or openings where one might expect to see the interior of the fridge. Therefore, based on this observation, the refrigerator is likely closed.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and check if the door is ajar or if there's any indication that the refrigerator is not closed. In the image, the refrigerator appears to have its door closed, as there are no visible gaps or openings where one might expect to see the interior of the fridge. Therefore, based on this observation, the refrigerator is likely closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["no", 8.036138751776889e-06, 0.00010390450188424438, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have its door closed, and there's no visible light or interior contents suggesting it's open. Therefore, based on the visual information provided, the electric_refrigerator_1 is not open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. In this image, the refrigerator appears to have its door closed, and there's no visible light or interior contents suggesting it's open. Therefore, based on the visual information provided, the electric_refrigerator_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.1536782039911486e-05, 4.451135737326695e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The red bounding box around the apple_1 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_1 is indeed within the range of the agent's reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The red bounding box around the apple_1 suggests its approximate location, and the robotic arm's proximity to this area implies that the apple_1 is indeed within the range of the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.1536160855030175e-05, 4.4508960854727775e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_2 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.8516244381316938e-05, 0.000104046608612407, "The robotic arm is shown holding a black object, which appears to be a plug. The electric_refrigerator_1 is visible in the background, and the robotic arm seems to be positioned close enough to interact with it, as the plug could potentially be connected to the refrigerator's power source.", true, "<explanation>\nThe robotic arm is shown holding a black object, which appears to be a plug. The electric_refrigerator_1 is visible in the background, and the robotic arm seems to be positioned close enough to interact with it, as the plug could potentially be connected to the refrigerator's power source.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 1.9637451259768568e-05, 0.00013192067854106426, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned close to the refrigerator, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach of the robotic arm, it's difficult to definitively say whether it can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we cannot conclusively state that the electric_refrigerator_1 is definitely in reach of the agent.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the refrigerator and the robotic arm (agent). The robotic arm appears to be positioned close to the refrigerator, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach of the robotic arm, it's difficult to definitively say whether it can reach the refrigerator.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we cannot conclusively state that the electric_refrigerator_1 is definitely in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "open electric_refrigerator_1": ["yes", 1.5526731658610515e-05, 1.970078665181063e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is currently open, as indicated by the visible interior and the position of the door handle. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is currently open, as indicated by the visible interior and the position of the door handle. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 2.2206369976629503e-05, 8.072583113971632e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. The red bounding box around the apple_1 indicates its approximate location, and the robotic arm's end effector (the black part) seems to be close enough to grasp the apple_1.\n\nTherefore, based on the positioning and the bounding box, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. The red bounding box around the apple_1 indicates its approximate location, and the robotic arm's end effector (the black part) seems to be close enough to grasp the apple_1.\n\nTherefore, based on the positioning and the bounding box, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 2.092028080369346e-05, 1.2243619494256563e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 2.2206369976629503e-05, 8.072583113971632e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding apple_2": ["no", 2.219695488747675e-05, 5.1074639486614615e-05, "The image shows a robotic arm interacting with various objects on a surface. The red bounding boxes highlight specific objects, including an apple labeled as \"apple_2\". The robotic arm appears to be positioned near this apple, suggesting it might be holding or about to interact with it. However, without explicit confirmation from the image, we cannot definitively state that the robotic arm is holding the apple_2.", true, "<explanation>\nThe image shows a robotic arm interacting with various objects on a surface. The red bounding boxes highlight specific objects, including an apple labeled as \"apple_2\". The robotic arm appears to be positioned near this apple, suggesting it might be holding or about to interact with it. However, without explicit confirmation from the image, we cannot definitively state that the robotic arm is holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 9.045397746376693e-06, 0.0001671552745392546, "The image shows a robotic arm holding what appears to be a plug. The robotic arm is positioned close to a refrigerator, suggesting that the refrigerator is within the reach of the robotic arm. The robotic arm seems capable of interacting with the refrigerator, indicating that it is in reach.", true, "<explanation>\nThe image shows a robotic arm holding what appears to be a plug. The robotic arm is positioned close to a refrigerator, suggesting that the refrigerator is within the reach of the robotic arm. The robotic arm seems capable of interacting with the refrigerator, indicating that it is in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["yes", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5432098765432098, "yes_accuracy": 0.6785714285714286, "yes_correct": 19, "yes_total": 28, "no_accuracy": 0.5149253731343284, "no_correct": 69, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.6805555555555556, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.696969696969697, "no_correct": 46, "no_total": 66}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.25862068965517243, "no_correct": 15, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable chair_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable yogurt_1": ["yes", "no"], "reachable soup_1": ["no", "no"], "reachable orange_1": ["no", "no"], "reachable orange_3": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "yes"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding orange_1": ["no", "no"], "holding orange_3": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop yogurt_1,electric_refrigerator_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop soup_1,electric_refrigerator_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,table_1": ["no", "yes"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_1,electric_refrigerator_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,table_1": ["no", "yes"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "ontop orange_3,electric_refrigerator_1": ["no", "no"], "inside yogurt_1,electric_refrigerator_1": ["no", "no"], "inside soup_1,electric_refrigerator_1": ["no", "no"], "inside orange_1,electric_refrigerator_1": ["no", "no"], "inside orange_3,electric_refrigerator_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto yogurt_1,electric_refrigerator_1": ["no", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto soup_1,electric_refrigerator_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,orange_3": ["no", "no"], "nextto orange_1,electric_refrigerator_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,orange_1": ["no", "no"], "nextto orange_3,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.828125, "yes_accuracy": 0.14285714285714285, "yes_correct": 1, "yes_total": 7, "no_accuracy": 0.9122807017543859, "no_correct": 52, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 20, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23}}}, "step": 3, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["yes", "no"], "ontop flour_1,apple_2": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5370370370370371, "yes_accuracy": 0.8461538461538461, "yes_correct": 22, "yes_total": 26, "no_accuracy": 0.47794117647058826, "no_correct": 65, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.5909090909090909, "no_correct": 39, "no_total": 66}, "nextto": {"accuracy": 0.3888888888888889, "yes_accuracy": 0.8333333333333334, "yes_correct": 10, "yes_total": 12, "no_accuracy": 0.3, "no_correct": 18, "no_total": 60}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"all_correct": false, "goal_reached": true, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.3791322999168187e-05, 5.647325906465994e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the dresser where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the dresser.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the dresser where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the dresser.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.3791617675451562e-05, 7.165650458773598e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.0225392543361522e-05, 4.26678525400348e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the refrigerator as it is positioned close to it.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, we cannot definitively conclude whether the arm can reach the refrigerator.\n\nSince the question asks for a yes or no answer based on the provided information, and we do not have enough details to confirm the reachability, we must assume that the robotic arm is capable of reaching the refrigerator as it is positioned close to it.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.0850395483430475e-05, 4.5275824959389865e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm may have sufficient reach to interact with the refrigerator based on its typical design and positioning.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm may have sufficient reach to interact with the refrigerator based on its typical design and positioning.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 6.738784122717334e-06, 4.526987322606146e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 1.5501122106797993e-05, 4.52562453574501e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially visible, and it seems to be open as the contents inside are visible. The robotic arm is positioned near the contents, suggesting interaction with the open refrigerator.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially visible, and it seems to be open as the contents inside are visible. The robotic arm is positioned near the contents, suggesting interaction with the open refrigerator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 5.648302703775698e-06, 3.7235895433695987e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 5.014720045437571e-06, 3.50866275766748e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 5.648347269016085e-06, 3.3057019663829124e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.1537329555721954e-05, 5.648002570524113e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.0872926395677496e-05, 3.3062001421058085e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.2994728422199842e-05, 7.6051805990573484e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.3789620425086468e-05, 6.360492079693358e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the counter.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1 from the counter.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.4633280443376862e-05, 6.749639396730345e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 9.057206625584513e-06, 0.00011710668331943452, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned above the floor, likely in a vertical orientation, as indicated by its placement relative to the ground and other objects.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located on the floor, as seen from the perspective of the image. It is situated near the bottom left corner of the frame.\n3. **Reachability Analysis**: For the robotic arm to reach the refrigerator, it would need to move downward and extend horizontally towards the refrigerator. However, the robotic arm's current position suggests it is not oriented in a way that allows it to reach the refrigerator directly. The arm seems to be aimed upwards rather than downwards.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the electric refrigerator directly based on its current orientation and position.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned above the floor, likely in a vertical orientation, as indicated by its placement relative to the ground and other objects.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located on the floor, as seen from the perspective of the image. It is situated near the bottom left corner of the frame.\n3. **Reachability Analysis**: For the robotic arm to reach the refrigerator, it would need to move downward and extend horizontally towards the refrigerator. However, the robotic arm's current position suggests it is not oriented in a way that allows it to reach the refrigerator directly. The arm seems to be aimed upwards rather than downwards.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can reach the electric refrigerator directly based on its current orientation and position.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.3786925592285115e-05, 1.2239563147886656e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.4630454643338453e-05, 1.1530665688042063e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2 from the counter.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_2 from the counter.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 1.3786925592285115e-05, 1.2239563147886656e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. The arm's end effector (the part that holds objects) is extended towards the apple_1, suggesting that the robotic arm could potentially pick up the apple_1.\n\nGiven this information, we can conclude that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 2.0871211745543405e-05, 0.00013210652105044574, "The image shows a robotic arm (the agent) positioned near a countertop. On the countertop, there is an apple labeled as \"apple_2\". The robotic arm appears to be interacting with the apple, suggesting it might be holding it. However, without a clear view of the robotic arm's grip or the apple being directly held, we cannot definitively conclude that the agent is holding the apple_2.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a countertop. On the countertop, there is an apple labeled as \"apple_2\". The robotic arm appears to be interacting with the apple, suggesting it might be holding it. However, without a clear view of the robotic arm's grip or the apple being directly held, we cannot definitively conclude that the agent is holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding apple_1": {"before": false, "after": true}, "ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": true, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.460568091715686e-05, 6.468347419286147e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned in such a way that it could potentially reach the refrigerator.\n3. The refrigerator is located in the background, and the robotic arm seems to be oriented towards it, suggesting that it is within the range of the robotic arm's movement.\n\nGiven these observations, it appears that the robotic arm is indeed in reach of the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned in such a way that it could potentially reach the refrigerator.\n3. The refrigerator is located in the background, and the robotic arm seems to be oriented towards it, suggesting that it is within the range of the robotic arm's movement.\n\nGiven these observations, it appears that the robotic arm is indeed in reach of the electric_refrigerator_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["no", 8.569291821913794e-06, 7.167905096139293e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description, so we cannot definitively say whether the apple_1 is within the robotic arm's reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description, so we cannot definitively say whether the apple_1 is within the robotic arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(apple_1, electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_1": ["yes", 1.2237419468874577e-05, 5.106351090944372e-05, "The image shows a robotic arm interacting with a refrigerator. The robotic arm appears to be holding an object, which looks like an apple based on its shape and color. The apple is positioned in such a way that it seems to be grasped by the robotic arm's gripper.", true, "<explanation>\nThe image shows a robotic arm interacting with a refrigerator. The robotic arm appears to be holding an object, which looks like an apple based on its shape and color. The apple is positioned in such a way that it seems to be grasped by the robotic arm's gripper.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["yes", 1.222258470079396e-05, 4.527744749793783e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned in such a way that it could potentially reach the top of the refrigerator.\n3. The refrigerator is located in the background, and the robotic arm seems to be oriented in a way that suggests it could interact with the top surface of the refrigerator.\n\nGiven these observations, it appears that the robotic arm is indeed in a position where it could reach the electric_refrigerator_1.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the refrigerator.\n\n1. The robotic arm is visible in the foreground, extending towards the refrigerator.\n2. The robotic arm appears to be positioned in such a way that it could potentially reach the top of the refrigerator.\n3. The refrigerator is located in the background, and the robotic arm seems to be oriented in a way that suggests it could interact with the top surface of the refrigerator.\n\nGiven these observations, it appears that the robotic arm is indeed in a position where it could reach the electric_refrigerator_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.3784390830551274e-05, 1.552707180962898e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some food items inside. This indicates that the refrigerator is indeed open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a door that is partially open, revealing some food items inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"inside apple_1,electric_refrigerator_1": ["no", 3.6837084280705312e-06, 0.00026763766072690487, "To determine if the apple_1 is inside the electric_refrigerator_1, I need to look for the apple_1 and the electric_refrigerator_1 in the image. The apple_1 appears to be located on a surface, possibly a countertop, while the electric_refrigerator_1 is visible in the background. Since the apple_1 is not inside the refrigerator, the answer is \"No\".", false, "<explanation>\nTo determine if the apple_1 is inside the electric_refrigerator_1, I need to look for the apple_1 and the electric_refrigerator_1 in the image. The apple_1 appears to be located on a surface, possibly a countertop, while the electric_refrigerator_1 is visible in the background. Since the apple_1 is not inside the refrigerator, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding apple_1": ["no", 3.1424562621396035e-05, 0.00043122799252159894, "The image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The robotic arm seems to be empty or not interacting with any object at the moment.", true, "<explanation>\nThe image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The robotic arm seems to be empty or not interacting with any object at the moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.6446598237962462e-05, 6.862729060230777e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located further back in the scene, near the center-right area of the image.\n3. **Reachability Analysis**: The robotic arm seems to have enough length to extend towards the refrigerator, as it is positioned close to the refrigerator's height and width.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the electric refrigerator.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located further back in the scene, near the center-right area of the image.\n3. **Reachability Analysis**: The robotic arm seems to have enough length to extend towards the refrigerator, as it is positioned close to the refrigerator's height and width.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the electric refrigerator.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 4.6815184759907424e-06, 0.00014782109064981341, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. Upon examining the image, the refrigerator appears to have its door closed and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. Upon examining the image, the refrigerator appears to have its door closed and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding apple_1": ["no", 3.1362516892841086e-05, 0.0004847866075579077, "The image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The focus seems to be on the agent's position rather than any specific object it might be holding.", true, "<explanation>\nThe image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The focus seems to be on the agent's position rather than any specific object it might be holding.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.6446598237962462e-05, 6.862729060230777e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located further back in the scene, near the center-right area of the image.\n3. **Reachability Analysis**: The robotic arm seems to have enough length to extend towards the refrigerator, as it is positioned close to the refrigerator's height and width.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the electric refrigerator.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and orientation of both the robotic arm (agent) and the refrigerator.\n\n1. **Position of the Robotic Arm**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Position of the Electric Refrigerator**: The electric refrigerator is located further back in the scene, near the center-right area of the image.\n3. **Reachability Analysis**: The robotic arm seems to have enough length to extend towards the refrigerator, as it is positioned close to the refrigerator's height and width.\n\nGiven these observations, the robotic arm appears to be in a position where it could potentially reach the electric refrigerator.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 4.6815184759907424e-06, 0.00014782109064981341, "To determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. Upon examining the image, the refrigerator appears to have its door closed and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look for any indication such as the door being ajar or the interior being visible. Upon examining the image, the refrigerator appears to have its door closed and no part of the interior is visible. Therefore, based on the visual information provided, the electric_refrigerator_1 does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding apple_1": ["no", 3.1362516892841086e-05, 0.0004847866075579077, "The image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The focus seems to be on the agent's position rather than any specific object it might be holding.", true, "<explanation>\nThe image shows a kitchen setting with a robotic arm as the agent. The agent appears to be positioned near a counter, but there is no visible apple_1 being held by the robotic arm. The focus seems to be on the agent's position rather than any specific object it might be holding.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.640625, "yes_accuracy": 0.5, "yes_correct": 14, "yes_total": 28, "no_accuracy": 0.68, "no_correct": 68, "no_total": 100, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.8392857142857143, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.9, "no_correct": 45, "no_total": 50}, "nextto": {"accuracy": 0.4107142857142857, "yes_accuracy": 0.5, "yes_correct": 7, "yes_total": 14, "no_accuracy": 0.38095238095238093, "no_correct": 16, "no_total": 42}}}, "step": 4, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["yes", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5185185185185185, "yes_accuracy": 0.6785714285714286, "yes_correct": 19, "yes_total": 28, "no_accuracy": 0.48507462686567165, "no_correct": 65, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.6388888888888888, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.6212121212121212, "no_correct": 41, "no_total": 66}, "nextto": {"accuracy": 0.375, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.27586206896551724, "no_correct": 16, "no_total": 58}}}, "step": 5, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.8461538461538461, "yes_correct": 22, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.7777777777777778, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "ontop": {"accuracy": 0.6805555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6515151515151515, "no_correct": 43, "no_total": 66}, "nextto": {"accuracy": 0.3888888888888889, "yes_accuracy": 0.8333333333333334, "yes_correct": 10, "yes_total": 12, "no_accuracy": 0.3, "no_correct": 18, "no_total": 60}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop flour_1,bread_1": ["yes", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5432098765432098, "yes_accuracy": 0.7307692307692307, "yes_correct": 19, "yes_total": 26, "no_accuracy": 0.5073529411764706, "no_correct": 69, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.7424242424242424, "no_correct": 49, "no_total": 66}, "nextto": {"accuracy": 0.2777777777777778, "yes_accuracy": 0.75, "yes_correct": 9, "yes_total": 12, "no_accuracy": 0.18333333333333332, "no_correct": 11, "no_total": 60}}}, "step": 8, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 11, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "yes"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 12, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.2245147445355542e-05, 7.6060136962041724e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the dresser where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, based on the positioning and apparent reachability of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the dresser where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, based on the positioning and apparent reachability of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["no", 1.379424338665558e-05, 6.752856279490516e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether it is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.1515619007695932e-05, 4.527488272287883e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.0223111530649476e-05, 4.0193252061726525e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have sufficient reach to interact with the refrigerator based on its typical design and positioning.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n\nSince the image does not provide enough detail to confirm the exact reach of the robotic arm, we must assume that the arm might have sufficient reach to interact with the refrigerator based on its typical design and positioning.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 6.34983825875679e-06, 3.568105603335425e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have a closed door, as there's no visible gap or light coming from inside. Additionally, the robotic arm is positioned in front of the refrigerator, suggesting it's not currently interacting with the door, which would be expected if the door were open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 1.5530547898379155e-05, 1.1532730241015088e-05, "To determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have its door open, as the interior shelves and contents are visible. The robotic arm is positioned inside the refrigerator, suggesting it has accessed the contents.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I'll look at the image and identify the refrigerator. The refrigerator appears to have its door open, as the interior shelves and contents are visible. The robotic arm is positioned inside the refrigerator, suggesting it has accessed the contents.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.5535795682808384e-05, 6.751830824214267e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.4637001186201815e-05, 9.649313142290339e-06, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially reach it. However, the exact reach range of the robotic arm is not specified in the image. Without this information, we cannot definitively say whether the apple_2 is within the robotic arm's reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially reach it. However, the exact reach range of the robotic arm is not specified in the image. Without this information, we cannot definitively say whether the apple_2 is within the robotic arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 1.7498636225354858e-05, 7.165410806919681e-06, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image, so we cannot definitively say whether the apple_1 is within its reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 1.0239720722893253e-05, 1.2241674994584173e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the apple_1, suggesting that it could potentially pick up the apple_1. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_1 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_2": ["no", 1.2992715710424818e-05, 1.2241910553711932e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the apple_2, suggesting that it could potentially pick up the apple_2. However, the exact reach of the robotic arm is not specified in the image description. Without more information about the range of motion of the robotic arm, we cannot definitively say whether the apple_2 is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 9.06783407117473e-06, 6.465202022809535e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the refrigerator, suggesting it could potentially reach into the refrigerator. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, it's difficult to definitively say whether the arm can access all parts of the refrigerator.\n\nSince the question asks if the refrigerator is in reach, and considering the arm's position, it seems plausible that the arm could reach at least part of the refrigerator, especially the shelves where food items are visible.\n\nTherefore, based on the visual evidence and typical functionality of robotic arms in such simulators, the answer is likely affirmative.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned above the refrigerator, suggesting it could potentially reach into the refrigerator. However, without specific information about the arm's reach or the exact dimensions of the refrigerator, it's difficult to definitively say whether the arm can access all parts of the refrigerator.\n\nSince the question asks if the refrigerator is in reach, and considering the arm's position, it seems plausible that the arm could reach at least part of the refrigerator, especially the shelves where food items are visible.\n\nTherefore, based on the visual evidence and typical functionality of robotic arms in such simulators, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": false, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["yes", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5802469135802469, "yes_accuracy": 0.4642857142857143, "yes_correct": 13, "yes_total": 28, "no_accuracy": 0.6044776119402985, "no_correct": 81, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.125, "yes_correct": 1, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.7424242424242424, "no_correct": 49, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.5, "yes_correct": 7, "yes_total": 14, "no_accuracy": 0.41379310344827586, "no_correct": 24, "no_total": 58}}}, "step": 4, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["yes", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.5714285714285714, "yes_correct": 16, "yes_total": 28, "no_accuracy": 0.56, "no_correct": 56, "no_total": 100, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}, "ontop": {"accuracy": 0.7321428571428571, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.72, "no_correct": 36, "no_total": 50}, "nextto": {"accuracy": 0.44642857142857145, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.38095238095238093, "no_correct": 16, "no_total": 42}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 8.063690984272398e-06, 3.17032536258921e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the following:\n\n1. Identify the location of the apple_1.\n2. Determine the range of motion of the robotic arm (agent).\n3. Check if the robotic arm can extend to the apple_1.\n\nFrom the image, the apple_1 appears to be placed on a counter near the left side of the kitchen. The robotic arm is positioned towards the right side of the image, suggesting it has a certain range of motion. However, without specific information about the exact reach of the robotic arm, we cannot definitively say whether it can reach the apple_1.\n\nSince the exact reach of the robotic arm is not provided, we cannot conclusively state whether the apple_1 is within its reach.\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0236525668005925e-05, 2.2192903998075053e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The apple_1 appears to be on a surface that is within the range of the robotic arm's reach.\n\nTherefore, based on the positioning of the robotic arm and its proximity to the apple_1, it can be concluded that the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm is extended towards the apple_1, indicating that it is positioned to potentially pick up the apple_1. The apple_1 appears to be on a surface that is within the range of the robotic arm's reach.\n\nTherefore, based on the positioning of the robotic arm and its proximity to the apple_1, it can be concluded that the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 7.1646154538029805e-06, 7.604033726238413e-06, "To determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the orange_2 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the orange_2. The robotic arm appears to be positioned above the counter where the orange_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the orange_2.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 1.0847362318600062e-05, 6.469189975177869e-05, "To determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the refrigerator, suggesting it could potentially interact with it. However, without specific information about the arm's reach or the exact distance between the arm and the refrigerator, we cannot definitively conclude whether the refrigerator is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, based on the positioning and apparent reachability of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_1.\n\nTherefore, based on the positioning and apparent reachability of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.7494070561951958e-05, 1.6483145373058505e-05, "To determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_2.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_2. The robotic arm appears to be positioned above the counter where the apple_2 is located. Given the length and range of the robotic arm, it seems plausible that the robotic arm could reach the apple_2.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 1.8532611647970043e-05, 0.00018885155441239476, "The image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.", false, "<explanation>\nThe image shows a robotic arm in a virtual household setting. The robotic arm appears to be positioned near a countertop where various fruits and vegetables are placed, including an apple labeled as \"apple_2\". However, the robotic arm itself does not appear to be directly interacting with the apple_2; instead, it seems to be hovering above the countertop without grasping any object. Therefore, based on the visual information provided, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.552930916659534e-05, 1.8565404388937168e-05, "To determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the apple_1. The robotic arm appears to be positioned above the counter where the apple_1 is located. Given the typical range of motion for a robotic arm, it seems plausible that the arm could reach down to grab the apple_1.\n\nTherefore, based on the positioning and the typical capabilities of a robotic arm, it is reasonable to conclude that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,orange_2": ["yes", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["yes", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5679012345679012, "yes_accuracy": 0.8695652173913043, "yes_correct": 20, "yes_total": 23, "no_accuracy": 0.5179856115107914, "no_correct": 72, "no_total": 139, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.7777777777777778, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.6417910447761194, "no_correct": 43, "no_total": 67}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.75, "yes_correct": 9, "yes_total": 12, "no_accuracy": 0.36666666666666664, "no_correct": 22, "no_total": 60}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 3, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 4, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 5, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 6, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 7, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 8, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 9, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 10, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 11, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 12, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 13, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 14, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 15, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 16, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 17, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 18, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 19, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 20, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 21, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 22, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 23, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 24, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 25, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 26, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 27, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 28, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 29, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5, "no_correct": 68, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.6363636363636364, "no_correct": 42, "no_total": 66}, "nextto": {"accuracy": 0.4305555555555556, "yes_accuracy": 0.9166666666666666, "yes_correct": 11, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 30, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 5.316115220921347e-06, 2.498715002730023e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm.\n\n1. **Position of the Ball**: The ball appears to be on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. **Reachability**: The robotic arm's end effector (the part that holds objects) is not currently extended towards the ball. It seems to be retracted or not actively engaged with any object.\n\nGiven these observations, the ball is not currently within the reach of the robotic arm as it is not extended towards it.\n\nTherefore, the answer is \"No\".", false, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm.\n\n1. **Position of the Ball**: The ball appears to be on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n3. **Reachability**: The robotic arm's end effector (the part that holds objects) is not currently extended towards the ball. It seems to be retracted or not actively engaged with any object.\n\nGiven these observations, the ball is not currently within the reach of the robotic arm as it is not extended towards it.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>No</answer>", false], "reachable cabinet_1": ["no", 7.561654911114601e-06, 0.00010376597492722794, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the bottom left corner.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 if it were extended further into the room. However, the exact reach distance of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the cabinet_1.\n\nGiven the information provided, we cannot definitively conclude that the cabinet_1 is in reach of the agent based solely on the visual data.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is positioned towards the right side of the image, extending from the top right corner.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the bottom left corner.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the cabinet_1 if it were extended further into the room. However, the exact reach distance of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the cabinet_1.\n\nGiven the information provided, we cannot definitively conclude that the cabinet_1 is in reach of the agent based solely on the visual data.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 6.742527602909831e-06, 2.986030995089095e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm (agent). The ball appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending upwards.\n\nGiven the current position and orientation of the robotic arm, it does not appear to be directly above or close enough to the ball to reach it. The arm's end effector (the part that would interact with objects) is not aligned with the ball, and there doesn't seem to be any indication that the arm can move to the ball's location.\n\nTherefore, based on the visual information provided, the ball_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm (agent). The ball appears to be on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image, extending upwards.\n\nGiven the current position and orientation of the robotic arm, it does not appear to be directly above or close enough to the ball to reach it. The arm's end effector (the part that would interact with objects) is not aligned with the ball, and there doesn't seem to be any indication that the arm can move to the ball's location.\n\nTherefore, based on the visual information provided, the ball_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 4.190197159914533e-06, 2.814895378833171e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm is extended towards the ball_1, indicating that it is positioned to potentially interact with the ball. The ball appears to be on the floor, and the robotic arm's end effector (the part that holds objects) is close enough to the ball to suggest that it could grasp it.\n\nGiven this information, we can conclude that the ball_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm is extended towards the ball_1, indicating that it is positioned to potentially interact with the ball. The ball appears to be on the floor, and the robotic arm's end effector (the part that holds objects) is close enough to the ball to suggest that it could grasp it.\n\nGiven this information, we can conclude that the ball_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 2.0898552975268103e-05, 3.570869012037292e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, which suggests that it is positioned to potentially pick up the plate_1. The arm appears to be at a height and angle that would allow it to grasp the plate_1 if it were to move closer.", false, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, which suggests that it is positioned to potentially pick up the plate_1. The arm appears to be at a height and angle that would allow it to grasp the plate_1 if it were to move closer.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["no", 1.4611006918130443e-05, 6.470707012340426e-05, "To determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm is extended towards the plate_2, which suggests that the arm is positioned to potentially pick up the plate_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the plate_2 is within the arm's reach without more information.", true, "<explanation>\nTo determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm is extended towards the plate_2, which suggests that the arm is positioned to potentially pick up the plate_2. However, the exact reach of the robotic arm is not specified, so we cannot definitively say whether the plate_2 is within the arm's reach without more information.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["yes", 1.552232788526453e-05, 3.170785203110427e-05, "To determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm is extended towards the plate_3, which suggests that the arm is positioned to potentially pick up the plate_3. Since the robotic arm appears to be able to reach the plate_3 without any obstructions, we can conclude that the plate_3 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm is extended towards the plate_3, which suggests that the arm is positioned to potentially pick up the plate_3. Since the robotic arm appears to be able to reach the plate_3 without any obstructions, we can conclude that the plate_3 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 2.3463679099222645e-05, 0.00018844151054508984, "To determine if the saucepan_1 is in reach of the agent, we need to consider the position of the saucepan relative to the robotic arm's current position and its range of motion.\n\n1. Locate the saucepan_1 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend towards the saucepan without colliding with any obstacles.\n\nFrom the image, the saucepan_1 appears to be placed on a surface near the wall, and the robotic arm is positioned in such a way that it can potentially reach the saucepan without any visible obstructions. However, the exact reachability would depend on the specific dimensions and constraints of the robotic arm, which are not explicitly detailed in the image.\n\nSince the image does not provide enough detail to definitively state whether the robotic arm can reach the saucepan, we cannot conclusively say that the saucepan is in reach based solely on this information.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, we need to consider the position of the saucepan relative to the robotic arm's current position and its range of motion.\n\n1. Locate the saucepan_1 in the image.\n2. Observe the position of the robotic arm.\n3. Assess whether the robotic arm can extend towards the saucepan without colliding with any obstacles.\n\nFrom the image, the saucepan_1 appears to be placed on a surface near the wall, and the robotic arm is positioned in such a way that it can potentially reach the saucepan without any visible obstructions. However, the exact reachability would depend on the specific dimensions and constraints of the robotic arm, which are not explicitly detailed in the image.\n\nSince the image does not provide enough detail to definitively state whether the robotic arm can reach the saucepan, we cannot conclusively say that the saucepan is in reach based solely on this information.\n\n</explanation>\n<answer>No</answer>", true], "reachable shelf_1": ["yes", 1.549808803247288e-05, 7.284511957550421e-05, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the shelf_1, and its end effector (the part that holds objects) is extended towards the shelf. Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could reach the shelf_1 to interact with it.", false, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and range of the robotic arm. The robotic arm appears to be positioned near the shelf_1, and its end effector (the part that holds objects) is extended towards the shelf. Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could reach the shelf_1 to interact with it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 1.374389285047073e-05, 7.276685937540606e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned at the bottom right corner of the image.\n2. The cabinet_1 is located towards the center-right of the image.\n3. The robotic arm appears to be extended towards the cabinet_1, suggesting it could potentially reach it.\n4. However, the exact reach range of the robotic arm is not specified, so we cannot definitively conclude whether it can reach the cabinet_1 without more information.\n\nGiven the limited information provided, we cannot conclusively state whether the cabinet_1 is in reach of the agent based solely on the visual data.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. The robotic arm is positioned at the bottom right corner of the image.\n2. The cabinet_1 is located towards the center-right of the image.\n3. The robotic arm appears to be extended towards the cabinet_1, suggesting it could potentially reach it.\n4. However, the exact reach range of the robotic arm is not specified, so we cannot definitively conclude whether it can reach the cabinet_1 without more information.\n\nGiven the limited information provided, we cannot conclusively state whether the cabinet_1 is in reach of the agent based solely on the visual data.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["yes", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.6779661016949152, "no_correct": 40, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.7916666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.782608695652174, "no_correct": 18, "no_total": 23}, "inside": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5714285714285714, "no_correct": 12, "no_total": 21}}}, "step": 2, "actions": ["grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 5.318109288054984e-06, 1.552648245706223e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the center of the room.\n2. **Position of the Agent**: The robotic arm is positioned towards the right side of the room, close to the wall.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm extending from the left side of the image. It seems capable of reaching objects within a certain distance from its current position.\n\nGiven these observations, the ball is within the apparent reach of the robotic arm since it is relatively close to the arm's current position.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the center of the room.\n2. **Position of the Agent**: The robotic arm is positioned towards the right side of the room, close to the wall.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm extending from the left side of the image. It seems capable of reaching objects within a certain distance from its current position.\n\nGiven these observations, the ball is within the apparent reach of the robotic arm since it is relatively close to the arm's current position.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 6.313206540653482e-06, 0.0001480286882724613, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1. The image shows a robotic arm positioned near the floor, and there is a cabinet visible in the background. However, the robotic arm appears to be too far away from the cabinet to reach it based on its current position and the visible distance between them.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1. The image shows a robotic arm positioned near the floor, and there is a cabinet visible in the background. However, the robotic arm appears to be too far away from the cabinet to reach it based on its current position and the visible distance between them.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 1.1531476957316045e-05, 1.0865111107705161e-05, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the carton_1 is within its reach.\n\nSince the question asks for a yes or no answer based on the provided image, and considering the proximity of the robotic arm to the carton_1, we can infer that the carton_1 is likely within the reach of the agent.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the carton_1 is within its reach.\n\nSince the question asks for a yes or no answer based on the provided image, and considering the proximity of the robotic arm to the carton_1, we can infer that the carton_1 is likely within the reach of the agent.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["no", 1.1530008123372681e-05, 1.7489837773609906e-05, "To determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["no", 1.1531326890690252e-05, 1.2238551789778285e-05, "To determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can actually grasp the plate_3.", true, "<explanation>\nTo determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can actually grasp the plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable saucepan_1": ["yes", 1.2217581570439506e-05, 8.207531936932355e-05, "To determine if the saucepan_1 is in reach of the agent, we need to assess the distance between the agent's position and the location of the saucepan_1. The image shows the robotic arm (agent) positioned near the center of the room, and the saucepan_1 is located towards the left side of the room. Given the size of the room and the position of the agent relative to the saucepan_1, it appears that the agent could potentially reach the saucepan_1 without any significant obstacle.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".", false, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, we need to assess the distance between the agent's position and the location of the saucepan_1. The image shows the robotic arm (agent) positioned near the center of the room, and the saucepan_1 is located towards the left side of the room. Given the size of the room and the position of the agent relative to the saucepan_1, it appears that the agent could potentially reach the saucepan_1 without any significant obstacle.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 1.2224393685755786e-05, 5.1009104936383665e-05, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach the shelf.\n\n2. **Shelf Position**: The shelf_1 is located further back in the room, near the center-left of the image. It is elevated above the floor level, suggesting it might be a high shelf.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the shelf_1. However, without precise measurements, it's difficult to definitively say whether the arm can reach the exact location of the shelf.\n\nSince the robotic arm is positioned in a way that suggests it could reach the shelf, and considering the typical range of motion for such arms, it is reasonable to conclude that the shelf_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach the shelf.\n\n2. **Shelf Position**: The shelf_1 is located further back in the room, near the center-left of the image. It is elevated above the floor level, suggesting it might be a high shelf.\n\n3. **Reachability**: Given the length of the robotic arm and its current position, it seems plausible that the robotic arm could extend to reach the shelf_1. However, without precise measurements, it's difficult to definitively say whether the arm can reach the exact location of the shelf.\n\nSince the robotic arm is positioned in a way that suggests it could reach the shelf, and considering the typical range of motion for such arms, it is reasonable to conclude that the shelf_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 8.55685993883526e-06, 2.3538512323284522e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be positioned such that its end-effector (the part that holds objects) is extended towards the cabinet_1. Given the length of the robotic arm and its current position, it seems plausible that the end-effector could reach the cabinet_1.\n\nBased on this analysis, the robotic arm appears to be in a position where it could potentially reach the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be positioned such that its end-effector (the part that holds objects) is extended towards the cabinet_1. Given the length of the robotic arm and its current position, it seems plausible that the end-effector could reach the cabinet_1.\n\nBased on this analysis, the robotic arm appears to be in a position where it could potentially reach the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 1.153247467300389e-05, 1.153247467300389e-05, "To determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned above the carton_2, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned above the carton_2, suggesting that it could potentially reach it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_3, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 8.054549653024878e-06, 0.00014884464326314628, "To determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_3, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_3: The plate_3 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_3: The robotic arm appears to be positioned above the plate_3, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_3, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.5529692973359488e-05, 1.4632281818194315e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm is extended towards the plate_1, indicating that it is positioned to potentially interact with it. The red lines seem to represent the range of motion or reach of the robotic arm. Since the robotic arm is pointing directly at the plate_1, it suggests that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 2, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 3, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 4, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 5, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 6, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 7, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 8, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 9, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 10, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 11, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 12, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 13, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 14, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 15, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 16, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 17, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 18, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 19, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 20, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 21, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 22, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 23, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 24, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 25, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 26, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 27, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 28, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 29, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6190476190476191, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 12, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 30, "actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 3.948358880734304e-06, 2.218664849351626e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm appears to be positioned above the floor, and its end effector (the part that can hold objects) is extended towards the ball_1. Given the proximity and orientation of the robotic arm, it seems that the ball_1 is within the range where the robotic arm could potentially pick it up.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm appears to be positioned above the floor, and its end effector (the part that can hold objects) is extended towards the ball_1. Given the proximity and orientation of the robotic arm, it seems that the ball_1 is within the range where the robotic arm could potentially pick it up.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 5.610661901300773e-06, 0.00013155578926671296, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the bottom corner.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1 if it were to extend its arm further into the room. However, the exact reach distance of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the cabinet_1.\n\nGiven the information provided and the visual context, we cannot definitively conclude that the cabinet_1 is in reach of the agent based solely on the image.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the left side of the image, near the bottom corner.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1 if it were to extend its arm further into the room. However, the exact reach distance of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the cabinet_1.\n\nGiven the information provided and the visual context, we cannot definitively conclude that the cabinet_1 is in reach of the agent based solely on the image.\n\n</explanation>\n<answer>No</answer>", true], "reachable carton_2": ["no", 4.444474143383559e-06, 3.168829789501615e-05, "To determine if the carton_2 is in reach of the agent, we need to consider the position and orientation of both the carton_2 and the robotic arm (agent). The carton_2 appears to be placed on the floor near the right side of the room. The robotic arm is positioned towards the left side of the room, extending towards the center. Given the distance between the carton_2 and the robotic arm, and considering the typical range of motion for a robotic arm, it seems unlikely that the robotic arm could reach the carton_2 from its current position.", true, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to consider the position and orientation of both the carton_2 and the robotic arm (agent). The carton_2 appears to be placed on the floor near the right side of the room. The robotic arm is positioned towards the left side of the room, extending towards the center. Given the distance between the carton_2 and the robotic arm, and considering the typical range of motion for a robotic arm, it seems unlikely that the robotic arm could reach the carton_2 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 9.648520062910393e-06, 7.1648396442469675e-06, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plate_1": ["no", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_2": ["no", 1.3782411770080216e-05, 1.4627697055402678e-05, "To determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["no", 9.648341801948845e-06, 8.070491276157554e-06, "To determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can actually grasp the plate_3.", true, "<explanation>\nTo determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, we cannot definitively say whether it can actually grasp the plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable saucepan_1": ["yes", 1.3762931303062942e-05, 6.468942592618987e-05, "To determine if the saucepan_1 is in reach of the agent, we need to assess the distance between the agent's position and the location of the saucepan_1. The image shows the robotic arm (agent) positioned near the center of the room, and the saucepan_1 is located towards the left side of the room. Given the agent's position and the orientation of the robotic arm, it appears that the agent could potentially reach the saucepan_1 without any significant obstruction.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".", false, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, we need to assess the distance between the agent's position and the location of the saucepan_1. The image shows the robotic arm (agent) positioned near the center of the room, and the saucepan_1 is located towards the left side of the room. Given the agent's position and the orientation of the robotic arm, it appears that the agent could potentially reach the saucepan_1 without any significant obstruction.\n\nTherefore, based on the visual information provided, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["no", 1.2976137441000901e-05, 3.569521868485026e-05, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach the objects on the floor.\n\n2. **Shelf_1 Position**: Shelf_1 is located on the left side of the image, near the wall. It is positioned at a lower level compared to the agent's current position.\n\n3. **Reachability Analysis**:\n   - The robotic arm is extended towards the right, which suggests it might be able to reach objects on the right side.\n   - However, the shelf_1 is on the left side, and the robotic arm is currently oriented towards the right, indicating it may not be directly aligned with the shelf_1.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can easily reach the shelf_1 without repositioning itself.", true, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a height where it could potentially reach the objects on the floor.\n\n2. **Shelf_1 Position**: Shelf_1 is located on the left side of the image, near the wall. It is positioned at a lower level compared to the agent's current position.\n\n3. **Reachability Analysis**:\n   - The robotic arm is extended towards the right, which suggests it might be able to reach objects on the right side.\n   - However, the shelf_1 is on the left side, and the robotic arm is currently oriented towards the right, indicating it may not be directly aligned with the shelf_1.\n\nGiven these observations, the robotic arm does not appear to be in a position where it can easily reach the shelf_1 without repositioning itself.\n\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["yes", 9.082645192393102e-06, 1.8553368136053905e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be positioned such that its end-effector (the part that can hold objects) is extended towards the cabinet_1. Given the length of the robotic arm and its current position, it seems plausible that the end-effector could reach the cabinet_1 without any obstructions.\n\nBased on this analysis, the robotic arm appears to be in a position where it can potentially reach the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image.\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm appears to be positioned such that its end-effector (the part that can hold objects) is extended towards the cabinet_1. Given the length of the robotic arm and its current position, it seems plausible that the end-effector could reach the cabinet_1 without any obstructions.\n\nBased on this analysis, the robotic arm appears to be in a position where it can potentially reach the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 1.024080120259896e-05, 7.60465809435118e-06, "To determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned above the carton_2, suggesting that it could potentially reach it. However, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image.\n\nSince the image does not provide enough detail about the robotic arm's capabilities, we cannot definitively conclude whether the carton_2 is within its reach. Therefore, based on the information provided, we cannot answer this question with certainty.", true, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned above the carton_2, suggesting that it could potentially reach it. However, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image.\n\nSince the image does not provide enough detail about the robotic arm's capabilities, we cannot definitively conclude whether the carton_2 is within its reach. Therefore, based on the information provided, we cannot answer this question with certainty.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 8.055410944507457e-06, 0.00014886072312947363, "To determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.", false, "<explanation>\nTo determine if the agent is holding the plate_2, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Look for the plate_2: The plate_2 is located on the floor near the center of the image.\n3. Check if the agent is interacting with the plate_2: The robotic arm appears to be positioned above the plate_2, suggesting it might be attempting to pick it up.\n\nBased on this analysis, the agent seems to be in a position to hold the plate_2, although it's not explicitly shown as being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.3788083379040472e-05, 1.0238813956675585e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 2, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 3, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 4, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 5, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 6, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 7, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 8, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 9, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 10, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 11, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 12, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 13, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 14, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 15, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 16, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 17, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 18, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 19, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 20, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 21, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 22, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 23, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 24, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 25, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 26, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 27, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 28, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 29, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5846153846153846, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.631578947368421, "no_correct": 36, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.55, "no_correct": 11, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 12, "no_total": 18}}}, "step": 30, "actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 5.318769581208471e-06, 1.7491560356575064e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm appears to be extended towards the floor where the ball_1 is located. Given the length of the robotic arm and its current position, it seems plausible that the arm could reach down to grab the ball_1.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the ball_1. The robotic arm appears to be extended towards the floor where the ball_1 is located. Given the length of the robotic arm and its current position, it seems plausible that the arm could reach down to grab the ball_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["no", 5.193028300709557e-06, 0.0003772964410018176, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Shelf_1 Position**: The shelf_1 appears to be located on the far wall, near the door, and is positioned at a height that seems to be out of the reach of the robotic arm when it is extended.\n3. **Reach Assessment**: The robotic arm's current position and extension do not extend far enough to reach the shelf_1, which is on the opposite wall and at a higher position.\n\nGiven these observations, the shelf_1 is not within the reach of the agent as currently positioned and extended.", true, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Shelf_1 Position**: The shelf_1 appears to be located on the far wall, near the door, and is positioned at a height that seems to be out of the reach of the robotic arm when it is extended.\n3. **Reach Assessment**: The robotic arm's current position and extension do not extend far enough to reach the shelf_1, which is on the opposite wall and at a higher position.\n\nGiven these observations, the shelf_1 is not within the reach of the agent as currently positioned and extended.\n</explanation>\n<answer>No</answer>", true], "reachable cabinet_1": ["no", 6.306182058324339e-06, 0.0001478639751439914, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the room, near the back wall.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1 if it were extended further into the room. However, the exact reach of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can actually reach the cabinet_1 without additional information about its range of motion.\n\nGiven the limited information and the fact that the robotic arm's reach is not explicitly shown, we cannot definitively say whether the cabinet_1 is in reach of the agent based solely on this image.", true, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the room, near the back wall.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1 if it were extended further into the room. However, the exact reach of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can actually reach the cabinet_1 without additional information about its range of motion.\n\nGiven the limited information and the fact that the robotic arm's reach is not explicitly shown, we cannot definitively say whether the cabinet_1 is in reach of the agent based solely on this image.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 9.089769264392089e-06, 1.7494925486971624e-05, "To determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the carton_1 is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual proximity, we can infer that it might be within the reach of the robotic arm.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially interact with it. However, without more specific information about the exact dimensions and reach capabilities of the robotic arm, it's difficult to definitively state whether the carton_1 is within its reach.\n\nSince the question asks if the carton_1 is in reach of the agent, and based on the visual proximity, we can infer that it might be within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 1.298092320212163e-05, 4.530787919065915e-05, "To determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can actually grasp the plate_2.\n\nSince the question asks if the plate_2 is in reach, and based on the visual proximity, it seems plausible that the robotic arm could reach the plate_2.", false, "<explanation>\nTo determine if the plate_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_2. The robotic arm appears to be positioned close to the plate_2, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can actually grasp the plate_2.\n\nSince the question asks if the plate_2 is in reach, and based on the visual proximity, it seems plausible that the robotic arm could reach the plate_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 1.298897223023232e-05, 1.74915785464691e-05, "To determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can actually grasp the plate_3.\n\nSince the question asks if the plate_3 is in reach, and based on the visual proximity, it seems plausible that the robotic arm could reach the plate_3.", false, "<explanation>\nTo determine if the plate_3 is in reach of the agent, we need to consider the position of the robotic arm relative to the plate_3. The robotic arm appears to be positioned close to the plate_3, suggesting that it could potentially reach it. However, without more specific information about the exact dimensions and range of the robotic arm, it's difficult to definitively say whether it can actually grasp the plate_3.\n\nSince the question asks if the plate_3 is in reach, and based on the visual proximity, it seems plausible that the robotic arm could reach the plate_3.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 1.2195756426081061e-05, 0.00013189957826398313, "To determine if the saucepan_1 is in reach of the agent, we need to assess the position and orientation of both the saucepan and the robotic arm (agent). From the image, the robotic arm appears to be positioned in a way that suggests it could potentially reach the saucepan_1. However, without specific information about the exact dimensions and reach range of the robotic arm, we cannot definitively conclude whether the saucepan is within its reach.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we must consider this as an open-ended scenario where the answer depends on the specific parameters not provided in the image.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, we need to assess the position and orientation of both the saucepan and the robotic arm (agent). From the image, the robotic arm appears to be positioned in a way that suggests it could potentially reach the saucepan_1. However, without specific information about the exact dimensions and reach range of the robotic arm, we cannot definitively conclude whether the saucepan is within its reach.\n\nSince the image does not provide enough detail to confirm the exact reach capability of the robotic arm, we must consider this as an open-ended scenario where the answer depends on the specific parameters not provided in the image.\n</explanation>\n<answer>No</answer>", true], "reachable shelf_1": ["no", 1.0217912858934142e-05, 6.467540515586734e-05, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Shelf Position**: The shelf_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm's reach seems limited based on its current position and orientation. It does not appear to have enough length to extend to the shelf_1 from its current location.\n\nGiven these observations, the robotic arm does not seem to be able to reach the shelf_1 with its current configuration.", true, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be positioned in the foreground, extending towards the right side of the image.\n2. **Shelf Position**: The shelf_1 is located further back in the room, near the center-left of the image.\n3. **Reachability**: The robotic arm's reach seems limited based on its current position and orientation. It does not appear to have enough length to extend to the shelf_1 from its current location.\n\nGiven these observations, the robotic arm does not seem to be able to reach the shelf_1 with its current configuration.\n\n</explanation>\n<answer>No</answer>", true], "reachable cabinet_1": ["yes", 8.060486834438052e-06, 3.169065894326195e-05, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a certain height and angle relative to the floor.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image. It is a rectangular object with a door, suggesting it is a typical cabinet.\n\n3. **Reach Assessment**: The robotic arm's reach needs to be evaluated against the distance and angle to the cabinet_1. Given the perspective and the length of the robotic arm, it seems plausible that the arm could extend far enough to reach the cabinet_1 without any obstructions.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the foreground, extending towards the right side of the image. It appears to be positioned at a certain height and angle relative to the floor.\n\n2. **Cabinet Position**: The cabinet_1 is located further back in the room, near the center-left of the image. It is a rectangular object with a door, suggesting it is a typical cabinet.\n\n3. **Reach Assessment**: The robotic arm's reach needs to be evaluated against the distance and angle to the cabinet_1. Given the perspective and the length of the robotic arm, it seems plausible that the arm could extend far enough to reach the cabinet_1 without any obstructions.\n\nConsidering these points, the robotic arm appears to have sufficient reach to interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 1.0869303878280334e-05, 1.0241193194815423e-05, "To determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.", true, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to consider the position of the robotic arm relative to the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_1, plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_1": ["no", 8.55000143928919e-06, 0.00014887022553011775, "To determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.", false, "<explanation>\nTo determine if the agent is holding the plate_1, I need to look at the image and see if the robotic arm (the agent) is in contact with the plate_1 object. Upon examining the image, the robotic arm appears to be positioned near the plate_1, suggesting that it might be holding it. However, without more detailed information or a clearer view, it's difficult to definitively say whether the agent is actually holding the plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_1": ["yes", 1.749252260196954e-05, 1.856535345723387e-05, "To determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.", true, "<explanation>\nTo determine if the plate_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the plate_1. The robotic arm appears to be positioned close to the plate_1, suggesting that it could potentially reach it. However, without specific measurements or a clear view of the exact dimensions and range of the robotic arm, it's difficult to definitively state whether it is within reach. Given the proximity and the typical capabilities of robotic arms in such simulations, it is reasonable to assume that the plate_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 2, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 3, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 4, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 5, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 6, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 7, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 8, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 9, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 10, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 11, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 12, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 13, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 14, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 15, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 16, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 17, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 18, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 19, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 20, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 21, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 22, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 23, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 24, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 25, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 26, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 27, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 28, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 29, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5538461538461539, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5789473684210527, "no_correct": 33, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 8, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.6111111111111112, "no_correct": 11, "no_total": 18}}}, "step": 30, "actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 5.988879820506554e-06, 2.0903242329950444e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is positioned vertically in the center-right part of the image, extending upwards from the floor.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, primarily vertical, as it is not shown to extend horizontally or reach down to the floor.\n\nGiven these observations, the ball is on the floor and the robotic arm is positioned above it, suggesting that the ball is not within the reach of the robotic arm unless it can move horizontally or extend downward, which is not evident from the image.\n\nTherefore, based on the visual information provided, the ball is not in reach of the agent.", false, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is positioned vertically in the center-right part of the image, extending upwards from the floor.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, primarily vertical, as it is not shown to extend horizontally or reach down to the floor.\n\nGiven these observations, the ball is on the floor and the robotic arm is positioned above it, suggesting that the ball is not within the reach of the robotic arm unless it can move horizontally or extend downward, which is not evident from the image.\n\nTherefore, based on the visual information provided, the ball is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 5.988879820506554e-06, 2.0903242329950444e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is positioned vertically in the center-right part of the image, extending upwards from the floor.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, primarily vertical, as it is not shown to extend horizontally or reach down to the floor.\n\nGiven these observations, the ball is on the floor and the robotic arm is positioned above it, suggesting that the ball is not within the reach of the robotic arm unless it can move horizontally or extend downward, which is not evident from the image.\n\nTherefore, based on the visual information provided, the ball is not in reach of the agent.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Robotic Arm**: The robotic arm is positioned vertically in the center-right part of the image, extending upwards from the floor.\n3. **Reach of the Robotic Arm**: The robotic arm appears to have a limited range of motion, primarily vertical, as it is not shown to extend horizontally or reach down to the floor.\n\nGiven these observations, the ball is on the floor and the robotic arm is positioned above it, suggesting that the ball is not within the reach of the robotic arm unless it can move horizontally or extend downward, which is not evident from the image.\n\nTherefore, based on the visual information provided, the ball is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 7.158241260185605e-06, 2.4984716219478287e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Agent**: The robotic arm is positioned towards the center-right of the image, extending upwards.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm and its structure. It seems capable of reaching objects within a certain vertical and horizontal distance from its current position.\n\nGiven these observations, the ball is positioned below the robotic arm and appears to be within the vertical range of the arm. However, the horizontal distance between the ball and the arm suggests that the arm may not be able to reach the ball directly without moving significantly.\n\nSince the ball is within the vertical range of the arm but not necessarily within its horizontal reach, we cannot definitively say it is in reach based solely on this information.", false, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Agent**: The robotic arm is positioned towards the center-right of the image, extending upwards.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm and its structure. It seems capable of reaching objects within a certain vertical and horizontal distance from its current position.\n\nGiven these observations, the ball is positioned below the robotic arm and appears to be within the vertical range of the arm. However, the horizontal distance between the ball and the arm suggests that the arm may not be able to reach the ball directly without moving significantly.\n\nSince the ball is within the vertical range of the arm but not necessarily within its horizontal reach, we cannot definitively say it is in reach based solely on this information.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 7.158241260185605e-06, 2.4984716219478287e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Agent**: The robotic arm is positioned towards the center-right of the image, extending upwards.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm and its structure. It seems capable of reaching objects within a certain vertical and horizontal distance from its current position.\n\nGiven these observations, the ball is positioned below the robotic arm and appears to be within the vertical range of the arm. However, the horizontal distance between the ball and the arm suggests that the arm may not be able to reach the ball directly without moving significantly.\n\nSince the ball is within the vertical range of the arm but not necessarily within its horizontal reach, we cannot definitively say it is in reach based solely on this information.", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position of the ball relative to the robotic arm's current position and its range of motion.\n\n1. **Position of the Ball**: The ball is located on the floor near the bottom left corner of the image.\n2. **Position of the Agent**: The robotic arm is positioned towards the center-right of the image, extending upwards.\n3. **Reach of the Agent**: The robotic arm appears to have a limited range of motion, as indicated by the visible part of the arm and its structure. It seems capable of reaching objects within a certain vertical and horizontal distance from its current position.\n\nGiven these observations, the ball is positioned below the robotic arm and appears to be within the vertical range of the arm. However, the horizontal distance between the ball and the arm suggests that the arm may not be able to reach the ball directly without moving significantly.\n\nSince the ball is within the vertical range of the arm but not necessarily within its horizontal reach, we cannot definitively say it is in reach based solely on this information.\n\n</explanation>\n<answer>No</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 4.448007075552596e-06, 2.09068111871602e-05, "To determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm.\n\n1. **Position of the Ball**: The ball is located on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is extended towards the right side of the room, with its end effector (the part that can hold objects) pointing downwards.\n3. **Reachability**: The robotic arm appears to be positioned such that its end effector could potentially reach the ball if it were to move downward and extend towards the ball.\n\nGiven these observations, the robotic arm seems capable of reaching the ball if it were to adjust its position and orientation accordingly.\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the ball_1 is in reach of the agent, we need to consider the position and orientation of both the ball and the robotic arm.\n\n1. **Position of the Ball**: The ball is located on the floor near the center of the room.\n2. **Position of the Robotic Arm**: The robotic arm is extended towards the right side of the room, with its end effector (the part that can hold objects) pointing downwards.\n3. **Reachability**: The robotic arm appears to be positioned such that its end effector could potentially reach the ball if it were to move downward and extend towards the ball.\n\nGiven these observations, the robotic arm seems capable of reaching the ball if it were to adjust its position and orientation accordingly.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["no", 4.612307748175226e-06, 0.00033510453067719936, "To determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be extended towards the right side of the image, suggesting it is positioned to interact with objects in that area.\n2. **Shelf_1 Position**: The shelf_1 is located on the far right side of the image, near the edge of the room.\n3. **Reachability**: The robotic arm's current position and orientation suggest it could potentially reach the shelf_1 if it were to extend further to the right. However, the exact reach distance of the robotic arm is not specified, so we cannot definitively say it is within reach without more information.\n\nSince the exact reach distance is not provided, we cannot conclusively state whether the shelf_1 is in reach of the agent based solely on the visual information.", true, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the shelf_1.\n\n1. **Agent Position**: The robotic arm appears to be extended towards the right side of the image, suggesting it is positioned to interact with objects in that area.\n2. **Shelf_1 Position**: The shelf_1 is located on the far right side of the image, near the edge of the room.\n3. **Reachability**: The robotic arm's current position and orientation suggest it could potentially reach the shelf_1 if it were to extend further to the right. However, the exact reach distance of the robotic arm is not specified, so we cannot definitively say it is within reach without more information.\n\nSince the exact reach distance is not provided, we cannot conclusively state whether the shelf_1 is in reach of the agent based solely on the visual information.\n\n</explanation>\n<answer>No</answer>", true], "reachable cabinet_1": ["yes", 5.593202331510838e-06, 0.0001664025039644912, "To determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the room, near the back wall.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.", false, "<explanation>\nTo determine if the cabinet_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the cabinet_1.\n\n1. **Agent Position**: The robotic arm is visible in the image, extending from the right side towards the center of the room.\n2. **Cabinet Position**: The cabinet_1 is located on the right side of the room, near the back wall.\n3. **Reachability**: The robotic arm appears to be positioned such that it could potentially reach the cabinet_1. The arm's length and angle suggest it has enough range to extend towards the cabinet.\n\nGiven these observations, the robotic arm seems capable of reaching the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "holding ball_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "holding ball_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.9, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["no", 5.014999260311015e-06, 2.6056234219140606e-06, "To determine if plaything_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and plaything_1. The robotic arm appears to be positioned close to plaything_1, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.", false, "<explanation>\nTo determine if plaything_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and plaything_1. The robotic arm appears to be positioned close to plaything_1, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n</explanation>\n<answer>No</answer>", false], "reachable carton_1": ["yes", 7.164693670347333e-06, 6.360570750985062e-06, "To determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The robotic arm is positioned near the carton_1, and its end effector appears to be close enough to potentially interact with the carton_1. Given the proximity and orientation of the robotic arm, it seems that the carton_1 is indeed within the reach of the agent.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the spatial relationship between the carton_1 and the robotic arm (agent). The robotic arm is positioned near the carton_1, and its end effector appears to be close enough to potentially interact with the carton_1. Given the proximity and orientation of the robotic arm, it seems that the carton_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 9.090124876820482e-06, 4.72292049380485e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity suggested by the visual alignment, we can infer that the carton_2 is likely within the reach of the robotic arm.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity suggested by the visual alignment, we can infer that the carton_2 is likely within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["no", 1.1527616152307019e-05, 1.2234626410645433e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. The table_1 is located further back in the room, near the wall and some furniture.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the table_1 if it were extended further.\n4. However, the exact reach of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the table_1 from its current position.\n\nGiven these observations, we cannot definitively conclude that the table_1 is in reach of the agent based solely on the provided information.", true, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. The table_1 is located further back in the room, near the wall and some furniture.\n3. The robotic arm appears to be oriented in such a way that it could potentially reach the table_1 if it were extended further.\n4. However, the exact reach of the robotic arm is not specified, and the image does not provide enough detail to confirm whether the arm can physically reach the table_1 from its current position.\n\nGiven these observations, we cannot definitively conclude that the table_1 is in reach of the agent based solely on the provided information.\n\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.9913013501500245e-06, 4.5336757466429844e-05, "To determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I'll follow these steps:\n\n1. Identify the agent: The agent is the robotic arm visible in the image.\n2. Identify the plaything_1: This object is located at the bottom right corner of the image, as indicated by the red bounding box labeled 'plaything_1'.\n3. Check if the agent is interacting with the plaything_1: The robotic arm appears to be positioned near the plaything_1, suggesting it might be interacting with it.\n\nSince the robotic arm is close to the plaything_1 and seems to be in a position where it could be holding it, we can infer that the agent is likely holding the plaything_1.\n\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 8.070733201748226e-06, 4.193278527964139e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach based solely on this visual information.\n</explanation>\n<answer>No</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 1, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 2, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 3, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 4, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 5, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 6, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 7, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 8, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 9, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 10, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 11, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 12, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 13, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 14, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 15, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 16, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 17, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 18, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 19, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 20, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 21, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 22, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 23, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 24, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 25, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 26, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 27, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 28, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 29, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.8095238095238095, "no_correct": 51, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7272727272727273, "no_correct": 16, "no_total": 22}}}, "step": 30, "actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}], "remaining_actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["no", 7.165927854657639e-06, 5.6476651479897555e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm appears to be positioned close to the plaything_1, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its operational reach.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm appears to be positioned close to the plaything_1, suggesting that it could potentially interact with it. However, without more specific information about the range of motion of the robotic arm, we cannot definitively say whether it is within its operational reach.\n</explanation>\n<answer>No</answer>", false], "reachable carton_1": ["yes", 6.3614370446885005e-06, 4.723903657577466e-06, "To determine if the carton_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity indicated in the image, we can infer that the carton_1 is likely within the reach of the robotic arm.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_1. The robotic arm appears to be positioned close to the carton_1, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity indicated in the image, we can infer that the carton_1 is likely within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["yes", 6.361011401168071e-06, 4.7235876081686e-06, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity indicated by the red bounding box, we can infer that the carton_2 is likely within the reach of the robotic arm.", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the robotic arm (the agent) and the carton_2. The robotic arm appears to be positioned close to the carton_2, suggesting that it could potentially reach it. However, without specific measurements or a clear indication of the arm's range, we cannot definitively conclude whether it is within reach.\n\nSince the question asks for a yes or no answer based on the provided information, and considering the proximity indicated by the red bounding box, we can infer that the carton_2 is likely within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.2230315405759029e-05, 1.6469934053020552e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned near the center-right of the image, extending towards the left side.\n2. **Table Position**: The table_1 is located on the left side of the image, closer to the foreground.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the table_1 without any significant obstruction. The arm's length and angle suggest it has enough range to extend towards the table.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned near the center-right of the image, extending towards the left side.\n2. **Table Position**: The table_1 is located on the left side of the image, closer to the foreground.\n3. **Reachability**: The robotic arm appears to be oriented in such a way that it could potentially reach the table_1 without any significant obstruction. The arm's length and angle suggest it has enough range to extend towards the table.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.604674920003163e-06, 6.751164164597867e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm is extended towards the plaything_1, indicating that it is positioned to interact with it. The plaything_1 appears to be on the floor near the robotic arm, suggesting that the arm could potentially pick it up.\n\nGiven this analysis, the plaything_1 is indeed in the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 1, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 2, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 3, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 4, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 5, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 6, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 7, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 8, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 9, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 10, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 11, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 12, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 13, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 14, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 15, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 16, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 17, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 18, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 19, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 20, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 21, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 22, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 23, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 24, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 25, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 26, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 27, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 28, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 29, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7872340425531915, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.8571428571428571, "no_correct": 36, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 30, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 8.566112228436396e-06, 8.566112228436396e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm appears to be positioned above the plaything_1, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.\n\nSince the question asks if the plaything_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the plaything_1, we can infer that it is within the agent's reach.", true, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_1. The robotic arm appears to be positioned above the plaything_1, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.\n\nSince the question asks if the plaything_1 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the plaything_1, we can infer that it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["no", 8.561519280192442e-06, 1.969986260519363e-05, "To determine if the plaything_4 is in reach of the agent, we need to consider the position of both the plaything_4 and the robotic arm (agent). The plaything_4 appears to be located near the center of the room, while the robotic arm is positioned towards the right side of the image. Given the distance between them and the orientation of the robotic arm, it seems that the plaything_4 is not directly in the path of the robotic arm's reach.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nTo determine if the plaything_4 is in reach of the agent, we need to consider the position of both the plaything_4 and the robotic arm (agent). The plaything_4 appears to be located near the center of the room, while the robotic arm is positioned towards the right side of the image. Given the distance between them and the orientation of the robotic arm, it seems that the plaything_4 is not directly in the path of the robotic arm's reach.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_2": ["yes", 5.959241207165178e-06, 0.00014829864085186273, "To determine if the carton_2 is in reach of the agent, we need to assess the distance between the agent (the robotic arm) and the carton_2. The robotic arm appears to be positioned above the floor, and the carton_2 is located on the floor near the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor to interact with the carton_2.\n\nHowever, without specific information about the exact dimensions of the robotic arm and the carton_2, as well as the precise positioning of both, it's difficult to definitively state whether the carton_2 is within the robotic arm's reach. For the sake of this question, let's assume the robotic arm has sufficient reach to interact with the carton_2 based on its general appearance and the typical capabilities of such arms in similar simulations.\n\nTherefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the carton_2 is in reach of the agent, we need to assess the distance between the agent (the robotic arm) and the carton_2. The robotic arm appears to be positioned above the floor, and the carton_2 is located on the floor near the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the floor to interact with the carton_2.\n\nHowever, without specific information about the exact dimensions of the robotic arm and the carton_2, as well as the precise positioning of both, it's difficult to definitively state whether the carton_2 is within the robotic arm's reach. For the sake of this question, let's assume the robotic arm has sufficient reach to interact with the carton_2 based on its general appearance and the typical capabilities of such arms in similar simulations.\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.0234133696940262e-05, 1.46270413097227e-05, "To determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center-right of the image, extending upwards.\n2. **Table Position**: The table_1 is located towards the back-left of the room, near the wall.\n3. **Reachability**: The robotic arm appears to be able to extend its arm towards the table_1 without any obstructions. The angle and length of the robotic arm suggest it could reach the table_1.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the table_1.\n\n1. **Agent Position**: The robotic arm is positioned at the center-right of the image, extending upwards.\n2. **Table Position**: The table_1 is located towards the back-left of the room, near the wall.\n3. **Reachability**: The robotic arm appears to be able to extend its arm towards the table_1 without any obstructions. The angle and length of the robotic arm suggest it could reach the table_1.\n\nGiven these observations, the robotic arm seems capable of reaching the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 7.605192877235822e-06, 7.165714123402722e-06, "To determine if the plaything_1 is in reach of the agent, we need to consider the position of both the plaything_1 and the robotic arm (agent). The plaything_1 appears to be on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the plaything_1. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_1.\n\nHowever, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the plaything_1. For the purpose of this question, we assume that the robotic arm has sufficient reach to interact with the plaything_1.\n\nTherefore, based on the visual evidence and the assumption that the robotic arm can reach the plaything_1, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position of both the plaything_1 and the robotic arm (agent). The plaything_1 appears to be on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the plaything_1. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach down to the plaything_1.\n\nHowever, without specific information about the exact dimensions and reach capabilities of the robotic arm, we cannot definitively conclude whether it can reach the plaything_1. For the purpose of this question, we assume that the robotic arm has sufficient reach to interact with the plaything_1.\n\nTherefore, based on the visual evidence and the assumption that the robotic arm can reach the plaything_1, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding plaything_4": ["no", 1.0227297934761737e-05, 9.252154995920137e-05, "To determine if the agent is holding the plaything_4, I need to identify both the agent (the robotic arm) and the plaything_4 in the image. The robotic arm is visible in the upper right corner of the image, and it appears to be interacting with an object. The plaything_4 is located near the center of the image, on the floor. The robotic arm seems to be positioned above this object, suggesting it might be holding it. However, without more detailed information about the exact interaction, it's not definitive.", true, "<explanation>\nTo determine if the agent is holding the plaything_4, I need to identify both the agent (the robotic arm) and the plaything_4 in the image. The robotic arm is visible in the upper right corner of the image, and it appears to be interacting with an object. The plaything_4 is located near the center of the image, on the floor. The robotic arm seems to be positioned above this object, suggesting it might be holding it. However, without more detailed information about the exact interaction, it's not definitive.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_1": ["yes", 6.738989213772584e-06, 0.00010416813165647909, "To determine if the agent is holding the plaything_1, we need to identify both the agent (the robotic arm) and the object labeled as plaything_1. The robotic arm is visible in the image, and it appears to be interacting with an object. The object being held by the robotic arm is labeled as plaything_1. Therefore, the agent is indeed holding the plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, we need to identify both the agent (the robotic arm) and the object labeled as plaything_1. The robotic arm is visible in the image, and it appears to be interacting with an object. The object being held by the robotic arm is labeled as plaything_1. Therefore, the agent is indeed holding the plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop plaything_1,plaything_4": ["no", 3.110145826212829e-06, 7.292503141798079e-05, "To determine if plaything_1 is on top of plaything_4, we need to identify both objects in the image. plaything_1 appears to be a red object located near the center of the image, while plaything_4 seems to be a black object, possibly a piece of furniture, positioned below plaything_1. Based on their relative positions, plaything_1 is not directly on top of plaything_4; instead, they appear to be at different levels in the scene.", true, "<explanation>\nTo determine if plaything_1 is on top of plaything_4, we need to identify both objects in the image. plaything_1 appears to be a red object located near the center of the image, while plaything_4 seems to be a black object, possibly a piece of furniture, positioned below plaything_1. Based on their relative positions, plaything_1 is not directly on top of plaything_4; instead, they appear to be at different levels in the scene.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop plaything_1,carton_2": ["no", 4.185144462098833e-06, 9.246035187970847e-05, "I need to identify the positions of 'plaything_1' and 'carton_2'. From the image, 'plaything_1' appears to be a red toy airplane located near the center of the room. 'Carton_2' seems to be a cardboard box positioned on the floor, slightly to the right of the center. The toy airplane is not on top of the cardboard box; instead, it is placed on the floor next to it.", true, "<explanation>\nI need to identify the positions of 'plaything_1' and 'carton_2'. From the image, 'plaything_1' appears to be a red toy airplane located near the center of the room. 'Carton_2' seems to be a cardboard box positioned on the floor, slightly to the right of the center. The toy airplane is not on top of the cardboard box; instead, it is placed on the floor next to it.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_1,plaything_4": ["yes", 5.008270818507299e-06, 4.022242137580179e-05, "To determine if plaything_1 is next to plaything_4, we need to identify their positions relative to each other. From the image, plaything_1 appears to be a red object located near the center of the room, while plaything_4 seems to be a black object positioned further back and to the right. The red object (plaything_1) is indeed adjacent to the black object (plaything_4), as they are close enough to be considered next to each other in this context.", false, "<explanation>\nTo determine if plaything_1 is next to plaything_4, we need to identify their positions relative to each other. From the image, plaything_1 appears to be a red object located near the center of the room, while plaything_4 seems to be a black object positioned further back and to the right. The red object (plaything_1) is indeed adjacent to the black object (plaything_4), as they are close enough to be considered next to each other in this context.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto plaything_1,carton_2": ["yes", 5.637358299281914e-06, 5.744597365264781e-05, "To determine if plaything_1 is next to carton_2, I'll first identify both objects in the image. plaything_1 appears to be a red toy airplane located near the center of the image. carton_2 seems to be a rectangular object, possibly a box, positioned further back and to the right of the toy airplane. The toy airplane is indeed located close to the box, suggesting they are next to each other.", false, "<explanation>\nTo determine if plaything_1 is next to carton_2, I'll first identify both objects in the image. plaything_1 appears to be a red toy airplane located near the center of the image. carton_2 seems to be a rectangular object, possibly a box, positioned further back and to the right of the toy airplane. The toy airplane is indeed located close to the box, suggesting they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_1,plaything_1": {"before": null, "after": false}, "ontop plaything_1,plaything_2": {"before": false, "after": false}, "ontop plaything_1,plaything_3": {"before": false, "after": false}, "ontop plaything_1,carton_1": {"before": false, "after": false}, "ontop plaything_1,table_1": {"before": false, "after": false}, "nextto plaything_1,plaything_1": {"before": null, "after": false}, "nextto plaything_1,plaything_2": {"before": false, "after": false}, "nextto plaything_1,plaything_3": {"before": false, "after": false}, "nextto plaything_1,carton_1": {"before": false, "after": false}, "nextto plaything_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 4.450351752893766e-06, 9.648406376072671e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the plaything_2: In the image, the plaything_2 appears to be the red toy airplane located near the center-right of the room.\n2. Identify the agent: The agent is described as a robotic arm, which is likely the black object at the top right corner of the image.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned above the toy airplane, suggesting that it could potentially reach down to interact with the toy airplane.\n\nGiven these observations, it seems that the robotic arm (agent) is indeed in a position where it could reach the plaything_2 (the toy airplane).", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the plaything_2: In the image, the plaything_2 appears to be the red toy airplane located near the center-right of the room.\n2. Identify the agent: The agent is described as a robotic arm, which is likely the black object at the top right corner of the image.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned above the toy airplane, suggesting that it could potentially reach down to interact with the toy airplane.\n\nGiven these observations, it seems that the robotic arm (agent) is indeed in a position where it could reach the plaything_2 (the toy airplane).\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 6.359347025863826e-06, 1.086602333089104e-05, "To determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be placed on the floor near the left side of the room. The robotic arm is positioned above the floor, closer to the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the carton_1 from its current position.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be placed on the floor near the left side of the room. The robotic arm is positioned above the floor, closer to the center of the room. Given the typical range of motion for a robotic arm, it seems plausible that the robotic arm could reach the carton_1 from its current position.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 3.951226062781643e-06, 9.091673746297602e-06, "To determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the plaything_2: In the image, the plaything_2 appears to be the red toy airplane located near the center-right of the room.\n2. Identify the agent: The agent is described as a robotic arm, which is likely represented by the black object at the top right corner of the image.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned above the toy airplane, suggesting that it could potentially reach down to interact with the toy airplane.\n\nGiven these observations, the robotic arm (agent) is indeed in a position where it could potentially reach the plaything_2 (the toy airplane).\n\nTherefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, we need to consider the following:\n\n1. Identify the plaything_2: In the image, the plaything_2 appears to be the red toy airplane located near the center-right of the room.\n2. Identify the agent: The agent is described as a robotic arm, which is likely represented by the black object at the top right corner of the image.\n3. Assess the distance between the agent and the plaything_2: The robotic arm is positioned above the toy airplane, suggesting that it could potentially reach down to interact with the toy airplane.\n\nGiven these observations, the robotic arm (agent) is indeed in a position where it could potentially reach the plaything_2 (the toy airplane).\n\nTherefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, true, true], "all_correct": true}, "effects_results": {"nextto plaything_1,plaything_2": ["yes", 8.069777322816662e-06, 1.8568356608739123e-05, "To determine if plaything_1 is next to plaything_2, I'll first identify their positions. plaything_1 appears to be a pink object located near the bottom left corner of the image. plaything_2 seems to be a yellow object situated slightly above and to the right of plaything_1. They are positioned close to each other, suggesting they are indeed next to each other.", true, "<explanation>\nTo determine if plaything_1 is next to plaything_2, I'll first identify their positions. plaything_1 appears to be a pink object located near the bottom left corner of the image. plaything_2 seems to be a yellow object situated slightly above and to the right of plaything_1. They are positioned close to each other, suggesting they are indeed next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 5.314580903359456e-06, 2.8137979825260118e-05, "To determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be placed on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image. The robotic arm seems to be oriented in such a way that it could potentially reach the carton_1 if it were to move its arm towards the left side of the room.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which are not provided in the description. Without this information, we cannot definitively say whether the carton_1 is within the reach of the agent.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be placed on the floor near the center of the room, while the robotic arm is positioned towards the right side of the image. The robotic arm seems to be oriented in such a way that it could potentially reach the carton_1 if it were to move its arm towards the left side of the room.\n\nHowever, the exact reachability would depend on the specific dimensions and range of the robotic arm, which are not provided in the description. Without this information, we cannot definitively say whether the carton_1 is within the reach of the agent.\n</explanation>\n<answer>No</answer>", false], "open carton_1": ["no", 3.467707074378268e-06, 0.00021074250980746, "To determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not provide enough detail to identify specific objects like cartons or their states. Without clear visual confirmation, it's impossible to accurately determine whether the carton_1 is open.", true, "<explanation>\nTo determine if the carton_1 is open, I need to locate the carton_1 in the image and check its state. However, the image does not provide enough detail to identify specific objects like cartons or their states. Without clear visual confirmation, it's impossible to accurately determine whether the carton_1 is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["yes", 7.5873767855227925e-06, 0.00014881092647556216, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible on the right side of the image, and it appears to be interacting with an object. The plaything_1 is located on the floor near the center of the image, and it seems to be in the path of the robotic arm's movement. Given this interaction, it is reasonable to conclude that the agent is holding the plaything_1.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible on the right side of the image, and it appears to be interacting with an object. The plaything_1 is located on the floor near the center of the image, and it seems to be in the path of the robotic arm's movement. Given this interaction, it is reasonable to conclude that the agent is holding the plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding plaything_2": ["no", 8.056646038312465e-06, 0.00010416975419502705, "To determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is visible in the image, and it appears to be interacting with an object. The plaything_2 is also present in the scene. However, based on the visual information provided, it seems that the robotic arm is not directly holding the plaything_2; instead, it appears to be interacting with another object nearby.", true, "<explanation>\nTo determine if the agent is holding the plaything_2, I need to identify both the agent (the robotic arm) and the plaything_2. The robotic arm is visible in the image, and it appears to be interacting with an object. The plaything_2 is also present in the scene. However, based on the visual information provided, it seems that the robotic arm is not directly holding the plaything_2; instead, it appears to be interacting with another object nearby.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plaything_1, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["no", 8.546608114556875e-06, 0.00014881114475429058, "To determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.", false, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to identify both the agent (the robotic arm) and the plaything_1 in the image. The robotic arm is visible in the upper right corner of the image. Plaything_1 appears to be a small object near the center of the floor, marked with a red bounding box. The robotic arm is positioned above this object, suggesting it might be interacting with it. However, without more detailed information about the exact interaction, we cannot definitively say the agent is holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_2": ["yes", 9.644608326198068e-06, 1.1530200936249457e-05, "To determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, we need to consider the position of both the plaything_2 and the robotic arm (agent). The robotic arm is positioned at the top right corner of the image, and its end effector appears to be extended towards the center of the room.\n\nThe plaything_2 is located on the floor near the bottom left of the image, close to the edge of the room. Given the distance between the robotic arm's end effector and the plaything_2, it seems that the robotic arm could potentially reach down to pick up the plaything_2.\n\nHowever, the exact reachability would depend on the specific design and range of the robotic arm, which is not explicitly detailed in the image. Assuming typical robotic arm capabilities, it is plausible that the robotic arm could reach the plaything_2.\n\nTherefore, based on the visual information provided, the answer is likely affirmative.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable plaything_5": ["yes", "no"], "reachable plaything_6": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "holding plaything_5": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_6": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,plaything_5": ["no", "no"], "ontop plaything_4,plaything_6": ["no", "no"], "ontop plaything_4,plaything_7": ["no", "no"], "ontop plaything_4,plaything_8": ["no", "no"], "ontop plaything_4,carton_2": ["no", "no"], "ontop plaything_4,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_4": ["no", "no"], "ontop plaything_5,plaything_6": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_6,plaything_1": ["no", "no"], "ontop plaything_6,plaything_4": ["no", "no"], "ontop plaything_6,plaything_5": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["yes", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["yes", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_4": ["no", "no"], "ontop plaything_7,plaything_5": ["yes", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_4": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_4,carton_2": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_6": ["yes", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_5": ["yes", "no"], "nextto plaything_4,plaything_6": ["yes", "no"], "nextto plaything_4,plaything_7": ["yes", "no"], "nextto plaything_4,plaything_8": ["no", "no"], "nextto plaything_4,carton_2": ["yes", "no"], "nextto plaything_4,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_4": ["yes", "no"], "nextto plaything_5,plaything_6": ["yes", "no"], "nextto plaything_5,plaything_7": ["yes", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_5,table_1": ["no", "no"], "nextto plaything_6,plaything_1": ["no", "no"], "nextto plaything_6,plaything_4": ["yes", "no"], "nextto plaything_6,plaything_5": ["no", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_4": ["no", "no"], "nextto plaything_7,plaything_5": ["yes", "no"], "nextto plaything_7,plaything_6": ["yes", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_4": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7523809523809524, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7647058823529411, "no_correct": 78, "no_total": 102, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9047619047619048, "no_correct": 38, "no_total": 42}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.6428571428571429, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6585365853658537, "no_correct": 27, "no_total": 41}}}, "step": 1, "actions": ["grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable plaything_5": ["yes", "no"], "reachable plaything_6": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_2": ["no", "no"], "holding plaything_1": ["yes", "yes"], "holding plaything_4": ["yes", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["yes", "no"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_6": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["yes", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_5": ["yes", "no"], "ontop plaything_4,plaything_6": ["yes", "no"], "ontop plaything_4,plaything_7": ["yes", "no"], "ontop plaything_4,plaything_8": ["yes", "no"], "ontop plaything_4,carton_2": ["yes", "no"], "ontop plaything_5,plaything_1": ["yes", "no"], "ontop plaything_5,plaything_4": ["yes", "no"], "ontop plaything_5,plaything_6": ["yes", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["yes", "no"], "ontop plaything_5,carton_2": ["yes", "no"], "ontop plaything_6,plaything_1": ["yes", "no"], "ontop plaything_6,plaything_4": ["yes", "no"], "ontop plaything_6,plaything_5": ["yes", "no"], "ontop plaything_6,plaything_7": ["yes", "no"], "ontop plaything_6,plaything_8": ["yes", "no"], "ontop plaything_6,carton_2": ["yes", "no"], "ontop plaything_7,plaything_1": ["yes", "no"], "ontop plaything_7,plaything_4": ["yes", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_6": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_8,plaything_1": ["yes", "no"], "ontop plaything_8,plaything_4": ["yes", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_6": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_4,carton_2": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,plaything_5": ["yes", "no"], "nextto plaything_1,plaything_6": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_2": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_5": ["yes", "no"], "nextto plaything_4,plaything_6": ["yes", "no"], "nextto plaything_4,plaything_7": ["yes", "no"], "nextto plaything_4,plaything_8": ["yes", "no"], "nextto plaything_4,carton_2": ["yes", "no"], "nextto plaything_5,plaything_1": ["yes", "no"], "nextto plaything_5,plaything_4": ["yes", "no"], "nextto plaything_5,plaything_6": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["yes", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_6,plaything_1": ["no", "no"], "nextto plaything_6,plaything_4": ["yes", "no"], "nextto plaything_6,plaything_5": ["yes", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["yes", "no"], "nextto plaything_6,carton_2": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_4": ["yes", "no"], "nextto plaything_7,plaything_5": ["yes", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_4": ["yes", "no"], "nextto plaything_8,plaything_5": ["yes", "no"], "nextto plaything_8,plaything_6": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.29347826086956524, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.29213483146067415, "no_correct": 26, "no_total": 89, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.16666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.16666666666666666, "no_correct": 6, "no_total": 36}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.3055555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3055555555555556, "no_correct": 11, "no_total": 36}}}, "step": 2, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["place-next-to(plaything_1, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 5, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 6, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 7, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 8, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 9, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 10, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 11, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 12, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 13, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 14, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 15, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 16, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 17, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 18, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 19, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 20, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 21, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 22, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 23, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 24, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 25, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 26, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 27, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 28, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 29, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 30, "actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}], "remaining_actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 1.023759523377521e-05, 1.4631973499490414e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", true, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 9.644516467233188e-06, 1.856263588706497e-05, "To determine if the plaything_4 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_4. The robotic arm appears to be positioned above the plaything_4, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.\n\nSince the question asks if the plaything_4 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the plaything_4, we can infer that it is within the agent's reach.", false, "<explanation>\nTo determine if the plaything_4 is in reach of the agent, we need to consider the position of the robotic arm (the agent) relative to the plaything_4. The robotic arm appears to be positioned above the plaything_4, suggesting that it could potentially reach it. However, without more specific information about the range or reach of the robotic arm, we cannot definitively say whether it is within its operational range.\n\nSince the question asks if the plaything_4 is in reach of the agent, and based on the visual evidence provided, it seems plausible that the robotic arm could reach the plaything_4, we can infer that it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 1.021649131871527e-05, 5.740858250646852e-05, "To determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the carton_1. The robotic arm's end effector (the part that holds objects) is extended towards the carton_1.\n\nGiven the current position and orientation of the robotic arm, it seems that the end effector could potentially reach the carton_1 without any significant obstruction. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the image description.\n\nSince the question asks if the carton_1 is in reach of the agent, and considering the visual information provided, it appears that the carton_1 is indeed within the reach of the robotic arm.", false, "<explanation>\nTo determine if the carton_1 is in reach of the agent, we need to consider the position and orientation of both the carton_1 and the robotic arm (agent). The carton_1 appears to be on the floor near the center of the room, while the robotic arm is positioned above and slightly to the right of the carton_1. The robotic arm's end effector (the part that holds objects) is extended towards the carton_1.\n\nGiven the current position and orientation of the robotic arm, it seems that the end effector could potentially reach the carton_1 without any significant obstruction. However, the exact reachability would depend on the specific design and range of motion of the robotic arm, which is not explicitly detailed in the image description.\n\nSince the question asks if the carton_1 is in reach of the agent, and considering the visual information provided, it appears that the carton_1 is indeed within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 8.564895324525423e-06, 1.2241297554282937e-05, "To determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.", false, "<explanation>\nTo determine if the plaything_1 is in reach of the agent, we need to consider the position and orientation of both the agent (the robotic arm) and the object (plaything_1).\n\n1. **Agent Position**: The robotic arm is positioned in the foreground, extending towards the center of the image.\n2. **Object Position**: Plaything_1 is located on the floor near the bottom left corner of the image.\n\nGiven these positions:\n- The robotic arm appears to be oriented towards the plaything_1.\n- The distance between the robotic arm's end-effector and plaything_1 seems manageable for the robotic arm to reach and interact with the object.\n\nTherefore, based on the visual information provided, the plaything_1 is likely within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 1, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 2, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 3, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 4, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 5, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 6, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 7, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 8, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 9, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 10, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 11, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 12, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 13, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 14, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 15, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 16, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 17, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 18, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 19, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 20, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 21, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 22, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 23, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 24, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 25, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 26, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 27, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 28, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 29, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["yes", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 30, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "problem_stats": {"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 21, "remaining_actions": ["place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"action_correct": 0, "action_total": 20, "remaining_actions": ["place-next-to(document_3, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"action_correct": 0, "action_total": 41, "remaining_actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(folder_2, document_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"action_correct": 0, "action_total": 19, "remaining_actions": ["place-next-to(folder_2, table_1)", "place-next-to(document_1, table_1)", "place-next-to(document_3, table_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"action_correct": 1, "action_total": 43, "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.023255813953488372, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"action_correct": 2, "action_total": 7, "remaining_actions": ["place-on(bowl_2, sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.2857142857142857, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"action_correct": 1, "action_total": 36, "remaining_actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.027777777777777776, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"action_correct": 2, "action_total": 10, "remaining_actions": ["place-on(bowl_2, sink_1)"], "action_accuracy": 0.2, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"action_correct": 7, "action_total": 29, "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.2413793103448276, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"action_correct": 0, "action_total": 37, "remaining_actions": ["place-on(orange_2, table_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"action_correct": 1, "action_total": 11, "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.09090909090909091, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"action_correct": 4, "action_total": 9, "remaining_actions": [], "action_accuracy": 0.4444444444444444, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"action_correct": 4, "action_total": 15, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.26666666666666666, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"action_correct": 2, "action_total": 6, "remaining_actions": [], "action_accuracy": 0.3333333333333333, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"action_correct": 1, "action_total": 37, "remaining_actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.02702702702702703, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 8, "remaining_actions": ["navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"action_correct": 1, "action_total": 39, "remaining_actions": ["place-next-to(plate_3, plate_1)", "place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.02564102564102564, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"action_correct": 0, "action_total": 39, "remaining_actions": ["place-next-to(plate_2, plate_1)", "place-next-to(plate_3, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"action_correct": 1, "action_total": 38, "remaining_actions": ["place-next-to(plate_1, plate_1)", "open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.02631578947368421, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"action_correct": 0, "action_total": 10, "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 46, "remaining_actions": ["place-next-to(plaything_1, carton_2)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"action_correct": 0, "action_total": 47, "remaining_actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"action_correct": 1, "action_total": 47, "remaining_actions": ["place-next-to(plaything_1, plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)"], "action_accuracy": 0.02127659574468085, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 44, "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.5808249721293199, "yes_accuracy": 0.7479572595851666, "yes_correct": 1190, "yes_total": 1591, "no_accuracy": 0.3390909090909091, "no_correct": 373, "no_total": 1100, "correct": 1563, "total": 2691}, "holding": {"accuracy": 0.6096567771960442, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6096849474912486, "no_correct": 1045, "no_total": 1714, "correct": 1048, "total": 1719}, "open": {"accuracy": 0.4537177541729894, "yes_accuracy": 0.15949367088607594, "yes_correct": 63, "yes_total": 395, "no_accuracy": 0.8939393939393939, "no_correct": 236, "no_total": 264, "correct": 299, "total": 659}, "ontop": {"accuracy": 0.7481940954773869, "yes_accuracy": 0.7496947496947497, "yes_correct": 614, "yes_total": 819, "no_accuracy": 0.7480909624905597, "no_correct": 8915, "no_total": 11917, "correct": 9529, "total": 12736}, "inside": {"accuracy": 0.9604261796042618, "yes_accuracy": 0.8076923076923077, "yes_correct": 84, "yes_total": 104, "no_accuracy": 0.9689341189073379, "no_correct": 1809, "no_total": 1867, "correct": 1893, "total": 1971}, "nextto": {"accuracy": 0.4631752512562814, "yes_accuracy": 0.5191034131431482, "yes_correct": 1019, "yes_total": 1963, "no_accuracy": 0.4529843126334354, "no_correct": 4880, "no_total": 10773, "correct": 5899, "total": 12736}}, "predicate_accuracy": 0.6222625492125984, "macro_predicate_accuracy": 0.6359991716393806, "action_accuracy": 0.041604754829123326, "task_accuracy": 0.04, "fail_ratio": 0.0, "metadata": {"model_name": "Qwen/Qwen2.5-VL-7B-Instruct", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/hard", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7232218_1"}}