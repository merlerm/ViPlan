{"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 6.901066632210295e-13, 3.8933151136604643e-14, "The image shows a robotic arm (the agent) and a document labeled \"document_1\" on a desk. I need to determine if the agent can reach the document. Visually, the agent is positioned such that its arm could extend and grasp the document on the desk. Therefore, the document is in reach of the agent.", false, "Question: Is the document_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a document labeled \"document_1\" on a desk. I need to determine if the agent can reach the document. Visually, the agent is positioned such that its arm could extend and grasp the document on the desk. Therefore, the document is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 6.675079326085021e-13, 4.835410907398294e-14, "The image shows a room with a robotic arm (the agent). The agent is positioned to the right of a desk and a cabinet labeled \"cabinet_1\" is visible on the left side of the image. The agent's arm appears to be extended towards the desk, but it is not close enough to reach the cabinet. Therefore, the cabinet is not in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a room with a robotic arm (the agent). The agent is positioned to the right of a desk and a cabinet labeled \"cabinet_1\" is visible on the left side of the image. The agent's arm appears to be extended towards the desk, but it is not close enough to reach the cabinet. Therefore, the cabinet is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 4.185716714639326e-13, 1.8390755633862846e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the robotic arm is positioned close enough to the cabinet that it appears to be within the arm's range of motion. Therefore, the cabinet is in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the robotic arm is positioned close enough to the cabinet that it appears to be within the arm's range of motion. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable marker_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable document_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_3": {"before": true, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_1": {"before": true, "after": false}, "reachable folder_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 3.3481209341448825e-13, 1.6669313634498986e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the robotic arm is positioned close enough to the cabinet that it appears to be within the arm's range of motion. Therefore, the cabinet is in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the robotic arm is positioned close enough to the cabinet that it appears to be within the arm's range of motion. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 1.666931871669667e-14, 3.11423860332484e-14, "I will examine the image to determine if the cabinet labeled \"cabinet_1\" is open. In the image, there are two cabinets visible. The cabinet closer to the camera, labeled \"cabinet_1\", appears to be closed, as its door is fully visible and not ajar. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open\n<explanation>\nI will examine the image to determine if the cabinet labeled \"cabinet_1\" is open. In the image, there are two cabinets visible. The cabinet closer to the camera, labeled \"cabinet_1\", appears to be closed, as its door is fully visible and not ajar. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_1": [true, false, false], "holding document_2": [true, false, false], "holding document_3": [true, false, false], "holding document_4": [true, false, false], "holding folder_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 2.4253716100915666e-14, 3.998761906450973e-14, "I need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, the cabinet appears to be closed. There are drawers visible, but they are not extended or showing any signs of being open.", false, "Question: Is the cabinet_1 open\n<explanation>\nI need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, the cabinet appears to be closed. There are drawers visible, but they are not extended or showing any signs of being open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable document_2": ["yes", 3.2598357064921035e-13, 1.2639754287712204e-14, "The image shows a robotic arm (the agent) and a wooden cabinet with a red bounding box around \"document_2\". The robotic arm is positioned close to the cabinet. Visually, the arm appears to be close enough to the document_2 to be able to reach it.", true, "Question: Is the document_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a wooden cabinet with a red bounding box around \"document_2\". The robotic arm is positioned close to the cabinet. Visually, the arm appears to be close enough to the document_2 to be able to reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 2.0796358341998444e-13, 9.137281521145145e-15, "The image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-next-to(document_2, document_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_2": ["yes", 5.198560223788895e-13, 1.489412434531323e-13, "The image shows a robotic arm (the agent). The agent is holding an object. The object being held is labeled \"document_2\" in the image. Therefore, the agent is holding document_2.", true, "Question: Is the agent holding the document_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is holding an object. The object being held is labeled \"document_2\" in the image. Therefore, the agent is holding document_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_4": ["yes", 3.025851867243662e-13, 1.173250153307286e-14, "The image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(document_2, document_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_2": ["yes", 5.198560223788895e-13, 1.489412434531323e-13, "The image shows a robotic arm (the agent). The agent is holding an object. The object being held is labeled \"document_2\" in the image. Therefore, the agent is holding document_2.", true, "Question: Is the agent holding the document_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is holding an object. The object being held is labeled \"document_2\" in the image. Therefore, the agent is holding document_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_4": ["yes", 3.025851867243662e-13, 1.173250153307286e-14, "The image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a wooden cabinet with several documents labeled \"document_2\", \"document_3\", and \"document_4\". The robotic arm is positioned close to the cabinet. By visually inspecting the image, it appears that the robotic arm is directly above \"document_4\" and could potentially grasp it. Therefore, \"document_4\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["no", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["yes", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.45, "no_correct": 18, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.13333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.07142857142857142, "no_correct": 1, "no_total": 14}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["yes", "yes"], "reachable document_4": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding document_2": ["yes", "no"], "holding document_4": ["no", "no"], "open cabinet_1": ["no", "yes"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_4,cabinet_1": ["yes", "yes"], "nextto document_2,document_4": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_4,document_2": ["yes", "no"], "nextto document_4,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 3, "actions": ["place-next-to(document_2, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["yes", "yes"], "reachable document_4": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding document_2": ["yes", "no"], "holding document_4": ["no", "no"], "open cabinet_1": ["no", "yes"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_4,cabinet_1": ["yes", "yes"], "nextto document_2,document_4": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_4,document_2": ["yes", "no"], "nextto document_4,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 4, "actions": ["place-next-to(document_2, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 6.901066632210295e-13, 3.8933151136604643e-14, "The image shows a robotic arm (the agent) and a document labeled \"document_1\" on a desk. I need to determine if the agent can reach the document. Visually, the agent is positioned such that its arm could extend and grasp the document on the desk. Therefore, the document is in reach of the agent.", false, "Question: Is the document_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a document labeled \"document_1\" on a desk. I need to determine if the agent can reach the document. Visually, the agent is positioned such that its arm could extend and grasp the document on the desk. Therefore, the document is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 6.675079326085021e-13, 4.835410907398294e-14, "The image shows a room with a robotic arm (the agent). The agent is positioned to the right of a desk and a cabinet labeled \"cabinet_1\" is visible on the left side of the image. The agent's arm appears to be extended towards the desk, but it is not close enough to reach the cabinet. Therefore, the cabinet is not in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a room with a robotic arm (the agent). The agent is positioned to the right of a desk and a cabinet labeled \"cabinet_1\" is visible on the left side of the image. The agent's arm appears to be extended towards the desk, but it is not close enough to reach the cabinet. Therefore, the cabinet is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.5073611304462775e-13, 9.636237290153605e-15, "The image shows a robotic arm (the agent) and a cabinet labeled as \"cabinet_1\". The robotic arm is positioned close to the cabinet, and it appears that the arm could potentially reach the cabinet without significant difficulty. Therefore, the cabinet is in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled as \"cabinet_1\". The robotic arm is positioned close to the cabinet, and it appears that the arm could potentially reach the cabinet without significant difficulty. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable marker_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable document_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_3": {"before": true, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_1": {"before": true, "after": false}, "reachable folder_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0412855880282887e-13, 6.6567158889577725e-15, "The image shows a robotic arm (the agent) and a cabinet labeled as \"cabinet_1\". The robotic arm is positioned close to the cabinet, and it appears that the arm could potentially reach the cabinet without significant difficulty. Therefore, the cabinet is in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled as \"cabinet_1\". The robotic arm is positioned close to the cabinet, and it appears that the arm could potentially reach the cabinet without significant difficulty. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 1.7738457255248204e-14, 2.924576745599698e-14, "I need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, I can see a wooden cabinet with drawers. The drawers are closed, and there is no indication that the cabinet is open. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open\n<explanation>\nI need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, I can see a wooden cabinet with drawers. The drawers are closed, and there is no indication that the cabinet is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_1": [true, false, false], "holding document_2": [true, false, false], "holding document_3": [true, false, false], "holding document_4": [true, false, false], "holding folder_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 2.2966249738011653e-14, 2.9489245382619336e-14, "I need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, the cabinet doors are closed and flush with the cabinet frame. Therefore, the cabinet is not open.", false, "Question: Is the cabinet_1 open\n<explanation>\nI need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, the cabinet doors are closed and flush with the cabinet frame. Therefore, the cabinet is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable document_2": ["yes", 5.463828716724406e-14, 2.7202801914250757e-15, "The image shows a robotic arm (the agent) and a dresser with two documents highlighted in red outlines: \"document_2\" and \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_2\" is very close to the gripper of the arm. Therefore, \"document_2\" is within the reach of the agent.", true, "Question: Is the document_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a dresser with two documents highlighted in red outlines: \"document_2\" and \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_2\" is very close to the gripper of the arm. Therefore, \"document_2\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 6.84982805069026e-14, 3.4103280756417635e-15, "The image shows a robotic arm (the agent) and a dresser with several documents highlighted in red. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and appears to be close enough to grasp \"document_4\". Therefore, the document is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a dresser with several documents highlighted in red. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and appears to be close enough to grasp \"document_4\". Therefore, the document is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-next-to(document_2, document_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_2": ["yes", 6.405216390918331e-14, 7.649940793677534e-15, "The image shows a robotic arm (the agent). The agent is positioned above a dresser with two documents highlighted in red: \"document_2\" and \"document_4\". The agent's gripper is closed around \"document_2\". Therefore, the agent is holding \"document_2\".", true, "Question: Is the agent holding the document_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is positioned above a dresser with two documents highlighted in red: \"document_2\" and \"document_4\". The agent's gripper is closed around \"document_2\". Therefore, the agent is holding \"document_2\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_4": ["yes", 8.913827792209061e-14, 3.9164626606364404e-15, "The image shows a robotic arm (the agent) and a dresser with several documents highlighted with red bounding boxes. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_4\" is within the workspace of the arm. Therefore, \"document_4\" is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a dresser with several documents highlighted with red bounding boxes. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_4\" is within the workspace of the arm. Therefore, \"document_4\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(document_2, document_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_2": ["yes", 6.405216390918331e-14, 7.649940793677534e-15, "The image shows a robotic arm (the agent). The agent is positioned above a dresser with two documents highlighted in red: \"document_2\" and \"document_4\". The agent's gripper is closed around \"document_2\". Therefore, the agent is holding \"document_2\".", true, "Question: Is the agent holding the document_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is positioned above a dresser with two documents highlighted in red: \"document_2\" and \"document_4\". The agent's gripper is closed around \"document_2\". Therefore, the agent is holding \"document_2\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_4": ["yes", 8.913827792209061e-14, 3.9164626606364404e-15, "The image shows a robotic arm (the agent) and a dresser with several documents highlighted with red bounding boxes. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_4\" is within the workspace of the arm. Therefore, \"document_4\" is in reach of the agent.", true, "Question: Is the document_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a dresser with several documents highlighted with red bounding boxes. One of these documents is labeled \"document_4\". The robotic arm is positioned directly above the dresser, and \"document_4\" is within the workspace of the arm. Therefore, \"document_4\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["no", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["yes", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.45, "no_correct": 18, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.13333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.07142857142857142, "no_correct": 1, "no_total": 14}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["yes", "yes"], "reachable document_4": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding document_2": ["yes", "no"], "holding document_4": ["yes", "no"], "open cabinet_1": ["no", "yes"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_4,cabinet_1": ["yes", "yes"], "nextto document_2,document_4": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_4,document_2": ["yes", "no"], "nextto document_4,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.375, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 3, "actions": ["place-next-to(document_2, document_4)", "place-next-to(document_4, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["yes", "yes"], "reachable document_4": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding document_2": ["yes", "no"], "holding document_4": ["yes", "no"], "open cabinet_1": ["no", "yes"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_4,cabinet_1": ["yes", "yes"], "nextto document_2,document_4": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_4,document_2": ["yes", "no"], "nextto document_4,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.375, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 4, "actions": ["place-next-to(document_2, document_4)", "place-next-to(document_4, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-next-to(document_4, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 5.054828625984664e-13, 2.2209364813267733e-14, "The image shows a robotic arm (the agent) and several objects, including \"document_1\". To determine if \"document_1\" is in reach, I need to assess the distance between the robotic arm and the document. Visually, the robotic arm is positioned such that it appears to be able to reach \"document_1\" without significant obstruction. The document is relatively close to the base of the arm.", true, "Question: Is the document_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"document_1\". To determine if \"document_1\" is in reach, I need to assess the distance between the robotic arm and the document. Visually, the robotic arm is positioned such that it appears to be able to reach \"document_1\" without significant obstruction. The document is relatively close to the base of the arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 1.7456092723643762e-13, 1.7456092723643762e-13, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"marker_1\" is within the reach of the agent. Looking at the image, \"marker_1\" is a red bounding box around a folder on a table. The robotic arm is positioned such that it appears to be able to reach the table where \"marker_1\" is located. Therefore, \"marker_1\" is in reach of the agent.", false, "Question: Is the marker_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"marker_1\" is within the reach of the agent. Looking at the image, \"marker_1\" is a red bounding box around a folder on a table. The robotic arm is positioned such that it appears to be able to reach the table where \"marker_1\" is located. Therefore, \"marker_1\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.9229402954939329e-13, 2.2966248043945758e-14, "The image shows a robotic arm (the agent) and a table labeled \"table_1\". I need to determine if the agent can reach the table. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the table, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a virtual household simulator with a robotic arm, it's reasonable to assume that the agent is designed to interact with objects within the scene. Since the table is visible and appears relatively close to the agent, it's likely within reach.", false, "Question: Is the table_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a table labeled \"table_1\". I need to determine if the agent can reach the table. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the table, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a virtual household simulator with a robotic arm, it's reasonable to assume that the agent is designed to interact with objects within the scene. Since the table is visible and appears relatively close to the agent, it's likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 1.0412855880282887e-13, 2.983333049458477e-14, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 6.029925907549694e-13, 2.6493643907952828e-14, "The image shows a robotic arm (the agent) and several objects, including \"document_3\". To determine if \"document_3\" is in reach, I need to assess the distance between the robotic arm and the document. The robotic arm is positioned such that it appears to be able to reach \"document_3\" without significant obstruction.", false, "Question: Is the document_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"document_3\". To determine if \"document_3\" is in reach, I need to assess the distance between the robotic arm and the document. The robotic arm is positioned such that it appears to be able to reach \"document_3\" without significant obstruction.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 4.988785534849882e-13, 2.483769788420246e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The robotic arm is positioned such that it appears to be able to extend and grasp the folder. Therefore, the folder is in reach of the agent.", false, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The robotic arm is positioned such that it appears to be able to extend and grasp the folder. Therefore, the folder is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 1.2582429130721107e-13, 7.098521074465564e-15, "The image shows a robotic arm (the agent) and a folder labeled \"folder_2\". To determine if \"folder_2\" is in reach, I need to visually assess the distance between the robotic arm and the folder. The robotic arm appears to be positioned such that it could potentially reach \"folder_2\" without significant difficulty. The folder is relatively close to the base of the arm. Therefore, it is likely within the agent's reach.", false, "Question: Is the folder_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_2\". To determine if \"folder_2\" is in reach, I need to visually assess the distance between the robotic arm and the folder. The robotic arm appears to be positioned such that it could potentially reach \"folder_2\" without significant difficulty. The folder is relatively close to the base of the arm. Therefore, it is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_2, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_2": ["yes", 3.419436771495005e-14, 1.8302926787562047e-14, "The image shows a robotic arm, which is the agent. The agent is holding an object. The object being held is labeled as \"folder_2\". Therefore, the agent is holding the folder_2.", true, "Question: Is the agent holding the folder_2\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is holding an object. The object being held is labeled as \"folder_2\". Therefore, the agent is holding the folder_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 1.1663223555349878e-13, 3.786494433429509e-14, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(folder_2, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_2": ["yes", 3.419436771495005e-14, 1.8302926787562047e-14, "The image shows a robotic arm, which is the agent. The agent is holding an object. The object being held is labeled as \"folder_2\". Therefore, the agent is holding the folder_2.", true, "Question: Is the agent holding the folder_2\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is holding an object. The object being held is labeled as \"folder_2\". Therefore, the agent is holding the folder_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 1.1663223555349878e-13, 3.786494433429509e-14, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, \"cabinet_1\" is a dark grey object on the floor, and the robotic arm is positioned such that it can likely reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["no", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.7261904761904762, "no_correct": 61, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 1, "actions": ["place-next-to(folder_2, cabinet_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["no", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.7261904761904762, "no_correct": 61, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}}}, "step": 2, "actions": ["place-next-to(folder_2, cabinet_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 9.111413880324992e-13, 5.140308209465594e-14, "The image shows a robotic arm (the agent) and several objects, including \"document_1\". To determine if \"document_1\" is in reach, I need to assess the distance and potential obstacles between the arm and the document. The robotic arm is positioned above and to the left of the table where \"document_1\" is located. Visually, it appears that the arm could extend and grasp \"document_1\" without significant obstruction. Therefore, it is likely within the agent's reach.", true, "Question: Is the document_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"document_1\". To determine if \"document_1\" is in reach, I need to assess the distance and potential obstacles between the arm and the document. The robotic arm is positioned above and to the left of the table where \"document_1\" is located. Visually, it appears that the arm could extend and grasp \"document_1\" without significant obstruction. Therefore, it is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 2.5355948894342784e-13, 1.4591340288805377e-12, "The image shows a robotic arm (the agent) and several objects labeled with red bounding boxes. The question asks if \"marker_1\" is within the reach of the agent. However, there is no object labeled \"marker_1\" in the image. There are objects labeled \"document_1\", \"document_2\", \"document_3\", \"folder_1\", and \"folder_2\". Since \"marker_1\" is not present in the image, it cannot be in reach of the agent.", true, "Question: Is the marker_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with red bounding boxes. The question asks if \"marker_1\" is within the reach of the agent. However, there is no object labeled \"marker_1\" in the image. There are objects labeled \"document_1\", \"document_2\", \"document_3\", \"folder_1\", and \"folder_2\". Since \"marker_1\" is not present in the image, it cannot be in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 8.18723750904346e-14, 2.3456829198204715e-14, "The image shows a robotic arm (the agent) and a table labeled \"table_1\". The robotic arm appears to be positioned such that it could potentially reach the table. However, without knowing the exact range of motion of the arm, it's difficult to say for certain. Based on the visual information, it seems likely that the table is within the agent's reach.", false, "Question: Is the table_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a table labeled \"table_1\". The robotic arm appears to be positioned such that it could potentially reach the table. However, without knowing the exact range of motion of the arm, it's difficult to say for certain. Based on the visual information, it seems likely that the table is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 7.156643712976501e-14, 4.340724353850585e-14, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, there is no object labeled \"cabinet_1\". There are objects labeled \"document_1\", \"document_2\", \"document_3\", \"folder_1\", and \"folder_2\". Since \"cabinet_1\" is not present in the image, it cannot be in reach of the agent.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"cabinet_1\" is within the reach of the agent. Looking at the image, there is no object labeled \"cabinet_1\". There are objects labeled \"document_1\", \"document_2\", \"document_3\", \"folder_1\", and \"folder_2\". Since \"cabinet_1\" is not present in the image, it cannot be in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_3": ["yes", 7.262076682189311e-13, 3.190733809978197e-14, "The image shows a robotic arm (the agent) and several objects, including \"document_3\". To determine if \"document_3\" is in reach, I need to assess the distance between the robotic arm and the document. The robotic arm is positioned above and to the left of the table where \"document_3\" is located. Visually, it appears that the arm could extend and grasp \"document_3\" without significant difficulty. Therefore, it is likely within the agent's reach.", false, "Question: Is the document_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"document_3\". To determine if \"document_3\" is in reach, I need to assess the distance between the robotic arm and the document. The robotic arm is positioned above and to the left of the table where \"document_3\" is located. Visually, it appears that the arm could extend and grasp \"document_3\" without significant difficulty. Therefore, it is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 8.861147492850163e-13, 4.9991169651141323e-14, "The image shows a robotic arm (the agent) and several objects, including \"folder_1\". To determine if \"folder_1\" is in reach, I need to assess the distance between the robotic arm and the folder. Visually, the robotic arm appears to be positioned such that it could potentially reach \"folder_1\" without significant difficulty. The folder is relatively close to the base of the arm. Therefore, it is likely within the arm's range of motion.", false, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"folder_1\". To determine if \"folder_1\" is in reach, I need to assess the distance between the robotic arm and the folder. Visually, the robotic arm appears to be positioned such that it could potentially reach \"folder_1\" without significant difficulty. The folder is relatively close to the base of the arm. Therefore, it is likely within the arm's range of motion.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 3.2598384169975347e-13, 1.8390750551665162e-14, "The image shows a robotic arm (the agent) and several objects, including \"folder_2\". To determine if \"folder_2\" is in reach, I need to visually assess the distance between the robotic arm and the folder. The robotic arm appears to be positioned such that it could potentially reach \"folder_2\" without significant difficulty. It seems within the range of motion of the arm.", false, "Question: Is the folder_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including \"folder_2\". To determine if \"folder_2\" is in reach, I need to visually assess the distance between the robotic arm and the folder. The robotic arm appears to be positioned such that it could potentially reach \"folder_2\" without significant difficulty. It seems within the range of motion of the arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(document_3, folder_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding document_3": ["no", 3.8756609141606113e-13, 2.350707248213041e-13, "The image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.", false, "Question: Is the agent holding the document_3\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is positioned above the table with several documents on it. The document_3 is on the table, and the agent's gripper is not enclosing it. Therefore, the agent is not holding the document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable folder_1": ["yes", 6.901068258513554e-13, 4.4117053760173164e-14, "The image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.", true, "Question: Is the folder_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a folder labeled \"folder_1\". To determine if the folder is in reach, I need to visually assess the distance between the arm and the folder. The folder is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the folder is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 1, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 2, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 3, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 4, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 5, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 6, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 7, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 8, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 9, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 10, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 11, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 12, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 13, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 14, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 15, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 16, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 17, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 18, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 19, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 20, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 21, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 22, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 23, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 24, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 25, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 26, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 27, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 28, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 29, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["yes", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7142857142857143, "no_correct": 60, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.4857142857142857, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.41935483870967744, "no_correct": 13, "no_total": 31}}}, "step": 30, "actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}], "remaining_actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 5.334649754817726e-14, 3.4103272286088162e-15, "The image shows a kitchen scene with a robotic arm (the agent). The question asks if \"cabinet_1\" is within the agent's reach. Looking at the image, \"cabinet_1\" is highlighted by a red bounding box. The robotic arm is positioned such that it can likely reach \"cabinet_1\". Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The question asks if \"cabinet_1\" is within the agent's reach. Looking at the image, \"cabinet_1\" is highlighted by a red bounding box. The robotic arm is positioned such that it can likely reach \"cabinet_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 8.109539515605002e-14, 5.874530937112314e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter with objects on it. The question asks if \"sink_1\" is within the agent's reach. Looking at the image, \"sink_1\" is highlighted by a red bounding box. The agent's arm appears to be close enough to potentially reach the sink, but it's difficult to determine with certainty without knowing the arm's range of motion. However, given the proximity, it's reasonable to assume it is within reach.", false, "Question: Is the sink_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter with objects on it. The question asks if \"sink_1\" is within the agent's reach. Looking at the image, \"sink_1\" is highlighted by a red bounding box. The agent's arm appears to be close enough to potentially reach the sink, but it's difficult to determine with certainty without knowing the arm's range of motion. However, given the proximity, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 5.334649754817726e-14, 3.4103272286088162e-15, "The image shows a kitchen scene with a robotic arm (the agent). The question asks if \"cabinet_1\" is within the agent's reach. Looking at the image, \"cabinet_1\" is highlighted by a red bounding box. The robotic arm is positioned such that it can likely reach \"cabinet_1\". Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The question asks if \"cabinet_1\" is within the agent's reach. Looking at the image, \"cabinet_1\" is highlighted by a red bounding box. The robotic arm is positioned such that it can likely reach \"cabinet_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 1.0646047099980606e-14, 5.6984188113345154e-15, "I will examine the image to determine if cabinet_1 is open. The image shows a kitchen with cabinets. Cabinet_1 is highlighted with a red bounding box. The door of cabinet_1 is closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open\n<explanation>\nI will examine the image to determine if cabinet_1 is open. The image shows a kitchen with cabinets. Cabinet_1 is highlighted with a red bounding box. The door of cabinet_1 is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 2.610464470455265e-13, 4.536307310690213e-14, "The image shows a kitchen scene with a robotic arm and various objects. The image also highlights a cabinet labeled \"cabinet_1\". By visually inspecting the image, it is clear that the doors of \"cabinet_1\" are closed. Therefore, the cabinet is not open.", false, "<explanation>\nThe image shows a kitchen scene with a robotic arm and various objects. The image also highlights a cabinet labeled \"cabinet_1\". By visually inspecting the image, it is clear that the doors of \"cabinet_1\" are closed. Therefore, the cabinet is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 5.054826999681405e-13, 1.188781264724846e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". I need to determine if the agent can reach the bowl. The agent is positioned near a counter, and the bowl is located under the counter. Visually, it appears the agent's arm could extend downwards to reach the bowl. Therefore, the bowl is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". I need to determine if the agent can reach the bowl. The agent is positioned near a counter, and the bowl is located under the counter. Visually, it appears the agent's arm could extend downwards to reach the bowl. Therefore, the bowl is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 2.3576518341783537e-13, 8.067440792280337e-15, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". I need to determine if the agent can reach the bowl. The agent is positioned near a counter, and the bowl is located under the counter, close to the agent's base. Visually, it appears the agent's arm could extend and grasp the bowl. Therefore, the bowl is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". I need to determine if the agent can reach the bowl. The agent is positioned near a counter, and the bowl is located under the counter, close to the agent's base. Visually, it appears the agent's arm could extend and grasp the bowl. Therefore, the bowl is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 4.3186618560800416e-14, 1.3041227364161772e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter. The piece_of_cloth_1 is located on the floor, under the counter. The agent's arm appears to be close enough to potentially reach the piece_of_cloth_1, but it's not immediately obvious if it's within the arm's range of motion without knowing the arm's exact capabilities and joint limits. However, given the proximity, it's reasonable to assume it is within reach.", true, "Question: Is the piece_of_cloth_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter. The piece_of_cloth_1 is located on the floor, under the counter. The agent's arm appears to be close enough to potentially reach the piece_of_cloth_1, but it's not immediately obvious if it's within the arm's range of motion without knowing the arm's exact capabilities and joint limits. However, given the proximity, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 5.727871519103922e-13, 8.783974930889546e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm is positioned near the bowl, and it appears to be grasping the bowl. Therefore, the agent is holding the bowl_1.", true, "Question: Is the agent holding the bowl_1\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm is positioned near the bowl, and it appears to be grasping the bowl. Therefore, the agent is holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 7.095977993566704e-13, 3.117754806495482e-14, "The image shows a kitchen scene with a robotic arm (the agent). The question asks if the sink_1 is in reach of the agent. Looking at the image, the sink_1 is located under the counter, and the robotic arm is positioned close enough to potentially reach it. The red bounding box around sink_1 indicates it is a detected object. Therefore, the sink_1 is in reach of the agent.", true, "<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The question asks if the sink_1 is in reach of the agent. Looking at the image, the sink_1 is located under the counter, and the robotic arm is positioned close enough to potentially reach it. The red bounding box around sink_1 indicates it is a detected object. Therefore, the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 5.727871519103922e-13, 8.783974930889546e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm is positioned near the bowl, and it appears to be grasping the bowl. Therefore, the agent is holding the bowl_1.", true, "Question: Is the agent holding the bowl_1\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm is positioned near the bowl, and it appears to be grasping the bowl. Therefore, the agent is holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 7.095977993566704e-13, 3.117754806495482e-14, "The image shows a kitchen scene with a robotic arm (the agent). The question asks if the sink_1 is in reach of the agent. Looking at the image, the sink_1 is located under the counter, and the robotic arm is positioned close enough to potentially reach it. The red bounding box around sink_1 indicates it is a detected object. Therefore, the sink_1 is in reach of the agent.", true, "<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The question asks if the sink_1 is in reach of the agent. Looking at the image, the sink_1 is located under the counter, and the robotic arm is positioned close enough to potentially reach it. The red bounding box around sink_1 indicates it is a detected object. Therefore, the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5957446808510638, "yes_accuracy": 0.4444444444444444, "yes_correct": 8, "yes_total": 18, "no_accuracy": 0.6896551724137931, "no_correct": 20, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.26666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 3, "yes_total": 9, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}}}, "step": 2, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5957446808510638, "yes_accuracy": 0.4444444444444444, "yes_correct": 8, "yes_total": 18, "no_accuracy": 0.6896551724137931, "no_correct": 20, "no_total": 29, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.26666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 3, "yes_total": 9, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}}}, "step": 3, "actions": ["place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 5.22709263026111e-13, 3.786493078176793e-14, "The image shows a robotic arm (the agent) and a cabinet. The question asks if the cabinet is within the reach of the agent. Visually, the cabinet appears to be close enough to the agent that the arm could potentially reach it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet. The question asks if the cabinet is within the reach of the agent. Visually, the cabinet appears to be close enough to the agent that the arm could potentially reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 3.615970099301452e-13, 2.9681687880103724e-14, "The image shows a robotic arm (the agent) and a cabinet. The question asks if the cabinet is within the reach of the agent. Visually, the cabinet appears to be close enough to the agent that the arm could potentially reach it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet. The question asks if the cabinet is within the reach of the agent. Visually, the cabinet appears to be close enough to the agent that the arm could potentially reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 3.7552307861595316e-14, 6.191329052088537e-14, "I need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, I can see a cabinet in the foreground. The doors of this cabinet are closed. Therefore, cabinet_1 is not open.", true, "Question: Is the cabinet_1 open\n<explanation>\nI need to determine if the cabinet labeled \"cabinet_1\" is open. Looking at the image, I can see a cabinet in the foreground. The doors of this cabinet are closed. Therefore, cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 4.3039313432635673e-13, 8.932524011640627e-15, "The image shows a kitchen counter with cabinets below it. One of the cabinets, labeled \"cabinet_1\", has its door open. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 open\n<explanation>\nThe image shows a kitchen counter with cabinets below it. One of the cabinets, labeled \"cabinet_1\", has its door open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 4.1857153593866103e-13, 1.4322729132809457e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The agent's end effector appears to be positioned relatively close to the bowl. The red outline around the bowl suggests it is the object the agent is currently targeting or interacting with. Given the proximity and the targeting outline, it's reasonable to assume the bowl is within the agent's reach.", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The agent's end effector appears to be positioned relatively close to the bowl. The red outline around the bowl suggests it is the object the agent is currently targeting or interacting with. Given the proximity and the targeting outline, it's reasonable to assume the bowl is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 2.1098955102581002e-13, 7.219664997131295e-15, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". The agent's end effector appears to be positioned relatively close to bowl_2. The red outline around bowl_2 suggests it is the object the agent is currently focusing on. Given the proximity and the red outline, it is reasonable to assume that bowl_2 is within the agent's reach.", true, "Question: Is the bowl_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". The agent's end effector appears to be positioned relatively close to bowl_2. The red outline around bowl_2 suggests it is the object the agent is currently focusing on. Given the proximity and the red outline, it is reasonable to assume that bowl_2 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 3.884960319481927e-14, 1.5063626522432189e-15, "The image shows a robotic arm (the agent) and a piece of cloth labeled \"piece_of_cloth_1\" located inside a cabinet. The cabinet door is open, and the cloth appears to be relatively close to the robotic arm. Based on the visual information, it seems the agent could potentially reach the cloth.", true, "Question: Is the piece_of_cloth_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a piece of cloth labeled \"piece_of_cloth_1\" located inside a cabinet. The cabinet door is open, and the cloth appears to be relatively close to the robotic arm. Based on the visual information, it seems the agent could potentially reach the cloth.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 4.1857153593866103e-13, 1.4322729132809457e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The agent's end effector appears to be positioned relatively close to the bowl. The red outline around the bowl suggests it is the object the agent is currently targeting or interacting with. Given the proximity and the targeting outline, it's reasonable to assume the bowl is within the agent's reach.", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The agent's end effector appears to be positioned relatively close to the bowl. The red outline around the bowl suggests it is the object the agent is currently targeting or interacting with. Given the proximity and the targeting outline, it's reasonable to assume the bowl is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 7.207654069939229e-14, 3.8579785931669094e-14, "The image shows a robotic arm (the agent). The agent's gripper is open and positioned near a green apple and a bowl labeled \"bowl_2\". However, the agent is not currently grasping or holding bowl_2. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the bowl_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent's gripper is open and positioned near a green apple and a bowl labeled \"bowl_2\". However, the agent is not currently grasping or holding bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 2.6630600665194376e-14, 2.6630600665194376e-14, "The image shows a robotic arm (the agent). The agent's gripper is open and there is a piece of cloth labeled \"piece_of_cloth_1\" near the open gripper. However, the agent is not currently grasping or holding the cloth. Therefore, the answer is \"No\".", true, "Question: Is the agent holding the piece_of_cloth_1\n<explanation>\nThe image shows a robotic arm (the agent). The agent's gripper is open and there is a piece of cloth labeled \"piece_of_cloth_1\" near the open gripper. However, the agent is not currently grasping or holding the cloth. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["yes", 9.29722553284773e-13, 2.8075189945748168e-14, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm appears to be grasping or holding the bowl. Therefore, the agent is holding the bowl_1.", true, "Question: Is the agent holding the bowl_1\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". The robotic arm appears to be grasping or holding the bowl. Therefore, the agent is holding the bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop bowl_1,bowl_2": ["yes", 3.435842105617426e-14, 1.4322720662479985e-14, "I will examine the image to determine the relative positions of bowl_1 and bowl_2. From the image, it is clear that bowl_1 is being held by the robotic arm and is positioned above bowl_2, which is inside a cabinet. Therefore, bowl_1 is on top of bowl_2.", false, "Question: Is the bowl_1 on top of the bowl_2\n<explanation>\nI will examine the image to determine the relative positions of bowl_1 and bowl_2. From the image, it is clear that bowl_1 is being held by the robotic arm and is positioned above bowl_2, which is inside a cabinet. Therefore, bowl_1 is on top of bowl_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,cabinet_1": ["no", 4.5311898764360814e-14, 1.0110451226772767e-14, "The image shows a robotic arm holding a bowl labeled \"bowl_1\". The robotic arm is positioned above a cabinet labeled \"cabinet_1\", with the bowl being held directly over the open drawer of the cabinet. However, the bowl is not resting *on* the cabinet itself, but rather being held *above* it. Therefore, the bowl is not on top of the cabinet.", true, "Question: Is the bowl_1 on top of the cabinet_1\n<explanation>\nThe image shows a robotic arm holding a bowl labeled \"bowl_1\". The robotic arm is positioned above a cabinet labeled \"cabinet_1\", with the bowl being held directly over the open drawer of the cabinet. However, the bowl is not resting *on* the cabinet itself, but rather being held *above* it. Therefore, the bowl is not on top of the cabinet.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["no", 5.961078391970506e-14, 4.3181904822448946e-15, "The image shows two bowls labeled \"bowl_1\" and \"bowl_2\". \"bowl_1\" is being held by the robotic arm and is positioned above the counter. \"bowl_2\" is on the counter, inside a cabinet. They are not directly next to each other, but are in close proximity on the same counter. However, since bowl_1 is being held, it is not *next to* bowl_2.", true, "Question: Is the bowl_1 next to the bowl_2\n<explanation>\nThe image shows two bowls labeled \"bowl_1\" and \"bowl_2\". \"bowl_1\" is being held by the robotic arm and is positioned above the counter. \"bowl_2\" is on the counter, inside a cabinet. They are not directly next to each other, but are in close proximity on the same counter. However, since bowl_1 is being held, it is not *next to* bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["yes", 6.418997278156979e-14, 1.5096032944202954e-15, "The image shows a robotic arm holding a bowl labeled \"bowl_1\". There is a cabinet labeled \"cabinet_1\" with an open drawer. The bowl is positioned very close to the cabinet, specifically near the open drawer. Therefore, bowl_1 is next to cabinet_1.", false, "Question: Is the bowl_1 next to the cabinet_1\n<explanation>\nThe image shows a robotic arm holding a bowl labeled \"bowl_1\". There is a cabinet labeled \"cabinet_1\" with an open drawer. The bowl is positioned very close to the cabinet, specifically near the open drawer. Therefore, bowl_1 is next to cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "inside bowl_1,cabinet_1": ["no", 2.376095739435591e-13, 1.9504180443028624e-14, "The image shows a robotic arm holding a bowl labeled \"bowl_1\". The robotic arm is positioned near a cabinet labeled \"cabinet_1\", and the cabinet door is open. The bowl is not inside the cabinet, it is being held by the robotic arm.", true, "Question: Is the bowl_1 inside the cabinet_1\n<explanation>\nThe image shows a robotic arm holding a bowl labeled \"bowl_1\". The robotic arm is positioned near a cabinet labeled \"cabinet_1\", and the cabinet door is open. The bowl is not inside the cabinet, it is being held by the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,piece_of_cloth_1": {"before": false, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,piece_of_cloth_1": {"before": false, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sink_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 2.1832457716697284e-12, 1.0869740708647352e-13, "The image shows a robotic arm extending towards a sink. The sink appears to be directly in front of the arm, and the arm is close enough to interact with the sink. Therefore, the sink is in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm extending towards a sink. The sink appears to be directly in front of the arm, and the arm is close enough to interact with the sink. Therefore, the sink is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 3.634443006966803e-13, 1.809482773308061e-14, "The image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image doesn't explicitly label the bowls as \"bowl_1\" and \"bowl_2\", I will assume \"bowl_1\" refers to the bowl closer to the camera. The robotic arm is positioned very close to the countertop where the bowls are located, and appears to be able to reach the bowl.", false, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image doesn't explicitly label the bowls as \"bowl_1\" and \"bowl_2\", I will assume \"bowl_1\" refers to the bowl closer to the camera. The robotic arm is positioned very close to the countertop where the bowls are located, and appears to be able to reach the bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 4.61289372585133e-13, 2.948923860635576e-14, "The image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image does not explicitly label which bowl is \"bowl_1\", I will assume it refers to the bowl closer to the agent. The agent's arm is very close to the bowls, and it appears capable of reaching and manipulating them. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image does not explicitly label which bowl is \"bowl_1\", I will assume it refers to the bowl closer to the agent. The agent's arm is very close to the bowls, and it appears capable of reaching and manipulating them. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 4.61289372585133e-13, 2.948923860635576e-14, "The image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image does not explicitly label which bowl is \"bowl_1\", I will assume it refers to the bowl closer to the agent. The agent's arm is very close to the bowls, and it appears capable of reaching and manipulating them. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a sink and a countertop. There are two bowls visible on the countertop. The question asks if \"bowl_1\" is within the agent's reach. Since the image does not explicitly label which bowl is \"bowl_1\", I will assume it refers to the bowl closer to the agent. The agent's arm is very close to the bowls, and it appears capable of reaching and manipulating them. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "holding bowl_2": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8125, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}}}, "step": 3, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"], "ontop bowl_1,sink_1": ["no", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 4, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"], "ontop bowl_1,sink_1": ["no", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 5, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}], "remaining_actions": ["place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.4257760011689158e-13, 8.043678129978065e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a kitchen counter. The cabinet_1 is highlighted with a red bounding box. I need to determine if the agent can physically reach cabinet_1. Visually, the agent is close enough to cabinet_1 that it appears to be within the arm's range of motion.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a kitchen counter. The cabinet_1 is highlighted with a red bounding box. I need to determine if the agent can physically reach cabinet_1. Visually, the agent is close enough to cabinet_1 that it appears to be within the arm's range of motion.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 3.144215844717163e-13, 3.313978797869592e-14, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter with cabinets. The sink is located further away from the agent, behind the counter and cabinets. Based on the image, it does not appear that the agent can reach the sink without moving closer. Therefore, the sink is not currently in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a counter with cabinets. The sink is located further away from the agent, behind the counter and cabinets. Based on the image, it does not appear that the agent can reach the sink without moving closer. Therefore, the sink is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.4257760011689158e-13, 8.043678129978065e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a kitchen counter. The cabinet_1 is highlighted with a red bounding box. I need to determine if the agent can physically reach cabinet_1. Visually, the agent is close enough to cabinet_1 that it appears to be within the arm's range of motion.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a kitchen counter. The cabinet_1 is highlighted with a red bounding box. I need to determine if the agent can physically reach cabinet_1. Visually, the agent is close enough to cabinet_1 that it appears to be within the arm's range of motion.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 3.435845832562394e-14, 1.4322735909073035e-14, "I will examine the image to determine if cabinet_1 is open. Cabinet_1 is highlighted with a red bounding box. Based on the image, the door of cabinet_1 is closed. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 open\n<explanation>\nI will examine the image to determine if cabinet_1 is open. Cabinet_1 is highlighted with a red bounding box. Based on the image, the door of cabinet_1 is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 1.2292950199986087e-14, 1.4681833832995601e-15, "The image shows a kitchen scene with several cabinets labeled. Specifically, there are cabinets labeled \"cabinet_1\", \"cabinet_2\", and \"cabinet_3\". Examining the image, \"cabinet_1\" appears to have its door closed. Therefore, the answer is \"No\".", false, "Question: Is the cabinet_1 open\n<explanation>\nThe image shows a kitchen scene with several cabinets labeled. Specifically, there are cabinets labeled \"cabinet_1\", \"cabinet_2\", and \"cabinet_3\". Examining the image, \"cabinet_1\" appears to have its door closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 2.670304569910714e-13, 5.5420400121289e-15, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". I need to determine if the agent can reach the bowl. Looking at the image, the agent's arm is positioned such that it could potentially reach the bowl. The bowl is relatively close to the base of the robotic arm. Therefore, the bowl is in reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". I need to determine if the agent can reach the bowl. Looking at the image, the agent's arm is positioned such that it could potentially reach the bowl. The bowl is relatively close to the base of the robotic arm. Therefore, the bowl is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 2.45562522139392e-13, 5.096487976378929e-15, "The image shows a robotic arm (the agent) and several objects, including a bowl labeled \"bowl_2\". To determine if bowl_2 is in reach, I need to visually assess the distance between the agent's end effector and bowl_2. The agent is positioned above and to the right of bowl_2. Based on the perspective and the relative sizes of the agent and bowl_2, it appears that the agent could potentially reach bowl_2 with a slight extension or adjustment of its arm. Therefore, bowl_2 is in reach of the agent.", true, "Question: Is the bowl_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including a bowl labeled \"bowl_2\". To determine if bowl_2 is in reach, I need to visually assess the distance between the agent's end effector and bowl_2. The agent is positioned above and to the right of bowl_2. Based on the perspective and the relative sizes of the agent and bowl_2, it appears that the agent could potentially reach bowl_2 with a slight extension or adjustment of its arm. Therefore, bowl_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.6194920973927954e-14, 3.3611487603890276e-16, "The agent is the robotic arm. I need to determine if the piece_of_cloth_1 is within the robotic arm's reach. Looking at the image, the piece_of_cloth_1 is on a drawer, and the robotic arm is positioned such that it can likely reach the drawer and therefore the piece_of_cloth_1.", true, "Question: Is the piece_of_cloth_1 in reach of the agent\n<explanation>\nThe agent is the robotic arm. I need to determine if the piece_of_cloth_1 is within the robotic arm's reach. Looking at the image, the piece_of_cloth_1 is on a drawer, and the robotic arm is positioned such that it can likely reach the drawer and therefore the piece_of_cloth_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable sink_1": ["no", 1.6156156002877092e-13, 9.114679293980611e-15, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if the sink_1 is within reach of the agent. Looking at the image, the sink_1 is located far away from the agent, and there are several obstacles (cabinets, a table) between the agent and the sink_1. Therefore, the sink_1 is not in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if the sink_1 is within reach of the agent. Looking at the image, the sink_1 is located far away from the agent, and there are several obstacles (cabinets, a table) between the agent and the sink_1. Therefore, the sink_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 3.5925234141698237e-13, 2.2966234491418602e-14, "The image shows a robotic arm positioned above a kitchen sink. The sink is labeled as \"sink_1\". The robotic arm appears to be directly over the sink, and is close enough to interact with it. Therefore, the sink is in reach of the agent.", true, "Question: Is the sink_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm positioned above a kitchen sink. The sink is labeled as \"sink_1\". The robotic arm appears to be directly over the sink, and is close enough to interact with it. Therefore, the sink is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.425531914893617, "yes_accuracy": 0.5454545454545454, "yes_correct": 6, "yes_total": 11, "no_accuracy": 0.3888888888888889, "no_correct": 14, "no_total": 36, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.5333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5333333333333333, "no_correct": 8, "no_total": 15}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.2, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.08333333333333333, "no_correct": 1, "no_total": 12}}}, "step": 2, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0454446553245789e-13, 1.816710505446982e-14, "The image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene. The agent is a robotic arm. I need to determine if cabinet_1 is within the reach of the agent. From the image, it appears that the agent is close to a large black appliance, which is likely a refrigerator or oven. Cabinet_1 is located on the wall to the left of the agent. It is difficult to determine the exact distance, but it appears to be relatively close. Given the robotic arm's potential range of motion, it is likely that cabinet_1 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 3, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 9, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 11, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 13, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 15, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 17, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 19, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 20, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 21, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 22, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 23, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 24, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 25, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 26, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 27, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 28, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 29, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["no", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 30, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 7.742576111496868e-13, 3.002122950734008e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". The red lines highlight the agent and the cabinet. Visually, the agent's arm appears to be very close to, and potentially touching, the cabinet_1. Therefore, the cabinet_1 is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". The red lines highlight the agent and the cabinet. Visually, the agent's arm appears to be very close to, and potentially touching, the cabinet_1. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 6.832798216116487e-13, 2.6493635437623356e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". The red lines highlight the agent and the cabinet. Visually, the agent's arm appears to be very close to, and potentially touching, the cabinet_1. Therefore, it is likely within reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". The red lines highlight the agent and the cabinet. Visually, the agent's arm appears to be very close to, and potentially touching, the cabinet_1. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 2.390823812797177e-13, 3.4786282470007646e-13, "The image shows a kitchen scene with cabinets and a robotic arm. The cabinet labeled \"cabinet_1\" is visible. Based on the image, the door of \"cabinet_1\" is closed. Therefore, the cabinet is not open.", true, "<explanation>\nThe image shows a kitchen scene with cabinets and a robotic arm. The cabinet labeled \"cabinet_1\" is visible. Based on the image, the door of \"cabinet_1\" is closed. Therefore, the cabinet is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 2.1670810762194903e-13, 2.5882089508167012e-14, "The image shows two cabinets labeled 'cabinet_1' and 'cabinet_2'. 'cabinet_1' has visible dark interiors, suggesting it is not open, as an open cabinet would reveal its contents more clearly. 'cabinet_2' appears to be slightly ajar. Therefore, 'cabinet_1' is not open.", false, "<explanation>\nThe image shows two cabinets labeled 'cabinet_1' and 'cabinet_2'. 'cabinet_1' has visible dark interiors, suggesting it is not open, as an open cabinet would reveal its contents more clearly. 'cabinet_2' appears to be slightly ajar. Therefore, 'cabinet_1' is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 1.261960506796292e-13, 3.810790218268783e-15, "The image shows a robotic arm (the agent) and two bowls labeled 'bowl_1' and 'bowl_2'. The agent's arm is extended towards the bowls. Visually, the arm appears to be close enough to 'bowl_1' to potentially grasp it. Therefore, 'bowl_1' is in reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and two bowls labeled 'bowl_1' and 'bowl_2'. The agent's arm is extended towards the bowls. Visually, the arm appears to be close enough to 'bowl_1' to potentially grasp it. Therefore, 'bowl_1' is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.429988397659565e-13, 3.810789794752309e-15, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The robotic arm is positioned relatively close to the bowl, and it appears that the arm could extend and grasp the bowl without significant difficulty. Therefore, the bowl is likely within the agent's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_2\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The robotic arm is positioned relatively close to the bowl, and it appears that the arm could extend and grasp the bowl without significant difficulty. Therefore, the bowl is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 5.233926695367465e-15, 3.669265683393236e-13, "The image shows a kitchen scene with a robotic arm (the agent). The question asks if 'piece_of_cloth_1' is within the agent's reach. However, there is no object labeled 'piece_of_cloth_1' in the image. Therefore, the answer is \"No\".", false, "Question: Is the piece_of_cloth_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The question asks if 'piece_of_cloth_1' is within the agent's reach. However, there is no object labeled 'piece_of_cloth_1' in the image. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 1.261960506796292e-13, 3.810790218268783e-15, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The robotic arm is positioned relatively close to the cabinet where the bowl is located. Based on the image, it appears the arm could extend and grasp the bowl. Therefore, the bowl is in reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The robotic arm is positioned relatively close to the cabinet where the bowl is located. Based on the image, it appears the arm could extend and grasp the bowl. Therefore, the bowl is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 5.1345104383482276e-14, 6.132297886038375e-15, "The image shows a robotic arm (the agent) and several objects, including 'bowl_1', 'bowl_2', 'cabinet_1', and 'cabinet_2'. The robotic arm is pointing towards the bowls, but it is not clearly grasping or holding 'bowl_2'. Therefore, the agent is not holding 'bowl_2'.", true, "Question: Is the agent holding the bowl_2?\n<explanation>\nThe image shows a robotic arm (the agent) and several objects, including 'bowl_1', 'bowl_2', 'cabinet_1', and 'cabinet_2'. The robotic arm is pointing towards the bowls, but it is not clearly grasping or holding 'bowl_2'. Therefore, the agent is not holding 'bowl_2'.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 1.5111407650986804e-15, 4.416201088088163e-14, "The image shows a robotic arm, which is the agent. The agent is holding an object. However, the object being held is labeled as 'bowl1' and 'bowl_2', not 'piece_of_cloth_1'. Therefore, the agent is not holding the piece_of_cloth_1.", true, "Question: Is the agent holding the piece_of_cloth_1\n<explanation>\nThe image shows a robotic arm, which is the agent. The agent is holding an object. However, the object being held is labeled as 'bowl1' and 'bowl_2', not 'piece_of_cloth_1'. Therefore, the agent is not holding the piece_of_cloth_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 1.46095798219531e-12, 1.570677789219932e-11, "The image shows a robotic arm, which is the agent. The image also shows a bowl labeled \"bowl_1\". However, the image does not show the agent holding the bowl. The bowl is sitting on a surface. Therefore, the answer is \"No\".", false, "<explanation>\nThe image shows a robotic arm, which is the agent. The image also shows a bowl labeled \"bowl_1\". However, the image does not show the agent holding the bowl. The bowl is sitting on a surface. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["yes", 5.639049882426306e-13, 8.204768787122008e-13, "The image shows two bowls labeled 'bowl_1' and 'bowl_2'. 'bowl_1' contains a plant and is positioned above 'bowl_2'. 'bowl_2' is a smaller bowl and appears to be supporting 'bowl_1'. Therefore, 'bowl_1' is on top of 'bowl_2'.", false, "<explanation>\nThe image shows two bowls labeled 'bowl_1' and 'bowl_2'. 'bowl_1' contains a plant and is positioned above 'bowl_2'. 'bowl_2' is a smaller bowl and appears to be supporting 'bowl_1'. Therefore, 'bowl_1' is on top of 'bowl_2'.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,cabinet_1": ["yes", 2.3232774211401352e-12, 7.949818239686227e-14, "The image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". Visually, the bowl is positioned directly above the cabinet. Therefore, bowl_1 is on top of cabinet_1.", false, "<explanation>\nThe image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". Visually, the bowl is positioned directly above the cabinet. Therefore, bowl_1 is on top of cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["no", 5.261205425315107e-13, 5.656329137709859e-12, "The image shows a bowl labeled \"bowl_1\" and a piece of furniture labeled \"cabinet_1\". There is no object labeled \"piece_of_cloth_1\" in the image. However, bowl_1 is on top of cabinet_1. Since there is no piece_of_cloth_1, the question cannot be answered as true.", true, "Question: Is the bowl_1 on top of the piece_of_cloth_1\n<explanation>\nThe image shows a bowl labeled \"bowl_1\" and a piece of furniture labeled \"cabinet_1\". There is no object labeled \"piece_of_cloth_1\" in the image. However, bowl_1 is on top of cabinet_1. Since there is no piece_of_cloth_1, the question cannot be answered as true.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["yes", 3.4202558862363175e-13, 3.0183654512426494e-13, "The image shows two bowls labeled 'bowl_1' and 'bowl_2'. 'bowl_1' is on top of 'cabinet_2' and 'bowl_2' is on top of 'cabinet_1'. 'cabinet_1' and 'cabinet_2' are next to each other. Therefore, 'bowl_1' and 'bowl_2' are next to each other.", false, "<explanation>\nThe image shows two bowls labeled 'bowl_1' and 'bowl_2'. 'bowl_1' is on top of 'cabinet_2' and 'bowl_2' is on top of 'cabinet_1'. 'cabinet_1' and 'cabinet_2' are next to each other. Therefore, 'bowl_1' and 'bowl_2' are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,cabinet_1": ["yes", 6.711717227998737e-13, 1.3929725327041249e-14, "The image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". Visually, the bowl is positioned directly on top of the cabinet. Therefore, it is next to the cabinet.", false, "<explanation>\nThe image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". Visually, the bowl is positioned directly on top of the cabinet. Therefore, it is next to the cabinet.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto bowl_1,piece_of_cloth_1": ["no", 8.913825759329988e-14, 2.7456514709381374e-13, "The image shows a bowl labeled \"bowl_1\" and a piece of cloth labeled \"piece_of_cloth_1\". Visually inspecting the image, the bowl is not next to the piece of cloth. They are separated by other objects like cabinets.", true, "Question: Is the bowl_1 next to the piece_of_cloth_1\n<explanation>\nThe image shows a bowl labeled \"bowl_1\" and a piece of cloth labeled \"piece_of_cloth_1\". Visually inspecting the image, the bowl is not next to the piece of cloth. They are separated by other objects like cabinets.\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 8.753397854645295e-13, 1.3423770016569858e-13, "The image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". By visually inspecting the image, it appears that the bowl is positioned above the cabinet, not inside it. The bowl is on top of a different cabinet labeled \"cabinet_2\". Therefore, the bowl is not inside the cabinet_1.", true, "<explanation>\nThe image shows a bowl labeled \"bowl_1\" and a cabinet labeled \"cabinet_1\". By visually inspecting the image, it appears that the bowl is positioned above the cabinet, not inside it. The bowl is on top of a different cabinet labeled \"cabinet_2\". Therefore, the bowl is not inside the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 1.0714928293589776e-12, 1.8619753362845298e-13, "The image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The bowl is suspended above a cabinet, and the arm appears to be positioned relatively close to the cabinet. Based on the perspective and the relative sizes of the arm and the bowl, it seems plausible that the arm could reach the bowl with some extension.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a bowl labeled \"bowl_1\". To determine if the bowl is in reach, I need to visually assess the distance between the arm and the bowl. The bowl is suspended above a cabinet, and the arm appears to be positioned relatively close to the cabinet. Based on the perspective and the relative sizes of the arm and the bowl, it seems plausible that the arm could reach the bowl with some extension.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 2.5387618439801085e-13, 3.325121428199296e-11, "The image shows a robotic arm, which is the agent. The image also shows a bowl labeled \"bowl_1\". However, there is no bowl labeled \"bowl_2\" visible in the image, and the agent is not holding any bowl. Therefore, the agent is not holding bowl_2.", true, "Question: Is the agent holding the bowl_2\n<explanation>\nThe image shows a robotic arm, which is the agent. The image also shows a bowl labeled \"bowl_1\". However, there is no bowl labeled \"bowl_2\" visible in the image, and the agent is not holding any bowl. Therefore, the agent is not holding bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 5.327750840868929e-14, 4.795888512709734e-12, "The image shows a kitchen scene with various objects like cabinets, a bowl with plants, and a microwave. The agent is a robotic arm. I need to determine if the agent is currently holding the 'piece_of_cloth_1'. Looking at the image, the robotic arm is visible, but it doesn't appear to be holding anything. There is no 'piece_of_cloth_1' visible in the image, and even if there was, the arm is not grasping it. Therefore, the agent is not holding the piece_of_cloth_1.", true, "Question: Is the agent holding the piece_of_cloth_1\n<explanation>\nThe image shows a kitchen scene with various objects like cabinets, a bowl with plants, and a microwave. The agent is a robotic arm. I need to determine if the agent is currently holding the 'piece_of_cloth_1'. Looking at the image, the robotic arm is visible, but it doesn't appear to be holding anything. There is no 'piece_of_cloth_1' visible in the image, and even if there was, the arm is not grasping it. Therefore, the agent is not holding the piece_of_cloth_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.675, "yes_accuracy": 0.47058823529411764, "yes_correct": 8, "yes_total": 17, "no_accuracy": 0.8260869565217391, "no_correct": 19, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}}}, "step": 2, "actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.25, "yes_correct": 3, "yes_total": 12, "no_accuracy": 0.75, "no_correct": 21, "no_total": 28, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6363636363636364, "no_correct": 7, "no_total": 11}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}, "step": 3, "actions": ["grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 2.3327029869367466e-14, 2.786016300879114e-15, "The image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 4.255233657297387e-14, 5.758831742231534e-15, "The image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 3.190735504044091e-14, 3.190735504044091e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator, and it appears to be closed. There is no visible gap or indication that the door is open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator, and it appears to be closed. There is no visible gap or indication that the door is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 1.1599556493276098e-13, 2.0157007370202353e-14, "The image shows a shelf unit with items on it. The shelf unit appears to be inside of a cabinet. The cabinet door is open, revealing the shelf unit and some items on the floor. The question asks if the electric_refrigerator_1 is open. Based on the image, it appears that the cabinet is open, but it is not clear if this is the electric_refrigerator_1. However, since the cabinet is open, it is reasonable to assume that the electric_refrigerator_1 is open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nThe image shows a shelf unit with items on it. The shelf unit appears to be inside of a cabinet. The cabinet door is open, revealing the shelf unit and some items on the floor. The question asks if the electric_refrigerator_1 is open. Based on the image, it appears that the cabinet is open, but it is not clear if this is the electric_refrigerator_1. However, since the cabinet is open, it is reasonable to assume that the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 2.705654439643518e-13, 4.373282775683735e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.240449172756856e-13, 3.621348758516517e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.705654439643518e-13, 4.373282775683735e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 2.6630600665194376e-14, 2.0739932056370973e-14, "The image shows a robotic arm (the agent) positioned near a countertop with several objects on it, including an apple labeled \"apple_2\". However, the robotic arm is not grasping or holding the apple. It is positioned above the countertop, but not actively holding any of the items. Therefore, the agent is not holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a countertop with several objects on it, including an apple labeled \"apple_2\". However, the robotic arm is not grasping or holding the apple. It is positioned above the countertop, but not actively holding any of the items. Therefore, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 1.1739339968869222e-13, 9.636237290153605e-15, "The image shows a robotic arm (the agent) holding a green object. The image also labels an object as \"apple_1\". By visually inspecting the image, it appears the agent is holding the green object which is labeled as \"apple_1\". Therefore, the answer is \"Yes\".", true, "Question: Is the agent holding the apple_1\n<explanation>\nThe image shows a robotic arm (the agent) holding a green object. The image also labels an object as \"apple_1\". By visually inspecting the image, it appears the agent is holding the green object which is labeled as \"apple_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["no", 8.47493326601792e-14, 1.2996731241134846e-14, "I need to determine if apple_1 is on top of apple_2. Looking at the image, apple_1 is a green apple and apple_2 is a yellow apple. The green apple (apple_1) is resting on the table, and the yellow apple (apple_2) is also on the table. However, apple_1 is not on top of apple_2; they are side by side.", true, "Question: Is the apple_1 on top of the apple_2\n<explanation>\nI need to determine if apple_1 is on top of apple_2. Looking at the image, apple_1 is a green apple and apple_2 is a yellow apple. The green apple (apple_1) is resting on the table, and the yellow apple (apple_2) is also on the table. However, apple_1 is not on top of apple_2; they are side by side.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["yes", 2.376091944727987e-13, 5.588032630615388e-15, "I will examine the image to determine the positions of apple_1 and apple_2. From the image, I can see that apple_1 is on a plate with other objects, and apple_2 is also on the same plate, very close to apple_1. Therefore, apple_1 is next to apple_2.", false, "Question: Is the apple_1 next to the apple_2\n<explanation>\nI will examine the image to determine the positions of apple_1 and apple_2. From the image, I can see that apple_1 is on a plate with other objects, and apple_2 is also on the same plate, very close to apple_1. Therefore, apple_1 is next to apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 3.199085046618356e-15, 9.85387562968702e-15, "The image shows a robotic arm (the agent) in a kitchen-like environment. The agent is holding a green object. There is a shelf and a cabinet visible. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach of the agent. Since the refrigerator is not visible, we can assume it is not in reach.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) in a kitchen-like environment. The agent is holding a green object. There is a shelf and a cabinet visible. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach of the agent. Since the refrigerator is not visible, we can assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 4.2990697807221423e-13, 2.4253692383993143e-14, "The image shows a robotic arm (the agent) holding a green apple (apple_1). The apple is very close to the robotic arm's gripper. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a green apple (apple_1). The apple is very close to the robotic arm's gripper. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 5.2744000471696435e-15, 1.6246293522178927e-14, "The image shows a robotic arm (the agent) in a kitchen-like environment. The agent is holding a green object. There is a shelf and a cabinet visible. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach of the agent. Since the refrigerator is not visible, we can assume it is not in reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) in a kitchen-like environment. The agent is holding a green object. There is a shelf and a cabinet visible. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach of the agent. Since the refrigerator is not visible, we can assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 4.109179596795739e-15, 7.676958603596105e-15, "The image shows a robotic arm holding a green object. The arm is positioned near two shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent. Since the object is not visible, it cannot be in reach.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding a green object. The arm is positioned near two shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent. Since the object is not visible, it cannot be in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 3.994899571736765e-13, 2.5538539721024246e-14, "The image shows a robotic arm holding a green apple. The apple is directly above the robotic arm's gripper. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding a green apple. The apple is directly above the robotic arm's gripper. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 9.85387562968702e-15, 1.6246293522178927e-14, "The image shows a robotic arm holding a green object. The arm is positioned near two shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent. Since the object is not visible, it cannot be in reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding a green object. The arm is positioned near two shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent. Since the object is not visible, it cannot be in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 8.5473925300842e-15, 1.1799309901534827e-13, "The image shows a robotic arm in a room. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach. Since the refrigerator is not visible, we can assume it is not in reach.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm in a room. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach. Since the refrigerator is not visible, we can assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 3.5628626242865946e-13, 3.313978459056413e-14, "The image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) on a shelf below the agent. The agent's arm is positioned close enough to the apple that it could potentially grasp it. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) on a shelf below the agent. The agent's arm is positioned close enough to the apple that it could potentially grasp it. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 8.581534734122126e-15, 1.3423776792833436e-13, "The image shows a robotic arm in a room. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach. Since the object is not visible, we assume it is not in reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm in a room. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, there is no refrigerator visible in the image. Therefore, it is impossible to determine if the refrigerator is in reach. Since the object is not visible, we assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 7.674206593550476e-15, 8.696015472108281e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is holding a green object. The image also shows kitchen cabinets and shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric_refrigerator_1 is in reach of the agent. Since the object is not visible, we can assume it is not in reach.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is holding a green object. The image also shows kitchen cabinets and shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric_refrigerator_1 is in reach of the agent. Since the object is not visible, we can assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 4.46664650795639e-13, 1.9625075761524335e-14, "The image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) near the robotic arm. The apple appears to be close enough that the robotic arm could potentially grasp it. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) near the robotic arm. The apple appears to be close enough that the robotic arm could potentially grasp it. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 8.693764905567426e-15, 1.1163015024612429e-14, "The image shows a kitchen scene with a robotic arm (the agent). The agent is holding a green object. The image also shows kitchen cabinets and shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric_refrigerator_1 is in reach of the agent. Since the object is not visible, we can assume it is not in reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is holding a green object. The image also shows kitchen cabinets and shelves. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric_refrigerator_1 is in reach of the agent. Since the object is not visible, we can assume it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 4.1052794335901064e-15, 2.3624252036493106e-14, "The image shows a robotic arm in a kitchen-like environment. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm in a kitchen-like environment. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 1.8870567272417232e-13, 1.5489903264676204e-14, "The image shows a robotic arm (the agent) holding a green apple (apple_1). The apple is directly in front of the robotic arm's gripper. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a green apple (apple_1). The apple is directly in front of the robotic arm's gripper. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 5.2661546049445965e-15, 3.433964064166774e-14, "The image shows a robotic arm in a kitchen-like environment. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm in a kitchen-like environment. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 9.848055666306435e-15, 8.690879064316131e-15, "The image shows a robotic arm (the agent) holding a green sphere. The agent is positioned near kitchen cabinets. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a green sphere. The agent is positioned near kitchen cabinets. The question asks if the \"electric_refrigerator_1\" is within reach of the agent. However, the image does not show an electric refrigerator. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 8.03171873627051e-13, 4.5311854718647557e-14, "The image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) visible near the base of the robotic arm. The apple appears to be very close to the gripper of the robotic arm. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding an object. There is also a green apple (apple_1) visible near the base of the robotic arm. The apple appears to be very close to the gripper of the robotic arm. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 9.848054819273488e-15, 9.848054819273488e-15, "The image shows a robotic arm (the agent) holding a green sphere. The agent is positioned near some shelves. The question asks if the electric_refrigerator_1 is in reach of the agent. Based on the image, the electric_refrigerator_1 is not visible. Therefore, it is impossible to determine if it is in reach of the agent. However, since the question asks if it *is* in reach, and we cannot confirm that it is, the answer should be \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a green sphere. The agent is positioned near some shelves. The question asks if the electric_refrigerator_1 is in reach of the agent. Based on the image, the electric_refrigerator_1 is not visible. Therefore, it is impossible to determine if it is in reach of the agent. However, since the question asks if it *is* in reach, and we cannot confirm that it is, the answer should be \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 5.233926271850991e-15, 1.108022094215011e-14, "The image shows a robotic arm (the agent) and some kitchen furniture. The agent is holding a green object. I need to determine if the electric_refrigerator_1 is within the agent's reach. Based on the image, the agent is positioned near a counter and shelves. The electric refrigerator is not visible in the image. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and some kitchen furniture. The agent is holding a green object. I need to determine if the electric_refrigerator_1 is within the agent's reach. Based on the image, the agent is positioned near a counter and shelves. The electric refrigerator is not visible in the image. Therefore, it is impossible to determine if the electric refrigerator is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable apple_1": ["yes", 4.696104616286334e-13, 2.649360663850315e-14, "The image shows a robotic arm (the agent) holding an object. There is an apple (apple_1) visible on a shelf below the agent. The agent's arm appears to be positioned close enough to the apple that it could potentially grasp it. Therefore, the apple is in reach of the agent.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding an object. There is an apple (apple_1) visible on a shelf below the agent. The agent's arm appears to be positioned close enough to the apple that it could potentially grasp it. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["yes", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6234567901234568, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5447761194029851, "no_correct": 73, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9090909090909091, "no_correct": 60, "no_total": 66}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.06896551724137931, "no_correct": 4, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "yes"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["yes", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6234567901234568, "yes_accuracy": 1.0, "yes_correct": 26, "yes_total": 26, "no_accuracy": 0.5514705882352942, "no_correct": 75, "no_total": 136, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}, "ontop": {"accuracy": 0.8472222222222222, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.835820895522388, "no_correct": 56, "no_total": 67}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 12, "yes_total": 12, "no_accuracy": 0.2, "no_correct": 12, "no_total": 60}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 8, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 10, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 11, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 12, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.3498468835748678e-13, 2.0700573823443855e-14, "The image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 9.294989230341708e-14, 1.2579401496154441e-14, "The image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 5.526350319202955e-13, 8.474931910765204e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with its door slightly ajar. Therefore, the refrigerator is open.", false, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with its door slightly ajar. Therefore, the refrigerator is open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 5.727869350699577e-13, 8.170366306800049e-15, "The image shows a robotic arm (the agent) and a countertop with several objects, including an apple labeled \"apple_1\". The robotic arm is positioned close to the countertop. Visually, the apple appears to be within the workspace of the robotic arm, meaning the agent can likely reach it.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a countertop with several objects, including an apple labeled \"apple_1\". The robotic arm is positioned close to the countertop. Visually, the apple appears to be within the workspace of the robotic arm, meaning the agent can likely reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.301127496016908e-13, 2.8966919551079657e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_2\". The robotic arm is positioned close to the counter. Visually, it appears that the arm could reach the apple_2 without significant difficulty. Therefore, the apple_2 is in reach of the agent.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_2\". The robotic arm is positioned close to the counter. Visually, it appears that the arm could reach the apple_2 without significant difficulty. Therefore, the apple_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.202799198350416e-14, 1.110128156935064e-14, "The image shows a robotic arm holding an object. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding an object. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 3, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["yes", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5617283950617284, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.48507462686567165, "no_correct": 65, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.4444444444444444, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9}, "ontop": {"accuracy": 0.8611111111111112, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8484848484848485, "no_correct": 56, "no_total": 66}, "nextto": {"accuracy": 0.2361111111111111, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.08620689655172414, "no_correct": 5, "no_total": 58}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.141930733134364e-14, 1.1018905074131318e-14, "The image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.0359927840727576e-13, 1.4020637373270053e-14, "The image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm extending towards a refrigerator. The robotic arm appears to be very close to the refrigerator's handle. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 3.0509652421649436e-13, 8.741161142350809e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the refrigerator is not open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the refrigerator is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 1.0583145416877965e-13, 7.666405420106263e-15, "The image shows a refrigerator with its door open. The interior of the refrigerator is visible, containing shelves and some food items. Therefore, the electric_refrigerator_1 is open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nThe image shows a refrigerator with its door open. The interior of the refrigerator is visible, containing shelves and some food items. Therefore, the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.744863747845521e-13, 3.621348758516517e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_1\" is within the range of the agent's arm. Visually, \"apple_1\" appears to be close enough to the agent's arm that it could be grasped.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_1\" is within the range of the agent's arm. Visually, \"apple_1\" appears to be close enough to the agent's arm that it could be grasped.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 8.647767967212908e-14, 1.5838940131251283e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_2\" is within the range of the agent's arm. Visually, \"apple_2\" appears to be close enough to the agent's arm that it could be grasped.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_2\" is within the range of the agent's arm. Visually, \"apple_2\" appears to be close enough to the agent's arm that it could be grasped.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.744863747845521e-13, 3.621348758516517e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_1\" is within the range of the agent's arm. Visually, \"apple_1\" appears to be close enough to the agent's arm that it could be grasped.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's arm is positioned near the counter. I need to determine if \"apple_1\" is within the range of the agent's arm. Visually, \"apple_1\" appears to be close enough to the agent's arm that it could be grasped.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 9.033743940617747e-14, 2.5882108142891852e-14, "The image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's gripper is close to the objects on the counter, but it is not closed around \"apple_2\". Therefore, the agent is not holding \"apple_2\".", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including apples labeled \"apple_1\" and \"apple_2\". The agent's gripper is close to the objects on the counter, but it is not closed around \"apple_2\". Therefore, the agent is not holding \"apple_2\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 4.397154027609845e-14, 1.6176223568650262e-14, "The image shows a robotic arm (the agent) and an apple labeled \"apple_1\" on a counter. The agent's gripper is close to the apple, but it does not appear to be grasping or holding it. Therefore, the agent is not holding the apple_1.", false, "Question: Is the agent holding the apple_1\n<explanation>\nThe image shows a robotic arm (the agent) and an apple labeled \"apple_1\" on a counter. The agent's gripper is close to the apple, but it does not appear to be grasping or holding it. Therefore, the agent is not holding the apple_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop apple_1,apple_2": ["no", 5.608702860330529e-14, 3.0021226119208294e-14, "I need to determine if apple_1 is positioned on top of apple_2. Looking at the image, apple_1 and apple_2 are both on the counter. Apple_1 is to the left of apple_2 and they are side by side, not one on top of the other. Therefore, apple_1 is not on top of apple_2.", true, "Question: Is the apple_1 on top of the apple_2\n<explanation>\nI need to determine if apple_1 is positioned on top of apple_2. Looking at the image, apple_1 and apple_2 are both on the counter. Apple_1 is to the left of apple_2 and they are side by side, not one on top of the other. Therefore, apple_1 is not on top of apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["yes", 8.160615602324436e-14, 3.164213970729317e-15, "The image shows two apples labeled \"apple_1\" and \"apple_2\". They are both on the counter. Visually, they are very close to each other, almost touching. Therefore, apple_1 is next to apple_2.", false, "Question: Is the apple_1 next to the apple_2\n<explanation>\nThe image shows two apples labeled \"apple_1\" and \"apple_2\". They are both on the counter. Visually, they are very close to each other, almost touching. Therefore, apple_1 is next to apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.3908246259488064e-13, 6.371331854302959e-15, "The image shows a robotic arm (the agent) and an apple labeled \"apple_1\". The red bounding box around the agent encompasses the apple_1. Therefore, the apple_1 is within the reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an apple labeled \"apple_1\". The red bounding box around the agent encompasses the apple_1. Therefore, the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 4.992882802622341e-14, 2.0813432493336018e-14, "The image shows a robotic arm (the agent) and several objects on a counter, including \"apple_2\". The red outline around the agent does not include the apple_2. Therefore, the agent is not holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including \"apple_2\". The red outline around the agent does not include the apple_2. Therefore, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5864197530864198, "yes_accuracy": 0.9642857142857143, "yes_correct": 27, "yes_total": 28, "no_accuracy": 0.5074626865671642, "no_correct": 68, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8636363636363636, "no_correct": 57, "no_total": 66}, "nextto": {"accuracy": 0.20833333333333334, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.034482758620689655, "no_correct": 2, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "yes"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5864197530864198, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5147058823529411, "no_correct": 70, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "ontop": {"accuracy": 0.9444444444444444, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9402985074626866, "no_correct": 63, "no_total": 67}, "nextto": {"accuracy": 0.19444444444444445, "yes_accuracy": 1.0, "yes_correct": 12, "yes_total": 12, "no_accuracy": 0.03333333333333333, "no_correct": 2, "no_total": 60}}}, "step": 5, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 2.3327029869367466e-14, 2.786016300879114e-15, "The image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 4.255233657297387e-14, 5.758831742231534e-15, "The image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an electric refrigerator. The robotic arm is positioned close to the refrigerator. It appears that the arm could potentially interact with the refrigerator, meaning it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 3.190735504044091e-14, 3.190735504044091e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator, and it appears to be closed. There is no visible gap or indication that the door is open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator, and it appears to be closed. There is no visible gap or indication that the door is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.709158852115534e-13, 9.96643902389377e-14, "The image shows a shelf with items on it. The shelf is inside what appears to be a refrigerator. The refrigerator door is not visible in the image, but the shelf is exposed, which suggests the refrigerator is open. Therefore, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nThe image shows a shelf with items on it. The shelf is inside what appears to be a refrigerator. The refrigerator door is not visible in the image, but the shelf is exposed, which suggests the refrigerator is open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 7.095978535667791e-13, 2.4281100676100398e-14, "The image shows a robotic arm (the agent) positioned near a counter with several apples on it. The apple_1 is one of the apples on the counter. The robotic arm is close enough to the counter that it could potentially grasp the apple_1. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a counter with several apples on it. The apple_1 is one of the apples on the counter. The robotic arm is close enough to the counter that it could potentially grasp the apple_1. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 4.743030512614765e-13, 1.4322710498084618e-14, "The image shows a robotic arm (the agent) positioned near a counter with several objects, including apples labeled as \"apple_2\". The robotic arm appears to be close enough to the counter that it could potentially grasp \"apple_2\". Therefore, the apple_2 is in reach of the agent.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a counter with several objects, including apples labeled as \"apple_2\". The robotic arm appears to be close enough to the counter that it could potentially grasp \"apple_2\". Therefore, the apple_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 7.095978535667791e-13, 2.4281100676100398e-14, "The image shows a robotic arm (the agent) positioned near a counter with several apples on it. The apple_1 is one of the apples on the counter. The robotic arm is close enough to the counter that it could potentially grasp the apple_1. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a counter with several apples on it. The apple_1 is one of the apples on the counter. The robotic arm is close enough to the counter that it could potentially grasp the apple_1. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 2.1383157018054627e-13, 6.942095010821492e-14, "The image shows a robotic arm (the agent) and several objects on a counter, including two apples labeled \"apple_1\" and \"apple_2\". The robotic arm is positioned near the apples, but it is not grasping or holding either of them. Therefore, the agent is not holding apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including two apples labeled \"apple_1\" and \"apple_2\". The robotic arm is positioned near the apples, but it is not grasping or holding either of them. Therefore, the agent is not holding apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 4.402237241732908e-14, 2.3563475728461715e-14, "The image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_1\". The robotic arm is positioned near the apple, and the red outline around the apple and the arm suggests that the agent is interacting with the apple. However, the image does not clearly show the agent *holding* the apple. It appears to be grasping it, but it's not definitively held. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the apple_1?\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_1\". The robotic arm is positioned near the apple, and the red outline around the apple and the arm suggests that the agent is interacting with the apple. However, the image does not clearly show the agent *holding* the apple. It appears to be grasping it, but it's not definitively held. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop apple_1,apple_2": ["no", 5.479235229595425e-14, 1.7788472856717676e-14, "The image shows two apples labeled \"apple_1\" and \"apple_2\". \"apple_1\" is positioned to the left of \"apple_2\" and appears to be resting on the counter next to it. It is not directly on top of \"apple_2\". Therefore, the answer is \"No\".", true, "Question: Is the apple_1 on top of the apple_2\n<explanation>\nThe image shows two apples labeled \"apple_1\" and \"apple_2\". \"apple_1\" is positioned to the left of \"apple_2\" and appears to be resting on the counter next to it. It is not directly on top of \"apple_2\". Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["yes", 1.3454568134532024e-13, 2.792406529191437e-15, "The image shows two apples labeled \"apple_1\" and \"apple_2\". They are both on the kitchen counter and are very close to each other. Therefore, apple_1 is next to apple_2.", false, "Question: Is the apple_1 next to the apple_2\n<explanation>\nThe image shows two apples labeled \"apple_1\" and \"apple_2\". They are both on the kitchen counter and are very close to each other. Therefore, apple_1 is next to apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.6653219330874797e-13, 5.698417964301568e-15, "The image shows a robotic arm (the agent) and an apple labeled \"apple_1\". The red outline around the apple and the agent suggests that the system is determining reachability. Based on the image, the apple_1 is within the workspace of the robotic arm, and appears to be close enough for the agent to grasp. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an apple labeled \"apple_1\". The red outline around the apple and the agent suggests that the system is determining reachability. Based on the image, the apple_1 is within the workspace of the robotic arm, and appears to be close enough for the agent to grasp. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 3.891191771468287e-14, 1.6220901168486138e-14, "The image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_2\". The red outline around the robotic arm does not encompass the apple_2. Therefore, the agent is not holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_2\". The red outline around the robotic arm does not encompass the apple_2. Therefore, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6049382716049383, "yes_accuracy": 0.9642857142857143, "yes_correct": 27, "yes_total": 28, "no_accuracy": 0.5298507462686567, "no_correct": 71, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.4444444444444444, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9}, "ontop": {"accuracy": 0.9722222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.2222222222222222, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.05172413793103448, "no_correct": 3, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "yes"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5925925925925926, "yes_accuracy": 0.9615384615384616, "yes_correct": 25, "yes_total": 26, "no_accuracy": 0.5220588235294118, "no_correct": 71, "no_total": 136, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9305555555555556, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9253731343283582, "no_correct": 62, "no_total": 67}, "nextto": {"accuracy": 0.19444444444444445, "yes_accuracy": 1.0, "yes_correct": 12, "yes_total": 12, "no_accuracy": 0.03333333333333333, "no_correct": 2, "no_total": 60}}}, "step": 5, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 3.891191771468287e-14, 2.3601272032634096e-14, "The image shows a robotic arm (the agent) and some kitchen furniture. The agent is holding an object. I need to determine if the electric_refrigerator_1 is within the reach of the agent. Based on the image, the agent is positioned near a cabinet and an oven. The electric_refrigerator_1 is not visible in the image. However, given the context of a household simulator, it is reasonable to assume that the electric_refrigerator_1 is not in reach of the agent, as it is not visible and the agent is positioned near other appliances.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and some kitchen furniture. The agent is holding an object. I need to determine if the electric_refrigerator_1 is within the reach of the agent. Based on the image, the agent is positioned near a cabinet and an oven. The electric_refrigerator_1 is not visible in the image. However, given the context of a household simulator, it is reasonable to assume that the electric_refrigerator_1 is not in reach of the agent, as it is not visible and the agent is positioned near other appliances.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.7080638932322895e-13, 5.157906335384339e-15, "The image shows a robotic arm (the agent) holding a hair dryer. There is a counter with some apples on it. The question asks if apple_1 is in reach of the agent. By visually inspecting the image, the robotic arm is positioned close enough to the counter that it could potentially reach apple_1.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a hair dryer. There is a counter with some apples on it. The question asks if apple_1 is in reach of the agent. By visually inspecting the image, the robotic arm is positioned close enough to the counter that it could potentially reach apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.213206966869899e-13, 5.2049640978019986e-15, "The image shows a robotic arm (the agent) holding a hair dryer. There are two apples on a counter. The question asks if apple_2 is in reach of the agent. By visually inspecting the image, the robotic arm is positioned such that it can reach apple_2.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) holding a hair dryer. There are two apples on a counter. The question asks if apple_2 is in reach of the agent. By visually inspecting the image, the robotic arm is positioned such that it can reach apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 2.3456829198204715e-14, 1.6121625518936145e-14, "The image shows a robotic arm holding an object. The robotic arm is positioned near kitchen cabinets and an oven. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. Based on the image, it is not possible to determine if there is an electric refrigerator in the scene, or if it is within the reach of the robotic arm. However, the robotic arm is close to kitchen appliances, so it is possible that the refrigerator is nearby. Since we cannot confirm the presence of the refrigerator or its reachability, the answer is \"No\".", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding an object. The robotic arm is positioned near kitchen cabinets and an oven. The question asks if the \"electric_refrigerator_1\" is in reach of the agent. Based on the image, it is not possible to determine if there is an electric refrigerator in the scene, or if it is within the reach of the robotic arm. However, the robotic arm is close to kitchen appliances, so it is possible that the refrigerator is nearby. Since we cannot confirm the presence of the refrigerator or its reachability, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 4.4608704208824734e-13, 7.210324764821922e-15, "The image shows a robotic arm (the agent) and a counter with several objects on it, including \"apple_1\" and \"apple_2\". The robotic arm is positioned close to the counter. Visually, \"apple_1\" appears to be within the range of motion of the robotic arm, meaning the agent can likely reach it.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a counter with several objects on it, including \"apple_1\" and \"apple_2\". The robotic arm is positioned close to the counter. Visually, \"apple_1\" appears to be within the range of motion of the robotic arm, meaning the agent can likely reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.7921201903112888e-13, 3.2823824784095805e-15, "The image shows a robotic arm (the agent) and a counter with several objects on it, including \"apple_2\". The robotic arm is positioned close to the counter. Visually, it appears that the robotic arm could reach \"apple_2\" without significant difficulty. Therefore, the answer is \"Yes\".", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a counter with several objects on it, including \"apple_2\". The robotic arm is positioned close to the counter. Visually, it appears that the robotic arm could reach \"apple_2\" without significant difficulty. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.0560413085452733e-13, 1.429196489616518e-14, "The image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 7.258059306564438e-14, 8.668515700442723e-15, "The image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator. Therefore, the refrigerator is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 1.9124418303324842e-13, 6.208789450450058e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the refrigerator is not open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the refrigerator is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 3.936703393825347e-13, 1.9599693572226913e-14, "The image shows a refrigerator with its door open. The interior of the refrigerator is visible, containing shelves and some food items. Therefore, the electric_refrigerator_1 is open.", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nThe image shows a refrigerator with its door open. The interior of the refrigerator is visible, containing shelves and some food items. Therefore, the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.358902953271096e-13, 3.1958332871338466e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm is positioned such that it could potentially grasp the apple_2. Therefore, the apple_2 is in reach of the agent.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm is positioned such that it could potentially grasp the apple_2. Therefore, the apple_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.358902953271096e-13, 3.6213538407142004e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including what appears to be an apple labeled \"apple_1\". The robotic arm is positioned such that it could potentially grasp the apple. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["yes", 7.949822983070731e-14, 3.313979136682771e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.", false, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including an apple labeled \"apple_2\". The robotic arm appears to be grasping at something, but it is not clearly visible whether it is holding the apple_2. However, based on the position of the gripper, it seems like it is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.654320987654321, "yes_accuracy": 0.7857142857142857, "yes_correct": 22, "yes_total": 28, "no_accuracy": 0.6268656716417911, "no_correct": 84, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9305555555555556, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.3055555555555556, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.1896551724137931, "no_correct": 11, "no_total": 58}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6358024691358025, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.5746268656716418, "no_correct": 77, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9027777777777778, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8939393939393939, "no_correct": 59, "no_total": 66}, "nextto": {"accuracy": 0.2916666666666667, "yes_accuracy": 0.9285714285714286, "yes_correct": 13, "yes_total": 14, "no_accuracy": 0.13793103448275862, "no_correct": 8, "no_total": 58}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 8, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 9, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 10, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 11, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 12, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 13, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 14, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 15, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 16, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 17, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 18, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 19, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 20, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 21, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 22, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 23, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 24, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 25, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 26, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 27, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 28, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 29, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.58, "no_correct": 58, "no_total": 100, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "ontop": {"accuracy": 0.9821428571428571, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.047619047619047616, "no_correct": 2, "no_total": 42}}}, "step": 30, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 8.690879064316131e-15, 6.768462828106664e-15, "The image shows a robotic arm (the agent) and some kitchen appliances. The agent is holding an object. I need to determine if the electric_refrigerator_1 is within the reach of the agent. Based on the image, the agent is positioned near a cabinet and an oven. The electric_refrigerator_1 is not visible in the image. However, given the context of a household simulator, it is reasonable to assume that the electric_refrigerator_1 is not in reach of the agent, as it is not visible and the agent is positioned near other appliances.", false, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and some kitchen appliances. The agent is holding an object. I need to determine if the electric_refrigerator_1 is within the reach of the agent. Based on the image, the agent is positioned near a cabinet and an oven. The electric_refrigerator_1 is not visible in the image. However, given the context of a household simulator, it is reasonable to assume that the electric_refrigerator_1 is not in reach of the agent, as it is not visible and the agent is positioned near other appliances.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.0561255646066026e-12, 2.4837691107938882e-14, "The image shows a robotic arm (the agent) and a table with some objects on it, including an apple labeled \"apple_1\". The robotic arm is positioned above the table and appears to be close enough to potentially grasp the apple. The red outline around the apple suggests it is a focus of attention or interaction. Therefore, the apple is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a table with some objects on it, including an apple labeled \"apple_1\". The robotic arm is positioned above the table and appears to be close enough to potentially grasp the apple. The red outline around the apple suggests it is a focus of attention or interaction. Therefore, the apple is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 3.562863437438224e-13, 9.494709096095726e-15, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including apples and bread. The question asks if \"apple_2\" is within the agent's reach. Looking at the image, \"apple_2\" is highlighted with a red bounding box on the counter, and the robotic arm is positioned directly above it. Therefore, the apple is within the agent's reach.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including apples and bread. The question asks if \"apple_2\" is within the agent's reach. Looking at the image, \"apple_2\" is highlighted with a red bounding box on the counter, and the robotic arm is positioned directly above it. Therefore, the apple is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.167336300541131e-14, 1.2525016898743031e-14, "The image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator's handle. Therefore, the refrigerator is within the reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm positioned near a refrigerator. The robotic arm appears to be close enough to interact with the refrigerator's handle. Therefore, the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.1799304480523964e-13, 1.4092260785223982e-14, "The image shows a robotic arm (the agent) positioned near a refrigerator. The arm appears to be very close to the refrigerator's handle, suggesting it is within the arm's reach. Therefore, the electric_refrigerator_1 is in reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) positioned near a refrigerator. The arm appears to be very close to the refrigerator's handle, suggesting it is within the arm's reach. Therefore, the electric_refrigerator_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 4.696106784690679e-13, 9.247182013172317e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door appears to be closed, as there is no visible interior of the refrigerator. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.3037274128265284e-13, 1.4727236493034326e-14, "The image shows an open refrigerator. The question asks if the electric_refrigerator_1 is open. Since the refrigerator is open in the image, the answer is \"Yes\".", true, "Question: Is the electric_refrigerator_1 open\n<explanation>\nThe image shows an open refrigerator. The question asks if the electric_refrigerator_1 is open. Since the refrigerator is open in the image, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 4.402586693645627e-13, 9.137277285980409e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter, including apple_1. Therefore, apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter, including apple_1. Therefore, apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.2797163502498154e-13, 2.343882254829551e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including \"apple_2\". To determine if \"apple_2\" is in reach, I need to assess the distance between the robotic arm and the apple. Visually, the apple_2 appears to be relatively close to the robotic arm, and within the range of motion of the arm. Therefore, it is likely within reach.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including \"apple_2\". To determine if \"apple_2\" is in reach, I need to assess the distance between the robotic arm and the apple. Visually, the apple_2 appears to be relatively close to the robotic arm, and within the range of motion of the arm. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 1.4852223997104813e-13, 3.4929082822849006e-15, "The image shows a robotic arm (the agent) and several objects on a counter. The question asks if the orange_2 is within the reach of the agent. Looking at the image, the orange_2 is on the counter, and the robotic arm is positioned such that it can likely reach the orange_2. Therefore, the answer is \"Yes\".", false, "Question: Is the orange_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter. The question asks if the orange_2 is within the reach of the agent. Looking at the image, the orange_2 is on the counter, and the robotic arm is positioned such that it can likely reach the orange_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 7.015694720047955e-14, 2.2776624472109833e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including \"apple_2\", \"carrot_1\", and \"carrot_2\". The robotic arm appears to be grasping \"apple_2\". Therefore, the agent is holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including \"apple_2\", \"carrot_1\", and \"carrot_2\". The robotic arm appears to be grasping \"apple_2\". Therefore, the agent is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 2.670304569910714e-13, 4.8908326119503215e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter. Specifically, \"apple_1\" is close enough to the robotic arm that it could be grasped. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter. Specifically, \"apple_1\" is close enough to the robotic arm that it could be grasped. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 7.015694720047955e-14, 2.2776624472109833e-14, "The image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including \"apple_2\", \"carrot_1\", and \"carrot_2\". The robotic arm appears to be grasping \"apple_2\". Therefore, the agent is holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) positioned above a counter. On the counter, there are several objects including \"apple_2\", \"carrot_1\", and \"carrot_2\". The robotic arm appears to be grasping \"apple_2\". Therefore, the agent is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 2.670304569910714e-13, 4.8908326119503215e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter. Specifically, \"apple_1\" is close enough to the robotic arm that it could be grasped. Therefore, the apple_1 is in reach of the agent.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including \"apple_1\". The robotic arm is positioned such that it appears to be able to reach the objects on the counter. Specifically, \"apple_1\" is close enough to the robotic arm that it could be grasped. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6296296296296297, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5522388059701493, "no_correct": 74, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9305555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9242424242424242, "no_correct": 61, "no_total": 66}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.06896551724137931, "no_correct": 4, "no_total": 58}}}, "step": 3, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5289256198347108, "yes_accuracy": 0.9333333333333333, "yes_correct": 28, "yes_total": 30, "no_accuracy": 0.4716981132075472, "no_correct": 100, "no_total": 212, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.45454545454545453, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.45454545454545453, "no_correct": 5, "no_total": 11}, "ontop": {"accuracy": 0.9, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8942307692307693, "no_correct": 93, "no_total": 104}, "nextto": {"accuracy": 0.14545454545454545, "yes_accuracy": 0.875, "yes_correct": 14, "yes_total": 16, "no_accuracy": 0.02127659574468085, "no_correct": 2, "no_total": 94}}}, "step": 6, "actions": ["place-next-to(apple_2, apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["yes", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["yes", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["yes", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,meat_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5289256198347108, "yes_accuracy": 0.9333333333333333, "yes_correct": 28, "yes_total": 30, "no_accuracy": 0.4716981132075472, "no_correct": 100, "no_total": 212, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.45454545454545453, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.45454545454545453, "no_correct": 5, "no_total": 11}, "ontop": {"accuracy": 0.9, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8942307692307693, "no_correct": 93, "no_total": 104}, "nextto": {"accuracy": 0.14545454545454545, "yes_accuracy": 0.875, "yes_correct": 14, "yes_total": 16, "no_accuracy": 0.02127659574468085, "no_correct": 2, "no_total": 94}}}, "step": 7, "actions": ["place-next-to(apple_2, apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 2.2132064247688127e-13, 1.2486056771301123e-14, "The image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.", false, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). I need to determine if the apple (labeled as apple_1) is within the agent's reach. The apple is on the counter, and the agent's arm appears to be positioned such that it could potentially reach the apple with some extension. Without knowing the exact reach distance of the agent, it's reasonable to assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 2.6791011764745395e-14, 2.199140206011552e-15, "The image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a kitchen scene with a robotic arm (the agent). The agent is positioned near a table and counter. The electric_refrigerator_1 is visible on the right side of the image. I need to determine if the agent can reach the refrigerator. Based on the image, the agent appears to be far enough away that it would not be able to reach the refrigerator without moving. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.202799198350416e-14, 1.110128156935064e-14, "The image shows a robotic arm holding a plug. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding a plug. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 9.294989230341708e-14, 1.110128156935064e-14, "The image shows a robotic arm holding a plug. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.", true, "Question: Is the electric_refrigerator_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm holding a plug. The robotic arm is positioned very close to a white refrigerator. The question asks if the refrigerator is in reach of the agent. Since the arm is right next to the refrigerator, it is reasonable to assume that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.977189028820603e-13, 4.9991166263009534e-14, "I will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door is slightly ajar, meaning it is not fully closed. Therefore, the refrigerator is open.", false, "Question: Is the electric_refrigerator_1 open\n<explanation>\nI will examine the image to determine if the electric_refrigerator_1 is open. The image shows a refrigerator with a door. The door is slightly ajar, meaning it is not fully closed. Therefore, the refrigerator is open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 4.69610949519611e-13, 9.746464228678649e-15, "The image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_1\". The robotic arm is positioned close to the counter where the apple is located. Based on the image, it appears the apple is within the range of motion of the robotic arm, meaning it is in reach.", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter, including an apple labeled \"apple_1\". The robotic arm is positioned close to the counter where the apple is located. Based on the image, it appears the apple is within the range of motion of the robotic arm, meaning it is in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 6.901069884816813e-13, 1.2639749205514521e-14, "The image shows a robotic arm (the agent) and an apple labeled \"apple_2\". The robotic arm is positioned near a counter where the apple is located. Visually, the apple appears to be within the range of motion of the robotic arm, suggesting it is in reach.", false, "Question: Is the apple_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an apple labeled \"apple_2\". The robotic arm is positioned near a counter where the apple is located. Visually, the apple appears to be within the range of motion of the robotic arm, suggesting it is in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 1.6431882167867312e-13, 3.235629266688106e-14, "The image shows a robotic arm (the agent) and several objects on a kitchen counter, including apples labeled \"apple_2\". The robotic arm's gripper is closed around an object. By looking at the image, we can see that the agent is holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a kitchen counter, including apples labeled \"apple_2\". The robotic arm's gripper is closed around an object. By looking at the image, we can see that the agent is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 5.054828083883578e-13, 1.0490961296568974e-14, "The image shows a robotic arm (the agent) and several objects on a counter. The question asks if \"apple_1\" is within the reach of the agent. Looking at the image, \"apple_1\" is on the counter, and the robotic arm is positioned close enough to the counter that it could potentially reach \"apple_1\". Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter. The question asks if \"apple_1\" is within the reach of the agent. Looking at the image, \"apple_1\" is on the counter, and the robotic arm is positioned close enough to the counter that it could potentially reach \"apple_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 1.6431882167867312e-13, 3.235629266688106e-14, "The image shows a robotic arm (the agent) and several objects on a kitchen counter, including apples labeled \"apple_2\". The robotic arm's gripper is closed around an object. By looking at the image, we can see that the agent is holding the apple_2.", true, "Question: Is the agent holding the apple_2\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a kitchen counter, including apples labeled \"apple_2\". The robotic arm's gripper is closed around an object. By looking at the image, we can see that the agent is holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 5.054828083883578e-13, 1.0490961296568974e-14, "The image shows a robotic arm (the agent) and several objects on a counter. The question asks if \"apple_1\" is within the reach of the agent. Looking at the image, \"apple_1\" is on the counter, and the robotic arm is positioned close enough to the counter that it could potentially reach \"apple_1\". Therefore, the answer is \"Yes\".", true, "Question: Is the apple_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects on a counter. The question asks if \"apple_1\" is within the reach of the agent. Looking at the image, \"apple_1\" is on the counter, and the robotic arm is positioned close enough to the counter that it could potentially reach \"apple_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["no", "yes"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.64, "no_correct": 16, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 3, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.48507462686567165, "no_correct": 65, "no_total": 134, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.8055555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.7878787878787878, "no_correct": 52, "no_total": 66}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.06896551724137931, "no_correct": 4, "no_total": 58}}}, "step": 4, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["yes", "no"], "ontop broccoli_1,carrot_2": ["yes", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["yes", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5740740740740741, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.48507462686567165, "no_correct": 65, "no_total": 134, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "ontop": {"accuracy": 0.8055555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.7878787878787878, "no_correct": 52, "no_total": 66}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.06896551724137931, "no_correct": 4, "no_total": 58}}}, "step": 5, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 2.384878969655113e-12, 1.5246022489184136e-13, "The image shows a robotic arm (the agent) and a yellow ball labeled \"ball_1\" on the floor. The robotic arm is positioned such that it could potentially reach the ball. The distance between the arm and the ball appears to be within the arm's range of motion. Therefore, the ball is in reach of the agent.", true, "Question: Is the ball_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a yellow ball labeled \"ball_1\" on the floor. The robotic arm is positioned such that it could potentially reach the ball. The distance between the arm and the ball appears to be within the arm's range of motion. Therefore, the ball is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 3.0258507830414894e-13, 2.3565348348901505e-13, "The image shows a robotic arm (the agent) and a cabinet. I need to determine if the cabinet is within the reach of the robotic arm. The cabinet is located on the right side of the image, and the robotic arm is positioned in the upper left. Visually, it appears that the robotic arm could extend and reach the cabinet. Therefore, the cabinet is in reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet. I need to determine if the cabinet is within the reach of the robotic arm. The cabinet is located on the right side of the image, and the robotic arm is positioned in the upper left. Visually, it appears that the robotic arm could extend and reach the cabinet. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 1, "actions": ["grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 2.8767979209746997e-13, 1.6229783155971046e-14, "The image shows a robotic arm (the agent) and a small blue ball labeled \"ball_1\" on the floor. The robotic arm is positioned such that it could potentially reach the ball. The distance between the arm and the ball appears to be within the arm's range of motion. Therefore, the ball is in reach of the agent.", true, "Question: Is the ball_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a small blue ball labeled \"ball_1\" on the floor. The robotic arm is positioned such that it could potentially reach the ball. The distance between the arm and the ball appears to be within the arm's range of motion. Therefore, the ball is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 1.1599556493276098e-13, 5.096489670444824e-15, "The image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned such that it appears to be able to extend and grasp the plate. The plate is relatively close to the arm's current position. Therefore, the plate is in reach of the agent.", false, "Question: Is the plate_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned such that it appears to be able to extend and grasp the plate. The plate is relatively close to the arm's current position. Therefore, the plate is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 5.3346511100704416e-14, 3.4103280756417635e-15, "The image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". The agent is holding a plate. Plate_2 is visible and appears to be within the range of motion of the robotic arm. Therefore, plate_2 is in reach of the agent.", false, "Question: Is the plate_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". The agent is holding a plate. Plate_2 is visible and appears to be within the range of motion of the robotic arm. Therefore, plate_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 5.1345104383482276e-14, 3.719426703479092e-15, "The image shows a robotic arm (the agent) and a plate labeled \"plate_3\". I need to determine if the agent can reach plate_3. Looking at the image, the robotic arm is positioned such that it could potentially reach plate_3 with some movement. The distance between the arm and plate_3 doesn't appear to be excessively large. Therefore, it is likely that plate_3 is within the agent's reach.", false, "Question: Is the plate_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_3\". I need to determine if the agent can reach plate_3. Looking at the image, the robotic arm is positioned such that it could potentially reach plate_3 with some movement. The distance between the arm and plate_3 doesn't appear to be excessively large. Therefore, it is likely that plate_3 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 8.65850885320386e-15, 4.089990065375693e-15, "The image shows a robotic arm (the agent) and a saucepan labeled \"saucepan_1\". I need to determine if the agent can reach the saucepan. Looking at the image, the saucepan is not visible. Therefore, I cannot determine if it is in reach of the agent. However, since the question asks if it *is* in reach, and I cannot confirm that it is, the answer is no.", true, "Question: Is the saucepan_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a saucepan labeled \"saucepan_1\". I need to determine if the agent can reach the saucepan. Looking at the image, the saucepan is not visible. Therefore, I cannot determine if it is in reach of the agent. However, since the question asks if it *is* in reach, and I cannot confirm that it is, the answer is no.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["yes", 4.953742765382435e-14, 6.704161592465275e-15, "The image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the shelf appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the arm and the distance to the shelf, it's difficult to say for certain. Based on the image, it appears the shelf is within the agent's workspace.", false, "Question: Is the shelf_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the shelf appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the arm and the distance to the shelf, it's difficult to say for certain. Based on the image, it appears the shelf is within the agent's workspace.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 3.811205772632706e-14, 2.4364222983829778e-15, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the cabinet appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the arm and the distance to the cabinet, it's difficult to say for sure. Based on the image, it appears the cabinet is within the agent's workspace.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the cabinet appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the arm and the distance to the cabinet, it's difficult to say for sure. Based on the image, it appears the cabinet is within the agent's workspace.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 2.9088491598078248e-12, 2.387728957695817e-13, "The image shows a robotic arm (the agent) and a dark grey box, which I assume is carton_1. The robotic arm is positioned directly above the carton_1, and appears to be holding it. Therefore, the carton_1 is in reach of the agent.", true, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a dark grey box, which I assume is carton_1. The robotic arm is positioned directly above the carton_1, and appears to be holding it. Therefore, the carton_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": true, "after": false}, "reachable plate_2": {"before": true, "after": false}, "reachable plate_3": {"before": true, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": true, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["yes", "no"], "nextto ball_1,plate_3": ["yes", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["yes", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.6610169491525424, "no_correct": 39, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5416666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.47619047619047616, "no_correct": 10, "no_total": 21}}}, "step": 1, "actions": ["navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 6.901074763726589e-13, 3.893320195858148e-14, "The image shows a robotic arm (the agent) and a small yellow ball (ball_1) on the floor. To determine if the ball is in reach, I need to assess the distance between the arm and the ball. The ball is relatively close to the base of the robotic arm. Given the arm's length and flexibility, it appears the ball is within the arm's reachable workspace.", true, "Question: Is the ball_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a small yellow ball (ball_1) on the floor. To determine if the ball is in reach, I need to assess the distance between the arm and the ball. The ball is relatively close to the base of the robotic arm. Given the arm's length and flexibility, it appears the ball is within the arm's reachable workspace.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 1.5211132863273552e-13, 1.4148557983030292e-14, "The image shows a robotic arm (the agent) and a cabinet. I need to determine if the cabinet is within the reach of the robotic arm. Looking at the image, the robotic arm is positioned such that it can likely reach the cabinet. The cabinet appears to be relatively close to the arm's current position.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet. I need to determine if the cabinet is within the reach of the robotic arm. Looking at the image, the robotic arm is positioned such that it can likely reach the cabinet. The cabinet appears to be relatively close to the arm's current position.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 1.0701071105623239e-12, 3.6617051350686797e-14, "The image shows a robotic arm (the agent) and a ball labeled \"ball_1\". The agent is positioned such that it can potentially reach the ball. The distance between the agent and the ball appears to be within the range of the robotic arm's movement. Therefore, the ball is in reach of the agent.", true, "Question: Is the ball_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a ball labeled \"ball_1\". The agent is positioned such that it can potentially reach the ball. The distance between the agent and the ball appears to be within the range of the robotic arm's movement. Therefore, the ball is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 4.876992906743816e-13, 2.142801080074353e-14, "The image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned relatively close to the plate, and it appears that the arm's range of motion could extend to the plate's location. Therefore, it is likely that the plate is within the agent's reach.", false, "Question: Is the plate_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned relatively close to the plate, and it appears that the arm's range of motion could extend to the plate's location. Therefore, it is likely that the plate is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 9.799205582172385e-14, 1.702846746259607e-14, "The image shows a robotic arm (the agent) and a plate labeled \"plate_2\". I need to determine if the agent can reach the plate. Looking at the image, the agent's arm is extended towards the plate, and it appears to be close enough that the agent could grasp it. Therefore, the plate is in reach of the agent.", false, "Question: Is the plate_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_2\". I need to determine if the agent can reach the plate. Looking at the image, the agent's arm is extended towards the plate, and it appears to be close enough that the agent could grasp it. Therefore, the plate is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 2.1670825669974775e-13, 1.3853694802662755e-14, "The image shows a robotic arm (the agent) and a plate labeled \"plate_3\". I need to determine if the agent can reach plate_3. Looking at the image, the agent's arm is extended towards plate_3, and it appears to be close enough that the agent could grasp it. Therefore, plate_3 is in reach of the agent.", false, "Question: Is the plate_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_3\". I need to determine if the agent can reach plate_3. Looking at the image, the agent's arm is extended towards plate_3, and it appears to be close enough that the agent could grasp it. Therefore, plate_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 3.363377420540284e-14, 1.8002861977865423e-14, "The image shows a robotic arm (the agent) and a saucepan labeled \"saucepan_1\". I need to determine if the agent can reach the saucepan. The agent's arm is extended towards a plate, and the saucepan is located on a shelf to the right of the agent. Visually, the saucepan appears to be within the range of motion of the robotic arm, but it is not immediately obvious if it is within the agent's reach. However, given the context of a household simulator with a robotic arm, it is reasonable to assume that the agent can reach objects within a certain distance.", false, "Question: Is the saucepan_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a saucepan labeled \"saucepan_1\". I need to determine if the agent can reach the saucepan. The agent's arm is extended towards a plate, and the saucepan is located on a shelf to the right of the agent. Visually, the saucepan appears to be within the range of motion of the robotic arm, but it is not immediately obvious if it is within the agent's reach. However, given the context of a household simulator with a robotic arm, it is reasonable to assume that the agent can reach objects within a certain distance.\n</explanation>\n<answer>\nYes</answer>", false], "reachable shelf_1": ["yes", 1.6431882167867312e-13, 1.7319077690535443e-14, "The image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the shelf, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a virtual household simulator with a robotic arm, it's reasonable to assume that the agent is designed to interact with objects within the scene. The shelf is relatively close to the agent. Therefore, it is likely that the shelf is in reach of the agent.", false, "Question: Is the shelf_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the shelf, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a virtual household simulator with a robotic arm, it's reasonable to assume that the agent is designed to interact with objects within the scene. The shelf is relatively close to the agent. Therefore, it is likely that the shelf is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 2.0307383162207482e-13, 1.2982075877081452e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plate_2, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["yes", 5.4065103359968864e-14, 4.771228510479404e-14, "The image shows a robotic arm (the agent). The agent is holding an object. The object is labeled as \"plate_2\". Therefore, the agent is holding plate_2.", true, "Question: Is the agent holding the plate_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is holding an object. The object is labeled as \"plate_2\". Therefore, the agent is holding plate_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 2.2404526964139165e-13, 1.432273421500714e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plate_2, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["yes", 5.4065103359968864e-14, 4.771228510479404e-14, "The image shows a robotic arm (the agent). The agent is holding an object. The object is labeled as \"plate_2\". Therefore, the agent is holding plate_2.", true, "Question: Is the agent holding the plate_2\n<explanation>\nThe image shows a robotic arm (the agent). The agent is holding an object. The object is labeled as \"plate_2\". Therefore, the agent is holding plate_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 2.2404526964139165e-13, 1.432273421500714e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.", true, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned in a way that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the context of a household simulator with a robotic arm, it's reasonable to assume that objects within the visible range are generally reachable unless there's a clear obstruction or distance issue. Since the cabinet is visible and doesn't appear to be extremely far away, I will assume it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6949152542372882, "no_correct": 41, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21}}}, "step": 1, "actions": ["place-next-to(plate_2, cabinet_1)", "place-next-to(plate_3, ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6949152542372882, "no_correct": 41, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21}}}, "step": 2, "actions": ["place-next-to(plate_2, cabinet_1)", "place-next-to(plate_3, ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["place-next-to(plate_3, ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 1.1377939606108112e-12, 3.893317146539538e-14, "The image shows a robotic arm (the agent) and a ball labeled \"ball_1\". I need to determine if the agent can reach the ball. The agent's arm is extended towards the area where the ball is located. Visually, it appears that the agent is close enough to the ball to be able to grasp it. Therefore, the ball is in reach of the agent.", true, "Question: Is the ball_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a ball labeled \"ball_1\". I need to determine if the agent can reach the ball. The agent's arm is extended towards the area where the ball is located. Visually, it appears that the agent is close enough to the ball to be able to grasp it. Therefore, the ball is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 4.048642389224699e-13, 9.521493971953801e-15, "The image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned such that it appears to be very close to \"plate_1\", and it seems likely that the arm could extend and grasp the plate. Therefore, the plate is in reach of the agent.", false, "Question: Is the plate_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plate labeled \"plate_1\". I need to determine if the agent can reach the plate. Visually, the robotic arm is positioned such that it appears to be very close to \"plate_1\", and it seems likely that the arm could extend and grasp the plate. Therefore, the plate is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 4.2990724912275735e-13, 1.2982074183015557e-14, "The image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". The agent is positioned such that its end effector is relatively close to plate_1. Plate_2 is further away from the agent than plate_1. However, the agent's arm appears long enough to potentially reach plate_2, although it would require a significant extension. Since the question asks if it is *in reach*, and the arm appears capable of reaching it, the answer is yes.", false, "Question: Is the plate_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". The agent is positioned such that its end effector is relatively close to plate_1. Plate_2 is further away from the agent than plate_1. However, the agent's arm appears long enough to potentially reach plate_2, although it would require a significant extension. Since the question asks if it is *in reach*, and the arm appears capable of reaching it, the answer is yes.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 1.3302415267403556e-13, 3.811205772632706e-14, "The image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". There is also an object labeled \"plate_3\" on the floor. The robotic arm is positioned such that it could potentially reach plate_3. Therefore, plate_3 is in reach of the agent.", false, "Question: Is the plate_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and two plates labeled \"plate_1\" and \"plate_2\". There is also an object labeled \"plate_3\" on the floor. The robotic arm is positioned such that it could potentially reach plate_3. Therefore, plate_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 1.4852223997104813e-13, 1.4852223997104813e-13, "The image shows a robotic arm (the agent) and several objects in a room. I need to determine if the saucepan_1 is within the reach of the agent. Looking at the image, I can see a saucepan labeled \"saucepan_1\" on the floor. The robotic arm is positioned such that it could potentially reach the saucepan. Therefore, the saucepan_1 is in reach of the agent.", false, "Question: Is the saucepan_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. I need to determine if the saucepan_1 is within the reach of the agent. Looking at the image, I can see a saucepan labeled \"saucepan_1\" on the floor. The robotic arm is positioned such that it could potentially reach the saucepan. Therefore, the saucepan_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 3.941803209794176e-13, 2.855432429675793e-14, "The image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the shelf appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the room and the arm's reach, it's difficult to say for certain. Based on the image, it appears the shelf is within the agent's workspace.", false, "Question: Is the shelf_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a shelf labeled \"shelf_1\". I need to determine if the agent can reach the shelf. Visually, the shelf appears to be relatively close to the agent, and the arm seems to have a sufficient range of motion to potentially reach it. However, without knowing the exact dimensions of the room and the arm's reach, it's difficult to say for certain. Based on the image, it appears the shelf is within the agent's workspace.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 4.743037559928887e-13, 1.622978485003694e-14, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned such that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the relatively close proximity of the cabinet to the agent, it is likely within reach.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Visually, the agent's arm appears to be positioned such that it could potentially reach the cabinet, but it's not immediately obvious if it's within the arm's range of motion. However, given the relatively close proximity of the cabinet to the agent, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 9.189311366963188e-14, 5.874530090079367e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not obstructed by any objects. Therefore, it is likely within reach.", true, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not obstructed by any objects. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 1.6410625029023018e-13, 6.363089800209701e-15, "The image shows a robotic arm (the agent) and several objects labeled with names. The question asks if \"plate_1\" is within the reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned such that it could potentially reach \"plate_1\". The distance between the arm and the plate appears to be within the arm's range of motion.", false, "Question: Is the plate_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with names. The question asks if \"plate_1\" is within the reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned such that it could potentially reach \"plate_1\". The distance between the arm and the plate appears to be within the arm's range of motion.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 8.242163868727934e-14, 4.103531581103447e-15, "The image shows a robotic arm (the agent) and several objects labeled with names. I need to determine if \"plate_2\" is within the reach of the robotic arm. Looking at the image, \"plate_2\" is located on the floor, and the robotic arm is positioned above it. The robotic arm appears to be able to extend down and grasp \"plate_2\". Therefore, \"plate_2\" is in reach of the agent.", false, "Question: Is the plate_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with names. I need to determine if \"plate_2\" is within the reach of the robotic arm. Looking at the image, \"plate_2\" is located on the floor, and the robotic arm is positioned above it. The robotic arm appears to be able to extend down and grasp \"plate_2\". Therefore, \"plate_2\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 6.592842320251452e-14, 2.896692590382676e-15, "The image shows a robotic arm (the agent) and several objects labeled with names. One of these objects is \"plate_3\". I need to determine if the agent can reach \"plate_3\". Looking at the image, the agent's arm appears to be positioned in a way that it could potentially reach \"plate_3\", but it's not immediately obvious if it's within the arm's range of motion. However, given the relatively close proximity of the plate to the agent, it is likely within reach.", false, "Question: Is the plate_3 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with names. One of these objects is \"plate_3\". I need to determine if the agent can reach \"plate_3\". Looking at the image, the agent's arm appears to be positioned in a way that it could potentially reach \"plate_3\", but it's not immediately obvious if it's within the arm's range of motion. However, given the relatively close proximity of the plate to the agent, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 3.755229769719995e-14, 6.525610858832331e-15, "The image shows a robotic arm (the agent) and several objects labeled with names. I need to determine if the object labeled \"saucepan_1\" is within the reach of the robotic arm. Looking at the image, the saucepan_1 is not visible. Therefore, it is not in reach of the agent.", true, "Question: Is the saucepan_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with names. I need to determine if the object labeled \"saucepan_1\" is within the reach of the robotic arm. Looking at the image, the saucepan_1 is not visible. Therefore, it is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["no", 5.5958631961028696e-14, 1.101890761523016e-14, "The image shows a robotic arm (the agent) in a room. The agent's reach is limited by the length of its arm. I need to determine if the shelf labeled \"shelf_1\" is within that reach. Looking at the image, the shelf is quite far away from the agent. It appears to be beyond the maximum extension of the arm. Therefore, the shelf is not in reach of the agent.", true, "Question: Is the shelf_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) in a room. The agent's reach is limited by the length of its arm. I need to determine if the shelf labeled \"shelf_1\" is within that reach. Looking at the image, the shelf is quite far away from the agent. It appears to be beyond the maximum extension of the arm. Therefore, the shelf is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["yes", 1.1566920652631568e-13, 7.394485821181004e-15, "The image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Looking at the image, the agent is positioned such that it appears to be able to reach the cabinet without significant obstruction. The distance between the agent and the cabinet does not seem too large. Therefore, the cabinet is in reach of the agent.", false, "Question: Is the cabinet_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a cabinet labeled \"cabinet_1\". I need to determine if the agent can reach the cabinet. Looking at the image, the agent is positioned such that it appears to be able to reach the cabinet without significant obstruction. The distance between the agent and the cabinet does not seem too large. Therefore, the cabinet is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["yes", 1.6431878102109165e-13, 7.2196633030654e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_2\". I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not obstructed by any objects. Therefore, it is likely within reach.", false, "Question: Is the carton_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_2\". I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not obstructed by any objects. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["yes", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.71875, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9130434782608695, "no_correct": 21, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 1, "actions": ["navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["yes", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,carton_1": ["yes", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5692307692307692, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.5964912280701754, "no_correct": 34, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7, "no_correct": 14, "no_total": 20}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "nextto": {"accuracy": 0.2857142857142857, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.2777777777777778, "no_correct": 5, "no_total": 18}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 5.655711359311977e-13, 1.1738054681075059e-14, "The image shows a robotic arm (the agent) and an object labeled \"plaything_1\". I need to determine if the agent can reach the plaything_1. Visually, the plaything_1 appears to be relatively close to the agent, and within the range of motion of the robotic arm. Therefore, it is likely within reach.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and an object labeled \"plaything_1\". I need to determine if the agent can reach the plaything_1. Visually, the plaything_1 appears to be relatively close to the agent, and within the range of motion of the robotic arm. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 2.6104655546574373e-13, 5.417848888435422e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". I need to determine if the agent can reach the carton. Visually, the carton appears to be relatively close to the agent, and within the workspace of the robotic arm. Therefore, it is likely within reach.", false, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". I need to determine if the agent can reach the carton. Visually, the carton appears to be relatively close to the agent, and within the workspace of the robotic arm. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 2.1071657602383248e-13, 4.373283199200209e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if carton_2 is in reach, I need to visually assess the distance between the robotic arm and the carton. The robotic arm appears to be positioned such that it could potentially reach carton_2 without significant obstruction. The carton is relatively close to the arm's current position. Therefore, it is likely within the agent's reach.", false, "Question: Is the carton_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if carton_2 is in reach, I need to visually assess the distance between the robotic arm and the carton. The robotic arm appears to be positioned such that it could potentially reach carton_2 without significant obstruction. The carton is relatively close to the arm's current position. Therefore, it is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.7448657807245943e-13, 6.765579104437737e-15, "The image shows a robotic arm (the agent) and a table labeled \"table_1\". To determine if the table is in reach, I need to visually assess the distance between the arm and the table. The robotic arm is positioned in a way that it appears to be able to extend and interact with the table. The table is not too far away from the agent. Therefore, the table is in reach of the agent.", false, "Question: Is the table_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a table labeled \"table_1\". To determine if the table is in reach, I need to visually assess the distance between the arm and the table. The robotic arm is positioned in a way that it appears to be able to extend and interact with the table. The table is not too far away from the agent. Therefore, the table is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 4.3039297169603086e-13, 8.932521470541785e-15, "The image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 3.3519012760697964e-13, 1.1469575729981547e-14, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is on a shelf, and the arm is positioned in a way that it appears to be able to reach the carton without significant obstruction. Therefore, the carton is likely within the agent's reach.", false, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is on a shelf, and the arm is positioned in a way that it appears to be able to reach the carton without significant obstruction. Therefore, the carton is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 3.050966055316573e-13, 5.5880385598460185e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is located on a shelf, and the arm is positioned in a way that it appears to be able to extend and grasp the carton. Therefore, the carton is in reach of the agent.", false, "Question: Is the carton_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is located on a shelf, and the arm is positioned in a way that it appears to be able to extend and grasp the carton. Therefore, the carton is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 1.7448656451993227e-13, 5.2690374815805765e-15, "The image shows a robotic arm (the agent) and a table labeled \"table_1\". I need to determine if the agent can reach the table. Visually, the agent's arm appears to be positioned such that it could potentially reach the table, but it's not immediately obvious if it's within the arm's range of motion. However, given the perspective and the arm's length, it seems plausible that the table is within reach.", false, "Question: Is the table_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a table labeled \"table_1\". I need to determine if the agent can reach the table. Visually, the agent's arm appears to be positioned such that it could potentially reach the table, but it's not immediately obvious if it's within the arm's range of motion. However, given the perspective and the arm's length, it seems plausible that the table is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": true, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["yes", 1.7420807634990765e-12, 1.4299870424068495e-13, "The image shows a robotic arm, which is the agent. The agent is holding an object. The object is labeled as \"plaything_2\". Therefore, the agent is holding the plaything_2.", true, "<explanation>\nThe image shows a robotic arm, which is the agent. The agent is holding an object. The object is labeled as \"plaything_2\". Therefore, the agent is holding the plaything_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_2": ["yes", 4.3039294459097654e-13, 8.932520623508838e-15, "The image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_2, plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_2": ["yes", 1.7420807634990765e-12, 1.4299870424068495e-13, "The image shows a robotic arm, which is the agent. The agent is holding an object. The object is labeled as \"plaything_2\". Therefore, the agent is holding the plaything_2.", true, "<explanation>\nThe image shows a robotic arm, which is the agent. The agent is holding an object. The object is labeled as \"plaything_2\". Therefore, the agent is holding the plaything_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_2": ["yes", 4.3039294459097654e-13, 8.932520623508838e-15, "The image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and several objects labeled with \"plaything_X\". The question asks if \"plaything_2\" is in reach of the agent. By visually inspecting the image, we can see that the robotic arm is positioned close to \"plaything_2\", and it appears to be within the range of motion of the arm. Therefore, \"plaything_2\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["yes", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.7073170731707317, "no_correct": 29, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5384615384615384, "no_correct": 7, "no_total": 13}}}, "step": 1, "actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_6": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["yes", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_6,plaything_2": ["yes", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.782608695652174, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.8032786885245902, "no_correct": 49, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 24, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7727272727272727, "no_correct": 17, "no_total": 22}}}, "step": 2, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_6": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["yes", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_6,plaything_2": ["yes", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.782608695652174, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.8032786885245902, "no_correct": 49, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 24, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7727272727272727, "no_correct": 17, "no_total": 22}}}, "step": 3, "actions": ["place-next-to(plaything_2, plaything_2)", "open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 1.9576302926795075e-13, 4.062932444908601e-15, "The image shows a robotic arm (the agent) and a plaything_1 object. To determine if the plaything_1 is in reach, I need to assess the distance between the agent and the plaything_1. The plaything_1 is located on the floor, relatively close to the base of the robotic arm. Given the arm's length and the proximity of the plaything_1, it appears to be within the agent's reachable workspace.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything_1 object. To determine if the plaything_1 is in reach, I need to assess the distance between the agent and the plaything_1. The plaything_1 is located on the floor, relatively close to the base of the robotic arm. Given the arm's length and the proximity of the plaything_1, it appears to be within the agent's reachable workspace.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 9.592526154910547e-14, 2.5563217178909553e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the carton is likely in reach of the agent.", false, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the range of motion of the arm. Therefore, the carton is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 1.1873627894700561e-13, 2.1747308340540512e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The robotic arm is positioned above and slightly to the right of the carton. It appears that the arm could extend and grasp the carton without significant difficulty. Therefore, the carton is likely within the agent's reach.", false, "Question: Is the carton_2 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_2\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The robotic arm is positioned above and slightly to the right of the carton. It appears that the arm could extend and grasp the carton without significant difficulty. Therefore, the carton is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.4148557983030292e-14, 7.982070564988063e-16, "The image shows a robotic arm (the agent) and several objects in a room. The question asks if \"table_1\" is within the reach of the agent. \"table_1\" is highlighted with a red bounding box. By visually inspecting the image, it appears that the agent is positioned such that it could potentially reach \"table_1\" with its arm. The distance doesn't seem excessive. Therefore, the answer is \"Yes\".", false, "Question: Is the table_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and several objects in a room. The question asks if \"table_1\" is within the reach of the agent. \"table_1\" is highlighted with a red bounding box. By visually inspecting the image, it appears that the agent is positioned such that it could potentially reach \"table_1\" with its arm. The distance doesn't seem excessive. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 9.592526154910547e-14, 2.5563217178909553e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the arm's range of motion. Therefore, the carton is likely in reach of the agent.", true, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the arm's range of motion. Therefore, the carton is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 2.8158114471284364e-14, 8.067434863049706e-15, "The image shows a carton labeled \"carton_1\". The carton appears to be closed, as its flaps are not open and its contents are not visible. Therefore, the carton is not open.", true, "<explanation>\nThe image shows a carton labeled \"carton_1\". The carton appears to be closed, as its flaps are not open and its contents are not visible. Therefore, the carton is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 1.6156157358129808e-13, 1.3261781402857872e-14, "The image shows a robotic arm (the agent) and a plaything_1 object on the floor. The agent is positioned above the plaything_1, but it is not visibly grasping or holding the plaything_1. Therefore, the agent is not holding the plaything_1.", true, "Question: Is the agent holding the plaything_1\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything_1 object on the floor. The agent is positioned above the plaything_1, but it is not visibly grasping or holding the plaything_1. Therefore, the agent is not holding the plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 9.592526154910547e-14, 2.5563217178909553e-15, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the arm's range of motion. Therefore, the carton is likely in reach of the agent.", true, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\". To determine if the carton is in reach, I need to visually assess the distance between the arm and the carton. The carton is relatively close to the robotic arm, and appears to be within the arm's range of motion. Therefore, the carton is likely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 2.8158114471284364e-14, 8.067434863049706e-15, "The image shows a carton labeled \"carton_1\". The carton appears to be closed, as its flaps are not open and its contents are not visible. Therefore, the carton is not open.", true, "<explanation>\nThe image shows a carton labeled \"carton_1\". The carton appears to be closed, as its flaps are not open and its contents are not visible. Therefore, the carton is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 1.6156157358129808e-13, 1.3261781402857872e-14, "The image shows a robotic arm (the agent) and a plaything_1 object on the floor. The agent is positioned above the plaything_1, but it is not visibly grasping or holding the plaything_1. Therefore, the agent is not holding the plaything_1.", true, "Question: Is the agent holding the plaything_1\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything_1 object on the floor. The agent is positioned above the plaything_1, but it is not visibly grasping or holding the plaything_1. Therefore, the agent is not holding the plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7246376811594203, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.7619047619047619, "no_correct": 48, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.5416666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5909090909090909, "no_correct": 13, "no_total": 22}}}, "step": 1, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7246376811594203, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.7619047619047619, "no_correct": 48, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.5416666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5909090909090909, "no_correct": 13, "no_total": 22}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 7.273682659869954e-14, 3.621352993681253e-15, "The image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 1.9453771818271626e-13, 8.547390836018305e-15, "The image shows a robotic arm (the agent) and a carton (carton_1) on a table. I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not too far away. Therefore, it is likely within reach.", false, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton (carton_1) on a table. I need to determine if the agent can reach the carton. Visually, the carton appears to be within the workspace of the robotic arm, and not too far away. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.6525839103828066e-14, 4.094718203287266e-15, "The image shows a robotic arm (the agent) and a black object which is labeled as plaything_1. The robotic arm is grasping the plaything_1. Therefore, the agent is holding the plaything_1.", true, "Question: Is the agent holding the plaything_1\n<explanation>\nThe image shows a robotic arm (the agent) and a black object which is labeled as plaything_1. The robotic arm is grasping the plaything_1. Therefore, the agent is holding the plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 7.273682659869954e-14, 3.621352993681253e-15, "The image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 5.6525839103828066e-14, 4.094718203287266e-15, "The image shows a robotic arm (the agent) and a black object which is labeled as plaything_1. The robotic arm is grasping the plaything_1. Therefore, the agent is holding the plaything_1.", true, "Question: Is the agent holding the plaything_1\n<explanation>\nThe image shows a robotic arm (the agent) and a black object which is labeled as plaything_1. The robotic arm is grasping the plaything_1. Therefore, the agent is holding the plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 7.273682659869954e-14, 3.621352993681253e-15, "The image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a black object labeled \"plaything_1\" on a table. The robotic arm is positioned such that it appears to be close enough to potentially reach and interact with the plaything_1. Therefore, the plaything_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 5.72786609809306e-13, 2.851736316707154e-14, "The image shows a robotic arm (the agent) and a plaything labeled \"plaything_1\". I need to determine if the plaything is within the agent's reach. The agent is positioned above and to the left of the plaything. Visually, the plaything appears to be close enough that the agent could potentially reach it with its arm.", true, "Question: Is the plaything_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything labeled \"plaything_1\". I need to determine if the plaything is within the agent's reach. The agent is positioned above and to the left of the plaything. Visually, the plaything appears to be close enough that the agent could potentially reach it with its arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 7.354722299929284e-13, 2.8517353002676174e-14, "The image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.", false, "Question: Is the plaything_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 1.1445572679728844e-13, 1.0646041170749975e-14, "The image shows a robotic arm (the agent) and a carton labeled \"carton_1\" on the floor. To determine if the carton is in reach, I need to assess the distance between the agent's gripper and the carton. Visually, the carton appears to be relatively close to the agent, and within the range of motion of the robotic arm. Therefore, it is likely within reach.", false, "Question: Is the carton_1 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a carton labeled \"carton_1\" on the floor. To determine if the carton is in reach, I need to assess the distance between the agent's gripper and the carton. Visually, the carton appears to be relatively close to the agent, and within the range of motion of the robotic arm. Therefore, it is likely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_4, plaything_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 1.5569948759106e-12, 3.0659044638996213e-13, "The image shows a robotic arm (the agent) and a plaything_4 object. The plaything_4 object is highlighted with a red bounding box. The robotic arm is also highlighted with a red bounding box. The plaything_4 object is within the grasp of the robotic arm, and appears to be held by it. Therefore, the agent is holding the plaything_4.", true, "Question: Is the agent holding the plaything_4\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything_4 object. The plaything_4 object is highlighted with a red bounding box. The robotic arm is also highlighted with a red bounding box. The plaything_4 object is within the grasp of the robotic arm, and appears to be held by it. Therefore, the agent is holding the plaything_4.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_4": ["yes", 5.727864471789801e-13, 2.220933770821342e-14, "The image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.", true, "Question: Is the plaything_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_4, plaything_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 1.5569948759106e-12, 3.0659044638996213e-13, "The image shows a robotic arm (the agent) and a plaything_4 object. The plaything_4 object is highlighted with a red bounding box. The robotic arm is also highlighted with a red bounding box. The plaything_4 object is within the grasp of the robotic arm, and appears to be held by it. Therefore, the agent is holding the plaything_4.", true, "Question: Is the agent holding the plaything_4\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything_4 object. The plaything_4 object is highlighted with a red bounding box. The robotic arm is also highlighted with a red bounding box. The plaything_4 object is within the grasp of the robotic arm, and appears to be held by it. Therefore, the agent is holding the plaything_4.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_4": ["yes", 5.727864471789801e-13, 2.220933770821342e-14, "The image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.", true, "Question: Is the plaything_4 in reach of the agent\n<explanation>\nThe image shows a robotic arm (the agent) and a plaything labeled \"plaything_4\". I need to determine if the agent can reach the plaything. The agent is positioned above and to the left of the plaything. Visually, it appears that the agent's reach extends far enough to potentially grasp the plaything. Therefore, the plaything is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8125, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}}}, "step": 1, "actions": ["place-next-to(plaything_4, plaything_4)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8125, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}}}, "step": 2, "actions": ["place-next-to(plaything_4, plaything_4)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, "problem_stats": {"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 20, "remaining_actions": ["open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"action_correct": 0, "action_total": 21, "remaining_actions": ["place-next-to(document_4, document_4)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"action_correct": 0, "action_total": 11, "remaining_actions": ["place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"action_correct": 0, "action_total": 47, "remaining_actions": ["place-next-to(document_3, folder_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_3)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 7, "remaining_actions": ["place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"action_correct": 3, "action_total": 17, "remaining_actions": ["place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "place-next-to(bowl_2, piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"], "action_accuracy": 0.17647058823529413, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"action_correct": 2, "action_total": 8, "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 43, "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"action_correct": 1, "action_total": 16, "remaining_actions": ["navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.0625, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"action_correct": 3, "action_total": 12, "remaining_actions": [], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"action_correct": 3, "action_total": 11, "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.2727272727272727, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"action_correct": 3, "action_total": 8, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.375, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"action_correct": 3, "action_total": 8, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.375, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"action_correct": 5, "action_total": 33, "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.15151515151515152, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"action_correct": 3, "action_total": 11, "remaining_actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.2727272727272727, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"action_correct": 2, "action_total": 12, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 8, "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"action_correct": 1, "action_total": 6, "remaining_actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"action_correct": 0, "action_total": 8, "remaining_actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"action_correct": 0, "action_total": 10, "remaining_actions": ["place-next-to(plate_3, ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"action_correct": 0, "action_total": 8, "remaining_actions": ["grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 16, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 15, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 12, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.8226002430133658, "yes_accuracy": 0.926948051948052, "yes_correct": 571, "yes_total": 616, "no_accuracy": 0.5120772946859904, "no_correct": 106, "no_total": 207, "correct": 677, "total": 823}, "holding": {"accuracy": 0.7865748709122203, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7901234567901234, "no_correct": 448, "no_total": 567, "correct": 457, "total": 581}, "open": {"accuracy": 0.798941798941799, "yes_accuracy": 0.09090909090909091, "yes_correct": 3, "yes_total": 33, "no_accuracy": 0.9487179487179487, "no_correct": 148, "no_total": 156, "correct": 151, "total": 189}, "ontop": {"accuracy": 0.8934488911547285, "yes_accuracy": 0.8058510638297872, "yes_correct": 303, "yes_total": 376, "no_accuracy": 0.9027347053848322, "no_correct": 3202, "no_total": 3547, "correct": 3505, "total": 3923}, "inside": {"accuracy": 0.9610619469026549, "yes_accuracy": 0.21739130434782608, "yes_correct": 5, "yes_total": 23, "no_accuracy": 0.992619926199262, "no_correct": 538, "no_total": 542, "correct": 543, "total": 565}, "nextto": {"accuracy": 0.33316339536069334, "yes_accuracy": 0.8454172366621067, "yes_correct": 618, "yes_total": 731, "no_accuracy": 0.21585213032581455, "no_correct": 689, "no_total": 3192, "correct": 1307, "total": 3923}}, "predicate_accuracy": 0.663734506197521, "macro_predicate_accuracy": 0.765965191047577, "action_accuracy": 0.07591623036649214, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "google/gemma-3-27b-it", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/hard", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7232259_2"}}