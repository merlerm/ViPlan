{"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6304347826086957, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.625, "no_correct": 25, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 1, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 2, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 3, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 4, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 5, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 6, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 7, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 8, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 9, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 10, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 11, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 12, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 13, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 14, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 15, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 16, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 17, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 18, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 19, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 20, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 21, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 22, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 23, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 24, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 25, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 26, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 27, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 28, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 29, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 30, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(folder_1, document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding an object. However, the object it is holding is not labeled as folder_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the document_1 in the image. The document_1 is placed on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right side of the room, extending towards the table. I will check if the arm can reach the document_1 by comparing their positions. The arm appears to be within the range to reach the document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 1, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 2, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 3, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 4, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 5, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 6, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 7, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 8, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 9, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 10, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 11, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 12, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 13, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 14, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 15, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 16, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 17, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6521739130434783, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.65, "no_correct": 26, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}}}, "step": 18, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 19, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 20, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 21, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 22, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 23, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 24, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 25, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 26, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 27, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 28, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 29, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6739130434782609, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.675, "no_correct": 27, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 0.8, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}}}, "step": 30, "actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of document_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, document_1 is on the table, and the robotic arm is positioned close to the table, with its gripper within reach of document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of document_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, document_1 is on the table, and the robotic arm is positioned close to the table, with its gripper within reach of document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 0.0, 0.0, "First, I will identify the location of the marker_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The marker_1 is located on the table, and the robotic arm is positioned close to the table, with its end effector within reach of the marker_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the marker_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The marker_1 is located on the table, and the robotic arm is positioned close to the table, with its end effector within reach of the marker_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the table_1. The table_1 is located in the center of the image, and the robotic arm is positioned to the right of the table_1. The arm appears to have enough reach to touch the table_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the table_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the table_1. The table_1 is located in the center of the image, and the robotic arm is positioned to the right of the table_1. The arm appears to have enough reach to touch the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the desk, and the robotic arm is positioned to the left of the desk. The robotic arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the desk, and the robotic arm is positioned to the left of the desk. The robotic arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 0.0, 0.0, "First, I will identify the location of document_3 in the image. Document_3 is placed on the table, near the edge closest to the robotic arm. The robotic arm is positioned in such a way that it can extend its reach to the table. Therefore, document_3 is within the reach of the agent.", false, " <explanation>\nFirst, I will identify the location of document_3 in the image. Document_3 is placed on the table, near the edge closest to the robotic arm. The robotic arm is positioned in such a way that it can extend its reach to the table. Therefore, document_3 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 0.0, 0.0, "First, I will identify the location of the folder_1 in the image. The folder_1 is placed on the table. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the table, with its end effector (the part that can hold objects) located near the center of the table. Since the folder_1 is on the table and the robotic arm's end effector is also on the table, it is reasonable to conclude that the folder_1 is in reach of the agent.", false, " <explanation>\nFirst, I will identify the location of the folder_1 in the image. The folder_1 is placed on the table. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the table, with its end effector (the part that can hold objects) located near the center of the table. Since the folder_1 is on the table and the robotic arm's end effector is also on the table, it is reasonable to conclude that the folder_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["no", 0.0, 0.0, "First, I will identify the location of the folder_2 in the image. The folder_2 is on the floor to the right of the desk. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the desk, with its end effector (the part that can hold objects) extending towards the desk. Since the folder_2 is on the floor and the robotic arm is above the desk, the folder_2 is not in reach of the agent.", true, " <explanation>\nFirst, I will identify the location of the folder_2 in the image. The folder_2 is on the floor to the right of the desk. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the desk, with its end effector (the part that can hold objects) extending towards the desk. Since the folder_2 is on the floor and the robotic arm is above the desk, the folder_2 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["no", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["invalid answer", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["yes", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["no", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["no", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["no", "no"], "nextto folder_2,cabinet_1": ["yes", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7878787878787878, "yes_accuracy": 0.6666666666666666, "yes_correct": 10, "yes_total": 15, "no_accuracy": 0.8095238095238095, "no_correct": 68, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.4, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8285714285714286, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.7428571428571429, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7419354838709677, "no_correct": 23, "no_total": 31}}}}], "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 0.0, 0.0, "First, I will identify the location of document_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, document_1 is placed on the table, and the robotic arm is positioned close to the table, with its end effector within reach of document_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of document_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, document_1 is placed on the table, and the robotic arm is positioned close to the table, with its end effector within reach of document_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["yes", 0.0, 0.0, "First, I will identify the location of the marker_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the marker_1. In the image, the marker_1 is on the table, and the robotic arm is positioned close to the table, with its end effector within reach of the marker_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the marker_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the marker_1. In the image, the marker_1 is on the table, and the robotic arm is positioned close to the table, with its end effector within reach of the marker_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the table_1. In the image, the table_1 is clearly visible and the robotic arm is positioned close to it. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the table_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the table_1. In the image, the table_1 is clearly visible and the robotic arm is positioned close to it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, near the wall. The robotic arm is positioned on the left side of the image, with its reach extending towards the center of the room. The distance between the robotic arm and the cabinet_1 appears to be within the arm's reach. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, near the wall. The robotic arm is positioned on the left side of the image, with its reach extending towards the center of the room. The distance between the robotic arm and the cabinet_1 appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 0.0, 0.0, "First, I will identify the location of document_3 in the image. Document_3 is placed on the table, near the edge closest to the robotic arm. The robotic arm is positioned in such a way that it can reach the table and potentially the document_3. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of document_3 in the image. Document_3 is placed on the table, near the edge closest to the robotic arm. The robotic arm is positioned in such a way that it can reach the table and potentially the document_3. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 0.0, 0.0, "First, I will identify the location of the folder_1 in the image. The folder_1 is placed on the table. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the table, with its end effector (the part that can hold objects) located near the center of the table. Since the folder_1 is on the table and the robotic arm's end effector is also on the table, it is within the reach of the agent.", false, " <explanation>\nFirst, I will identify the location of the folder_1 in the image. The folder_1 is placed on the table. Next, I will determine the position of the robotic arm. The robotic arm is positioned above the table, with its end effector (the part that can hold objects) located near the center of the table. Since the folder_1 is on the table and the robotic arm's end effector is also on the table, it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 0.0, 0.0, "First, I will identify the location of the folder_2 in the image. The folder_2 is on the floor to the right of the table. Next, I will determine the reach of the robotic arm. The robotic arm is positioned above the table and can extend its reach to objects on the table and the floor. Since the folder_2 is on the floor and within the reach of the robotic arm, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the folder_2 in the image. The folder_2 is on the floor to the right of the table. Next, I will determine the reach of the robotic arm. The robotic arm is positioned above the table and can extend its reach to objects on the table and the floor. Since the folder_2 is on the floor and within the reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding the folder_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the folder_1. In the image, the robotic arm is visible, and it appears to be holding the folder_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, near the wall. The robotic arm is positioned on the left side of the image, with its reach extending towards the center of the room. The distance between the robotic arm and the cabinet_1 appears to be within the arm's reach. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, near the wall. The robotic arm is positioned on the left side of the image, with its reach extending towards the center of the room. The distance between the robotic arm and the cabinet_1 appears to be within the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["no", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["no", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["no", "no"], "nextto folder_2,cabinet_1": ["yes", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8181818181818182, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.8333333333333334, "no_correct": 70, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.4, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.9354838709677419, "no_correct": 29, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.7428571428571429, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7419354838709677, "no_correct": 23, "no_total": 31}}}, "step": 1, "actions": ["place-next-to(folder_1, cabinet_1)", "place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["yes", "no"], "holding document_3": ["yes", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["invalid answer", "no"], "open folder_1": ["no", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["no", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["yes", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["no", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["no", "no"], "nextto folder_2,cabinet_1": ["yes", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8383838383838383, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.8452380952380952, "no_correct": 71, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.4, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8857142857142857, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.967741935483871, "no_correct": 30, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.7741935483870968, "no_correct": 24, "no_total": 31}}}}], "remaining_actions": ["place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, the sink_1 is located on the left side of the kitchen island. The robotic arm is positioned on the right side of the kitchen island. The distance between the sink_1 and the robotic arm appears to be significant, and the robotic arm does not seem to have a clear path to reach the sink_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, the sink_1 is located on the left side of the kitchen island. The robotic arm is positioned on the right side of the kitchen island. The distance between the sink_1 and the robotic arm appears to be significant, and the robotic arm does not seem to have a clear path to reach the sink_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side of the image. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side of the image. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 is closed, as there are no visible gaps or openings in the cabinet doors.", true, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 is closed, as there are no visible gaps or openings in the cabinet doors.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, I can see the cabinet_1 and it is indeed open.", true, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, I can see the cabinet_1 and it is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The piece_of_cloth_1 is located on the countertop, and the robotic arm is positioned in front of the countertop. The arm appears to be within reach of the cloth. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The piece_of_cloth_1 is located on the countertop, and the robotic arm is positioned in front of the countertop. The arm appears to be within reach of the cloth. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is below the countertop. The robotic arm is positioned in front of the countertop, and it appears to be within reach of the cabinet. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_1. In the image, the robotic arm is visible, but it is not holding the bowl_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_1. In the image, the robotic arm is visible, but it is not holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["yes", 0.0, 0.0, "First, I will identify the objects labeled as \"bowl_1\" and \"bowl_2\" in the image. Then, I will check their positions relative to each other. In the image, \"bowl_1\" is placed on top of \"bowl_2\". Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the objects labeled as \"bowl_1\" and \"bowl_2\" in the image. Then, I will check their positions relative to each other. In the image, \"bowl_1\" is placed on top of \"bowl_2\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will check if bowl_1 is on top of cabinet_1. In the image, bowl_1 is located on the countertop, not on top of cabinet_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will check if bowl_1 is on top of cabinet_1. In the image, bowl_1 is located on the countertop, not on top of cabinet_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 in the image. Finally, I will determine if bowl_1 is on top of the piece_of_cloth_1. In the image, there is a bowl_1 on the countertop, but there is no piece_of_cloth_1 visible. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 in the image. Finally, I will determine if bowl_1 is on top of the piece_of_cloth_1. In the image, there is a bowl_1 on the countertop, but there is no piece_of_cloth_1 visible. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,sink_1": ["no", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is on top of the sink_1. In the image, the bowl_1 is not visible, and there is no sink_1 present. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is on top of the sink_1. In the image, the bowl_1 is not visible, and there is no sink_1 present. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is inside the cabinet. Since bowl_1 is on the countertop and bowl_2 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the positions of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is inside the cabinet. Since bowl_1 is on the countertop and bowl_2 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 and cabinet_1 in the image. Bowl_1 is located on the countertop, and cabinet_1 is located on the left side of the image. I will check if bowl_1 is next to cabinet_1. In the image, bowl_1 is not next to cabinet_1; it is on the countertop, while cabinet_1 is on the floor. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 and cabinet_1 in the image. Bowl_1 is located on the countertop, and cabinet_1 is located on the left side of the image. I will check if bowl_1 is next to cabinet_1. In the image, bowl_1 is not next to cabinet_1; it is on the countertop, while cabinet_1 is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 next to bowl_1. In the image, bowl_1 is located on the countertop, and there is no piece_of_cloth_1 visible next to it. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 next to bowl_1. In the image, bowl_1 is located on the countertop, and there is no piece_of_cloth_1 visible next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,sink_1": ["no", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. Then, I will look for the bowl_1 and check if it is next to the sink_1. In the image, the sink_1 is located on the left side of the image, and the bowl_1 is on the right side of the image. Therefore, the bowl_1 is not next to the sink_1.", true, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. Then, I will look for the bowl_1 and check if it is next to the sink_1. In the image, the sink_1 is located on the left side of the image, and the bowl_1 is on the right side of the image. Therefore, the bowl_1 is not next to the sink_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is inside the cabinet_1. In the image, the bowl_1 is on top of the cabinet_1, not inside it. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is inside the cabinet_1. In the image, the bowl_1 is on top of the cabinet_1, not inside it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the bowl_1. In the image, the bowl_1 is located on the countertop, which is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the bowl_1. In the image, the bowl_1 is located on the countertop, which is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["yes", "no"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["yes", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7446808510638298, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.8108108108108109, "no_correct": 30, "no_total": 37, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 15, "no_total": 15}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7692307692307693, "no_correct": 10, "no_total": 13}}}, "step": 3, "actions": ["grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to interact with the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to interact with the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. In the image, the sink_1 is located on the left side of the room. The robotic arm is positioned on the right side of the room, and there is a clear path between the sink_1 and the robotic arm. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. In the image, the sink_1 is located on the left side of the room. The robotic arm is positioned on the right side of the room, and there is a clear path between the sink_1 and the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned to the right of the cabinet_1. The arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned to the right of the cabinet_1. The arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" is closed, as there is no visible gap or opening.", true, " <explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" is closed, as there is no visible gap or opening.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, I can see the cabinet_1 with its door open. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, I can see the cabinet_1 with its door open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is placed on the countertop. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right of the countertop. I will check if the robotic arm can reach the bowl_1 by considering its range of motion. The robotic arm appears to have sufficient reach to extend towards the bowl_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is placed on the countertop. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right of the countertop. I will check if the robotic arm can reach the bowl_1 by considering its range of motion. The robotic arm appears to have sufficient reach to extend towards the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is below the countertop. The robotic arm is positioned above the countertop, and there is no visible path for the arm to reach the cabinet. Therefore, the bowl_2 is not in reach of the agent.", false, " <explanation>\nFirst, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is below the countertop. The robotic arm is positioned above the countertop, and there is no visible path for the arm to reach the cabinet. Therefore, the bowl_2 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned close to the countertop, indicating that it can easily reach the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. The piece_of_cloth_1 is on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned close to the countertop, indicating that it can easily reach the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable sink_1": ["no", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. In the image, the sink_1 is located on the left side of the room. The robotic arm is positioned on the right side of the room, and there is a significant distance between the sink_1 and the robotic arm. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. In the image, the sink_1 is located on the left side of the room. The robotic arm is positioned on the right side of the room, and there is a significant distance between the sink_1 and the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. The sink_1 is located in the center of the image, and the robotic arm is positioned above it. The arm appears to be within reach of the sink_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the sink_1. The sink_1 is located in the center of the image, and the robotic arm is positioned above it. The arm appears to be within reach of the sink_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "no"], "reachable sink_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "no"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6153846153846154, "yes_correct": 8, "yes_total": 13, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 2, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned to the right of the cabinet_1. The robotic arm appears to have enough reach to extend towards the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" has its doors closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" has its doors closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" is open, as indicated by the red outline around it.", true, " <explanation>\nFirst, I will look for the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled \"cabinet_1\" is open, as indicated by the red outline around it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The robotic arm has the capability to reach into the cabinet and retrieve objects. Therefore, the bowl_1 is in reach of the agent.", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The robotic arm has the capability to reach into the cabinet and retrieve objects. Therefore, the bowl_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The distance between the robotic arm and the bowl_2 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_2 in the image. The bowl_2 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The distance between the robotic arm and the bowl_2 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The piece_of_cloth_1 is located on the countertop, and the robotic arm is positioned in front of the countertop. The arm appears to be within reach of the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The piece_of_cloth_1 is located on the countertop, and the robotic arm is positioned in front of the countertop. The arm appears to be within reach of the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The robotic arm has the capability to reach into the cabinet and retrieve objects. Therefore, the bowl_1 is in reach of the agent.", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located inside the cabinet, which is open. The robotic arm is positioned in front of the cabinet. The robotic arm has the capability to reach into the cabinet and retrieve objects. Therefore, the bowl_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. The bowl_2 is inside the cabinet, not being held by the arm. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. The bowl_2 is inside the cabinet, not being held by the arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_1. In the image, the robotic arm is visible, but it is not holding the bowl_1. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_1. In the image, the robotic arm is visible, but it is not holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is on top of the cabinet, and bowl_2 is inside the cabinet. Since bowl_1 is not on top of bowl_2, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is on top of the cabinet, and bowl_2 is inside the cabinet. Since bowl_1 is not on top of bowl_2, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. Then, I will check if the bowl_1 is on top of the cabinet_1. In the image, the bowl_1 is located on the countertop, not on top of the cabinet_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. Then, I will check if the bowl_1 is on top of the cabinet_1. In the image, the bowl_1 is located on the countertop, not on top of the cabinet_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will check if bowl_1 is on top of the piece_of_cloth_1. In the image, bowl_1 is located on the countertop, and there is no piece_of_cloth_1 visible. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will check if bowl_1 is on top of the piece_of_cloth_1. In the image, bowl_1 is located on the countertop, and there is no piece_of_cloth_1 visible. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["no", 0.0, 0.0, "First, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is inside the cabinet. Since bowl_1 is on the countertop and bowl_2 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the locations of bowl_1 and bowl_2 in the image. Bowl_1 is located on the countertop, while bowl_2 is inside the cabinet. Since bowl_1 is on the countertop and bowl_2 is inside the cabinet, they are not next to each other. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. Then, I will check if the bowl_1 is next to the cabinet_1. In the image, the bowl_1 is located on the countertop, and the cabinet_1 is located below the countertop. Since the bowl_1 is not next to the cabinet_1, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. Then, I will check if the bowl_1 is next to the cabinet_1. In the image, the bowl_1 is located on the countertop, and the cabinet_1 is located below the countertop. Since the bowl_1 is not next to the cabinet_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 next to it. In the image, bowl_1 is on the countertop, and there is no piece_of_cloth_1 visible next to it. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will check if there is a piece_of_cloth_1 next to it. In the image, bowl_1 is on the countertop, and there is no piece_of_cloth_1 visible next to it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is inside the cabinet_1. In the image, the bowl_1 is on top of the cabinet_1, not inside it. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the bowl_1 is inside the cabinet_1. In the image, the bowl_1 is on top of the cabinet_1, not inside it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop, which is at a height that is within the reach of the robotic arm. The robotic arm is positioned in such a way that it can easily access the bowl_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop, which is at a height that is within the reach of the robotic arm. The robotic arm is positioned in such a way that it can easily access the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the bowl_2. In the image, the robotic arm is visible, but it is not holding the bowl_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the piece_of_cloth_1. In the image, the robotic arm is visible, but it is not holding the piece_of_cloth_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "yes"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["yes", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.8928571428571429, "no_correct": 25, "no_total": 28, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 11, "no_total": 11}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}}}, "step": 3, "actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}], "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, the cabinet_1 is closed and there is no indication that it is open.", true, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, the cabinet_1 is closed and there is no indication that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. The cabinet_1 is located on the left side of the image, and the robotic arm is positioned on the right side. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, the cabinet_1 is closed and there is no indication that it is open.", true, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, the cabinet_1 is closed and there is no indication that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable sink_1": ["no", "no"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. Then, I will determine if the cabinet_1 is within the reach of the robotic arm. In the image, the robotic arm is positioned in front of the cabinet_1, and there is enough space for the arm to reach the cabinet_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. Then, I will determine if the cabinet_1 is within the reach of the robotic arm. In the image, the robotic arm is positioned in front of the cabinet_1, and there is enough space for the arm to reach the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. Then, I will determine the position of cabinet_1 relative to the agent. In the image, the robotic arm is positioned in front of cabinet_1, and there is enough space for the arm to reach it. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. Then, I will determine the position of cabinet_1 relative to the agent. In the image, the robotic arm is positioned in front of cabinet_1, and there is enough space for the arm to reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet labeled as \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled as \"cabinet_1\" is closed, as there is no visible gap or opening.", true, " <explanation>\nFirst, I will look for the cabinet labeled as \"cabinet_1\" in the image. Then, I will check if the cabinet is open. In the image, the cabinet labeled as \"cabinet_1\" is closed, as there is no visible gap or opening.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 is closed and there is no indication that it is open.", false, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, cabinet_1 is closed and there is no indication that it is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of bowl_1 in the image. Then, I will determine if the robotic arm (agent) can reach it. In the image, bowl_1 is located on the countertop to the right of the robotic arm. The robotic arm appears to have the necessary reach to pick up bowl_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of bowl_1 in the image. Then, I will determine if the robotic arm (agent) can reach it. In the image, bowl_1 is located on the countertop to the right of the robotic arm. The robotic arm appears to have the necessary reach to pick up bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_2 in the image. Then, I will determine if the robotic arm can reach it. In the image, the bowl_2 is located on top of the cabinet_2, which is above the robotic arm's reach. Therefore, the answer is \"No\".", false, " <explanation>\nFirst, I will identify the location of the bowl_2 in the image. Then, I will determine if the robotic arm can reach it. In the image, the bowl_2 is located on top of the cabinet_2, which is above the robotic arm's reach. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["yes", 0.0, 0.0, "First, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, the piece_of_cloth_1 is located on the left side of the image, and the robotic arm is positioned to the right of the piece_of_cloth_1. The robotic arm appears to be within reach of the piece_of_cloth_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the piece_of_cloth_1 in the image. Then, I will determine if the robotic arm can reach it. In the image, the piece_of_cloth_1 is located on the left side of the image, and the robotic arm is positioned to the right of the piece_of_cloth_1. The robotic arm appears to be within reach of the piece_of_cloth_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sink_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. The sink_1 is located on a countertop in the center of the image. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right of the sink_1. To assess if the sink_1 is in reach of the agent, I will consider the distance between the sink_1 and the robotic arm. The sink_1 is within the arm's reach, as it is not too far away and the arm appears to be positioned to interact with it. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the sink_1 in the image. The sink_1 is located on a countertop in the center of the image. Next, I will determine the position of the robotic arm. The robotic arm is positioned to the right of the sink_1. To assess if the sink_1 is in reach of the agent, I will consider the distance between the sink_1 and the robotic arm. The sink_1 is within the arm's reach, as it is not too far away and the arm appears to be positioned to interact with it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "yes"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.55, "yes_accuracy": 0.35, "yes_correct": 7, "yes_total": 20, "no_accuracy": 0.75, "no_correct": 15, "no_total": 20, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.1111111111111111, "yes_correct": 1, "yes_total": 9, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}}}, "step": 2, "actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6551724137931034, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.6, "no_correct": 15, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the apple_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the apple_1. In the image, the apple_1 is on the countertop to the left of the robotic arm. The robotic arm appears to be positioned in a way that it can reach the apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the electric refrigerator in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, the electric refrigerator is located on the right side of the room. The robotic arm is positioned in the center of the room, and there is a clear path between the arm and the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the electric refrigerator in the image. Then, I will check if the refrigerator door is open. In the image, the electric refrigerator is visible, and the door is closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the apple_1. In the image, the robotic arm is visible, but it is not holding the apple_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.56, "no_correct": 14, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will look for the shelf_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a shelf_1 located on the right side of the room. The robotic arm is positioned in the center of the room and appears to be within reach of the shelf_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the shelf_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a shelf_1 located on the right side of the room. The robotic arm is positioned in the center of the room and appears to be within reach of the shelf_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The robotic arm appears to be within reach of the cabinet_1, as it is not obstructed by any objects and is positioned close enough to the cabinet_1.", false, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The robotic arm appears to be within reach of the cabinet_1, as it is not obstructed by any objects and is positioned close enough to the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["invalid answer", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above the ball_1. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above the ball_1. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned on the left side of the room. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the cabinet_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the cabinet_1. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned on the left side of the room. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "open cabinet_1": ["invalid answer", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_2": ["no", 0.0, 0.0, "First, I will identify the location of the plate_2 in the image. The plate_2 is located on the right side of the image, on top of a piece of furniture. Next, I will determine if the robotic arm, which is the agent, can reach the plate_2. The robotic arm is positioned in the center of the image and is not close enough to the plate_2 to reach it. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will identify the location of the plate_2 in the image. The plate_2 is located on the right side of the image, on top of a piece of furniture. Next, I will determine if the robotic arm, which is the agent, can reach the plate_2. The robotic arm is positioned in the center of the image and is not close enough to the plate_2 to reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["yes", 0.0, 0.0, "First, I will identify the location of the plate_3 in the image. The plate_3 is located on a shelf to the right side of the image. Next, I will determine if the robotic arm can reach the plate_3. The robotic arm is positioned in the center of the room and is facing towards the shelf. The arm appears to be within the range to reach the plate_3. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the plate_3 in the image. The plate_3 is located on a shelf to the right side of the image. Next, I will determine if the robotic arm can reach the plate_3. The robotic arm is positioned in the center of the room and is facing towards the shelf. The arm appears to be within the range to reach the plate_3. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will look for the shelf_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the shelf_1 is located on the right side of the room, and the robotic arm is positioned in the middle of the room. The distance between the robotic arm and the shelf_1 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the shelf_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the shelf_1 is located on the right side of the room, and the robotic arm is positioned in the middle of the room. The distance between the robotic arm and the shelf_1 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the middle of the room. The robotic arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the middle of the room. The robotic arm appears to be within reach of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["invalid answer", "no"], "holding ball_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6944444444444444, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.71875, "no_correct": 23, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.2, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 11, "no_total": 11}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 0.0, 0.0, "First, I will look for the plate_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the plate_1 is on a shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the plate_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the plate_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the plate_1 is on a shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the plate_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 0.0, 0.0, "First, I will identify the location of plate_2 in the image. Plate_2 is located on the shelf to the right side of the image. The robotic arm is positioned in the center of the room, and it appears to be within reach of plate_2. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of plate_2 in the image. Plate_2 is located on the shelf to the right side of the image. The robotic arm is positioned in the center of the room, and it appears to be within reach of plate_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 0.0, 0.0, "First, I will look for the plate_3 in the image. Then, I will check if the robotic arm can reach it. In the image, the plate_3 is on a shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the plate_3. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the plate_3 in the image. Then, I will check if the robotic arm can reach it. In the image, the plate_3 is on a shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the plate_3. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 0.0, 0.0, "First, I will look for the saucepan_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the saucepan_1 is on the shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the saucepan_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the saucepan_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the saucepan_1 is on the shelf, and the robotic arm is positioned in front of the shelf. The arm appears to be within reach of the saucepan_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 0.0, 0.0, "First, I will look for the shelf_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the shelf_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The arm appears to be within the range to reach the shelf_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will look for the shelf_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the shelf_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The arm appears to be within the range to reach the shelf_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The robotic arm appears to be within reach of the cabinet_1.", false, " <explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. In the image, the cabinet_1 is located on the right side of the room, and the robotic arm is positioned in the center of the room. The robotic arm appears to be within reach of the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["invalid answer", "no"], "holding ball_1": ["yes", "no"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["no", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.71875, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.9565217391304348, "no_correct": 22, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.7083333333333334, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7619047619047619, "no_correct": 16, "no_total": 21}}}}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 0.0, 0.0, "First, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above the ball_1. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the ball_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the ball_1. In the image, the ball_1 is on the floor, and the robotic arm is positioned above the ball_1. The arm appears to be within reach of the ball_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned on the left side of the image. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the cabinet_1 in the image. Then, I will check if the robotic arm can reach it. The cabinet_1 is located on the right side of the image, and the robotic arm is positioned on the left side of the image. The distance between the robotic arm and the cabinet_1 appears to be significant, and there are no visible obstacles in between. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "open cabinet_1": ["invalid answer", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the table. Finally, I will assess if the robotic arm can reach the carton_1. The arm appears to be within a reasonable distance to reach the carton_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the table in the middle of the room. Next, I will determine the position of the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the table. Finally, I will assess if the robotic arm can reach the carton_1. The arm appears to be within a reasonable distance to reach the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_2 in the image. The carton_2 is located on a table in the middle of the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the table. I will check if the arm can reach the carton_2 by comparing their positions. The arm appears to be within the range to reach the carton_2. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the carton_2 in the image. The carton_2 is located on a table in the middle of the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the table. I will check if the arm can reach the carton_2 by comparing their positions. The arm appears to be within the range to reach the carton_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the location of the table_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the table_1. In the image, the table_1 is located in the middle of the room, and the robotic arm is positioned on the right side of the image. The arm appears to be within reach of the table_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the table_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the table_1. In the image, the table_1 is located in the middle of the room, and the robotic arm is positioned on the right side of the image. The arm appears to be within reach of the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["yes", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7380952380952381, "no_correct": 31, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7692307692307693, "no_correct": 10, "no_total": 13}}}, "step": 1, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["yes", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.723404255319149, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7619047619047619, "no_correct": 32, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.8, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13}}}, "step": 2, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. Based on the image, the robotic arm appears to be within reach of the plaything_1.", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. Based on the image, the robotic arm appears to be within reach of the plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the table in the middle of the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall to the right side of the image. I will check if the arm can reach the carton_1 by considering the distance and the arm's range of motion. The arm appears to be positioned in such a way that it can extend towards the table and potentially reach the carton_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the table in the middle of the room. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall to the right side of the image. I will check if the arm can reach the carton_1 by considering the distance and the arm's range of motion. The arm appears to be positioned in such a way that it can extend towards the table and potentially reach the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_2 in the image. The carton_2 is placed on a table in the background. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned in the foreground, closer to the camera. I will check if the distance between the carton_2 and the robotic arm is within the reach of the arm. The carton_2 is on a table, and the robotic arm is positioned in such a way that it can reach the table. Therefore, the carton_2 is in reach of the agent.", false, " <explanation>\nFirst, I will identify the location of the carton_2 in the image. The carton_2 is placed on a table in the background. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is positioned in the foreground, closer to the camera. I will check if the distance between the carton_2 and the robotic arm is within the reach of the arm. The carton_2 is on a table, and the robotic arm is positioned in such a way that it can reach the table. Therefore, the carton_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the location of the table_1 in the image. Then, I will determine if the robotic arm (agent) can reach the table_1. In the image, the table_1 is located in the middle of the room, and the robotic arm is positioned near the wall on the right side of the room. The distance between the robotic arm and the table_1 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the table_1 in the image. Then, I will determine if the robotic arm (agent) can reach the table_1. In the image, the table_1 is located in the middle of the room, and the robotic arm is positioned near the wall on the right side of the room. The distance between the robotic arm and the table_1 appears to be within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. The arm appears to be within a reasonable distance and angle to reach the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. The arm appears to be within a reasonable distance and angle to reach the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the arm is holding the object labeled \"plaything_1\". In the image, the robotic arm is visible, and it appears to be holding the object labeled \"plaything_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. The arm appears to be within a reasonable distance and angle to reach the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor near the bottom right corner of the image. Next, I will determine the position of the robotic arm, which is the agent. The robotic arm is mounted on the wall and extends towards the center of the room. I will check if the arm can reach the plaything_1 by visually estimating the distance and angle between the arm and the plaything_1. The arm appears to be within a reasonable distance and angle to reach the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["yes", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.8115942028985508, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.8571428571428571, "no_correct": 54, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.7916666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8636363636363636, "no_correct": 19, "no_total": 22}}}, "step": 1, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["yes", "no"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_5,carton_2": ["no", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["yes", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.782608695652174, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.8253968253968254, "no_correct": 52, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8181818181818182, "no_correct": 18, "no_total": 22}}}, "step": 2, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the plaything_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, the plaything_1 is a pink object on the floor near the sofa. The robotic arm is positioned in such a way that it can easily reach the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the plaything_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, the plaything_1 is a pink object on the floor near the sofa. The robotic arm is positioned in such a way that it can easily reach the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for a carton in the image. Then, I will check if the carton is open. In the image, there is a carton on the table, but it is not clear if it is open or closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for a carton in the image. Then, I will check if the carton is open. In the image, there is a carton on the table, but it is not clear if it is open or closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible, but it is not holding any object. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible, but it is not holding any object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. In the image, the carton_1 is on the floor near the wall, and the robotic arm is positioned in a way that it can easily reach the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for a carton in the image. Then, I will check if the carton is open. In the image, there is a carton on the table, but it is not clear if it is open or closed. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for a carton in the image. Then, I will check if the carton is open. In the image, there is a carton on the table, but it is not clear if it is open or closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible, but it is not holding any object. Therefore, the answer is \"No\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible, but it is not holding any object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the plaything_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the plaything_1. In the image, the plaything_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_4 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, plaything_4 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_4. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the plaything_4 in the image. Then, I will determine if the robotic arm, which is the agent, can reach it. In the image, plaything_4 is located on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the plaything_4. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. The carton_1 is positioned on the floor, and the robotic arm is located above it, with its end effector within reach of the carton_1. Therefore, the answer is \"Yes\".", false, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. The carton_1 is positioned on the floor, and the robotic arm is located above it, with its end effector within reach of the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(plaything_1, carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible and it is holding the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible and it is holding the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. The carton_1 is positioned on the floor, and the robotic arm is located above it, with its end effector within reach of the carton_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will identify the location of the carton_1 in the image. Then, I will determine if the robotic arm, which is the agent, can reach the carton_1. The carton_1 is positioned on the floor, and the robotic arm is located above it, with its end effector within reach of the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open. In the image, I can see a carton_1, and it appears to be open.", true, " <explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open. In the image, I can see a carton_1, and it appears to be open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-inside(plaything_1, carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible and it is holding the plaything_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the robotic arm in the image. Then, I will check if the robotic arm is holding the plaything_1. In the image, the robotic arm is visible and it is holding the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, the carton_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the carton_1. Therefore, the answer is \"Yes\".", true, " <explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, the carton_1 is on the floor, and the robotic arm is positioned above it. The arm appears to be within reach of the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open. In the image, I can see a carton_1, and it appears to be open as there is an object inside it.", true, " <explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the carton_1 is open. In the image, I can see a carton_1, and it appears to be open as there is an object inside it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.75, "no_correct": 9, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 1, "actions": ["place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["yes", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.75, "no_correct": 9, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}}}, "step": 2, "actions": ["place-inside(plaything_1, carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}], "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, "problem_stats": {"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 41, "remaining_actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"action_correct": 0, "action_total": 41, "remaining_actions": ["place-next-to(folder_1, document_1)", "place-next-to(document_1, document_1)", "open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"action_correct": 0, "action_total": 17, "remaining_actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"action_correct": 0, "action_total": 11, "remaining_actions": ["place-next-to(document_1, document_1)", "place-next-to(document_3, document_1)", "open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"action_correct": 2, "action_total": 11, "remaining_actions": ["place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.18181818181818182, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"action_correct": 1, "action_total": 8, "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.125, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"action_correct": 2, "action_total": 15, "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"], "action_accuracy": 0.13333333333333333, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"action_correct": 2, "action_total": 8, "remaining_actions": ["place-on(bowl_2, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 15, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"action_correct": 0, "action_total": 15, "remaining_actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 14, "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.3384321223709369, "yes_accuracy": 0.9717514124293786, "yes_correct": 172, "yes_total": 177, "no_accuracy": 0.014450867052023121, "no_correct": 5, "no_total": 346, "correct": 177, "total": 523}, "holding": {"accuracy": 0.4229390681003584, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.4259927797833935, "no_correct": 118, "no_total": 277, "correct": 118, "total": 279}, "open": {"accuracy": 0.8830409356725146, "yes_accuracy": 0.3125, "yes_correct": 5, "yes_total": 16, "no_accuracy": 0.9419354838709677, "no_correct": 146, "no_total": 155, "correct": 151, "total": 171}, "ontop": {"accuracy": 0.8633587786259542, "yes_accuracy": 0.6622222222222223, "yes_correct": 149, "yes_total": 225, "no_accuracy": 0.9050691244239631, "no_correct": 982, "no_total": 1085, "correct": 1131, "total": 1310}, "inside": {"accuracy": 0.8497757847533632, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.8577981651376146, "no_correct": 374, "no_total": 436, "correct": 379, "total": 446}, "nextto": {"accuracy": 0.6129770992366412, "yes_accuracy": 0.3308270676691729, "yes_correct": 44, "yes_total": 133, "no_accuracy": 0.6448598130841121, "no_correct": 759, "no_total": 1177, "correct": 803, "total": 1310}}, "predicate_accuracy": 0.6830898737311215, "macro_predicate_accuracy": 0.6617539647932947, "action_accuracy": 0.022292993630573247, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "deepseek-ai/deepseek-vl2", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/hard", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7232218_7"}}