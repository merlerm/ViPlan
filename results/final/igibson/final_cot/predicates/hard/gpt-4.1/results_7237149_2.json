{"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 9.837185492367358e-10, 0.9999999990162814, "The robotic arm (agent) is extended towards the desk where the document_1 is located. The red highlight and label on document_1 indicate that it is being targeted or is within the interaction range of the robotic arm. The position of the arm suggests it can reach and potentially interact with document_1.", false, "<explanation>\nThe robotic arm (agent) is extended towards the desk where the document_1 is located. The red highlight and label on document_1 indicate that it is being targeted or is within the interaction range of the robotic arm. The position of the arm suggests it can reach and potentially interact with document_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.2099571338985993e-09, 0.9999999987900429, "The robotic arm (agent) is extended towards the cabinet labeled \"cabinet_1\". The end effector of the arm is very close to or directly above the cabinet, indicating that the cabinet is within the reach of the agent. The proximity and orientation suggest that the agent can interact with the cabinet.", true, "<explanation>\nThe robotic arm (agent) is extended towards the cabinet labeled \"cabinet_1\". The end effector of the arm is very close to or directly above the cabinet, indicating that the cabinet is within the reach of the agent. The proximity and orientation suggest that the agent can interact with the cabinet.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999999898867541, 1.0113245861430934e-08, "To determine if the cabinet_1 is open, I need to look at the cabinet on the right side of the image. An open cabinet would typically have its doors visibly ajar or open, revealing the inside. In the image, the cabinet doors appear to be closed, with no visible gap or open space.", true, "<explanation>\nTo determine if the cabinet_1 is open, I need to look at the cabinet on the right side of the image. An open cabinet would typically have its doors visibly ajar or open, revealing the inside. In the image, the cabinet doors appear to be closed, with no visible gap or open space.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.9999891516823725, 1.0848317627551016e-05, "The robotic arm, which is the agent, is positioned above the document labeled \"document_1\" on the desk. However, the gripper of the robotic arm is open and not grasping the document. Therefore, the agent is not holding the document_1.", true, "<explanation>\nThe robotic arm, which is the agent, is positioned above the document labeled \"document_1\" on the desk. However, the gripper of the robotic arm is open and not grasping the document. Therefore, the agent is not holding the document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999999994263, 5.736162900263921e-13, "To determine if the agent is holding \"document_3,\" I need to observe the robotic arm (the agent) and see if it is grasping or in contact with the object labeled \"document_3.\" In the image, the robotic arm is extended towards the desk area where several documents are present, but the arm's gripper does not appear to be holding any of the documents, including \"document_3.\" The documents are still on the desk, and the gripper is empty.", true, "<explanation>\nTo determine if the agent is holding \"document_3,\" I need to observe the robotic arm (the agent) and see if it is grasping or in contact with the object labeled \"document_3.\" In the image, the robotic arm is extended towards the desk area where several documents are present, but the arm's gripper does not appear to be holding any of the documents, including \"document_3.\" The documents are still on the desk, and the gripper is empty.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999997259857596, 2.7401424039656826e-07, "In the image, the robotic arm (agent) is visible near the folder_1, which is highlighted in red on the desk. However, the gripper of the robotic arm does not appear to be grasping or holding the folder_1. The folder_1 remains on the desk, not in the grip of the robotic arm.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near the folder_1, which is highlighted in red on the desk. However, the gripper of the robotic arm does not appear to be grasping or holding the folder_1. The folder_1 remains on the desk, not in the grip of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_2": [true, false, false], "holding document_4": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.9999999693983308, 3.0601669160812655e-08, "I will look at the cabinet_1 in the image to determine if its drawers or doors are open. The cabinet_1 is located under the window, and it appears that all of its drawers are closed, as there are no visible gaps or open spaces.", false, "<explanation>\nI will look at the cabinet_1 in the image to determine if its drawers or doors are open. The cabinet_1 is located under the window, and it appears that all of its drawers are closed, as there are no visible gaps or open spaces.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable document_2": ["yes", 5.921788345747675e-14, 0.9999999999999408, "The robotic arm (agent) is positioned near the right side of the image, and its gripper is extended. The object labeled \"document_2\" is on the desk near the center of the image. The arm appears to be close enough to the desk and the document, suggesting that it could reach and interact with \"document_2\" without significant obstruction.", true, "<explanation>\nThe robotic arm (agent) is positioned near the right side of the image, and its gripper is extended. The object labeled \"document_2\" is on the desk near the center of the image. The arm appears to be close enough to the desk and the document, suggesting that it could reach and interact with \"document_2\" without significant obstruction.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 1.3559105131881652e-11, 0.9999999999864408, "The robotic arm (agent) is positioned near the right side of the image, and \"document_4\" is highlighted on the desk closest to the arm. The arm appears to be extended towards this desk, and the distance between the arm and \"document_4\" is short, indicating that the object is within the arm's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned near the right side of the image, and \"document_4\" is highlighted on the desk closest to the arm. The arm appears to be extended towards this desk, and the distance between the arm and \"document_4\" is short, indicating that the object is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 8.512545620999079e-09, 0.9999999914874543, "The robotic arm (agent) is positioned close to the cabinet_1, and its end effector is extended towards the cabinet. The distance between the arm and the cabinet appears to be within the arm's reach, suggesting that the agent can interact with the cabinet_1.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the cabinet_1, and its end effector is extended towards the cabinet. The distance between the arm and the cabinet appears to be within the arm's reach, suggesting that the agent can interact with the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999999988876049, 1.1123950796461423e-09, "To determine if cabinet_1 is open, I need to look at the cabinet in the image and check if any of its drawers or doors are visibly open. In the image, cabinet_1 is the light-colored cabinet with drawers located near the window. All the drawers appear to be closed, as there are no visible gaps or open spaces.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look at the cabinet in the image and check if any of its drawers or doors are visibly open. In the image, cabinet_1 is the light-colored cabinet with drawers located near the window. All the drawers appear to be closed, as there are no visible gaps or open spaces.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding document_1": ["no", 0.9999999997381394, 2.6186066031830366e-10, "The robotic arm (agent) is visible in the image, and its gripper is positioned above the desk area. The object labeled \"document_1\" is on the desk, but the gripper does not appear to be grasping or holding the document. The document is still on the desk surface, not in the gripper.", true, "<explanation>\nThe robotic arm (agent) is visible in the image, and its gripper is positioned above the desk area. The object labeled \"document_1\" is on the desk, but the gripper does not appear to be grasping or holding the document. The document is still on the desk surface, not in the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.9999999996513961, 3.4860388311814384e-10, "To determine if the agent is holding the document_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_2. In the image, the robotic arm is visible and appears to be holding an object, but the label closest to the gripper is \"document_1,\" not \"document_2.\" The label \"document_2\" is on the desk, away from the robotic arm's gripper. Therefore, the agent is not holding document_2.", true, "<explanation>\nTo determine if the agent is holding the document_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_2. In the image, the robotic arm is visible and appears to be holding an object, but the label closest to the gripper is \"document_1,\" not \"document_2.\" The label \"document_2\" is on the desk, away from the robotic arm's gripper. Therefore, the agent is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999997993246, 2.006753638899401e-10, "To determine if the agent is holding the document_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_3. In the image, the robotic arm is visible and appears to be holding an object, but the label closest to the gripper is \"document_1,\" not \"document_3.\" The label \"document_3\" is on the desk, away from the robotic arm's gripper. Therefore, the agent is not holding document_3.", true, "<explanation>\nTo determine if the agent is holding the document_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_3. In the image, the robotic arm is visible and appears to be holding an object, but the label closest to the gripper is \"document_1,\" not \"document_3.\" The label \"document_3\" is on the desk, away from the robotic arm's gripper. Therefore, the agent is not holding document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999985883142, 1.4116857405504622e-09, "The robotic arm (agent) is visible in the image, and it appears to be holding an object. The object being held is not clearly labeled in the image, but the label \"document_4\" is visible on the desk in the foreground, not in the robotic arm's grip. Therefore, the agent is not holding \"document_4\".", true, "<explanation>\nThe robotic arm (agent) is visible in the image, and it appears to be holding an object. The object being held is not clearly labeled in the image, but the label \"document_4\" is visible on the desk in the foreground, not in the robotic arm's grip. Therefore, the agent is not holding \"document_4\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999930031308, 6.996869239653106e-09, "The robotic arm, which is the agent, is visible in the image. The object labeled \"folder_1\" is on the desk near the window, and it is not in the gripper of the robotic arm. The arm appears to be empty or not holding the folder_1.", true, "<explanation>\nThe robotic arm, which is the agent, is visible in the image. The object labeled \"folder_1\" is on the desk near the window, and it is not in the gripper of the robotic arm. The arm appears to be empty or not holding the folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["yes", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5217391304347826, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.475, "no_correct": 19, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.26666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.21428571428571427, "no_correct": 3, "no_total": 14}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "no"], "reachable document_2": ["no", "yes"], "reachable document_3": ["yes", "no"], "reachable document_4": ["yes", "yes"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["yes", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_2,folder_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["yes", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["yes", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "yes"], "ontop document_4,document_3": ["no", "no"], "ontop document_4,table_1": ["no", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["yes", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_2": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["yes", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_2,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_4,chair_1": ["no", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["no", "yes"], "nextto document_4,document_3": ["no", "no"], "nextto document_4,table_1": ["no", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_2": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.574468085106383, "yes_accuracy": 0.4375, "yes_correct": 7, "yes_total": 16, "no_accuracy": 0.6025641025641025, "no_correct": 47, "no_total": 78, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8064516129032258, "no_correct": 25, "no_total": 31}, "inside": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.3142857142857143, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.3, "no_correct": 9, "no_total": 30}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 1.1977387901523895e-10, 0.9999999998802261, "The image shows a robotic arm (the agent) in a room with various objects. The document_1 is highlighted in red and is located on the desk. The robotic arm is extended towards the desk and appears to be close enough to reach the document_1. The position of the arm relative to the document suggests that it is within the arm's reach.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a room with various objects. The document_1 is highlighted in red and is located on the desk. The robotic arm is extended towards the desk and appears to be close enough to reach the document_1. The position of the arm relative to the document suggests that it is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 2.6721982149490683e-06, 0.9999973278017851, "The robotic arm (agent) is extended towards the cabinet labeled \"cabinet_1.\" The end effector of the arm is very close to or directly above the cabinet, indicating that the cabinet is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is extended towards the cabinet labeled \"cabinet_1.\" The end effector of the arm is very close to or directly above the cabinet, indicating that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999999646920962, 3.530790384055095e-08, "To determine if cabinet_1 is open, I need to look at the cabinet on the right side of the image. An open cabinet would have its doors visibly ajar or open, revealing the inside. In the image, the cabinet doors appear to be closed, with no visible gap or open space.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look at the cabinet on the right side of the image. An open cabinet would have its doors visibly ajar or open, revealing the inside. In the image, the cabinet doors appear to be closed, with no visible gap or open space.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.9999999786541585, 2.1345841565243678e-08, "The robotic arm, which is the agent, is positioned above the document labeled \"document_1\" in red. However, the gripper of the robotic arm does not appear to be closed around the document, nor is the document elevated or separated from the surface. This suggests that the agent is not currently holding the document.", true, "<explanation>\nThe robotic arm, which is the agent, is positioned above the document labeled \"document_1\" in red. However, the gripper of the robotic arm does not appear to be closed around the document, nor is the document elevated or separated from the surface. This suggests that the agent is not currently holding the document.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999998430114, 1.5698867721348567e-10, "I will check if the robotic arm (the agent) is holding the object labeled \"document_3\". In the image, the robotic arm is visible and appears to be positioned near the documents on the desk. However, the gripper of the robotic arm is not visibly grasping or holding any of the documents, including \"document_3\". The documents are still on the desk.", true, "<explanation>\nI will check if the robotic arm (the agent) is holding the object labeled \"document_3\". In the image, the robotic arm is visible and appears to be positioned near the documents on the desk. However, the gripper of the robotic arm is not visibly grasping or holding any of the documents, including \"document_3\". The documents are still on the desk.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999999968585, 3.1415090360205417e-12, "To determine if the agent is holding the folder_1, I need to look at the robotic arm (the agent) and see if the folder_1 object is in its grasp. In the image, the robotic arm is extended towards the desk area, but the folder_1 (which appears to be the red folder on the desk) is not in the gripper of the robotic arm. The folder_1 is still on the desk, not being held by the agent.", true, "<explanation>\nTo determine if the agent is holding the folder_1, I need to look at the robotic arm (the agent) and see if the folder_1 object is in its grasp. In the image, the robotic arm is extended towards the desk area, but the folder_1 (which appears to be the red folder on the desk) is not in the gripper of the robotic arm. The folder_1 is still on the desk, not being held by the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_2": [true, false, false], "holding document_4": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 1.0340183620170346e-11, 0.9999999999896598, "To determine if cabinet_1 is open, I need to look for visual cues indicating that the cabinet door is ajar or open. In the image, cabinet_1 is the wooden cabinet on the right side. The door of the cabinet is visibly open, and documents are partially inside and outside the cabinet, confirming that it is not closed.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for visual cues indicating that the cabinet door is ajar or open. In the image, cabinet_1 is the wooden cabinet on the right side. The door of the cabinet is visibly open, and documents are partially inside and outside the cabinet, confirming that it is not closed.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["yes", 1.1057617928292075e-13, 0.9999999999998894, "The robotic arm (agent) is positioned near the right side of the image, close to the cabinet where document_2 is located. The arm appears to be extended towards the cabinet, and document_2 is on the top surface of the cabinet, within the general area that the arm can reach. There are no visible obstacles between the arm and document_2, and the arm's current position suggests it can access the document.", true, "<explanation>\nThe robotic arm (agent) is positioned near the right side of the image, close to the cabinet where document_2 is located. The arm appears to be extended towards the cabinet, and document_2 is on the top surface of the cabinet, within the general area that the arm can reach. There are no visible obstacles between the arm and document_2, and the arm's current position suggests it can access the document.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 4.248967152128875e-16, 0.9999999999999996, "To determine if document_4 is within reach of the agent, I need to locate both the robotic arm (the agent) and document_4 in the image. The robotic arm is positioned near the right side of the image, close to a set of drawers. Document_4 is labeled and appears to be on the lower shelf of the cabinet near the robotic arm. The arm is extended and appears to be close enough to the shelf where document_4 is located, suggesting that the document is within the arm's reach.", true, "<explanation>\nTo determine if document_4 is within reach of the agent, I need to locate both the robotic arm (the agent) and document_4 in the image. The robotic arm is positioned near the right side of the image, close to a set of drawers. Document_4 is labeled and appears to be on the lower shelf of the cabinet near the robotic arm. The arm is extended and appears to be close enough to the shelf where document_4 is located, suggesting that the document is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 7.757868892321253e-11, 0.9999999999224213, "The robotic arm (agent) is positioned close to the desk where document_1 is located. The arm appears to be extended towards the desk, and document_1 is on the desk within the area that the arm can reach. There are no visible obstacles between the arm and document_1, and the arm's current position suggests it can access the document.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the desk where document_1 is located. The arm appears to be extended towards the desk, and document_1 is on the desk within the area that the arm can reach. There are no visible obstacles between the arm and document_1, and the arm's current position suggests it can access the document.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.9999999906517985, 9.348201586304217e-09, "To determine if the agent (robotic arm) is holding document_2, I need to check the position of the robotic arm relative to document_2. In the image, the robotic arm is extended towards the right side of the room, but document_2 is located on the lower shelf of the cabinet, and the arm is not in contact with or grasping document_2. Therefore, the agent is not holding document_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to check the position of the robotic arm relative to document_2. In the image, the robotic arm is extended towards the right side of the room, but document_2 is located on the lower shelf of the cabinet, and the arm is not in contact with or grasping document_2. Therefore, the agent is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999999981348, 1.865134448287315e-12, "To determine if the agent (robotic arm) is holding document_3, I need to check the position of the robotic arm relative to document_3. In the image, the robotic arm is extended towards the right side of the room, near the cabinet where document_2 and document_3 are located. However, the gripper of the robotic arm is not visibly grasping or in contact with document_3. Document_3 appears to still be on the shelf, not in the grip of the robotic arm.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to check the position of the robotic arm relative to document_3. In the image, the robotic arm is extended towards the right side of the room, near the cabinet where document_2 and document_3 are located. However, the gripper of the robotic arm is not visibly grasping or in contact with document_3. Document_3 appears to still be on the shelf, not in the grip of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999999995557, 4.4436093762929566e-13, "To determine if the agent (robotic arm) is holding document_4, I need to check if the robotic arm is grasping or in contact with the object labeled as document_4. In the image, the robotic arm is positioned near the center of the room, but it is not holding or in contact with document_4, which is located on the lower right side of the image, on a piece of furniture. Therefore, the agent is not holding document_4.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_4, I need to check if the robotic arm is grasping or in contact with the object labeled as document_4. In the image, the robotic arm is positioned near the center of the room, but it is not holding or in contact with document_4, which is located on the lower right side of the image, on a piece of furniture. Therefore, the agent is not holding document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999999927761, 7.22385545454948e-12, "In the image, the robotic arm (agent) is visible near the right side of the room. The folder_1 is not explicitly labeled in the image, but the arm does not appear to be holding any object. The gripper of the robotic arm is empty, and there are no objects visibly grasped by it. Therefore, the agent is not holding folder_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near the right side of the room. The folder_1 is not explicitly labeled in the image, but the arm does not appear to be holding any object. The gripper of the robotic arm is empty, and there are no objects visibly grasped by it. Therefore, the agent is not holding folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable document_1": ["yes", 2.037084337828869e-11, 0.9999999999796292, "The robotic arm (agent) is positioned close to the desk where document_1 is located. The arm appears to be extended towards the desk, and document_1 is on the desk within the area that the arm can reach. There are no visible obstacles between the arm and document_1, and the arm's end effector is near the document. Therefore, document_1 is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the desk where document_1 is located. The arm appears to be extended towards the desk, and document_1 is on the desk within the area that the arm can reach. There are no visible obstacles between the arm and document_1, and the arm's end effector is near the document. Therefore, document_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding document_2": ["no", 0.9999999999974695, 2.5305665236625445e-12, "To determine if the agent (robotic arm) is holding document_2, I need to check the position of the robotic arm relative to document_2. In the image, the robotic arm is extended towards the right side of the room, but document_2 is located on the lower shelf of the cabinet, while the robotic arm is not in contact with or holding document_2. The arm appears to be above the cabinet, not grasping any document.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to check the position of the robotic arm relative to document_2. In the image, the robotic arm is extended towards the right side of the room, but document_2 is located on the lower shelf of the cabinet, while the robotic arm is not in contact with or holding document_2. The arm appears to be above the cabinet, not grasping any document.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999999637582, 3.6241812701158226e-11, "To determine if the agent is holding document_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_3. In the image, the robotic arm is positioned near the desk and appears to be above or near document_1, but it is not in contact with or holding document_3, which is located on a lower shelf to the right. Therefore, the agent is not holding document_3.", true, "<explanation>\nTo determine if the agent is holding document_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as document_3. In the image, the robotic arm is positioned near the desk and appears to be above or near document_1, but it is not in contact with or holding document_3, which is located on a lower shelf to the right. Therefore, the agent is not holding document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999999997615, 2.3844443582237637e-13, "To determine if the agent is holding document_4, I need to check if the robotic arm (the agent) is grasping or in contact with document_4. In the image, the robotic arm is extended towards the right side of the room, but document_4 is not visible in the grasp of the arm. The labels for document_2 and document_3 are visible near the cabinet, but there is no indication that document_4 is being held by the agent.", true, "<explanation>\nTo determine if the agent is holding document_4, I need to check if the robotic arm (the agent) is grasping or in contact with document_4. In the image, the robotic arm is extended towards the right side of the room, but document_4 is not visible in the grasp of the arm. The labels for document_2 and document_3 are visible near the cabinet, but there is no indication that document_4 is being held by the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999999997407, 2.5932478376254893e-13, "To determine if the agent is holding folder_1, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is extended towards the right side of the room, but it is not visibly holding or in contact with any object labeled as folder_1. The labels visible in the image are \"document_1\" on the desk and \"document_2\" and \"document\" near the cabinet, but there is no label for \"folder_1\" being held by the arm.", true, "<explanation>\nTo determine if the agent is holding folder_1, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is extended towards the right side of the room, but it is not visibly holding or in contact with any object labeled as folder_1. The labels visible in the image are \"document_1\" on the desk and \"document_2\" and \"document\" near the cabinet, but there is no label for \"folder_1\" being held by the arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "no"], "reachable document_3": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["yes", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "no"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5869565217391305, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.525, "no_correct": 21, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.2857142857142857, "no_correct": 4, "no_total": 14}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable chair_1": ["no", "yes"], "reachable document_1": ["yes", "no"], "reachable document_2": ["yes", "yes"], "reachable document_3": ["yes", "no"], "reachable document_4": ["yes", "yes"], "reachable table_1": ["no", "no"], "reachable cabinet_1": ["yes", "yes"], "reachable folder_1": ["yes", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open folder_1": ["yes", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,table_1": ["no", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["yes", "no"], "ontop document_3,document_4": ["yes", "no"], "ontop document_3,table_1": ["no", "yes"], "ontop document_3,cabinet_1": ["yes", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["no", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["no", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_2,cabinet_1": ["yes", "yes"], "inside document_2,folder_1": ["yes", "no"], "inside document_3,cabinet_1": ["yes", "no"], "inside document_3,folder_1": ["yes", "no"], "inside document_4,cabinet_1": ["yes", "yes"], "inside document_4,folder_1": ["yes", "no"], "inside folder_1,cabinet_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "no"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["no", "no"], "nextto document_2,chair_1": ["no", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "no"], "nextto document_2,table_1": ["no", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "yes"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["no", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "no"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["no", "no"], "nextto document_4,cabinet_1": ["yes", "yes"], "nextto document_4,folder_1": ["no", "no"], "nextto folder_1,chair_1": ["no", "no"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6170212765957447, "yes_accuracy": 0.7692307692307693, "yes_correct": 10, "yes_total": 13, "no_accuracy": 0.5925925925925926, "no_correct": 48, "no_total": 81, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.6, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32}, "inside": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.6571428571428571, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32}}}, "step": 3, "actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 1.1019337822051266e-07, 0.9999998898066218, "The robotic arm (agent) is positioned above the desk, and document_1 is located on the desk near the arm. The arm appears to be close enough to reach and interact with document_1 without any visible obstructions. Therefore, document_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the desk, and document_1 is located on the desk near the arm. The arm appears to be close enough to reach and interact with document_1 without any visible obstructions. Therefore, document_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 0.9999999999658865, 3.411350092831319e-11, "To determine if marker_1 is in reach of the agent, I need to check if marker_1 is visible in the image and if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible marker_1; only folders and documents are labeled. Since marker_1 is not present or labeled in the visible area, I cannot confirm that it is within reach of the agent.", true, "<explanation>\nTo determine if marker_1 is in reach of the agent, I need to check if marker_1 is visible in the image and if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible marker_1; only folders and documents are labeled. Since marker_1 is not present or labeled in the visible area, I cannot confirm that it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 3.4518807879082077e-10, 0.9999999996548119, "The robotic arm (agent) is positioned close to the table labeled as \"table_1,\" with its end effector hovering above or near the table's surface. The proximity of the arm to the table and the objects on it (such as folders and documents) suggests that the table is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table labeled as \"table_1,\" with its end effector hovering above or near the table's surface. The proximity of the arm to the table and the objects on it (such as folders and documents) suggests that the table is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999298, 7.019661923276739e-14, "The robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is visible in the background, under the shelves and behind the desk. Given the current position and reach of the robotic arm, it does not appear to be close enough to interact with or reach cabinet_1 without significant repositioning. Therefore, cabinet_1 is not in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is visible in the background, under the shelves and behind the desk. Given the current position and reach of the robotic arm, it does not appear to be close enough to interact with or reach cabinet_1 without significant repositioning. Therefore, cabinet_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_3": ["yes", 6.039789499329586e-10, 0.999999999396021, "The robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the base of the robotic arm. The arm appears to be within a reasonable distance to reach and interact with document_3, as it is not obstructed and is on the same surface as the arm's current position.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the base of the robotic arm. The arm appears to be within a reasonable distance to reach and interact with document_3, as it is not obstructed and is on the same surface as the arm's current position.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 2.9721861804606505e-08, 0.9999999702781383, "The robotic arm (agent) is positioned above the desk, and folder_1 is located on the desk near the arm. The arm appears to be close enough to reach and interact with folder_1 without any visible obstructions. Therefore, folder_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned above the desk, and folder_1 is located on the desk near the arm. The arm appears to be close enough to reach and interact with folder_1 without any visible obstructions. Therefore, folder_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["no", 0.9999999999999805, 1.9518624234744006e-14, "The robotic arm (agent) is positioned near the desk, and folder_2 is on the chair, which is lower and further away from the arm compared to the other objects on the desk. The arm appears to be closer to the desk area and not directly above or near the chair where folder_2 is located. Given the current position of the arm, it does not seem to be within immediate reach of folder_2.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_2 is on the chair, which is lower and further away from the arm compared to the other objects on the desk. The arm appears to be closer to the desk area and not directly above or near the chair where folder_2 is located. Given the current position of the arm, it does not seem to be within immediate reach of folder_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 1.0, 1.2055580584591785e-17, "The robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and some documents are placed. The cabinet_1 is located further back, under the shelves and behind the monitor, which appears to be at a distance from the current position of the robotic arm. Given the arm's current extension and the spatial arrangement, it does not seem that the arm can reach cabinet_1 without repositioning.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and some documents are placed. The cabinet_1 is located further back, under the shelves and behind the monitor, which appears to be at a distance from the current position of the robotic arm. Given the arm's current extension and the spatial arrangement, it does not seem that the arm can reach cabinet_1 without repositioning.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 5.2546393919243276e-11, 0.9999999999474536, "The robotic arm (agent) is positioned very close to the cabinet, with its gripper already inside the shelving unit above the cabinet. Given the proximity and the fact that the arm is extended towards the area directly above the cabinet, it is reasonable to conclude that the cabinet_1 is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the cabinet, with its gripper already inside the shelving unit above the cabinet. Given the proximity and the fact that the arm is extended towards the area directly above the cabinet, it is reasonable to conclude that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable marker_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable document_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_3": {"before": true, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_1": {"before": true, "after": false}, "reachable folder_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 7.302679772281899e-12, 0.9999999999926973, "The robotic arm (agent) is positioned very close to the cabinet, with its gripper already inside the shelving area above the cabinet. This indicates that the cabinet is within the reach of the agent, as the arm can easily extend or move slightly to interact with the cabinet surface or handles.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the cabinet, with its gripper already inside the shelving area above the cabinet. This indicates that the cabinet is within the reach of the agent, as the arm can easily extend or move slightly to interact with the cabinet surface or handles.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999999995552344, 4.447655912444216e-10, "To determine if cabinet_1 is open, I need to look for visible doors or panels on the cabinet below the shelf and check if any of them are ajar or not aligned with the rest of the cabinet. In the image, the cabinet doors appear to be closed, as there are no visible gaps or open panels.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for visible doors or panels on the cabinet below the shelf and check if any of them are ajar or not aligned with the rest of the cabinet. In the image, the cabinet doors appear to be closed, as there are no visible gaps or open panels.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_1": [true, false, false], "holding document_2": [true, false, false], "holding document_3": [true, false, false], "holding document_4": [true, false, false], "holding folder_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 3.3733200158322806e-12, 0.9999999999966267, "To determine if cabinet_1 is open, I need to look for visible signs that the cabinet doors are not closed, such as an open door or visible interior. In the image, the lower part of the cabinet (under the desk surface) shows a door that is ajar, revealing the inside of the cabinet. This indicates that cabinet_1 is open.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for visible signs that the cabinet doors are not closed, such as an open door or visible interior. In the image, the lower part of the cabinet (under the desk surface) shows a door that is ajar, revealing the inside of the cabinet. This indicates that cabinet_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["no", 0.9999999999994365, 5.634943444800631e-13, "To determine if document_2 is within reach of the agent, I need to check the position of the robotic arm relative to the document_2. In the image, the robotic arm is positioned on the shelf above the desk, while document_2 is located on the desk surface below. The arm does not appear to be extended towards the desk where document_2 is placed, and there is a significant vertical distance between the arm's current position and the document. Therefore, document_2 is not currently in reach of the agent.", false, "<explanation>\nTo determine if document_2 is within reach of the agent, I need to check the position of the robotic arm relative to the document_2. In the image, the robotic arm is positioned on the shelf above the desk, while document_2 is located on the desk surface below. The arm does not appear to be extended towards the desk where document_2 is placed, and there is a significant vertical distance between the arm's current position and the document. Therefore, document_2 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable document_4": ["no", 0.9999999999974709, 2.529081324325099e-12, "To determine if document_4 is within reach of the agent, I need to check the position of the robotic arm relative to document_4. The robotic arm is currently positioned above the shelf, while document_4 is located on the table below the shelf. The arm does not appear to be extended towards the table where document_4 is placed, and there is a significant vertical distance between the arm and the document. Therefore, document_4 is not currently within reach of the agent.", false, "<explanation>\nTo determine if document_4 is within reach of the agent, I need to check the position of the robotic arm relative to document_4. The robotic arm is currently positioned above the shelf, while document_4 is located on the table below the shelf. The arm does not appear to be extended towards the table where document_4 is placed, and there is a significant vertical distance between the arm and the document. Therefore, document_4 is not currently within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 2.710551421122235e-08, 0.9999999728944858, "The robotic arm (agent) is positioned near the desk, and document_1 is located on the desk close to the edge and near the chair. Given the proximity of the robotic arm to the desk and the position of document_1, it appears that the document is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_1 is located on the desk close to the edge and near the chair. Given the proximity of the robotic arm to the desk and the position of document_1, it appears that the document is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 0.9999999999183451, 8.165491645503092e-11, "The robotic arm (agent) is positioned near the desk, and marker_1 is not visible in the image. The objects visible and labeled are folders and documents, but there is no marker_1 present on the desk or within the visible reach of the robotic arm. Therefore, I cannot confirm that marker_1 is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and marker_1 is not visible in the image. The objects visible and labeled are folders and documents, but there is no marker_1 present on the desk or within the visible reach of the robotic arm. Therefore, I cannot confirm that marker_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 8.789725378081987e-15, 0.9999999999999912, "The robotic arm (agent) is positioned close to the table, and its end effector is above the table surface. The table and the objects on it are within the immediate vicinity of the arm's reach. The arm appears to be capable of interacting with the table and the items on it, indicating that table_1 is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table, and its end effector is above the table surface. The table and the objects on it are within the immediate vicinity of the arm's reach. The arm appears to be capable of interacting with the table and the items on it, indicating that table_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.999999999999996, 3.9529059736391894e-15, "The robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is visible in the background, but it is positioned further away from the current reach of the robotic arm. The arm appears to be focused on the desk area and does not seem to be close enough to interact with the cabinet_1 without repositioning.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is visible in the background, but it is positioned further away from the current reach of the robotic arm. The arm appears to be focused on the desk area and does not seem to be close enough to interact with the cabinet_1 without repositioning.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_2": ["yes", 9.178414485688724e-09, 0.9999999908215855, "The robotic arm (agent) is positioned near the desk, and document_2 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_2 without any visible obstructions. Therefore, document_2 is in reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_2 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_2 without any visible obstructions. Therefore, document_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 3.7097600442649263e-09, 0.99999999629024, "The robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_3 without any visible obstructions. Therefore, document_3 is in reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_3 without any visible obstructions. Therefore, document_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 4.884763244815131e-11, 0.9999999999511524, "The robotic arm (agent) is positioned near the desk where document_4 is located. Document_4 is on the desk, close to the edge and within the area where the robotic arm can extend. The arm appears to be capable of reaching objects on the desk, including document_4, based on its proximity and orientation.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk where document_4 is located. Document_4 is on the desk, close to the edge and within the area where the robotic arm can extend. The arm appears to be capable of reaching objects on the desk, including document_4, based on its proximity and orientation.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable folder_1": ["yes", 6.710817863086794e-12, 0.9999999999932891, "The robotic arm (agent) is positioned near the desk, and folder_1 is located on the desk close to the edge, near the chair. The arm appears to be long enough and is oriented towards the desk area where folder_1 is placed. Given the proximity of folder_1 to the edge and the apparent reach of the robotic arm, it seems that folder_1 is within the agent's reach.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_1 is located on the desk close to the edge, near the chair. The arm appears to be long enough and is oriented towards the desk area where folder_1 is placed. Given the proximity of folder_1 to the edge and the apparent reach of the robotic arm, it seems that folder_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 7.492048262087996e-10, 0.9999999992507952, "The robotic arm (agent) is positioned near the desk, and folder_2 is located on the desk close to the edge, near the chair. The arm appears to have sufficient reach to access objects on the desk, including folder_2, as it is not obstructed and is within the general workspace of the arm.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_2 is located on the desk close to the edge, near the chair. The arm appears to have sufficient reach to access objects on the desk, including folder_2, as it is not obstructed and is within the general workspace of the arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(marker_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable marker_1": ["no", 0.999999987448048, 1.2551952066585902e-08, "The robotic arm (agent) is positioned near the desk, and its reach appears to extend over the desk area. The object labeled \"marker_1\" is not visible in the image, so I cannot determine its location relative to the agent. Therefore, I cannot confirm if \"marker_1\" is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and its reach appears to extend over the desk area. The object labeled \"marker_1\" is not visible in the image, so I cannot determine its location relative to the agent. Therefore, I cannot confirm if \"marker_1\" is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding document_1": ["no", 0.9999999970657822, 2.9342177293547105e-09, "To determine if the agent (robotic arm) is holding document_1, I need to check if document_1 is within the gripper or grasped by the robotic arm. In the image, document_1 is on the desk inside the outline labeled \"folder_1\" and is not in the robotic arm's gripper. The robotic arm is positioned above the desk but is not holding document_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_1, I need to check if document_1 is within the gripper or grasped by the robotic arm. In the image, document_1 is on the desk inside the outline labeled \"folder_1\" and is not in the robotic arm's gripper. The robotic arm is positioned above the desk but is not holding document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.9999999985117894, 1.4882105522603268e-09, "To determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is within the gripper or end effector of the robotic arm. In the image, document_2 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is within the gripper or end effector of the robotic arm. In the image, document_2 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999992682529, 7.317471126128161e-10, "To determine if the agent (robotic arm) is holding document_3, I need to observe the position of the robotic arm and see if document_3 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_3 is still lying flat on the desk along with other documents and folders. There is no indication that document_3 is being held by the robotic arm.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to observe the position of the robotic arm and see if document_3 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_3 is still lying flat on the desk along with other documents and folders. There is no indication that document_3 is being held by the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999992589289, 7.410711440743901e-10, "To determine if the agent (the robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm. In the image, document_4 is labeled and is lying on the desk, not within the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_4.", true, "<explanation>\nTo determine if the agent (the robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm. In the image, document_4 is labeled and is lying on the desk, not within the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999970599575, 2.9400425981094106e-09, "To determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that indicates it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that indicates it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.9999999999137609, 8.623911250412983e-11, "To determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk near the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding folder_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk near the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 9.216495410637938e-14, 0.9999999999999079, "The robotic arm (agent) is positioned near the desk, and its reach appears to extend over the desk area. The cabinet_1 is located on the right side of the image, behind the desk and near the robotic arm. Given the proximity of the cabinet_1 to the robotic arm and the apparent reach of the arm, it seems that the cabinet_1 is within the agent's reach.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and its reach appears to extend over the desk area. The cabinet_1 is located on the right side of the image, behind the desk and near the robotic arm. Given the proximity of the cabinet_1 to the robotic arm and the apparent reach of the arm, it seems that the cabinet_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 0.9999999999999994, 5.559666253462585e-16, "The robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is not visible in the immediate vicinity of the robotic arm's reach in this image. The visible area includes the desk, chair, monitor, and some folders/documents, but there is no clear indication that cabinet_1 is within the arm's reach.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk and is extended towards the area where the computer monitor and documents are located. The cabinet_1 is not visible in the immediate vicinity of the robotic arm's reach in this image. The visible area includes the desk, chair, monitor, and some folders/documents, but there is no clear indication that cabinet_1 is within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "open cabinet_1": ["no", 0.9999994647103364, 5.352896635979645e-07, "To determine if cabinet_1 is open, I need to look for a cabinet in the image and check if its doors or drawers are visibly open. In the image, there is a cabinet visible under the desk, but its doors or drawers do not appear to be open; they look closed and flush with the cabinet frame.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for a cabinet in the image and check if its doors or drawers are visibly open. In the image, there is a cabinet visible under the desk, but its doors or drawers do not appear to be open; they look closed and flush with the cabinet frame.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding marker_1": ["no", 0.9999999987770558, 1.2229441755644383e-09, "In the image, the robotic arm (the agent) is visible near the desk area. I do not see a marker labeled \"marker_1\" in the gripper or being held by the robotic arm. The arm appears to be above the desk, but there is no indication that it is holding any object, specifically not a marker.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible near the desk area. I do not see a marker labeled \"marker_1\" in the gripper or being held by the robotic arm. The arm appears to be above the desk, but there is no indication that it is holding any object, specifically not a marker.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.999999999680167, 3.1983300293422335e-10, "To determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is visibly grasped by the robotic arm or positioned within its gripper. In the image, document_1 is on the desk inside the boundary labeled \"folder_1\" and not in the robotic arm's gripper. The robotic arm is above the desk and not in contact with document_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is visibly grasped by the robotic arm or positioned within its gripper. In the image, document_1 is on the desk inside the boundary labeled \"folder_1\" and not in the robotic arm's gripper. The robotic arm is above the desk and not in contact with document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.9999999991639921, 8.360079051613699e-10, "To determine if the agent (robotic arm) is holding document_2, I need to observe the position of the robotic arm and see if document_2 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_2 is still lying flat on the desk along with other documents and folders. There is no indication that document_2 is being held by the robotic arm.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to observe the position of the robotic arm and see if document_2 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_2 is still lying flat on the desk along with other documents and folders. There is no indication that document_2 is being held by the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999713061579, 2.8693842111318352e-08, "To determine if the agent (robotic arm) is holding document_3, I need to check if the robotic arm's gripper is grasping or in contact with document_3. In the image, the robotic arm is positioned above the desk, but its gripper does not appear to be holding or touching document_3. Document_3 is on the desk, not in the gripper.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to check if the robotic arm's gripper is grasping or in contact with document_3. In the image, the robotic arm is positioned above the desk, but its gripper does not appear to be holding or touching document_3. Document_3 is on the desk, not in the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999616156622, 3.838433787346484e-08, "To determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end effector of the robotic arm. In the image, document_4 is on the desk, and the robotic arm is not in contact with or gripping document_4. Therefore, the agent is not holding document_4.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end effector of the robotic arm. In the image, document_4 is on the desk, and the robotic arm is not in contact with or gripping document_4. Therefore, the agent is not holding document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.999999996319016, 3.6809839927319634e-09, "To determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.9999999999266665, 7.333346907495115e-11, "To determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk near the chair and not in the robotic arm's grasp. The robotic arm is positioned above the desk but is not holding folder_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk near the chair and not in the robotic arm's grasp. The robotic arm is positioned above the desk but is not holding folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(marker_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable marker_1": ["yes", 9.026917267139618e-13, 0.9999999999990973, "The robotic arm (agent) is positioned near the desk, and marker_1 is located on the desk close to the edge, near the chair. The arm appears to be within a reasonable distance to reach marker_1 without obstruction, as there are no large objects blocking the path between the arm and marker_1.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and marker_1 is located on the desk close to the edge, near the chair. The arm appears to be within a reasonable distance to reach marker_1 without obstruction, as there are no large objects blocking the path between the arm and marker_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding document_1": ["no", 0.9999999991918974, 8.081026111933349e-10, "To determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is within the gripper or end effector of the robotic arm. In the image, document_1 is on the desk inside the boundary of folder_1 and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding document_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is within the gripper or end effector of the robotic arm. In the image, document_1 is on the desk inside the boundary of folder_1 and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.9999999975277755, 2.4722245875750757e-09, "To determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is within the gripper or end-effector of the robotic arm. In the image, document_2 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is within the gripper or end-effector of the robotic arm. In the image, document_2 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999997889447193, 2.1105528066382283e-07, "To determine if the agent (robotic arm) is holding document_3, I need to look at the position of the robotic arm and see if it is grasping or in contact with document_3. In the image, the robotic arm is positioned above the desk, but it does not appear to be holding or grasping document_3. Document_3 is still on the desk along with other documents and folders.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to look at the position of the robotic arm and see if it is grasping or in contact with document_3. In the image, the robotic arm is positioned above the desk, but it does not appear to be holding or grasping document_3. Document_3 is still on the desk along with other documents and folders.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999926746499, 7.325350090921631e-09, "To determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end effector of the robotic arm. In the image, document_4 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_4.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end effector of the robotic arm. In the image, document_4 is on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but it is not holding document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999961632136, 3.83678642557482e-09, "To determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that indicates it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_1, I need to check if folder_1 is within the grasp of the robotic arm or elevated above the desk in a way that indicates it is being held. In the image, folder_1 is lying flat on the desk and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not interacting with folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.9999999580464353, 4.195356471990248e-08, "To determine if the agent (robotic arm) is holding folder_2, I need to check if folder_2 is in the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk and not in the grasp of the robotic arm. The robotic arm is not interacting with folder_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_2, I need to check if folder_2 is in the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the desk and not in the grasp of the robotic arm. The robotic arm is not interacting with folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding marker_1": ["no", 0.9999999640748451, 3.592515483251911e-08, "To determine if the agent is holding the marker_1, I need to look at the robotic arm and see if the marker_1 object is within its grasp. In the image, the robotic arm is holding an object labeled as \"folder_1,\" not \"marker_1.\" The marker_1 is visible on the desk but not in the robotic arm's grasp.", false, "<explanation>\nTo determine if the agent is holding the marker_1, I need to look at the robotic arm and see if the marker_1 object is within its grasp. In the image, the robotic arm is holding an object labeled as \"folder_1,\" not \"marker_1.\" The marker_1 is visible on the desk but not in the robotic arm's grasp.\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop marker_1,table_1": ["yes", 8.208592754345763e-12, 0.9999999999917915, "To determine if marker_1 is on top of table_1, I need to locate both objects in the image. The table_1 is the large surface on which various items are placed. Marker_1 is the black object near the robotic arm, positioned on the surface of the table along with other items like folders and documents. Since marker_1 is clearly resting on the surface of table_1, the answer is \"Yes\".", false, "<explanation>\nTo determine if marker_1 is on top of table_1, I need to locate both objects in the image. The table_1 is the large surface on which various items are placed. Marker_1 is the black object near the robotic arm, positioned on the surface of the table along with other items like folders and documents. Since marker_1 is clearly resting on the surface of table_1, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,cabinet_1": ["no", 0.9999978015050414, 2.198494958679593e-06, "First, I will identify the location of marker_1 and cabinet_1 in the image. Marker_1 is not visible in the image, and there is no clear indication of cabinet_1 either. Therefore, I cannot confirm that marker_1 is on top of cabinet_1.", true, "<explanation>\nFirst, I will identify the location of marker_1 and cabinet_1 in the image. Marker_1 is not visible in the image, and there is no clear indication of cabinet_1 either. Therefore, I cannot confirm that marker_1 is on top of cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop marker_1,document_1": ["no", 0.9999999999899862, 1.0013810664790466e-11, "To determine if marker_1 is on top of document_1, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_1 is labeled and appears to be under the robotic arm's gripper. Marker_1 is positioned above and slightly to the left of document_1, but it is not directly on top of document_1; it is on top of folder_1. Therefore, marker_1 is not on top of document_1.", true, "<explanation>\nTo determine if marker_1 is on top of document_1, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_1 is labeled and appears to be under the robotic arm's gripper. Marker_1 is positioned above and slightly to the left of document_1, but it is not directly on top of document_1; it is on top of folder_1. Therefore, marker_1 is not on top of document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop marker_1,document_2": ["yes", 6.504573035713819e-08, 0.9999999349542696, "To determine if marker_1 is on top of document_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_2 is labeled on the desk. Marker_1 appears to be positioned above and in contact with document_2, indicating that it is on top of it.", false, "<explanation>\nTo determine if marker_1 is on top of document_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_2 is labeled on the desk. Marker_1 appears to be positioned above and in contact with document_2, indicating that it is on top of it.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,document_3": ["no", 0.9999999999583454, 4.165452760318625e-11, "To determine if marker_1 is on top of document_3, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_3 is labeled on the desk. Marker_1 appears to be positioned above and slightly to the left of document_3, but it is not directly on top of it. Instead, marker_1 is on top of folder_1, which is next to document_3.", true, "<explanation>\nTo determine if marker_1 is on top of document_3, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and document_3 is labeled on the desk. Marker_1 appears to be positioned above and slightly to the left of document_3, but it is not directly on top of it. Instead, marker_1 is on top of folder_1, which is next to document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop marker_1,document_4": ["no", 0.9999999999114298, 8.857017361099189e-11, "First, I will locate marker_1 and document_4 in the image. Marker_1 is the black object near the robotic arm, and document_4 is labeled on the desk. Marker_1 appears to be positioned on top of folder_1, not on top of document_4. Document_4 is further away from marker_1, closer to the back of the desk. Therefore, marker_1 is not on top of document_4.", true, "<explanation>\nFirst, I will locate marker_1 and document_4 in the image. Marker_1 is the black object near the robotic arm, and document_4 is labeled on the desk. Marker_1 appears to be positioned on top of folder_1, not on top of document_4. Document_4 is further away from marker_1, closer to the back of the desk. Therefore, marker_1 is not on top of document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop marker_1,folder_1": ["yes", 2.0271564713275276e-08, 0.9999999797284352, "To determine if marker_1 is on top of folder_1, I need to locate both objects in the image. Folder_1 is identified on the desk, and marker_1 is also visible. Marker_1 appears to be resting directly on top of folder_1, as their positions overlap with marker_1 above folder_1.", false, "<explanation>\nTo determine if marker_1 is on top of folder_1, I need to locate both objects in the image. Folder_1 is identified on the desk, and marker_1 is also visible. Marker_1 appears to be resting directly on top of folder_1, as their positions overlap with marker_1 above folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop marker_1,folder_2": ["no", 0.9999999998906517, 1.0934834850850837e-10, "To determine if marker_1 is on top of folder_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and folder_2 is labeled on the right side of the image, partially under the arm. Marker_1 appears to be on top of folder_1, not folder_2, as folder_2 is further to the right and not directly beneath marker_1.", true, "<explanation>\nTo determine if marker_1 is on top of folder_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and folder_2 is labeled on the right side of the image, partially under the arm. Marker_1 appears to be on top of folder_1, not folder_2, as folder_2 is further to the right and not directly beneath marker_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,table_1": ["yes", 3.5523697170126817e-13, 0.9999999999996447, "First, I will identify the location of marker_1 and table_1 in the image. The table_1 is the large brown surface on which various objects are placed. Marker_1 is the black object near the robotic arm, labeled in the image. Marker_1 is positioned directly on the surface of table_1, which means it is next to (in contact with) the table.", false, "<explanation>\nFirst, I will identify the location of marker_1 and table_1 in the image. The table_1 is the large brown surface on which various objects are placed. Marker_1 is the black object near the robotic arm, labeled in the image. Marker_1 is positioned directly on the surface of table_1, which means it is next to (in contact with) the table.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,cabinet_1": ["no", 0.9999997917240719, 2.0827592809385534e-07, "First, I will identify the location of marker_1 and cabinet_1 in the image. Marker_1 is not visible in the image, and there is no label for cabinet_1 either. Therefore, I cannot determine if marker_1 is next to cabinet_1 based on the provided image.", true, "<explanation>\nFirst, I will identify the location of marker_1 and cabinet_1 in the image. Marker_1 is not visible in the image, and there is no label for cabinet_1 either. Therefore, I cannot determine if marker_1 is next to cabinet_1 based on the provided image.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,document_1": ["yes", 2.5463141246689945e-10, 0.9999999997453686, "First, I will locate marker_1 and document_1 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_1 is labeled and appears to be on the desk as well, close to the robotic arm's gripper. Both marker_1 and document_1 are positioned very close to each other on the desk, with no significant objects separating them. Therefore, marker_1 is next to document_1.", false, "<explanation>\nFirst, I will locate marker_1 and document_1 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_1 is labeled and appears to be on the desk as well, close to the robotic arm's gripper. Both marker_1 and document_1 are positioned very close to each other on the desk, with no significant objects separating them. Therefore, marker_1 is next to document_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,document_2": ["yes", 1.514001484229443e-10, 0.9999999998485999, "First, I will locate marker_1 and document_2 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_2 is labeled and appears to be on the desk as well, close to the robotic arm. Observing their positions, marker_1 is directly adjacent to document_2, with no significant objects in between them. Therefore, marker_1 is next to document_2.", false, "<explanation>\nFirst, I will locate marker_1 and document_2 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_2 is labeled and appears to be on the desk as well, close to the robotic arm. Observing their positions, marker_1 is directly adjacent to document_2, with no significant objects in between them. Therefore, marker_1 is next to document_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,document_3": ["yes", 1.1520919602361487e-10, 0.9999999998847908, "First, I will locate marker_1 and document_3 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_3 is labeled and appears to be on the desk as well, to the right of marker_1. The two objects are positioned close to each other on the desk, with no significant objects between them. Therefore, marker_1 is next to document_3.", false, "<explanation>\nFirst, I will locate marker_1 and document_3 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_3 is labeled and appears to be on the desk as well, to the right of marker_1. The two objects are positioned close to each other on the desk, with no significant objects between them. Therefore, marker_1 is next to document_3.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,document_4": ["no", 0.9999999999605842, 3.941578553204095e-11, "First, I will locate marker_1 and document_4 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_4 is labeled and appears to be on the desk as well, but it is further away from marker_1, closer to the back of the desk. There is a noticeable distance between marker_1 and document_4, so they are not next to each other.", true, "<explanation>\nFirst, I will locate marker_1 and document_4 in the image. Marker_1 is the black object on the desk near the robotic arm. Document_4 is labeled and appears to be on the desk as well, but it is further away from marker_1, closer to the back of the desk. There is a noticeable distance between marker_1 and document_4, so they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto marker_1,folder_1": ["yes", 7.983252531460014e-11, 0.9999999999201675, "To determine if marker_1 is next to folder_1, I need to locate both objects in the image. Folder_1 is labeled and is being held by the robotic arm. Marker_1 is also labeled and is positioned very close to folder_1, with only a small gap between them. Their proximity on the desk and the lack of other objects between them indicate that marker_1 is indeed next to folder_1.", false, "<explanation>\nTo determine if marker_1 is next to folder_1, I need to locate both objects in the image. Folder_1 is labeled and is being held by the robotic arm. Marker_1 is also labeled and is positioned very close to folder_1, with only a small gap between them. Their proximity on the desk and the lack of other objects between them indicate that marker_1 is indeed next to folder_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto marker_1,folder_2": ["no", 0.9999999999323492, 6.765080279743483e-11, "To determine if marker_1 is next to folder_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and folder_2 is labeled on the right side of the image, on the desk. Marker_1 is positioned closer to folder_1 and is not adjacent to folder_2, which is further away on the desk. Therefore, marker_1 is not next to folder_2.", true, "<explanation>\nTo determine if marker_1 is next to folder_2, I need to locate both objects in the image. Marker_1 is the black object near the robotic arm, and folder_2 is labeled on the right side of the image, on the desk. Marker_1 is positioned closer to folder_1 and is not adjacent to folder_2, which is further away on the desk. Therefore, marker_1 is not next to folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop marker_1,marker_1": {"before": null, "after": false}, "nextto marker_1,marker_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(folder_1, document_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 6.753292723290387e-11, 0.999999999932467, "To determine if the agent is holding folder_1, I need to look at the robotic arm and see if it is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is indeed holding an object that is labeled as folder_1, as the gripper is wrapped around it and the label is directly on the object being held.", true, "<explanation>\nTo determine if the agent is holding folder_1, I need to look at the robotic arm and see if it is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is indeed holding an object that is labeled as folder_1, as the gripper is wrapped around it and the label is directly on the object being held.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_2": ["yes", 7.291488813877447e-14, 0.9999999999999271, "The robotic arm (agent) is positioned near several objects on the desk. The label \"document_2\" is visible and appears to be close to the robotic arm, within the same area as other objects that are clearly in reach. The arm is already holding or interacting with objects in the same vicinity, indicating that \"document_2\" is within its reach.", true, "<explanation>\nThe robotic arm (agent) is positioned near several objects on the desk. The label \"document_2\" is visible and appears to be close to the robotic arm, within the same area as other objects that are clearly in reach. The arm is already holding or interacting with objects in the same vicinity, indicating that \"document_2\" is within its reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(folder_1, document_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding folder_1": ["yes", 2.527728184166845e-10, 0.9999999997472272, "To determine if the agent is holding folder_1, I need to look at the robotic arm and see if it is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is indeed holding an object that is labeled as folder_1, as the gripper is wrapped around it and the label is directly on the object being held.", true, "<explanation>\nTo determine if the agent is holding folder_1, I need to look at the robotic arm and see if it is grasping or in contact with the object labeled as folder_1. In the image, the robotic arm is indeed holding an object that is labeled as folder_1, as the gripper is wrapped around it and the label is directly on the object being held.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_2": ["yes", 2.953938277533789e-16, 0.9999999999999997, "The robotic arm (agent) is positioned near several objects on the desk. The label \"document_2\" is visible and appears to be close to the robotic arm, within the same area as other objects the arm can interact with. The arm is already holding or near \"folder_1,\" which is adjacent to \"document_2.\" Given the proximity and the arm's reach, \"document_2\" is within the agent's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned near several objects on the desk. The label \"document_2\" is visible and appears to be close to the robotic arm, within the same area as other objects the arm can interact with. The arm is already holding or near \"folder_1,\" which is adjacent to \"document_2.\" Given the proximity and the arm's reach, \"document_2\" is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["no", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["yes", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8383838383838383, "yes_accuracy": 0.7333333333333333, "yes_correct": 11, "yes_total": 15, "no_accuracy": 0.8571428571428571, "no_correct": 72, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.9142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.9354838709677419, "no_correct": 29, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.7428571428571429, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7419354838709677, "no_correct": 23, "no_total": 31}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["no", "yes"], "reachable document_4": ["no", "yes"], "reachable cabinet_1": ["no", "yes"], "holding document_2": ["no", "no"], "holding document_4": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,cabinet_1": ["yes", "no"], "ontop document_4,document_2": ["no", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_4,cabinet_1": ["no", "yes"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["yes", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["no", "no"], "ontop document_4,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["yes", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["no", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["no", "no"], "nextto document_4,chair_1": ["no", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["no", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7393939393939394, "yes_accuracy": 0.6818181818181818, "yes_correct": 15, "yes_total": 22, "no_accuracy": 0.7482517482517482, "no_correct": 107, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.7936507936507936, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7966101694915254, "no_correct": 47, "no_total": 59}, "inside": {"accuracy": 0.8421052631578947, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9411764705882353, "no_correct": 16, "no_total": 17}, "nextto": {"accuracy": 0.6507936507936508, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.6545454545454545, "no_correct": 36, "no_total": 55}}}, "step": 4, "actions": ["grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["yes", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["yes", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["yes", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["no", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["no", "no"], "nextto document_4,chair_1": ["no", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["no", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["yes", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7212121212121212, "yes_accuracy": 0.6363636363636364, "yes_correct": 14, "yes_total": 22, "no_accuracy": 0.7342657342657343, "no_correct": 105, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.7619047619047619, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7627118644067796, "no_correct": 45, "no_total": 59}, "inside": {"accuracy": 0.7894736842105263, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8823529411764706, "no_correct": 15, "no_total": 17}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.6727272727272727, "no_correct": 37, "no_total": 55}}}, "step": 5, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["yes", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["yes", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["yes", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["no", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["no", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["yes", "no"], "nextto document_4,chair_1": ["no", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["no", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["no", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["yes", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7393939393939394, "yes_accuracy": 0.6363636363636364, "yes_correct": 14, "yes_total": 22, "no_accuracy": 0.7552447552447552, "no_correct": 108, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7796610169491526, "no_correct": 46, "no_total": 59}, "inside": {"accuracy": 0.8421052631578947, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9411764705882353, "no_correct": 16, "no_total": 17}, "nextto": {"accuracy": 0.6825396825396826, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.6909090909090909, "no_correct": 38, "no_total": 55}}}, "step": 6, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["yes", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["yes", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["yes", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["no", "no"], "nextto document_2,chair_1": ["no", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["yes", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["yes", "no"], "nextto document_4,chair_1": ["no", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["no", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7515151515151515, "yes_accuracy": 0.6818181818181818, "yes_correct": 15, "yes_total": 22, "no_accuracy": 0.7622377622377622, "no_correct": 109, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7796610169491526, "no_correct": 46, "no_total": 59}, "inside": {"accuracy": 0.7894736842105263, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8823529411764706, "no_correct": 15, "no_total": 17}, "nextto": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.7272727272727273, "no_correct": 40, "no_total": 55}}}, "step": 7, "actions": ["grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "yes"], "holding document_1": ["yes", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "no"], "ontop marker_1,document_1": ["yes", "no"], "ontop marker_1,document_2": ["yes", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,document_4": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["yes", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["yes", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["yes", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,document_2": ["yes", "no"], "ontop document_3,document_4": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["yes", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["yes", "no"], "ontop document_4,marker_1": ["yes", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["yes", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["yes", "no"], "ontop folder_1,marker_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["yes", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["yes", "no"], "ontop folder_2,document_3": ["yes", "no"], "ontop folder_2,document_4": ["yes", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["yes", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["yes", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "no"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_2": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,document_4": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["yes", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["yes", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["yes", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["yes", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["yes", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["yes", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["yes", "no"], "nextto folder_2,document_3": ["yes", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.6190476190476191, "yes_correct": 13, "yes_total": 21, "no_accuracy": 0.4444444444444444, "no_correct": 64, "no_total": 144, "predicates": {"reachable": {"accuracy": 0.7, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.4, "no_correct": 24, "no_total": 60}, "inside": {"accuracy": 0.8421052631578947, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9411764705882353, "no_correct": 16, "no_total": 17}, "nextto": {"accuracy": 0.3492063492063492, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.32142857142857145, "no_correct": 18, "no_total": 56}}}, "step": 8, "actions": ["place-next-to(folder_1, document_2)", "place-next-to(document_1, document_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(document_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(document_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "yes"], "holding document_1": ["yes", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["yes", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "no"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["yes", "no"], "ontop marker_1,document_3": ["yes", "no"], "ontop marker_1,document_4": ["yes", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["yes", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["yes", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["yes", "no"], "ontop document_2,document_3": ["yes", "no"], "ontop document_2,document_4": ["yes", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "no"], "ontop document_2,folder_1": ["yes", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["yes", "no"], "ontop document_3,document_2": ["yes", "no"], "ontop document_3,document_4": ["yes", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["yes", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["yes", "no"], "ontop document_4,marker_1": ["yes", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["yes", "no"], "ontop document_4,document_2": ["yes", "no"], "ontop document_4,document_3": ["yes", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["yes", "no"], "ontop folder_2,document_3": ["yes", "no"], "ontop folder_2,document_4": ["yes", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["yes", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["yes", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["yes", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["yes", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["yes", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "no"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_2": ["yes", "no"], "nextto marker_1,document_3": ["yes", "no"], "nextto marker_1,document_4": ["yes", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["yes", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["yes", "no"], "nextto document_1,document_3": ["yes", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["yes", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["yes", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "yes"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["yes", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["yes", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["yes", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["no", "yes"], "nextto document_4,document_3": ["yes", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["yes", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["yes", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.6190476190476191, "yes_correct": 13, "yes_total": 21, "no_accuracy": 0.4444444444444444, "no_correct": 64, "no_total": 144, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.47619047619047616, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.45, "no_correct": 27, "no_total": 60}, "inside": {"accuracy": 0.6842105263157895, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7647058823529411, "no_correct": 13, "no_total": 17}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.32142857142857145, "no_correct": 18, "no_total": 56}}}, "step": 9, "actions": ["place-next-to(folder_1, document_2)", "place-next-to(document_1, document_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(document_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)"]}], "remaining_actions": ["place-next-to(document_1, document_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(document_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)"]}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 9.756559826534698e-13, 0.9999999999990243, "The robotic arm (agent) is positioned near the desk, and \"document_1\" is located on the desk close to the edge, near the chair. The arm appears to be extended towards the desk area where \"document_1\" is placed. Given the proximity of the arm to the document and the general reach of such robotic arms in similar environments, it is reasonable to conclude that \"document_1\" is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and \"document_1\" is located on the desk close to the edge, near the chair. The arm appears to be extended towards the desk area where \"document_1\" is placed. Given the proximity of the arm to the document and the general reach of such robotic arms in similar environments, it is reasonable to conclude that \"document_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 0.9999992048969882, 7.951030117284953e-07, "In the image, I can see several labeled objects such as \"folder_1\", \"folder_2\", and \"document_1\", but there is no visible object labeled \"marker_1\". Since \"marker_1\" is not visible in the image, I cannot determine if it is within reach of the robotic arm agent.", true, "<explanation>\nIn the image, I can see several labeled objects such as \"folder_1\", \"folder_2\", and \"document_1\", but there is no visible object labeled \"marker_1\". Since \"marker_1\" is not visible in the image, I cannot determine if it is within reach of the robotic arm agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 1.9340891791905093e-12, 0.9999999999980659, "The robotic arm (agent) is positioned close to the table, with its end effector hovering above the table surface. The objects on the table, such as folders and documents, are within the immediate vicinity of the arm's reach. The arm appears to be capable of interacting with objects on the table, indicating that the table itself is within reach.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table, with its end effector hovering above the table surface. The objects on the table, such as folders and documents, are within the immediate vicinity of the arm's reach. The arm appears to be capable of interacting with objects on the table, indicating that the table itself is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999958, 4.2330136151225754e-15, "The image shows a robotic arm (the agent) positioned near a desk with several labeled objects, such as folders and documents. The cabinet_1 is visible in the background, under the shelves and behind the desk area. The robotic arm appears to be positioned at the desk, and there is a significant distance between the arm and the cabinet_1. Given the apparent reach of the robotic arm and the layout of the room, it does not seem that the arm can reach the cabinet_1 from its current position.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a desk with several labeled objects, such as folders and documents. The cabinet_1 is visible in the background, under the shelves and behind the desk area. The robotic arm appears to be positioned at the desk, and there is a significant distance between the arm and the cabinet_1. Given the apparent reach of the robotic arm and the layout of the room, it does not seem that the arm can reach the cabinet_1 from its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_3": ["yes", 8.36600898804425e-12, 0.999999999991634, "The robotic arm (agent) is positioned near the desk, and \"document_3\" is located on the desk close to the arm's end effector. The arm appears to be extended towards the area where \"document_3\" is placed, indicating that the document is within the arm's reachable workspace. There are no visible obstacles between the arm and \"document_3\" that would prevent the agent from reaching it.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and \"document_3\" is located on the desk close to the arm's end effector. The arm appears to be extended towards the area where \"document_3\" is placed, indicating that the document is within the arm's reachable workspace. There are no visible obstacles between the arm and \"document_3\" that would prevent the agent from reaching it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_1": ["yes", 1.576306935460035e-11, 0.9999999999842369, "The robotic arm (agent) is positioned near the desk where folder_1 is located. The arm appears to be close enough to the desk surface, and folder_1 is on the desk within the general area that the arm can reach. There are no visible obstacles between the arm and folder_1, so it is reasonable to conclude that folder_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk where folder_1 is located. The arm appears to be close enough to the desk surface, and folder_1 is on the desk within the general area that the arm can reach. There are no visible obstacles between the arm and folder_1, so it is reasonable to conclude that folder_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 5.64153248130905e-14, 0.9999999999999436, "The robotic arm (agent) is positioned near the desk, and folder_2 is located on the chair, which is adjacent to the desk. The arm appears to be close enough to the chair to potentially reach folder_2, as there are no significant obstacles between the arm and the folder. The arm's range of motion and proximity suggest that folder_2 is within reach.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_2 is located on the chair, which is adjacent to the desk. The arm appears to be close enough to the chair to potentially reach folder_2, as there are no significant obstacles between the arm and the folder. The arm's range of motion and proximity suggest that folder_2 is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable document_2": {"before": false, "after": false}, "reachable document_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.999999999998665, 1.3349944716821462e-12, "The robotic arm (agent) is positioned near the desk, and its reach appears to be limited to the desk area and objects on or immediately adjacent to it. The cabinet_1 is located further back in the room, behind the desk and chair, and does not appear to be within the immediate reach of the robotic arm based on its current position and orientation.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and its reach appears to be limited to the desk area and objects on or immediately adjacent to it. The cabinet_1 is located further back in the room, behind the desk and chair, and does not appear to be within the immediate reach of the robotic arm based on its current position and orientation.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.0997454864227029e-10, 0.9999999998900254, "The robotic arm (agent) is positioned very close to the cabinet labeled as \"cabinet_1\" in the image. The arm appears to be able to extend and interact with objects on or near the cabinet. Given the proximity and the apparent reach of the arm, it is reasonable to conclude that the cabinet is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the cabinet labeled as \"cabinet_1\" in the image. The arm appears to be able to extend and interact with objects on or near the cabinet. Given the proximity and the apparent reach of the arm, it is reasonable to conclude that the cabinet is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable marker_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable document_1": {"before": true, "after": false}, "reachable document_2": {"before": false, "after": false}, "reachable document_3": {"before": true, "after": false}, "reachable document_4": {"before": false, "after": false}, "reachable folder_1": {"before": true, "after": false}, "reachable folder_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 1.3791015591840729e-11, 0.999999999986209, "The robotic arm (agent) is positioned very close to the cabinet labeled as \"cabinet_1\" in the image. The arm is extended towards the cabinet, and the end effector (gripper) is above the surface of the cabinet. This indicates that the cabinet is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the cabinet labeled as \"cabinet_1\" in the image. The arm is extended towards the cabinet, and the end effector (gripper) is above the surface of the cabinet. This indicates that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999998675068548, 1.3249314521884924e-07, "In the image, the cabinet doors below the counter are clearly visible. Both doors appear to be closed, as there are no visible gaps or openings, and the handles are aligned in a way that suggests the doors are shut. Therefore, the cabinet_1 is not open.", true, "<explanation>\nIn the image, the cabinet doors below the counter are clearly visible. Both doors appear to be closed, as there are no visible gaps or openings, and the handles are aligned in a way that suggests the doors are shut. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_1": [true, false, false], "holding document_2": [true, false, false], "holding document_3": [true, false, false], "holding document_4": [true, false, false], "holding folder_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 3.970970268788921e-09, 0.9999999960290298, "I will check the state of cabinet_1 by observing its doors. In the image, the doors of cabinet_1 (the cabinet directly under the counter) appear to be open, as the interior and shelves of the cabinet are visible.", true, "<explanation>\nI will check the state of cabinet_1 by observing its doors. In the image, the doors of cabinet_1 (the cabinet directly under the counter) appear to be open, as the interior and shelves of the cabinet are visible.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["yes", 6.717241929066799e-11, 0.9999999999328276, "The robotic arm (agent) is positioned above the counter, and document_2 is located on the counter surface, close to the edge and near the arm. The arm appears to be able to reach the area where document_2 is placed, as it is not obstructed and is within the arm's operational range.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and document_2 is located on the counter surface, close to the edge and near the arm. The arm appears to be able to reach the area where document_2 is placed, as it is not obstructed and is within the arm's operational range.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 1.1061753767179873e-09, 0.9999999988938246, "The robotic arm (agent) is positioned above the counter, and document_4 is located on the counter surface near the arm. The arm appears to be close enough to reach and interact with document_4, as it is within the same plane and not obstructed by any objects or barriers.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and document_4 is located on the counter surface near the arm. The arm appears to be close enough to reach and interact with document_4, as it is within the same plane and not obstructed by any objects or barriers.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 1.6660126705026486e-08, 0.9999999833398733, "The robotic arm (agent) is positioned near the desk, and \"document_1\" is located on the desk close to the arm. The arm appears to be within a reasonable distance to reach and interact with \"document_1\" without any visible obstructions. Therefore, \"document_1\" is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and \"document_1\" is located on the desk close to the arm. The arm appears to be within a reasonable distance to reach and interact with \"document_1\" without any visible obstructions. Therefore, \"document_1\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 0.9999999994323333, 5.676666879726054e-10, "To determine if marker_1 is in reach of the agent, I need to check if marker_1 is visible in the image and if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible object labeled as \"marker_1.\" The visible objects are folders and documents, but none are labeled as \"marker_1.\" Therefore, I cannot confirm that marker_1 is in reach of the agent.", true, "<explanation>\nTo determine if marker_1 is in reach of the agent, I need to check if marker_1 is visible in the image and if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible object labeled as \"marker_1.\" The visible objects are folders and documents, but none are labeled as \"marker_1.\" Therefore, I cannot confirm that marker_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 2.2637004185159285e-09, 0.9999999977362996, "The robotic arm (agent) is positioned close to the table, and its end effector is above the table surface. The arm appears to be able to reach and interact with objects on the table, indicating that the table is within its operational range.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table, and its end effector is above the table surface. The arm appears to be able to reach and interact with objects on the table, indicating that the table is within its operational range.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999991, 9.392348224683574e-16, "To determine if cabinet_1 is in reach of the agent, I need to identify the location of cabinet_1 and see if it is close enough to the robotic arm for interaction. In the image, the robotic arm is positioned near the desk and computer monitors, but there is no visible cabinet labeled as \"cabinet_1\" within the immediate vicinity of the arm. The visible objects are folders and documents on the desk and chair. Since cabinet_1 is not visible or clearly within the reach of the robotic arm, I conclude that it is not in reach.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to identify the location of cabinet_1 and see if it is close enough to the robotic arm for interaction. In the image, the robotic arm is positioned near the desk and computer monitors, but there is no visible cabinet labeled as \"cabinet_1\" within the immediate vicinity of the arm. The visible objects are folders and documents on the desk and chair. Since cabinet_1 is not visible or clearly within the reach of the robotic arm, I conclude that it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_2": ["yes", 3.587909996137959e-12, 0.9999999999964121, "The robotic arm (agent) is positioned near the desk, and document_2 is located on the desk close to the edge and near the arm's current position. Given the proximity of document_2 to the robotic arm and the fact that the arm is already extended towards the desk area, it appears that document_2 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_2 is located on the desk close to the edge and near the arm's current position. Given the proximity of document_2 to the robotic arm and the fact that the arm is already extended towards the desk area, it appears that document_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 6.325972970451255e-09, 0.999999993674027, "The robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the base of the robotic arm. Given the proximity of document_3 to the arm and the fact that the arm is already extended toward the desk area, it appears that document_3 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_3 is located on the desk close to the base of the robotic arm. Given the proximity of document_3 to the arm and the fact that the arm is already extended toward the desk area, it appears that document_3 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 3.2825358672679974e-12, 0.9999999999967175, "To determine if document_4 is in reach of the agent, I need to locate both the robotic arm (the agent) and document_4 in the image. The robotic arm is positioned above the desk, near the center of the image. Document_4 is labeled and appears to be on the desk, close to the base of the robotic arm and near the monitor. Given the proximity of document_4 to the robotic arm, it appears to be within the arm's reach.", false, "<explanation>\nTo determine if document_4 is in reach of the agent, I need to locate both the robotic arm (the agent) and document_4 in the image. The robotic arm is positioned above the desk, near the center of the image. Document_4 is labeled and appears to be on the desk, close to the base of the robotic arm and near the monitor. Given the proximity of document_4 to the robotic arm, it appears to be within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable folder_1": ["yes", 6.344642035171853e-10, 0.9999999993655357, "The robotic arm (agent) is positioned near the desk, and folder_1 is located on the desk close to the edge, near the agent. Given the proximity of folder_1 to the robotic arm and the fact that the arm is already extended toward the desk area, it appears that folder_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_1 is located on the desk close to the edge, near the agent. Given the proximity of folder_1 to the robotic arm and the fact that the arm is already extended toward the desk area, it appears that folder_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["yes", 1.5197029153649076e-13, 0.999999999999848, "The robotic arm (agent) is positioned near the desk, and folder_2 is on the chair, which is close to the desk and within the general area where the robotic arm can operate. Given the proximity of folder_2 to the agent and the fact that the arm appears to be able to reach objects on the desk and chair, it is reasonable to conclude that folder_2 is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and folder_2 is on the chair, which is close to the desk and within the general area where the robotic arm can operate. Given the proximity of folder_2 to the agent and the fact that the arm appears to be able to reach objects on the desk and chair, it is reasonable to conclude that folder_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.9999999999999993, 6.837349459176405e-16, "In the image, the robotic arm (agent) is positioned near a desk with several objects labeled, such as folders and documents. The cabinet_1 is visible in the background, under the desk and behind the monitor. Given the current position of the robotic arm, which is extended towards the desk area, the cabinet_1 appears to be farther away and not within the immediate reach of the arm. The arm would likely need to move or extend further to reach the cabinet_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a desk with several objects labeled, such as folders and documents. The cabinet_1 is visible in the background, under the desk and behind the monitor. Given the current position of the robotic arm, which is extended towards the desk area, the cabinet_1 appears to be farther away and not within the immediate reach of the arm. The arm would likely need to move or extend further to reach the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 9.923801286371993e-11, 0.9999999999007619, "The image shows a robotic arm (the agent) positioned near a set of shelves and a cabinet below. The arm is extended and appears to be above the surface that is part of the cabinet structure. Given the proximity of the arm to the cabinet, it is reasonable to conclude that the cabinet_1 is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a set of shelves and a cabinet below. The arm is extended and appears to be above the surface that is part of the cabinet structure. Given the proximity of the arm to the cabinet, it is reasonable to conclude that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_2": ["yes", 7.806564092957141e-13, 0.9999999999992193, "The robotic arm (agent) is positioned near a shelf, and \"document_2\" is visible on the middle shelf. The arm is extended towards the shelf and appears to be close to the document. Given the proximity of the arm to the document and the open space between them, it seems that the document is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near a shelf, and \"document_2\" is visible on the middle shelf. The arm is extended towards the shelf and appears to be close to the document. Given the proximity of the arm to the document and the open space between them, it seems that the document is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable marker_1": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable document_1": {"before": true, "after": false}, "reachable document_3": {"before": true, "after": false}, "reachable document_4": {"before": false, "after": true}, "reachable folder_1": {"before": true, "after": false}, "reachable folder_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.0946433641740639e-10, 0.9999999998905357, "The image shows a robotic arm (the agent) positioned near a set of shelves and a cabinet below. The arm is extended and appears to be above the surface that is part of the cabinet structure. Given the proximity of the arm to the cabinet, it is reasonable to conclude that the cabinet (cabinet_1) is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a set of shelves and a cabinet below. The arm is extended and appears to be above the surface that is part of the cabinet structure. Given the proximity of the arm to the cabinet, it is reasonable to conclude that the cabinet (cabinet_1) is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["yes", 6.358106466213285e-08, 0.9999999364189354, "To determine if cabinet_1 is open, I need to look at the lower section of the image where the cabinets are located. The cabinet on the left side appears to have its door ajar, as there is a visible gap and the inside of the cabinet is visible. This indicates that the cabinet is not fully closed.", false, "<explanation>\nTo determine if cabinet_1 is open, I need to look at the lower section of the image where the cabinets are located. The cabinet on the left side appears to have its door ajar, as there is a visible gap and the inside of the cabinet is visible. This indicates that the cabinet is not fully closed.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding document_2": ["no", 0.9999998425223263, 1.574776736571383e-07, "To determine if the agent is holding the document_2, I need to check if the robotic arm's gripper is grasping an object that resembles a document. In the image, the robotic arm's gripper appears to be empty and is not holding any object. The document_2 is visible on the shelf, not in the gripper.", true, "<explanation>\nTo determine if the agent is holding the document_2, I need to check if the robotic arm's gripper is grasping an object that resembles a document. In the image, the robotic arm's gripper appears to be empty and is not holding any object. The document_2 is visible on the shelf, not in the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding marker_1": [true, false, false], "holding document_1": [true, false, false], "holding document_3": [true, false, false], "holding document_4": [true, false, false], "holding folder_1": [true, false, false], "holding folder_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(document_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable document_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable document_1": ["yes", 1.8679767006225858e-10, 0.9999999998132023, "The robotic arm (agent) is positioned near the desk, and document_1 is located on the desk close to the edge, near the arm's current position. Given the proximity of document_1 to the robotic arm and the fact that the arm is designed to interact with objects on the desk, it appears that document_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_1 is located on the desk close to the edge, near the arm's current position. Given the proximity of document_1 to the robotic arm and the fact that the arm is designed to interact with objects on the desk, it appears that document_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable marker_1": ["no", 0.999999999985751, 1.4249042298552197e-11, "To determine if marker_1 is in reach of the agent, I need to identify both the location of marker_1 and the position of the robotic arm (the agent). In the image, the robotic arm is positioned above the desk area, and marker_1 is not visible or labeled anywhere on the desk or nearby surfaces. Since marker_1 is not present in the visible area, I cannot confirm that it is within reach of the agent.", true, "<explanation>\nTo determine if marker_1 is in reach of the agent, I need to identify both the location of marker_1 and the position of the robotic arm (the agent). In the image, the robotic arm is positioned above the desk area, and marker_1 is not visible or labeled anywhere on the desk or nearby surfaces. Since marker_1 is not present in the visible area, I cannot confirm that it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 3.2772358941310535e-14, 0.9999999999999672, "The robotic arm (agent) is positioned close to the table labeled as \"table_1\". The arm appears to be mounted on the desk or very near it, and its reach extends over the surface of the table where objects like folders and documents are placed. Given the proximity and the orientation of the arm, it is reasonable to conclude that the table_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table labeled as \"table_1\". The arm appears to be mounted on the desk or very near it, and its reach extends over the surface of the table where objects like folders and documents are placed. Given the proximity and the orientation of the arm, it is reasonable to conclude that the table_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999999, 6.075040934921503e-17, "To determine if cabinet_1 is in reach of the agent, I need to check the position of the robotic arm relative to cabinet_1. In the image, the robotic arm is positioned near the desk and chair, and cabinet_1 is located further back in the room, under the shelves. The arm appears to be extended towards the desk area, and there is a significant distance between the arm and cabinet_1. Based on this, cabinet_1 does not appear to be within the immediate reach of the robotic arm.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to check the position of the robotic arm relative to cabinet_1. In the image, the robotic arm is positioned near the desk and chair, and cabinet_1 is located further back in the room, under the shelves. The arm appears to be extended towards the desk area, and there is a significant distance between the arm and cabinet_1. Based on this, cabinet_1 does not appear to be within the immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable document_2": ["yes", 5.796406663215051e-11, 0.9999999999420359, "The robotic arm (agent) is positioned near the corner of the desk, and document_2 is located on the desk close to the arm's current position. The arm appears to have sufficient reach to interact with objects on the desk, including document_2, which is not obstructed and is within the arm's operational area.", false, "<explanation>\nThe robotic arm (agent) is positioned near the corner of the desk, and document_2 is located on the desk close to the arm's current position. The arm appears to have sufficient reach to interact with objects on the desk, including document_2, which is not obstructed and is within the arm's operational area.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable document_3": ["yes", 1.6556370015122582e-09, 0.999999998344363, "The robotic arm (agent) is positioned near the corner of the desk, and document_3 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_3 without any major obstructions. Therefore, document_3 is in reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the corner of the desk, and document_3 is located on the desk close to the arm's current position. The arm appears to be within a reasonable distance to reach and interact with document_3 without any major obstructions. Therefore, document_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable document_4": ["yes", 1.5323137174434828e-13, 0.9999999999998468, "The robotic arm (agent) is positioned near the desk, and document_4 is located on the chair, which is close to the desk and within the general area where the robotic arm can operate. Given the proximity of the chair to the desk and the arm's apparent reach, it seems that document_4 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk, and document_4 is located on the chair, which is close to the desk and within the general area where the robotic arm can operate. Given the proximity of the chair to the desk and the arm's apparent reach, it seems that document_4 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable folder_1": ["yes", 8.417260767856347e-12, 0.9999999999915827, "The robotic arm (agent) is positioned near the desk where folder_1 is located. The folder_1 is on the desk, relatively close to the edge and within the workspace area of the robotic arm. Given the proximity and the typical reach of such robotic arms in a virtual household simulator, it appears that folder_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the desk where folder_1 is located. The folder_1 is on the desk, relatively close to the edge and within the workspace area of the robotic arm. Given the proximity and the typical reach of such robotic arms in a virtual household simulator, it appears that folder_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable folder_2": ["no", 1.0, 2.6127804444529292e-20, "To determine if folder_2 is within reach of the robotic arm (the agent), I need to observe the position of the folder relative to the arm. Folder_2 is located on the chair, which is positioned below and to the side of the desk. The robotic arm is mounted above the desk and appears to be oriented towards the desk area, not directly above the chair. Given the arm's current position and the typical reach of such robotic arms, it does not seem that the arm can easily reach down to the chair where folder_2 is located without significant repositioning.", true, "<explanation>\nTo determine if folder_2 is within reach of the robotic arm (the agent), I need to observe the position of the folder relative to the arm. Folder_2 is located on the chair, which is positioned below and to the side of the desk. The robotic arm is mounted above the desk and appears to be oriented towards the desk area, not directly above the chair. Given the arm's current position and the typical reach of such robotic arms, it does not seem that the arm can easily reach down to the chair where folder_2 is located without significant repositioning.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.635170031900767e-29, 1.0, "To determine if cabinet_1 is in reach of the agent, I need to identify both the location of the robotic arm (the agent) and the location of cabinet_1. The robotic arm is positioned near the desk, above the chair, and close to the computer monitors. Cabinet_1 is not explicitly labeled in the visible part of the image, but based on typical office layouts and the visible objects, it is likely that the cabinets are the storage units under or behind the desk. The robotic arm appears to be mounted on the desk and is close to the area where the cabinets would be. Given the arm's position and reach, it seems plausible that it could access the cabinet if needed.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to identify both the location of the robotic arm (the agent) and the location of cabinet_1. The robotic arm is positioned near the desk, above the chair, and close to the computer monitors. Cabinet_1 is not explicitly labeled in the visible part of the image, but based on typical office layouts and the visible objects, it is likely that the cabinets are the storage units under or behind the desk. The robotic arm appears to be mounted on the desk and is close to the area where the cabinets would be. Given the arm's position and reach, it seems plausible that it could access the cabinet if needed.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.9999999839058836, 1.609411636827855e-08, "To determine if cabinet_1 is open, I need to look for a cabinet in the image and check if its doors are visibly open. In the image, there is a cabinet visible under the desk area, but its doors appear to be closed. There are no visible gaps or open doors indicating that the cabinet is open.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for a cabinet in the image and check if its doors are visibly open. In the image, there is a cabinet visible under the desk area, but its doors appear to be closed. There are no visible gaps or open doors indicating that the cabinet is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding marker_1": ["no", 0.9999999979723494, 2.027650555294882e-09, "In the image, the robotic arm (the agent) is visible near the desk area. There are several objects labeled, such as \"folder_1,\" \"folder_2,\" \"document_1,\" \"document_2,\" and \"document_3.\" However, there is no object labeled \"marker_1\" visible in the robotic arm's gripper or anywhere else in the image. Additionally, the robotic arm does not appear to be holding any object at all.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible near the desk area. There are several objects labeled, such as \"folder_1,\" \"folder_2,\" \"document_1,\" \"document_2,\" and \"document_3.\" However, there is no object labeled \"marker_1\" visible in the robotic arm's gripper or anywhere else in the image. Additionally, the robotic arm does not appear to be holding any object at all.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.9999999996723398, 3.276602757876907e-10, "To determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 object is within the gripper or end-effector of the robotic arm. In the image, document_1 is on the desk inside the red outline labeled \"document_1\" and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 object is within the gripper or end-effector of the robotic arm. In the image, document_1 is on the desk inside the red outline labeled \"document_1\" and is not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.9999999985862662, 1.4137337535704161e-09, "To determine if the agent (robotic arm) is holding document_2, I need to observe the position of the robotic arm and see if document_2 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_2 is still on the desk and not elevated or within the gripper of the robotic arm. Therefore, the agent is not holding document_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to observe the position of the robotic arm and see if document_2 is within its grasp or elevated above the desk, indicating it is being held. In the image, the robotic arm is positioned above the desk, but document_2 is still on the desk and not elevated or within the gripper of the robotic arm. Therefore, the agent is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999979760489, 2.0239510692185243e-09, "To determine if the agent (robotic arm) is holding document_3, I need to check if the document_3 object is within the gripper or end-effector of the robotic arm. In the image, document_3 is on the desk near the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_3.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to check if the document_3 object is within the gripper or end-effector of the robotic arm. In the image, document_3 is on the desk near the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999999868282, 1.3171790316023074e-11, "To determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm, or if it is elevated and not resting on any surface. In the image, document_4 is labeled and appears to be lying on the chair, not in the grasp of the robotic arm. The robotic arm is not in contact with document_4.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm, or if it is elevated and not resting on any surface. In the image, document_4 is labeled and appears to be lying on the chair, not in the grasp of the robotic arm. The robotic arm is not in contact with document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999990087366, 9.912634369036743e-10, "To determine if the agent (robotic arm) is holding folder_1, I need to check if the folder_1 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is resting on the desk and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but not interacting with folder_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_1, I need to check if the folder_1 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is resting on the desk and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but not interacting with folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.9999999295465358, 7.045346418932015e-08, "To determine if the agent (robotic arm) is holding folder_2, I need to check the position of the robotic arm relative to folder_2. In the image, folder_2 is on the chair, and the robotic arm is not in contact with or grasping folder_2. The arm is positioned above the desk and not interacting with folder_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_2, I need to check the position of the robotic arm relative to folder_2. In the image, folder_2 is on the chair, and the robotic arm is not in contact with or grasping folder_2. The arm is positioned above the desk and not interacting with folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.546780966355106e-12, 0.9999999999984532, "The robotic arm (agent) is positioned near the desk and is extended towards the area where \"cabinet_1\" is located. The cabinet is on the right side of the image, close to the arm's current position. Given the proximity and the orientation of the arm, it appears that the cabinet is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the desk and is extended towards the area where \"cabinet_1\" is located. The cabinet is on the right side of the image, close to the arm's current position. Given the proximity and the orientation of the arm, it appears that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.9999999979965086, 2.0034914118941873e-09, "To determine if cabinet_1 is open, I need to look for any visible signs that the cabinet door is ajar or open. In the image, cabinet_1 is visible under the desk area, and it appears to be closed, as there are no gaps or open spaces indicating that the door is open.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for any visible signs that the cabinet door is ajar or open. In the image, cabinet_1 is visible under the desk area, and it appears to be closed, as there are no gaps or open spaces indicating that the door is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding marker_1": ["no", 0.9999999979526079, 2.047392125426969e-09, "To determine if the agent (robotic arm) is holding the marker_1, I need to look at the robotic arm and see if there is an object labeled \"marker_1\" in its gripper or being held by it. In the image, the robotic arm is visible, but there is no object labeled \"marker_1\" in its gripper or being held. The visible labeled objects are folders and documents, but not a marker.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the marker_1, I need to look at the robotic arm and see if there is an object labeled \"marker_1\" in its gripper or being held by it. In the image, the robotic arm is visible, but there is no object labeled \"marker_1\" in its gripper or being held. The visible labeled objects are folders and documents, but not a marker.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_1": ["no", 0.9999999995972767, 4.0272334800495567e-10, "To determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is within the gripper or end-effector of the robotic arm. In the image, document_1 is on the desk inside the red outline labeled \"document_1\" and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_1, I need to check if the document_1 is within the gripper or end-effector of the robotic arm. In the image, document_1 is on the desk inside the red outline labeled \"document_1\" and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but is not holding any object, including document_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_2": ["no", 0.999999975738769, 2.426123099769584e-08, "To determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is visibly grasped by the robotic arm or positioned within its gripper. In the image, document_2 is on the desk near the chair, and the robotic arm is not in contact with it or holding it. Therefore, the agent is not holding document_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_2, I need to check if the document_2 is visibly grasped by the robotic arm or positioned within its gripper. In the image, document_2 is on the desk near the chair, and the robotic arm is not in contact with it or holding it. Therefore, the agent is not holding document_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_3": ["no", 0.9999999986419711, 1.3580288954559013e-09, "To determine if the agent (robotic arm) is holding document_3, I need to check if the document_3 object is within the gripper or end-effector of the robotic arm. In the image, document_3 is labeled and appears to be on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but there is no indication that it is holding document_3.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_3, I need to check if the document_3 object is within the gripper or end-effector of the robotic arm. In the image, document_3 is labeled and appears to be on the desk, not in the grasp of the robotic arm. The robotic arm is positioned above the desk, but there is no indication that it is holding document_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding document_4": ["no", 0.9999999962773033, 3.722696761706732e-09, "To determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm. In the image, document_4 is labeled and is placed on the chair, not in the grasp of the robotic arm. The robotic arm is positioned above the desk and not interacting with document_4.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding document_4, I need to check if the document_4 is within the gripper or end-effector of the robotic arm. In the image, document_4 is labeled and is placed on the chair, not in the grasp of the robotic arm. The robotic arm is positioned above the desk and not interacting with document_4.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_1": ["no", 0.9999999991290497, 8.709503037638326e-10, "To determine if the agent (robotic arm) is holding folder_1, I need to check if the folder_1 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is resting on the desk and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but not interacting with folder_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_1, I need to check if the folder_1 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_1 is resting on the desk and not in the grasp of the robotic arm. The robotic arm is positioned above the desk but not interacting with folder_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding folder_2": ["no", 0.999999997919158, 2.0808420255218635e-09, "To determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk and not interacting with folder_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding folder_2, I need to check if the folder_2 object is within the grasp of the robotic arm or elevated above the desk in a way that suggests it is being held. In the image, folder_2 is on the chair and not in the grasp of the robotic arm. The robotic arm is positioned above the desk and not interacting with folder_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_3": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_3": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["yes", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop folder_1,marker_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["yes", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["no", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["yes", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_3": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.797979797979798, "yes_accuracy": 0.8, "yes_correct": 12, "yes_total": 15, "no_accuracy": 0.7976190476190477, "no_correct": 67, "no_total": 84, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8709677419354839, "no_correct": 27, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "nextto": {"accuracy": 0.6285714285714286, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6129032258064516, "no_correct": 19, "no_total": 31}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["no", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "yes"], "ontop document_2,folder_1": ["no", "no"], "ontop document_2,folder_2": ["yes", "no"], "ontop document_3,marker_1": ["no", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["no", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "yes"], "ontop document_4,document_3": ["no", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["yes", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["yes", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["no", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["no", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["no", "no"], "nextto document_2,document_4": ["no", "no"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["yes", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["no", "no"], "nextto document_3,document_4": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["yes", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["no", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["no", "no"], "nextto document_4,document_3": ["no", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["no", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.793939393939394, "yes_accuracy": 0.5909090909090909, "yes_correct": 13, "yes_total": 22, "no_accuracy": 0.8251748251748252, "no_correct": 118, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.8095238095238095, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.8421052631578947, "no_correct": 48, "no_total": 57}, "inside": {"accuracy": 0.8947368421052632, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 17, "no_total": 17}, "nextto": {"accuracy": 0.746031746031746, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.7543859649122807, "no_correct": 43, "no_total": 57}}}, "step": 4, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable document_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "holding document_2": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop document_2,cabinet_1": ["no", "yes"], "inside document_2,cabinet_1": ["yes", "yes"], "nextto document_2,cabinet_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["navigate-to(document_1)", "grasp(document_1)", "navigate-to(document_3)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(marker_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, {"enum_results": {"reachable marker_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "yes"], "ontop document_2,folder_1": ["no", "no"], "ontop document_2,folder_2": ["no", "no"], "ontop document_3,marker_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["yes", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["yes", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "yes"], "ontop document_4,document_3": ["no", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["no", "no"], "ontop document_4,folder_2": ["yes", "no"], "ontop folder_1,marker_1": ["yes", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["yes", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["no", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "no"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["yes", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["no", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["no", "no"], "nextto document_4,document_3": ["no", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["no", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["yes", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7393939393939394, "yes_accuracy": 0.5909090909090909, "yes_correct": 13, "yes_total": 22, "no_accuracy": 0.7622377622377622, "no_correct": 109, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.7, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.8070175438596491, "no_correct": 46, "no_total": 57}, "inside": {"accuracy": 0.8947368421052632, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 17, "no_total": 17}, "nextto": {"accuracy": 0.6507936507936508, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.6666666666666666, "no_correct": 38, "no_total": 57}}}, "step": 7, "actions": ["open-container(cabinet_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)"]}, {"enum_results": {"reachable marker_1": ["no", "yes"], "reachable chair_1": ["yes", "yes"], "reachable document_1": ["yes", "yes"], "reachable document_2": ["yes", "no"], "reachable document_3": ["yes", "yes"], "reachable document_4": ["yes", "no"], "reachable table_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable folder_1": ["yes", "yes"], "reachable folder_2": ["yes", "yes"], "holding marker_1": ["no", "no"], "holding document_1": ["no", "no"], "holding document_2": ["no", "no"], "holding document_3": ["no", "no"], "holding document_4": ["no", "no"], "holding folder_1": ["no", "no"], "holding folder_2": ["no", "no"], "open cabinet_1": ["no", "yes"], "open folder_1": ["yes", "no"], "open folder_2": ["no", "no"], "ontop marker_1,chair_1": ["no", "yes"], "ontop marker_1,document_1": ["no", "no"], "ontop marker_1,document_2": ["no", "no"], "ontop marker_1,document_3": ["no", "no"], "ontop marker_1,document_4": ["no", "no"], "ontop marker_1,table_1": ["no", "no"], "ontop marker_1,cabinet_1": ["no", "no"], "ontop marker_1,folder_1": ["no", "no"], "ontop marker_1,folder_2": ["no", "no"], "ontop document_1,marker_1": ["no", "no"], "ontop document_1,chair_1": ["no", "no"], "ontop document_1,document_2": ["no", "no"], "ontop document_1,document_3": ["no", "no"], "ontop document_1,document_4": ["no", "no"], "ontop document_1,table_1": ["yes", "yes"], "ontop document_1,cabinet_1": ["no", "no"], "ontop document_1,folder_1": ["yes", "no"], "ontop document_1,folder_2": ["no", "no"], "ontop document_2,marker_1": ["no", "no"], "ontop document_2,chair_1": ["no", "no"], "ontop document_2,document_1": ["no", "no"], "ontop document_2,document_3": ["no", "no"], "ontop document_2,document_4": ["no", "no"], "ontop document_2,table_1": ["yes", "no"], "ontop document_2,cabinet_1": ["no", "yes"], "ontop document_2,folder_1": ["no", "no"], "ontop document_2,folder_2": ["no", "no"], "ontop document_3,marker_1": ["yes", "no"], "ontop document_3,chair_1": ["no", "no"], "ontop document_3,document_1": ["no", "no"], "ontop document_3,document_2": ["no", "no"], "ontop document_3,document_4": ["no", "no"], "ontop document_3,table_1": ["yes", "yes"], "ontop document_3,cabinet_1": ["no", "no"], "ontop document_3,folder_1": ["no", "no"], "ontop document_3,folder_2": ["no", "no"], "ontop document_4,marker_1": ["no", "no"], "ontop document_4,chair_1": ["yes", "no"], "ontop document_4,document_1": ["no", "no"], "ontop document_4,document_2": ["no", "yes"], "ontop document_4,document_3": ["no", "no"], "ontop document_4,table_1": ["yes", "no"], "ontop document_4,cabinet_1": ["no", "no"], "ontop document_4,folder_1": ["yes", "no"], "ontop document_4,folder_2": ["yes", "no"], "ontop folder_1,marker_1": ["no", "no"], "ontop folder_1,chair_1": ["no", "no"], "ontop folder_1,document_1": ["yes", "no"], "ontop folder_1,document_2": ["no", "no"], "ontop folder_1,document_3": ["no", "no"], "ontop folder_1,document_4": ["no", "no"], "ontop folder_1,table_1": ["yes", "yes"], "ontop folder_1,cabinet_1": ["no", "no"], "ontop folder_1,folder_2": ["no", "no"], "ontop folder_2,marker_1": ["no", "no"], "ontop folder_2,chair_1": ["yes", "no"], "ontop folder_2,document_1": ["no", "no"], "ontop folder_2,document_2": ["no", "no"], "ontop folder_2,document_3": ["no", "no"], "ontop folder_2,document_4": ["no", "no"], "ontop folder_2,table_1": ["no", "no"], "ontop folder_2,cabinet_1": ["no", "no"], "ontop folder_2,folder_1": ["no", "no"], "inside marker_1,cabinet_1": ["no", "no"], "inside marker_1,folder_1": ["no", "no"], "inside marker_1,folder_2": ["no", "no"], "inside document_1,cabinet_1": ["no", "no"], "inside document_1,folder_1": ["no", "no"], "inside document_1,folder_2": ["no", "no"], "inside document_2,cabinet_1": ["no", "yes"], "inside document_2,folder_1": ["no", "no"], "inside document_2,folder_2": ["no", "no"], "inside document_3,cabinet_1": ["no", "no"], "inside document_3,folder_1": ["no", "no"], "inside document_3,folder_2": ["no", "no"], "inside document_4,cabinet_1": ["no", "yes"], "inside document_4,folder_1": ["no", "no"], "inside document_4,folder_2": ["no", "no"], "inside folder_1,cabinet_1": ["no", "no"], "inside folder_1,folder_2": ["no", "no"], "inside folder_2,cabinet_1": ["no", "no"], "inside folder_2,folder_1": ["no", "no"], "nextto marker_1,chair_1": ["no", "yes"], "nextto marker_1,document_1": ["yes", "no"], "nextto marker_1,document_2": ["no", "no"], "nextto marker_1,document_3": ["no", "no"], "nextto marker_1,document_4": ["no", "no"], "nextto marker_1,table_1": ["no", "no"], "nextto marker_1,cabinet_1": ["no", "no"], "nextto marker_1,folder_1": ["no", "no"], "nextto marker_1,folder_2": ["no", "no"], "nextto document_1,marker_1": ["no", "no"], "nextto document_1,chair_1": ["yes", "yes"], "nextto document_1,document_2": ["no", "no"], "nextto document_1,document_3": ["no", "no"], "nextto document_1,document_4": ["no", "no"], "nextto document_1,table_1": ["yes", "no"], "nextto document_1,cabinet_1": ["no", "no"], "nextto document_1,folder_1": ["yes", "no"], "nextto document_1,folder_2": ["no", "no"], "nextto document_2,marker_1": ["yes", "no"], "nextto document_2,chair_1": ["yes", "no"], "nextto document_2,document_1": ["no", "no"], "nextto document_2,document_3": ["yes", "no"], "nextto document_2,document_4": ["no", "no"], "nextto document_2,table_1": ["yes", "no"], "nextto document_2,cabinet_1": ["no", "yes"], "nextto document_2,folder_1": ["no", "no"], "nextto document_2,folder_2": ["no", "no"], "nextto document_3,marker_1": ["yes", "no"], "nextto document_3,chair_1": ["no", "no"], "nextto document_3,document_1": ["no", "no"], "nextto document_3,document_2": ["yes", "no"], "nextto document_3,document_4": ["no", "no"], "nextto document_3,table_1": ["yes", "no"], "nextto document_3,cabinet_1": ["yes", "no"], "nextto document_3,folder_1": ["no", "no"], "nextto document_3,folder_2": ["no", "no"], "nextto document_4,marker_1": ["no", "no"], "nextto document_4,chair_1": ["yes", "no"], "nextto document_4,document_1": ["no", "no"], "nextto document_4,document_2": ["no", "no"], "nextto document_4,document_3": ["no", "no"], "nextto document_4,table_1": ["yes", "no"], "nextto document_4,cabinet_1": ["no", "yes"], "nextto document_4,folder_1": ["yes", "no"], "nextto document_4,folder_2": ["yes", "no"], "nextto folder_1,marker_1": ["no", "no"], "nextto folder_1,chair_1": ["yes", "yes"], "nextto folder_1,document_1": ["yes", "no"], "nextto folder_1,document_2": ["no", "no"], "nextto folder_1,document_3": ["no", "no"], "nextto folder_1,document_4": ["yes", "no"], "nextto folder_1,table_1": ["yes", "no"], "nextto folder_1,cabinet_1": ["no", "no"], "nextto folder_1,folder_2": ["no", "no"], "nextto folder_2,marker_1": ["no", "no"], "nextto folder_2,chair_1": ["yes", "yes"], "nextto folder_2,document_1": ["no", "no"], "nextto folder_2,document_2": ["no", "no"], "nextto folder_2,document_3": ["no", "no"], "nextto folder_2,document_4": ["no", "no"], "nextto folder_2,table_1": ["yes", "no"], "nextto folder_2,cabinet_1": ["no", "no"], "nextto folder_2,folder_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7454545454545455, "yes_accuracy": 0.5454545454545454, "yes_correct": 12, "yes_total": 22, "no_accuracy": 0.7762237762237763, "no_correct": 111, "no_total": 143, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.8571428571428571, "yes_correct": 6, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.8095238095238095, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.8421052631578947, "no_correct": 48, "no_total": 57}, "inside": {"accuracy": 0.8947368421052632, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 17, "no_total": 17}, "nextto": {"accuracy": 0.6507936507936508, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.6666666666666666, "no_correct": 38, "no_total": 57}}}, "step": 8, "actions": ["open-container(cabinet_1)", "grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}], "remaining_actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.8882468179628292e-13, 0.9999999999998112, "The robotic arm (agent) is positioned above the counter, and its end effector is close to the edge of the counter near cabinet_1. The proximity of the arm to cabinet_1, as indicated by the red outline, suggests that the agent can reach and potentially interact with cabinet_1. The arm appears to be within the necessary range to access the cabinet.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and its end effector is close to the edge of the counter near cabinet_1. The proximity of the arm to cabinet_1, as indicated by the red outline, suggests that the agent can reach and potentially interact with cabinet_1. The arm appears to be within the necessary range to access the cabinet.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 4.7057869302563646e-12, 0.9999999999952942, "The robotic arm (agent) is positioned above the counter, and its end effector is close to the edge of the counter near cabinet_1. The arm appears to be able to reach the area directly above cabinet_1, as it is already interacting with objects on the counter in that vicinity. Therefore, cabinet_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and its end effector is close to the edge of the counter near cabinet_1. The arm appears to be able to reach the area directly above cabinet_1, as it is already interacting with objects on the counter in that vicinity. Therefore, cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999981724055886, 1.8275944113986038e-06, "To determine if cabinet_1 is open, I need to look for visual cues such as the cabinet door being ajar or visibly separated from the frame. In the image, cabinet_1 appears to be closed, as the door is flush with the cabinet frame and there are no visible gaps or openings.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for visual cues such as the cabinet door being ajar or visibly separated from the frame. In the image, cabinet_1 appears to be closed, as the door is flush with the cabinet frame and there are no visible gaps or openings.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 5.518245041067333e-11, 0.9999999999448176, "To determine if cabinet_1 is open, I need to look for a cabinet labeled \"cabinet_1\" and check if its door is visibly ajar or open. In the image, there is a cabinet at the bottom right labeled \"cabinet_1\" with its door clearly open, revealing the inside and an object within it. This confirms that cabinet_1 is open.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look for a cabinet labeled \"cabinet_1\" and check if its door is visibly ajar or open. In the image, there is a cabinet at the bottom right labeled \"cabinet_1\" with its door clearly open, revealing the inside and an object within it. This confirms that cabinet_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["no", 0.9999999999780059, 2.1994041199250455e-11, "To determine if bowl_1 is in reach of the agent, I need to check the position of the robotic arm relative to the bowl_1. In the image, the robotic arm is above the counter, while bowl_1 is inside a lower open drawer. The arm appears to be positioned above the counter and not directly above or near the open drawer where bowl_1 is located. Therefore, bowl_1 is not currently in reach of the agent.", false, "<explanation>\nTo determine if bowl_1 is in reach of the agent, I need to check the position of the robotic arm relative to the bowl_1. In the image, the robotic arm is above the counter, while bowl_1 is inside a lower open drawer. The arm appears to be positioned above the counter and not directly above or near the open drawer where bowl_1 is located. Therefore, bowl_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_2": ["yes", 2.2598476647288114e-09, 0.9999999977401524, "The robotic arm (agent) is positioned above the counter, and \"bowl_2\" is located in the open drawer directly below the arm. The arm appears to be close enough to reach into the drawer and interact with \"bowl_2\" without any visible obstructions. Therefore, \"bowl_2\" is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and \"bowl_2\" is located in the open drawer directly below the arm. The arm appears to be close enough to reach into the drawer and interact with \"bowl_2\" without any visible obstructions. Therefore, \"bowl_2\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 1.7358196024662895e-07, 0.9999998264180398, "The robotic arm (agent) is positioned above the counter, and the piece_of_cloth_1 is visible on the counter near the arm. The arm appears to be close enough to the piece_of_cloth_1 to interact with it, indicating that it is within reach.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the piece_of_cloth_1 is visible on the counter near the arm. The arm appears to be close enough to the piece_of_cloth_1 to interact with it, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 0.9999999999999997, 3.611273216351692e-16, "The robotic arm (agent) is positioned above the counter, and the cabinet_1 is located below the counter with its door open. The arm appears to be extended towards the counter, but there is no clear indication that it is reaching down towards cabinet_1. The arm's current position and orientation suggest it is interacting with objects on the counter, not below it. Therefore, cabinet_1 does not appear to be within immediate reach of the agent in its current position.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the cabinet_1 is located below the counter with its door open. The arm appears to be extended towards the counter, but there is no clear indication that it is reaching down towards cabinet_1. The arm's current position and orientation suggest it is interacting with objects on the counter, not below it. Therefore, cabinet_1 does not appear to be within immediate reach of the agent in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 2.566082782606012e-16, 0.9999999999999998, "The image shows a robotic arm (the agent) positioned near a countertop. Below the countertop, there is an open cabinet labeled as cabinet_1. The robotic arm is extended over the counter and is holding an object, indicating that it can reach objects on or near the counter. The cabinet_1 is directly below the counter and appears to be open, making it accessible to the robotic arm. Given the proximity and the open state of the cabinet, it is reasonable to conclude that the cabinet_1 is within reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a countertop. Below the countertop, there is an open cabinet labeled as cabinet_1. The robotic arm is extended over the counter and is holding an object, indicating that it can reach objects on or near the counter. The cabinet_1 is directly below the counter and appears to be open, making it accessible to the robotic arm. Given the proximity and the open state of the cabinet, it is reasonable to conclude that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable bowl_2": {"before": false, "after": true}, "reachable piece_of_cloth_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.775, "yes_accuracy": 0.5714285714285714, "yes_correct": 8, "yes_total": 14, "no_accuracy": 0.8846153846153846, "no_correct": 23, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9166666666666666, "no_correct": 11, "no_total": 12}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}}}, "step": 2, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 9.474241155696648e-09, 0.9999999905257588, "The robotic arm (agent) is positioned above the counter, and the cabinet_1 is directly below the counter. Given the proximity of the arm to the counter edge and the typical reach of such robotic arms in virtual simulators, it appears that the cabinet_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the cabinet_1 is directly below the counter. Given the proximity of the arm to the counter edge and the typical reach of such robotic arms in virtual simulators, it appears that the cabinet_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 2.704718791712793e-08, 0.9999999729528121, "The robotic arm (agent) is positioned above the counter, and the cabinet_1 is directly below the counter. Given the proximity of the arm to the counter edge and the cabinet being immediately below, it is reasonable to conclude that the cabinet_1 is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the cabinet_1 is directly below the counter. Given the proximity of the arm to the counter edge and the cabinet being immediately below, it is reasonable to conclude that the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999973844324918, 2.6155675081988455e-06, "I will look at the cabinet labeled as \"cabinet_1\" in the image to determine if its doors are open. Upon inspection, the cabinet doors appear to be closed, as there are no visible gaps or openings.", true, "<explanation>\nI will look at the cabinet labeled as \"cabinet_1\" in the image to determine if its doors are open. Upon inspection, the cabinet doors appear to be closed, as there are no visible gaps or openings.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0009153631323840234, 0.999084636867616, "I observe the cabinet labeled \"cabinet_1\" in the image. The door of the cabinet is visibly ajar, indicating that it is not closed. Therefore, the cabinet is open.", true, "<explanation>\nI observe the cabinet labeled \"cabinet_1\" in the image. The door of the cabinet is visibly ajar, indicating that it is not closed. Therefore, the cabinet is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["no", 0.9999999999910766, 8.92338714745207e-12, "The bowl_1 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be reaching towards an object inside the cabinet. The arm is not extended towards the bowl_1, and the bowl_1 is on a different surface than where the arm is currently interacting. Therefore, the bowl_1 is not in immediate reach of the agent.", false, "<explanation>\nThe bowl_1 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be reaching towards an object inside the cabinet. The arm is not extended towards the bowl_1, and the bowl_1 is on a different surface than where the arm is currently interacting. Therefore, the bowl_1 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_2": ["yes", 1.2138289426486285e-12, 0.9999999999987862, "The robotic arm (agent) is positioned near the counter, and the bowl_2 is on top of the counter. The arm appears to be extended towards the counter, and there are no visible obstacles between the arm and the bowl_2. The bowl_2 is within the general area that the arm can reach, based on its current position and orientation.", true, "<explanation>\nThe robotic arm (agent) is positioned near the counter, and the bowl_2 is on top of the counter. The arm appears to be extended towards the counter, and there are no visible obstacles between the arm and the bowl_2. The bowl_2 is within the general area that the arm can reach, based on its current position and orientation.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 3.2446161378173207e-09, 0.9999999967553839, "The robotic arm (agent) is positioned close to the open cabinet door where the piece_of_cloth_1 is located. The arm appears to be extended towards the cabinet, and the piece_of_cloth_1 is near the edge of the open drawer, making it accessible. Given the proximity and the orientation of the arm, the piece_of_cloth_1 is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the open cabinet door where the piece_of_cloth_1 is located. The arm appears to be extended towards the cabinet, and the piece_of_cloth_1 is near the edge of the open drawer, making it accessible. Given the proximity and the orientation of the arm, the piece_of_cloth_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_2": ["no", 0.9999999992202168, 7.797832179278246e-10, "The bowl_2 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be extended towards the cabinet, not the countertop. The arm does not seem to be close enough to the bowl_2 to interact with or grasp it directly from its current position.", false, "<explanation>\nThe bowl_2 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be extended towards the cabinet, not the countertop. The arm does not seem to be close enough to the bowl_2 to interact with or grasp it directly from its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding bowl_1": ["no", 0.999999916887188, 8.311281197908873e-08, "In the image, the robotic arm (the agent) is visible near an open drawer. The bowl_1 is on the countertop, but the robotic arm is not in contact with or holding the bowl_1. The arm is positioned closer to the open drawer and a cup inside it, not the bowl_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible near an open drawer. The bowl_1 is on the countertop, but the robotic arm is not in contact with or holding the bowl_1. The arm is positioned closer to the open drawer and a cup inside it, not the bowl_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.9999999874521831, 1.2547816852941518e-08, "To determine if the agent (robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm is grasping or in contact with the object labeled as piece_of_cloth_1. In the image, the robotic arm is positioned near the open cabinet, but it is not holding or grasping the piece_of_cloth_1, which is still inside the cabinet.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm is grasping or in contact with the object labeled as piece_of_cloth_1. In the image, the robotic arm is positioned near the open cabinet, but it is not holding or grasping the piece_of_cloth_1, which is still inside the cabinet.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(bowl_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_2": ["no", 0.9999999999966467, 3.3532766569647296e-12, "The bowl_2 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be extended towards the lower cabinet area. The arm is not directly above or near the bowl_2, and there is a significant distance between the arm's current position and the bowl_2 on the counter. Therefore, the bowl_2 is not in immediate reach of the agent.", false, "<explanation>\nThe bowl_2 is located on the countertop, while the robotic arm (the agent) is positioned near the open cabinet door and appears to be extended towards the lower cabinet area. The arm is not directly above or near the bowl_2, and there is a significant distance between the arm's current position and the bowl_2 on the counter. Therefore, the bowl_2 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding bowl_1": ["no", 0.9999999994691146, 5.308854678707594e-10, "To determine if the agent is holding the bowl_1, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_1. In the image, the bowl_1 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and is closer to another object labeled \"mug_2\" inside the cabinet. Therefore, the agent is not holding the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_1. In the image, the bowl_1 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and is closer to another object labeled \"mug_2\" inside the cabinet. Therefore, the agent is not holding the bowl_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.9999999999470238, 5.2976129250763295e-11, "To determine if the agent (robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm's gripper is grasping or in contact with the object labeled as piece_of_cloth_1. In the image, the robotic arm is near the open cabinet door, and the piece_of_cloth_1 is visible inside the cabinet. However, the gripper is not in contact with or holding the piece_of_cloth_1; it is positioned above and away from the object.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm's gripper is grasping or in contact with the object labeled as piece_of_cloth_1. In the image, the robotic arm is near the open cabinet door, and the piece_of_cloth_1 is visible inside the cabinet. However, the gripper is not in contact with or holding the piece_of_cloth_1; it is positioned above and away from the object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable piece_of_cloth_1": ["yes", 3.9331528626327295e-10, 0.9999999996066847, "The robotic arm (agent) is positioned close to the open cabinet door where the piece_of_cloth_1 is located. The arm appears to be extended towards the cabinet, and the piece_of_cloth_1 is near the edge of the open drawer, making it accessible. There are no visible obstacles between the arm and the piece_of_cloth_1, so the agent should be able to reach it.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the open cabinet door where the piece_of_cloth_1 is located. The arm appears to be extended towards the cabinet, and the piece_of_cloth_1 is near the edge of the open drawer, making it accessible. There are no visible obstacles between the arm and the piece_of_cloth_1, so the agent should be able to reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_1": ["no", 0.9999999926891819, 7.310818091150864e-09, "To determine if the agent is holding the bowl_1, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_1. In the image, the bowl_1 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and not near the bowl_1. Therefore, the agent is not holding the bowl_1.", true, "<explanation>\nTo determine if the agent is holding the bowl_1, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_1. In the image, the bowl_1 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and not near the bowl_1. Therefore, the agent is not holding the bowl_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_2": ["no", 0.9999999902336479, 9.766352052736133e-09, "To determine if the agent is holding the bowl_2, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_2. In the image, the bowl_2 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and not holding the bowl_2.", true, "<explanation>\nTo determine if the agent is holding the bowl_2, I need to check if the robotic arm (the agent) is grasping or in contact with the bowl_2. In the image, the bowl_2 is on the counter, and the robotic arm is not in contact with it. The arm is positioned near an open cabinet door and not holding the bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding piece_of_cloth_1": ["no", 0.9999999984700401, 1.529959976921331e-09, "To determine if the agent (the robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm is in contact with or gripping the piece of cloth. In the image, the piece_of_cloth_1 is floating above the counter, but the robotic arm is not visibly holding or gripping it. The arm appears to be near the cabinet, not interacting with the cloth.", false, "<explanation>\nTo determine if the agent (the robotic arm) is holding the piece_of_cloth_1, I need to check if the robotic arm is in contact with or gripping the piece of cloth. In the image, the piece_of_cloth_1 is floating above the counter, but the robotic arm is not visibly holding or gripping it. The arm appears to be near the cabinet, not interacting with the cloth.\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop piece_of_cloth_1,bowl_1": ["no", 0.9999999999859555, 1.4044523187526602e-11, "To determine if piece_of_cloth_1 is on top of bowl_1, I need to check the relative positions of both objects. The bowl_1 is on the counter, and piece_of_cloth_1 is floating above the counter, but it is not directly on top of the bowl_1. Instead, it is hovering above the counter and not making contact with the bowl_1.", true, "<explanation>\nTo determine if piece_of_cloth_1 is on top of bowl_1, I need to check the relative positions of both objects. The bowl_1 is on the counter, and piece_of_cloth_1 is floating above the counter, but it is not directly on top of the bowl_1. Instead, it is hovering above the counter and not making contact with the bowl_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop piece_of_cloth_1,bowl_2": ["no", 0.9999999999149305, 8.50695144618478e-11, "To determine if piece_of_cloth_1 is on top of bowl_2, I need to identify both objects in the image and check their relative positions. The piece_of_cloth_1 is the large, dark object floating above the counter. The bowl_2 is the green, round object on the counter. The piece_of_cloth_1 is not directly on top of the bowl_2; it is hovering above the counter and not in contact with the bowl_2.", true, "<explanation>\nTo determine if piece_of_cloth_1 is on top of bowl_2, I need to identify both objects in the image and check their relative positions. The piece_of_cloth_1 is the large, dark object floating above the counter. The bowl_2 is the green, round object on the counter. The piece_of_cloth_1 is not directly on top of the bowl_2; it is hovering above the counter and not in contact with the bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop piece_of_cloth_1,cabinet_1": ["no", 0.9999999999997513, 2.4873665605881485e-13, "To determine if piece_of_cloth_1 is on top of cabinet_1, I need to identify both objects in the image. The cabinet_1 is the piece of furniture with drawers and a countertop visible in the lower part of the image. The piece_of_cloth_1 appears to be the large, dark, folded fabric object floating above the cabinet. However, the cloth is not resting directly on the cabinet; it is hovering above it, with a visible gap between the cloth and the cabinet's surface. Therefore, the cloth is not on top of the cabinet.", true, "<explanation>\nTo determine if piece_of_cloth_1 is on top of cabinet_1, I need to identify both objects in the image. The cabinet_1 is the piece of furniture with drawers and a countertop visible in the lower part of the image. The piece_of_cloth_1 appears to be the large, dark, folded fabric object floating above the cabinet. However, the cloth is not resting directly on the cabinet; it is hovering above it, with a visible gap between the cloth and the cabinet's surface. Therefore, the cloth is not on top of the cabinet.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto piece_of_cloth_1,bowl_1": ["no", 0.9999999999997714, 2.286222440473247e-13, "To determine if piece_of_cloth_1 is next to bowl_1, I need to identify both objects in the image and check their relative positions. The bowl_1 is visible on the countertop. The piece_of_cloth_1 appears to be the large, dark, folded object floating above the counter. Since the piece_of_cloth_1 is not placed on the counter and is instead floating above it, it is not next to the bowl_1, which is on the counter surface.", true, "<explanation>\nTo determine if piece_of_cloth_1 is next to bowl_1, I need to identify both objects in the image and check their relative positions. The bowl_1 is visible on the countertop. The piece_of_cloth_1 appears to be the large, dark, folded object floating above the counter. Since the piece_of_cloth_1 is not placed on the counter and is instead floating above it, it is not next to the bowl_1, which is on the counter surface.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto piece_of_cloth_1,bowl_2": ["no", 0.9999999636774412, 3.6322558873810635e-08, "To determine if piece_of_cloth_1 is next to bowl_2, I need to identify both objects in the image. The piece_of_cloth_1 appears to be the large, dark, folded item floating above the counter. The bowl_2 is labeled inside the open cabinet below the counter. Since piece_of_cloth_1 is on top of the counter and bowl_2 is inside the cabinet, they are not next to each other.", true, "<explanation>\nTo determine if piece_of_cloth_1 is next to bowl_2, I need to identify both objects in the image. The piece_of_cloth_1 appears to be the large, dark, folded item floating above the counter. The bowl_2 is labeled inside the open cabinet below the counter. Since piece_of_cloth_1 is on top of the counter and bowl_2 is inside the cabinet, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto piece_of_cloth_1,cabinet_1": ["no", 0.9999999998633343, 1.3666563479359972e-10, "To determine if piece_of_cloth_1 is next to cabinet_1, I need to identify both objects in the image. The cabinet_1 is the open cabinet in the lower center of the image. The piece_of_cloth_1 appears to be the large, dark, folded object floating above the counter. Since the piece_of_cloth_1 is above the counter and not adjacent to the side or directly next to the cabinet_1, it is not next to the cabinet_1.", true, "<explanation>\nTo determine if piece_of_cloth_1 is next to cabinet_1, I need to identify both objects in the image. The cabinet_1 is the open cabinet in the lower center of the image. The piece_of_cloth_1 appears to be the large, dark, folded object floating above the counter. Since the piece_of_cloth_1 is above the counter and not adjacent to the side or directly next to the cabinet_1, it is not next to the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "inside piece_of_cloth_1,cabinet_1": ["no", 0.9999998504995526, 1.495004473266332e-07, "To determine if piece_of_cloth_1 is inside cabinet_1, I need to observe the location of both objects. The cabinet_1 is open and located below the countertop. The piece_of_cloth_1 is visible above the countertop, floating in the air and not inside the cabinet. Therefore, piece_of_cloth_1 is not inside cabinet_1.", true, "<explanation>\nTo determine if piece_of_cloth_1 is inside cabinet_1, I need to observe the location of both objects. The cabinet_1 is open and located below the countertop. The piece_of_cloth_1 is visible above the countertop, floating in the air and not inside the cabinet. Therefore, piece_of_cloth_1 is not inside cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop piece_of_cloth_1,piece_of_cloth_1": {"before": null, "after": false}, "ontop piece_of_cloth_1,sink_1": {"before": false, "after": false}, "nextto piece_of_cloth_1,piece_of_cloth_1": {"before": null, "after": false}, "nextto piece_of_cloth_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable piece_of_cloth_1": ["no", 0.9999999999776468, 2.2353256777865195e-11, "The piece_of_cloth_1 is visible in the upper part of the image, floating above the counter and not near the robotic arm, which is located near the open cabinet below the counter. The robotic arm appears to be interacting with an object inside the cabinet, and there is a significant vertical distance between the arm and the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is not in reach of the agent.", true, "<explanation>\nThe piece_of_cloth_1 is visible in the upper part of the image, floating above the counter and not near the robotic arm, which is located near the open cabinet below the counter. The robotic arm appears to be interacting with an object inside the cabinet, and there is a significant vertical distance between the arm and the piece_of_cloth_1. Therefore, the piece_of_cloth_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable piece_of_cloth_1": ["yes", 1.5845919080452662e-09, 0.9999999984154081, "The robotic arm (agent) is holding or is very close to the piece_of_cloth_1, as it appears to be directly above the counter and within the grasp of the arm. The proximity and position suggest that the cloth is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is holding or is very close to the piece_of_cloth_1, as it appears to be directly above the counter and within the grasp of the arm. The proximity and position suggest that the cloth is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 9.004321113100604e-09, 0.9999999909956789, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is positioned very close to the bowl labeled \"bowl_1,\" which is inside an open drawer. The red outline around the bowl and the proximity of the robotic arm suggest that the bowl is within the agent's reach.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is positioned very close to the bowl labeled \"bowl_1,\" which is inside an open drawer. The red outline around the bowl and the proximity of the robotic arm suggest that the bowl is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 4.3597153488770915e-10, 0.9999999995640285, "The robotic arm (agent) is visible in the image and appears to be positioned very close to the bowl_2, which is located in an open drawer. The arm's gripper is aligned with the bowl_2, suggesting that the object is within the arm's reach and can be interacted with.", false, "<explanation>\nThe robotic arm (agent) is visible in the image and appears to be positioned very close to the bowl_2, which is located in an open drawer. The arm's gripper is aligned with the bowl_2, suggesting that the object is within the arm's reach and can be interacted with.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 7.149069426217745e-10, 0.9999999992850931, "The robotic arm, which is the agent, is visible in the image and appears to be very close to the open cabinet labeled \"cabinet_1.\" The arm is positioned such that it could easily interact with or reach into the cabinet. The proximity and orientation of the arm relative to the cabinet indicate that the cabinet is within reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is visible in the image and appears to be very close to the open cabinet labeled \"cabinet_1.\" The arm is positioned such that it could easily interact with or reach into the cabinet. The proximity and orientation of the arm relative to the cabinet indicate that the cabinet is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sink_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 3.119115046754007e-08, 0.9999999688088496, "The image shows a robotic arm (the agent) positioned directly above a sink (sink_1). The arm appears to be very close to the sink, indicating that it is within reach and can interact with it if needed. There are no visible obstacles between the arm and the sink.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned directly above a sink (sink_1). The arm appears to be very close to the sink, indicating that it is within reach and can interact with it if needed. There are no visible obstacles between the arm and the sink.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 6.513730389460604e-14, 0.9999999999999348, "To determine if piece_of_cloth_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the location of piece_of_cloth_1. The robotic arm is visible at the top of the image, positioned above the sink area. Piece_of_cloth_1 appears to be one of the folded cloths on the counter to the left of the sink. The arm is close to the sink and the counter, suggesting that the cloth on the left counter is within reach of the agent.", false, "<explanation>\nTo determine if piece_of_cloth_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the location of piece_of_cloth_1. The robotic arm is visible at the top of the image, positioned above the sink area. Piece_of_cloth_1 appears to be one of the folded cloths on the counter to the left of the sink. The arm is close to the sink and the counter, suggesting that the cloth on the left counter is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable piece_of_cloth_1": ["yes", 1.4691829506737288e-12, 0.9999999999985308, "The image shows a kitchen environment with a robotic arm (the agent) positioned above a sink. There are several pieces of cloth visible on the countertops to the left and right of the sink. The robotic arm appears to be extended over the sink, and the closest piece of cloth (presumably piece_of_cloth_1) is on the left countertop, near the edge closest to the sink. Given the proximity of the cloth to the sink and the apparent reach of the robotic arm, it seems that the cloth is within reach of the agent.", true, "<explanation>\nThe image shows a kitchen environment with a robotic arm (the agent) positioned above a sink. There are several pieces of cloth visible on the countertops to the left and right of the sink. The robotic arm appears to be extended over the sink, and the closest piece of cloth (presumably piece_of_cloth_1) is on the left countertop, near the edge closest to the sink. Given the proximity of the cloth to the sink and the apparent reach of the robotic arm, it seems that the cloth is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(piece_of_cloth_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable piece_of_cloth_1": ["yes", 7.16046342765368e-13, 0.9999999999992839, "To determine if piece_of_cloth_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the location of piece_of_cloth_1. The robotic arm is visible at the top of the image, positioned above the sink area. Piece_of_cloth_1 appears to be one of the folded cloths on the counter to the left of the sink. Given the proximity of the arm to the counter and the cloth, it seems that the arm could reach the cloth without significant obstruction.", true, "<explanation>\nTo determine if piece_of_cloth_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the location of piece_of_cloth_1. The robotic arm is visible at the top of the image, positioned above the sink area. Piece_of_cloth_1 appears to be one of the folded cloths on the counter to the left of the sink. Given the proximity of the arm to the counter and the cloth, it seems that the arm could reach the cloth without significant obstruction.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.46153846153846156, "yes_correct": 6, "yes_total": 13, "no_accuracy": 0.6875, "no_correct": 11, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 2, "actions": ["grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5517241379310345, "yes_accuracy": 0.46153846153846156, "yes_correct": 6, "yes_total": 13, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.2222222222222222, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 3, "actions": ["grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4827586206896552, "yes_accuracy": 0.3076923076923077, "yes_correct": 4, "yes_total": 13, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.1111111111111111, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}}}, "step": 4, "actions": ["grasp(piece_of_cloth_1)", "navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "yes"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8275862068965517, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 1.0, "no_correct": 17, "no_total": 17, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}}}, "step": 5, "actions": ["navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(cabinet_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["yes", "yes"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["yes", "yes"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8275862068965517, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.9411764705882353, "no_correct": 16, "no_total": 17, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}}}, "step": 6, "actions": ["navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)"]}, {"enum_results": {"reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding piece_of_cloth_1": ["no", "yes"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 7, "actions": ["grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "place-next-to(bowl_1, bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding piece_of_cloth_1": ["no", "yes"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 8, "actions": ["grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "place-next-to(bowl_1, bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "place-next-to(bowl_1, bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 8.966696463845755e-12, 0.9999999999910333, "The robotic arm (agent) is positioned close to the kitchen counter, and \"cabinet_1\" is directly in front of the arm, as indicated by the red outline and label. The arm appears to be able to reach the area above and around \"cabinet_1,\" suggesting that the cabinet is within the agent's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the kitchen counter, and \"cabinet_1\" is directly in front of the arm, as indicated by the red outline and label. The arm appears to be able to reach the area above and around \"cabinet_1,\" suggesting that the cabinet is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.9999999999999933, 6.6576219566488786e-15, "The robotic arm (agent) is positioned near the kitchen counter, and the sink_1 is visible to the left of the agent. However, the arm appears to be extended towards the counter and not directly over the sink. The distance between the arm and the sink_1 seems significant, and there are cabinets and the counter between the arm and the sink. Based on this, it does not appear that the sink_1 is within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the kitchen counter, and the sink_1 is visible to the left of the agent. However, the arm appears to be extended towards the counter and not directly over the sink. The distance between the arm and the sink_1 seems significant, and there are cabinets and the counter between the arm and the sink. Based on this, it does not appear that the sink_1 is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 9.26522452346596e-13, 0.9999999999990735, "The robotic arm (agent) is positioned close to the kitchen counter, and \"cabinet_1\" is labeled on the side of the counter directly adjacent to the arm. The arm appears to be able to reach the area where \"cabinet_1\" is located, as it is right next to it and at a similar height. Therefore, \"cabinet_1\" is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the kitchen counter, and \"cabinet_1\" is labeled on the side of the counter directly adjacent to the arm. The arm appears to be able to reach the area where \"cabinet_1\" is located, as it is right next to it and at a similar height. Therefore, \"cabinet_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.999999681070007, 3.1892999298466874e-07, "To determine if cabinet_1 is open, I need to look at the doors or drawers associated with cabinet_1 and see if any of them are visibly ajar or open. In the image, cabinet_1 appears to be fully closed, with no visible gaps or open doors/drawers.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to look at the doors or drawers associated with cabinet_1 and see if any of them are visibly ajar or open. In the image, cabinet_1 appears to be fully closed, with no visible gaps or open doors/drawers.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 2.4177292643502556e-05, 0.9999758227073565, "I will check the state of cabinet_1 in the image. The cabinet doors beneath the counter are visibly open, indicating that cabinet_1 is open.", true, "<explanation>\nI will check the state of cabinet_1 in the image. The cabinet doors beneath the counter are visibly open, indicating that cabinet_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 5.823598354924123e-17, 0.9999999999999999, "To determine if bowl_1 is in reach of the agent, I need to identify the location of bowl_1 and see if it is close enough to the robotic arm (the agent). In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, suggesting that it is within the arm's reach. The red labels \"bowl_1\" and \"bowl_2\" also indicate the presence of bowls, and \"bowl_1\" is directly in front of the arm.", true, "<explanation>\nTo determine if bowl_1 is in reach of the agent, I need to identify the location of bowl_1 and see if it is close enough to the robotic arm (the agent). In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, suggesting that it is within the arm's reach. The red labels \"bowl_1\" and \"bowl_2\" also indicate the presence of bowls, and \"bowl_1\" is directly in front of the arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.7122577378328123e-14, 0.9999999999999829, "To determine if bowl_2 is in reach of the agent, I need to identify the location of bowl_2 and see if it is close enough to the robotic arm (the agent) for interaction. In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, suggesting that it is within the arm's reach. The red label \"bowl_2\" also points directly to this object, confirming its identity and proximity to the agent.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to identify the location of bowl_2 and see if it is close enough to the robotic arm (the agent) for interaction. In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, suggesting that it is within the arm's reach. The red label \"bowl_2\" also points directly to this object, confirming its identity and proximity to the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["yes", 9.932536507756597e-10, 0.9999999990067463, "The robotic arm (agent) is positioned near the countertop, and the piece_of_cloth_1 is on the counter close to the arm. The arm appears to be able to reach the piece_of_cloth_1 without obstruction, as it is on the same surface and within the arm's operational range.", true, "<explanation>\nThe robotic arm (agent) is positioned near the countertop, and the piece_of_cloth_1 is on the counter close to the arm. The arm appears to be able to reach the piece_of_cloth_1 without obstruction, as it is on the same surface and within the arm's operational range.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 1.7578414648436798e-09, 0.9999999982421586, "To determine if bowl_1 is in reach of the agent, I need to identify the location of bowl_1 and see if it is close enough to the robotic arm (the agent). In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, indicating that it is within the arm's reach.", true, "<explanation>\nTo determine if bowl_1 is in reach of the agent, I need to identify the location of bowl_1 and see if it is close enough to the robotic arm (the agent). In the image, there is a green bowl-like object on the counter near the robotic arm. The arm is positioned very close to this object, indicating that it is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding bowl_2": ["no", 0.9999999999713343, 2.866579100976289e-11, "To determine if the agent is holding the bowl_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as bowl_2. In the image, the robotic arm is positioned above the counter, and there is a green bowl (presumably bowl_2) on the counter. However, the robotic arm's gripper is not in contact with or holding the bowl_2; it is above the counter and not grasping any object. Therefore, the agent is not holding the bowl_2.", true, "<explanation>\nTo determine if the agent is holding the bowl_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as bowl_2. In the image, the robotic arm is positioned above the counter, and there is a green bowl (presumably bowl_2) on the counter. However, the robotic arm's gripper is not in contact with or holding the bowl_2; it is above the counter and not grasping any object. Therefore, the agent is not holding the bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding piece_of_cloth_1": ["no", 0.9999999391898722, 6.081012779864547e-08, "In the image, the robotic arm (agent) is visible above the counter. There is a green piece of cloth (piece_of_cloth_1) on the counter, but it is not in the gripper of the robotic arm. The gripper appears to be empty or positioned above the counter, not holding the piece of cloth. Therefore, the agent is not holding the piece_of_cloth_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible above the counter. There is a green piece of cloth (piece_of_cloth_1) on the counter, but it is not in the gripper of the robotic arm. The gripper appears to be empty or positioned above the counter, not holding the piece of cloth. Therefore, the agent is not holding the piece_of_cloth_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["no", 0.9999999999945125, 5.487478158501279e-12, "The image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"bowl_1\" is highlighted and appears to be on top of a counter, while the robotic arm is positioned near an open cabinet below the counter. The arm is not in contact with or holding the \"bowl_1\"; instead, it is closer to the cabinet area. Therefore, the agent is not holding the bowl_1.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"bowl_1\" is highlighted and appears to be on top of a counter, while the robotic arm is positioned near an open cabinet below the counter. The arm is not in contact with or holding the \"bowl_1\"; instead, it is closer to the cabinet area. Therefore, the agent is not holding the bowl_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop bowl_1,bowl_2": ["no", 0.9999999999789415, 2.105846472587885e-11, "To determine if bowl_1 is on top of bowl_2, I need to check their relative positions. In the image, bowl_1 is located on a higher surface (the black lamp or fixture above the counter), while bowl_2 is inside the open cabinet below the counter. Since bowl_1 is not directly above or resting on bowl_2, but rather on a separate elevated surface, bowl_1 is not on top of bowl_2.", true, "<explanation>\nTo determine if bowl_1 is on top of bowl_2, I need to check their relative positions. In the image, bowl_1 is located on a higher surface (the black lamp or fixture above the counter), while bowl_2 is inside the open cabinet below the counter. Since bowl_1 is not directly above or resting on bowl_2, but rather on a separate elevated surface, bowl_1 is not on top of bowl_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,cabinet_1": ["yes", 3.237666149066135e-11, 0.9999999999676233, "To determine if bowl_1 is on top of cabinet_1, I need to check the positions of both objects. In the image, bowl_1 is highlighted and appears to be above the countertop, which is part of the cabinet_1 structure. The bowl is not inside or below the cabinet, but rather resting on the surface above it. Therefore, bowl_1 is on top of cabinet_1.", false, "<explanation>\nTo determine if bowl_1 is on top of cabinet_1, I need to check the positions of both objects. In the image, bowl_1 is highlighted and appears to be above the countertop, which is part of the cabinet_1 structure. The bowl is not inside or below the cabinet, but rather resting on the surface above it. Therefore, bowl_1 is on top of cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop bowl_1,piece_of_cloth_1": ["no", 0.9999999994833757, 5.166242745742617e-10, "To determine if bowl_1 is on top of piece_of_cloth_1, I need to check the relative positions of both objects. In the image, bowl_1 is located above the counter, while piece_of_cloth_1 is lying flat on the counter surface. However, bowl_1 is not directly above or in contact with piece_of_cloth_1; it is positioned further back on a higher surface. Therefore, bowl_1 is not on top of piece_of_cloth_1.", true, "<explanation>\nTo determine if bowl_1 is on top of piece_of_cloth_1, I need to check the relative positions of both objects. In the image, bowl_1 is located above the counter, while piece_of_cloth_1 is lying flat on the counter surface. However, bowl_1 is not directly above or in contact with piece_of_cloth_1; it is positioned further back on a higher surface. Therefore, bowl_1 is not on top of piece_of_cloth_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop bowl_1,sink_1": ["no", 0.9999999999999974, 2.5452922400786687e-15, "First, I will identify the locations of \"bowl_1\" and \"sink_1\" in the image. \"bowl_1\" is highlighted and appears to be on top of a black surface, which is part of a hanging lamp or fixture above the counter. \"sink_1\" is located to the left, below the window, and is black with a faucet. \"bowl_1\" is not positioned on top of \"sink_1\"; instead, it is above the counter area, far from the sink.", true, "<explanation>\nFirst, I will identify the locations of \"bowl_1\" and \"sink_1\" in the image. \"bowl_1\" is highlighted and appears to be on top of a black surface, which is part of a hanging lamp or fixture above the counter. \"sink_1\" is located to the left, below the window, and is black with a faucet. \"bowl_1\" is not positioned on top of \"sink_1\"; instead, it is above the counter area, far from the sink.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,bowl_2": ["no", 0.9999999964016458, 3.598354193890487e-09, "To determine if bowl_1 is next to bowl_2, I need to locate both objects in the image. Bowl_1 is identified at the top right of the image, placed on a black surface. Bowl_2 is located inside the open cabinet below the counter. Since bowl_1 is on the counter and bowl_2 is inside the cabinet, they are not next to each other.", true, "<explanation>\nTo determine if bowl_1 is next to bowl_2, I need to locate both objects in the image. Bowl_1 is identified at the top right of the image, placed on a black surface. Bowl_2 is located inside the open cabinet below the counter. Since bowl_1 is on the counter and bowl_2 is inside the cabinet, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["no", 0.9999999893876383, 1.0612361628346233e-08, "To determine if bowl_1 is next to cabinet_1, I need to check the relative positions of both objects in the image. Bowl_1 is located on the upper counter, while cabinet_1 is below the counter with its doors open. The two objects are separated vertically by the counter surface and are not adjacent horizontally. Therefore, bowl_1 is not next to cabinet_1.", true, "<explanation>\nTo determine if bowl_1 is next to cabinet_1, I need to check the relative positions of both objects in the image. Bowl_1 is located on the upper counter, while cabinet_1 is below the counter with its doors open. The two objects are separated vertically by the counter surface and are not adjacent horizontally. Therefore, bowl_1 is not next to cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,piece_of_cloth_1": ["no", 0.9999999920346337, 7.965366267987008e-09, "To determine if bowl_1 is next to piece_of_cloth_1, I need to identify both objects in the image and check their relative positions. Bowl_1 is located on the upper counter, while piece_of_cloth_1 is on the lower counter near the open cabinet. There is a clear separation between the two surfaces, and they are not adjacent to each other. Therefore, bowl_1 is not next to piece_of_cloth_1.", true, "<explanation>\nTo determine if bowl_1 is next to piece_of_cloth_1, I need to identify both objects in the image and check their relative positions. Bowl_1 is located on the upper counter, while piece_of_cloth_1 is on the lower counter near the open cabinet. There is a clear separation between the two surfaces, and they are not adjacent to each other. Therefore, bowl_1 is not next to piece_of_cloth_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,sink_1": ["no", 0.9999999999992328, 7.671359730570279e-13, "To determine if bowl_1 is next to sink_1, I need to locate both objects in the image. The sink_1 is visible on the left side of the image, attached to the wall. The bowl_1 is identified by the red label and is located on the right side of the image, on a higher surface above the counter. There is a significant distance and a counter between the bowl_1 and the sink_1, so they are not next to each other.", true, "<explanation>\nTo determine if bowl_1 is next to sink_1, I need to locate both objects in the image. The sink_1 is visible on the left side of the image, attached to the wall. The bowl_1 is identified by the red label and is located on the right side of the image, on a higher surface above the counter. There is a significant distance and a counter between the bowl_1 and the sink_1, so they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "inside bowl_1,cabinet_1": ["no", 0.9999999217210909, 7.827890913061049e-08, "To determine if bowl_1 is inside cabinet_1, I need to check the position of bowl_1 relative to the open cabinet. In the image, bowl_1 is located above the counter, while cabinet_1 is below the counter with its doors open. Since bowl_1 is not within the boundaries of the open cabinet and is instead above the counter, it is not inside cabinet_1.", true, "<explanation>\nTo determine if bowl_1 is inside cabinet_1, I need to check the position of bowl_1 relative to the open cabinet. In the image, bowl_1 is located above the counter, while cabinet_1 is below the counter with its doors open. Since bowl_1 is not within the boundaries of the open cabinet and is instead above the counter, it is not inside cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable sink_1": ["no", 0.9999999999954378, 4.562190404632547e-12, "The agent, represented by the robotic arm, is currently positioned near the open cabinet and counter. The sink_1 is visible on the left side of the image, but it is separated from the agent by the counter and some distance. The agent's arm does not appear to be extended towards the sink, and there are obstacles (the counter and objects on it) between the agent and the sink. Therefore, the sink_1 is not within immediate reach of the agent.", true, "<explanation>\nThe agent, represented by the robotic arm, is currently positioned near the open cabinet and counter. The sink_1 is visible on the left side of the image, but it is separated from the agent by the counter and some distance. The agent's arm does not appear to be extended towards the sink, and there are obstacles (the counter and objects on it) between the agent and the sink. Therefore, the sink_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 1.0088482884663613e-05, 0.9999899115171154, "The image shows a robotic arm (the agent) positioned near a kitchen sink. The end effector of the robotic arm appears to be directly above or very close to the sink, indicating that the sink is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a kitchen sink. The end effector of the robotic arm appears to be directly above or very close to the sink, indicating that the sink is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["no", 0.9999999999999646, 3.5367948860733204e-14, "The image shows a kitchen environment with a robotic arm (the agent) positioned above the sink. The bowl_1 is on the left counter, next to two other bowls. The robotic arm appears to be extended towards the right side of the image, above the sink, and not directly above or near the bowl_1. Given the current position of the arm, bowl_1 does not seem to be within immediate reach of the agent.", true, "<explanation>\nThe image shows a kitchen environment with a robotic arm (the agent) positioned above the sink. The bowl_1 is on the left counter, next to two other bowls. The robotic arm appears to be extended towards the right side of the image, above the sink, and not directly above or near the bowl_1. Given the current position of the arm, bowl_1 does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable piece_of_cloth_1": {"before": true, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["no", "no"], "holding bowl_1": ["no", "yes"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_2,cabinet_1": ["yes", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}}}, "step": 3, "actions": ["navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.9999999999999997, 2.875528981918422e-16, "The robotic arm (agent) is positioned near a desk and is extended towards the center of the room. The cabinet_1 appears to be the wooden cabinet along the left wall, near the oven. Given the position of the robotic arm, which is on the right side of the image and not close to the left wall where the cabinet is located, it does not seem to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near a desk and is extended towards the center of the room. The cabinet_1 appears to be the wooden cabinet along the left wall, near the oven. Given the position of the robotic arm, which is on the right side of the image and not close to the left wall where the cabinet is located, it does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 1.3655001622215132e-09, 0.9999999986344998, "In the image, the robotic arm (agent) is extended towards a set of cabinets and appears to be very close to them. The arm's end effector is positioned right in front of or next to the cabinet, indicating that the cabinet is within the agent's reach.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a set of cabinets and appears to be very close to them. The arm's end effector is positioned right in front of or next to the cabinet, indicating that the cabinet is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 1.217611486175463e-12, 0.9999999999987824, "In the image, the robotic arm (agent) is extended towards a set of cabinets or appliances. The arm appears to be very close to the surface of what looks like a cabinet or an appliance, and its gripper is positioned right in front of it. Given the proximity and orientation, it is reasonable to conclude that the cabinet (cabinet_1) is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a set of cabinets or appliances. The arm appears to be very close to the surface of what looks like a cabinet or an appliance, and its gripper is positioned right in front of it. Given the proximity and orientation, it is reasonable to conclude that the cabinet (cabinet_1) is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999999939455808, 6.054419213110163e-09, "In the image, the cabinet in question (cabinet_1) is visible. The door of the cabinet appears to be closed, as there is no visible gap or opening, and the robotic arm is not interacting with an open door. Therefore, the cabinet_1 is not open.", true, "<explanation>\nIn the image, the cabinet in question (cabinet_1) is visible. The door of the cabinet appears to be closed, as there is no visible gap or opening, and the robotic arm is not interacting with an open door. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.569029766148506e-16, 0.9999999999999999, "The image shows the robotic arm (the agent) positioned near a kitchen counter or appliance. The labels \"bowl_1\" and \"bowl_2\" are visible in the upper part of the image, indicating their locations. \"bowl_1\" appears to be on a shelf or inside a compartment above the robotic arm. The arm is extended towards the compartment, and its gripper is close to the area where \"bowl_1\" is located. Given the proximity of the gripper to \"bowl_1\", it seems that the bowl is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) positioned near a kitchen counter or appliance. The labels \"bowl_1\" and \"bowl_2\" are visible in the upper part of the image, indicating their locations. \"bowl_1\" appears to be on a shelf or inside a compartment above the robotic arm. The arm is extended towards the compartment, and its gripper is close to the area where \"bowl_1\" is located. Given the proximity of the gripper to \"bowl_1\", it seems that the bowl is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 7.260046994820693e-19, 1.0, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the shelf. Since bowl_2 is labeled and appears to be within the same compartment as bowl_1, and the arm is already positioned near them, it is reasonable to conclude that bowl_2 is within reach of the agent.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the shelf. Since bowl_2 is labeled and appears to be within the same compartment as bowl_1, and the arm is already positioned near them, it is reasonable to conclude that bowl_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999995255828, 4.744172182699522e-10, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1\" within the reach of the robotic arm. Therefore, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1\" within the reach of the robotic arm. Therefore, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"open cabinet_1": {"before": false, "after": true}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.49941922279201e-13, 0.99999999999985, "In the image, the robotic arm (agent) is positioned near a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_1 is on a shelf that appears to be at a similar height and within the horizontal reach of the robotic arm's end effector. The arm is extended toward the shelf, and there are no visible obstacles between the arm and bowl_1. Therefore, bowl_1 is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_1 is on a shelf that appears to be at a similar height and within the horizontal reach of the robotic arm's end effector. The arm is extended toward the shelf, and there are no visible obstacles between the arm and bowl_1. Therefore, bowl_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 9.77216306217031e-17, 0.9999999999999999, "In the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended toward the area where the bowls are placed. Bowl_2 is visible and seems to be within the same compartment as the arm's end effector, indicating that it is within the arm's reach. There are no visible obstructions between the arm and bowl_2, so the agent should be able to reach it.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended toward the area where the bowls are placed. Bowl_2 is visible and seems to be within the same compartment as the arm's end effector, indicating that it is within the arm's reach. There are no visible obstructions between the arm and bowl_2, so the agent should be able to reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999491502, 5.0849720538245905e-11, "In the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible information, \"piece_of_cloth_1\" is not in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible information, \"piece_of_cloth_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 2.4614886642583386e-14, 0.9999999999999754, "In the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The labels indicate the positions of the bowls, and bowl_1 appears to be within the same compartment that the robotic arm is reaching towards. The arm is extended and close to the area where bowl_1 is located, suggesting that the bowl is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The labels indicate the positions of the bowls, and bowl_1 appears to be within the same compartment that the robotic arm is reaching towards. The arm is extended and close to the area where bowl_1 is located, suggesting that the bowl is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.334830351649614e-16, 0.9999999999999999, "The image shows the robotic arm (the agent) extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are outlined in red, indicating their positions. Bowl_2 is positioned slightly above bowl_1, but both are within the same general area. Given the proximity of the arm to the shelf and the relative position of bowl_2, it appears that bowl_2 is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are outlined in red, indicating their positions. Bowl_2 is positioned slightly above bowl_1, but both are within the same general area. Given the proximity of the arm to the shelf and the relative position of bowl_2, it appears that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.999999999934921, 6.507906431288816e-11, "To determine if piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as piece_of_cloth_1 and check its proximity to the robotic arm. In the image, there is no visible object labeled as piece_of_cloth_1, nor is there any clear indication of a cloth-like object near the robotic arm. The only labeled objects are bowl_1 and bowl_2, which are above the arm. Therefore, I cannot confirm that piece_of_cloth_1 is in reach of the agent.", false, "<explanation>\nTo determine if piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as piece_of_cloth_1 and check its proximity to the robotic arm. In the image, there is no visible object labeled as piece_of_cloth_1, nor is there any clear indication of a cloth-like object near the robotic arm. The only labeled objects are bowl_1 and bowl_2, which are above the arm. Therefore, I cannot confirm that piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 7.703325869223337e-16, 0.9999999999999992, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the object labeled \"bowl_1\" is visible with a red bounding box. The arm appears to be extended toward the area where \"bowl_1\" is located. The distance between the end effector of the robotic arm and \"bowl_1\" seems short enough that the arm could reach and interact with the bowl. There are no visible obstacles directly between the arm and the bowl.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the object labeled \"bowl_1\" is visible with a red bounding box. The arm appears to be extended toward the area where \"bowl_1\" is located. The distance between the end effector of the robotic arm and \"bowl_1\" seems short enough that the arm could reach and interact with the bowl. There are no visible obstacles directly between the arm and the bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 5.264221918096461e-16, 0.9999999999999994, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the area where bowl_2 is situated. Given the proximity and orientation, it seems that bowl_2 is within the reach of the robotic arm.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the area where bowl_2 is situated. Given the proximity and orientation, it seems that bowl_2 is within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999959384, 4.061610440489485e-12, "In the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. There are labels for \"bowl_1\" and \"bowl_2\" in the upper part of the image, but there is no visible object labeled \"piece_of_cloth_1\" in the immediate vicinity of the robotic arm. Since \"piece_of_cloth_1\" is not visible or clearly within the reach of the agent, I cannot confirm that it is in reach.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. There are labels for \"bowl_1\" and \"bowl_2\" in the upper part of the image, but there is no visible object labeled \"piece_of_cloth_1\" in the immediate vicinity of the robotic arm. Since \"piece_of_cloth_1\" is not visible or clearly within the reach of the agent, I cannot confirm that it is in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 2.645696661001422e-14, 0.9999999999999736, "In the image, the robotic arm (agent) is positioned near a shelf where \"bowl_1\" is labeled. The arm appears to be extended towards the shelf, and \"bowl_1\" is located within the area that the arm can reach. The proximity of the arm to the bowl and the lack of visible obstacles between the arm and the bowl suggest that \"bowl_1\" is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf where \"bowl_1\" is labeled. The arm appears to be extended towards the shelf, and \"bowl_1\" is located within the area that the arm can reach. The proximity of the arm to the bowl and the lack of visible obstacles between the arm and the bowl suggest that \"bowl_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["no", 1.0, 1.2437524540506257e-19, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned on the upper shelf, and the robotic arm appears to be close to the shelf area. However, bowl_2 is higher up and further back compared to the current position of the robotic arm's gripper, which is closer to bowl_1. Given the arm's current position and orientation, bowl_2 does not appear to be within immediate reach of the agent without further extension or repositioning.", false, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned on the upper shelf, and the robotic arm appears to be close to the shelf area. However, bowl_2 is higher up and further back compared to the current position of the robotic arm's gripper, which is closer to bowl_1. Given the arm's current position and orientation, bowl_2 does not appear to be within immediate reach of the agent without further extension or repositioning.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["no", 0.9999999999986732, 1.3268336509637268e-12, "In the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. There are labels for \"bowl_1\" and \"bowl_2\" in the upper part of the image, but there is no visible label or clear indication of \"piece_of_cloth_1\" in the agent's immediate vicinity. Since \"piece_of_cloth_1\" is not visible or labeled within the reach of the robotic arm, I cannot confirm that it is in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. There are labels for \"bowl_1\" and \"bowl_2\" in the upper part of the image, but there is no visible label or clear indication of \"piece_of_cloth_1\" in the agent's immediate vicinity. Since \"piece_of_cloth_1\" is not visible or labeled within the reach of the robotic arm, I cannot confirm that it is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.0680173429555893e-15, 0.9999999999999989, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper. The arm is extended toward the shelf, and there are no visible obstacles between the gripper and \"bowl_1\". Given the proximity and orientation of the arm, \"bowl_1\" is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper. The arm is extended toward the shelf, and there are no visible obstacles between the gripper and \"bowl_1\". Given the proximity and orientation of the arm, \"bowl_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 9.633455391340597e-21, 1.0, "The image shows the robotic arm (the agent) near a kitchen counter and some labeled objects, including \"bowl_2\" and \"bowl_1,\" which are outlined in red. \"bowl_2\" appears to be on a shelf or inside a cabinet above the arm's current position. The arm is extended toward the area where the bowls are located, and the distance between the arm and \"bowl_2\" seems short enough that the arm could reach it with a slight adjustment. Therefore, \"bowl_2\" is within reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) near a kitchen counter and some labeled objects, including \"bowl_2\" and \"bowl_1,\" which are outlined in red. \"bowl_2\" appears to be on a shelf or inside a cabinet above the arm's current position. The arm is extended toward the area where the bowls are located, and the distance between the arm and \"bowl_2\" seems short enough that the arm could reach it with a slight adjustment. Therefore, \"bowl_2\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999447, 5.5300013578618086e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1.\" Without seeing the object or its label, I cannot confirm that it is within reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1.\" Without seeing the object or its label, I cannot confirm that it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.8453138739157226e-15, 0.9999999999999981, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's end effector. The arm is extended towards the shelf, and there are no visible obstructions between the arm and \"bowl_1\". Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's end effector. The arm is extended towards the shelf, and there are no visible obstructions between the arm and \"bowl_1\". Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.5370529852691605e-14, 0.9999999999999847, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned above bowl_1. The arm appears to be close to the shelf, and the bowls are not obstructed by any other objects. Given the proximity of the arm to the shelf and the visible reach of the arm, it seems that bowl_2 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned above bowl_1. The arm appears to be close to the shelf, and the bowls are not obstructed by any other objects. Given the proximity of the arm to the shelf and the visible reach of the arm, it seems that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999758358, 2.4164173156441078e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and assess its proximity to the robotic arm. In the image, there are labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1.\" Without visual confirmation of the object and its location relative to the robotic arm, I cannot confirm that it is within reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and assess its proximity to the robotic arm. In the image, there are labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1.\" Without visual confirmation of the object and its location relative to the robotic arm, I cannot confirm that it is within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.3649293933422916e-15, 0.9999999999999987, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is close to the robotic arm's gripper. The arm is extended toward the area where \"bowl_1\" is located, and there are no visible obstructions between the gripper and the bowl. Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is close to the robotic arm's gripper. The arm is extended toward the area where \"bowl_1\" is located, and there are no visible obstructions between the gripper and the bowl. Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.7067575810530229e-16, 0.9999999999999998, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the area where bowl_2 is situated. Given the proximity and the orientation of the arm, it seems that bowl_2 is within the reach of the agent.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and the gripper is aligned with the area where bowl_2 is situated. Given the proximity and the orientation of the arm, it seems that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999999998, 2.1257706539401924e-16, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the location of the piece_of_cloth_1 in the image and compare it to the position of the robotic arm (the agent). In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label or indication pointing to a piece_of_cloth_1. The robotic arm is near a refrigerator and some bowls, but there is no evidence that the piece_of_cloth_1 is within its reach or even present in the visible area.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the location of the piece_of_cloth_1 in the image and compare it to the position of the robotic arm (the agent). In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label or indication pointing to a piece_of_cloth_1. The robotic arm is near a refrigerator and some bowls, but there is no evidence that the piece_of_cloth_1 is within its reach or even present in the visible area.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.876920391710458e-15, 0.9999999999999961, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper, and there are no visible obstacles between the gripper and \"bowl_1\". The arm seems to be extended towards the shelf, suggesting that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper, and there are no visible obstacles between the gripper and \"bowl_1\". The arm seems to be extended towards the shelf, suggesting that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 4.371483080715091e-14, 0.9999999999999563, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to the area where \"bowl_2\" is located, suggesting that it is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to the area where \"bowl_2\" is located, suggesting that it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999524587, 4.754133032917491e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or within reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.2702113051983063e-15, 0.9999999999999968, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's gripper. The arm is extended toward the area where \"bowl_1\" is located, and there are no visible obstacles between the gripper and the bowl. Based on the proximity and orientation, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's gripper. The arm is extended toward the area where \"bowl_1\" is located, and there are no visible obstacles between the gripper and the bowl. Based on the proximity and orientation, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 3.4649972567758685e-20, 1.0, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are within the red bounding boxes. Bowl_2 is positioned on the shelf, and the arm is near enough that it could potentially reach and interact with bowl_2. There are no visible obstacles between the arm and bowl_2, and the arm's orientation suggests it can access the bowl.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are within the red bounding boxes. Bowl_2 is positioned on the shelf, and the arm is near enough that it could potentially reach and interact with bowl_2. There are no visible obstacles between the arm and bowl_2, and the arm's orientation suggests it can access the bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999870351, 1.2964899344695264e-11, "In the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen cabinets. However, there is no visible object that can be clearly identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visual evidence of a piece of cloth being present or within reach.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen cabinets. However, there is no visible object that can be clearly identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visual evidence of a piece of cloth being present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.2217523507402396e-16, 0.9999999999999997, "In the image, the robotic arm (agent) is positioned near a shelf or compartment, and the labels \"bowl_1\" and \"bowl_2\" are visible in red, indicating their locations. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper. The arm is extended toward the shelf, and there are no visible obstructions between the gripper and \"bowl_1\". Given the proximity and orientation, \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or compartment, and the labels \"bowl_1\" and \"bowl_2\" are visible in red, indicating their locations. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper. The arm is extended toward the shelf, and there are no visible obstructions between the gripper and \"bowl_1\". Given the proximity and orientation, \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.326971061984513e-13, 0.9999999999998673, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are within the same compartment. Given the proximity of the arm to the bowls and the open access to the shelf, it is reasonable to conclude that bowl_2 is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and both bowls are within the same compartment. Given the proximity of the arm to the bowls and the open access to the shelf, it is reasonable to conclude that bowl_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999998194, 1.8058693401916748e-13, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label indicating \"piece_of_cloth_1\" within the reach of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are not relevant to the question. Therefore, I conclude that the piece_of_cloth_1 is not in reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label indicating \"piece_of_cloth_1\" within the reach of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are not relevant to the question. Therefore, I conclude that the piece_of_cloth_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 6.469900258668975e-14, 0.9999999999999353, "The image shows the robotic arm (the agent) extended towards a shelf or compartment. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is directly in front of the robotic arm's gripper. The arm is positioned close enough to the shelf where \"bowl_1\" is located, indicating that the bowl is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) extended towards a shelf or compartment. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is directly in front of the robotic arm's gripper. The arm is positioned close enough to the shelf where \"bowl_1\" is located, indicating that the bowl is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["no", 1.0, 4.75468747560316e-17, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment, and the labels for bowl_1 and bowl_2 are visible above the arm, indicating their positions. However, both bowls appear to be located higher up and further back from the current position of the robotic arm's gripper. The arm does not seem to be directly aligned with or close enough to bowl_2 to grasp it at this moment.", false, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment, and the labels for bowl_1 and bowl_2 are visible above the arm, indicating their positions. However, both bowls appear to be located higher up and further back from the current position of the robotic arm's gripper. The arm does not seem to be directly aligned with or close enough to bowl_2 to grasp it at this moment.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable piece_of_cloth_1": ["no", 0.9999999999998371, 1.6286244289248444e-13, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is close to a metallic surface (likely a refrigerator) and some kitchen furniture, but no cloth is visible or within obvious reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is close to a metallic surface (likely a refrigerator) and some kitchen furniture, but no cloth is visible or within obvious reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.3897849661150024e-15, 0.9999999999999966, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is close to the robotic arm's gripper. The arm is extended towards the area where \"bowl_1\" is located, and there are no visible obstacles between the gripper and the bowl. Based on the proximity and orientation, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and \"bowl_1\" appears to be located on a shelf that is close to the robotic arm's gripper. The arm is extended towards the area where \"bowl_1\" is located, and there are no visible obstacles between the gripper and the bowl. Based on the proximity and orientation, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.5890979902149244e-18, 1.0, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls are labeled as bowl_1 and bowl_2. The arm is extended towards the area where the bowls are located. Bowl_2 appears to be within the same vertical and horizontal plane as the arm's end effector, suggesting that it is within the arm's reach. There are no visible obstructions between the arm and bowl_2, and the arm seems capable of reaching it.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls are labeled as bowl_1 and bowl_2. The arm is extended towards the area where the bowls are located. Bowl_2 appears to be within the same vertical and horizontal plane as the arm's end effector, suggesting that it is within the arm's reach. There are no visible obstructions between the arm and bowl_2, and the arm seems capable of reaching it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999907542, 9.245847608322567e-12, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1\" within the reach of the robotic arm. Therefore, based on the available visual information, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there are visible labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or clear indication of \"piece_of_cloth_1\" within the reach of the robotic arm. Therefore, based on the available visual information, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.5109020682759626e-15, 0.9999999999999964, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's gripper. The arm is extended towards the shelf, and the distance between the gripper and \"bowl_1\" seems small enough that the agent could reach and potentially grasp the bowl. Therefore, \"bowl_1\" is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's gripper. The arm is extended towards the shelf, and the distance between the gripper and \"bowl_1\" seems small enough that the agent could reach and potentially grasp the bowl. Therefore, \"bowl_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.5486355670005204e-14, 0.9999999999999846, "In the image, the robotic arm (agent) is extended towards a shelf or compartment where two bowls are labeled as bowl_1 and bowl_2. The labels indicate the positions of the bowls, and bowl_2 appears to be within the same compartment as the robotic arm's end effector. The arm is close enough to the bowls, suggesting that bowl_2 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf or compartment where two bowls are labeled as bowl_1 and bowl_2. The labels indicate the positions of the bowls, and bowl_2 appears to be within the same compartment as the robotic arm's end effector. The arm is close enough to the bowls, suggesting that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999987849, 1.2151015477027208e-12, "In the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. However, there is no visible object that can be identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visible evidence of a piece of cloth being present or within reach.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near a refrigerator and some kitchen furniture. However, there is no visible object that can be identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visible evidence of a piece of cloth being present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 5.596025152774327e-12, 0.9999999999944039, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls are labeled as bowl_1 and bowl_2. The arm appears to be extended towards the area where bowl_1 is located. Given the proximity of the arm to the shelf and the position of bowl_1, it seems that bowl_1 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls are labeled as bowl_1 and bowl_2. The arm appears to be extended towards the area where bowl_1 is located. Given the proximity of the arm to the shelf and the position of bowl_1, it seems that bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.7951343298299825e-19, 1.0, "The image shows the robotic arm (the agent) extended towards a shelf or compartment. The labels \"bowl_1\" and \"bowl_2\" are visible, and both appear to be located on a shelf in front of the robotic arm. The arm is positioned close to the shelf, and \"bowl_2\" is within the same compartment as the arm's end effector. Given the proximity and the orientation of the arm, it appears that \"bowl_2\" is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) extended towards a shelf or compartment. The labels \"bowl_1\" and \"bowl_2\" are visible, and both appear to be located on a shelf in front of the robotic arm. The arm is positioned close to the shelf, and \"bowl_2\" is within the same compartment as the arm's end effector. Given the proximity and the orientation of the arm, it appears that \"bowl_2\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.999999999989198, 1.0802039361828433e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or accessible to the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or accessible to the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 6.526722956969362e-13, 0.9999999999993473, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled, with \"bowl_1\" being the lower of the two. The arm appears to be very close to the shelf and is positioned at a height similar to \"bowl_1\". Given the proximity and alignment, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled, with \"bowl_1\" being the lower of the two. The arm appears to be very close to the shelf and is positioned at a height similar to \"bowl_1\". Given the proximity and alignment, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 4.0171608147574766e-17, 1.0, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and both appear to be located on a shelf above the robotic arm. The arm is extended towards the shelf area, and \"bowl_2\" is not far from the arm's end effector. Given the proximity and the orientation of the arm, it seems that \"bowl_2\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, and both appear to be located on a shelf above the robotic arm. The arm is extended towards the shelf area, and \"bowl_2\" is not far from the arm's end effector. Given the proximity and the orientation of the arm, it seems that \"bowl_2\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999898919, 1.0108155977540398e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object labeled as \"piece_of_cloth_1\" within the immediate vicinity of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" and there is no clear indication of a piece of cloth being present or within reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object labeled as \"piece_of_cloth_1\" within the immediate vicinity of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" and there is no clear indication of a piece of cloth being present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.9583623544935685e-12, 0.9999999999980417, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is very close to the robotic arm's gripper. Given the proximity and the orientation of the arm, it seems that the arm could easily reach and interact with \"bowl_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is very close to the robotic arm's gripper. Given the proximity and the orientation of the arm, it seems that the arm could easily reach and interact with \"bowl_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 2.4650144704552405e-17, 1.0, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on a shelf that is within the vertical and horizontal reach of the robotic arm, as the arm is extended towards the area where the bowls are located. The arm's end effector is close to the shelf, suggesting that it could reach and interact with \"bowl_2\".", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on a shelf that is within the vertical and horizontal reach of the robotic arm, as the arm is extended towards the area where the bowls are located. The arm's end effector is close to the shelf, suggesting that it could reach and interact with \"bowl_2\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999977969, 2.203084578078264e-12, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to look for the object labeled as \"piece_of_cloth_1\" in the image and see if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible object labeled as \"piece_of_cloth_1\" within the immediate vicinity of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are not the object in question. Therefore, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to look for the object labeled as \"piece_of_cloth_1\" in the image and see if it is close enough to the robotic arm for the arm to interact with it. In the image, there is no visible object labeled as \"piece_of_cloth_1\" within the immediate vicinity of the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are not the object in question. Therefore, I cannot confirm that the piece_of_cloth_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.5454332552993317e-16, 0.9999999999999999, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls are located, labeled as bowl_1 and bowl_2. The arm appears to be very close to the shelf, and bowl_1 is positioned on the lower shelf, within the area that the arm can reach. The gripper of the robotic arm is aligned with the shelf where bowl_1 is located, indicating that the bowl is within the arm's reach.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls are located, labeled as bowl_1 and bowl_2. The arm appears to be very close to the shelf, and bowl_1 is positioned on the lower shelf, within the area that the arm can reach. The gripper of the robotic arm is aligned with the shelf where bowl_1 is located, indicating that the bowl is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 9.11266673711727e-13, 0.9999999999990887, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and bowl_2 is positioned within the red bounding box above the arm. Given the proximity of the arm to the shelf and the location of bowl_2, it seems that bowl_2 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be close to the shelf, and bowl_2 is positioned within the red bounding box above the arm. Given the proximity of the arm to the shelf and the location of bowl_2, it seems that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999959782, 4.02180708954703e-12, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the provided image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or accessible to the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the provided image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The only labeled objects are \"bowl_1\" and \"bowl_2,\" and there is no indication of a piece_of_cloth_1 being present or accessible to the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 6.45833431635082e-14, 0.9999999999999354, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper, and the arm is extended toward it. The proximity and orientation of the arm suggest that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is directly in front of the robotic arm's gripper, and the arm is extended toward it. The proximity and orientation of the arm suggest that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 4.449477633179288e-16, 0.9999999999999996, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. \"bowl_2\" appears to be within the same vertical range as the robotic arm's gripper and is not obstructed by any visible barriers. The arm is extended towards the area where \"bowl_2\" is located, suggesting that it is within reach.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. \"bowl_2\" appears to be within the same vertical range as the robotic arm's gripper and is not obstructed by any visible barriers. The arm is extended towards the area where \"bowl_2\" is located, suggesting that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999824007, 1.759927662266352e-11, "To determine if piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as piece_of_cloth_1 and check its proximity to the robotic arm. In the image, there are labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or object identified as piece_of_cloth_1. Without visual confirmation of the piece_of_cloth_1's location, I cannot confirm that it is within reach of the agent.", false, "<explanation>\nTo determine if piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as piece_of_cloth_1 and check its proximity to the robotic arm. In the image, there are labels for \"bowl_1\" and \"bowl_2,\" but there is no visible label or object identified as piece_of_cloth_1. Without visual confirmation of the piece_of_cloth_1's location, I cannot confirm that it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 9.964970307101544e-18, 1.0, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible in red boxes above the arm. \"bowl_1\" appears to be located on a shelf that is within the vertical and horizontal reach of the robotic arm, as the arm is extended toward the area where the bowl is located. The proximity and orientation of the arm suggest that it can reach and potentially interact with \"bowl_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible in red boxes above the arm. \"bowl_1\" appears to be located on a shelf that is within the vertical and horizontal reach of the robotic arm, as the arm is extended toward the area where the bowl is located. The proximity and orientation of the arm suggest that it can reach and potentially interact with \"bowl_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 2.753296209975387e-12, 0.9999999999972468, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. The arm appears to be extended towards the area where the bowls are located. Given the proximity of the arm to the labeled position of \"bowl_2,\" it seems that the bowl is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. The arm appears to be extended towards the area where the bowls are located. Given the proximity of the arm to the labeled position of \"bowl_2,\" it seems that the bowl is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999999977, 2.29349852084552e-15, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the location of the piece_of_cloth_1 in the image and compare its position relative to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label or indication pointing to a piece_of_cloth_1. The robotic arm is near a refrigerator and some bowls, but there is no evidence that the piece_of_cloth_1 is present or within reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the location of the piece_of_cloth_1 in the image and compare its position relative to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth, nor is there any label or indication pointing to a piece_of_cloth_1. The robotic arm is near a refrigerator and some bowls, but there is no evidence that the piece_of_cloth_1 is present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.1713589239453069e-11, 0.9999999999882864, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The position of bowl_1 is close to the robotic arm's gripper, and there are no visible obstacles between the gripper and bowl_1. The arm appears to be in a position where it could reach and potentially grasp bowl_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The position of bowl_1 is close to the robotic arm's gripper, and there are no visible obstacles between the gripper and bowl_1. The arm appears to be in a position where it could reach and potentially grasp bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.1283219126244213e-12, 0.9999999999988717, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and there are no visible obstructions between the arm and bowl_2. Therefore, bowl_2 is within the reach of the agent.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment where both bowl_1 and bowl_2 are located. The arm appears to be close to these bowls, and there are no visible obstructions between the arm and bowl_2. Therefore, bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999964432, 3.55687149581067e-12, "In the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible evidence, \"piece_of_cloth_1\" is not in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible evidence, \"piece_of_cloth_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.5114569497799677e-12, 0.9999999999984885, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The position of bowl_1 appears to be close to the robotic arm's gripper, and there are no visible obstacles between the gripper and bowl_1. The arm seems to be in a position where it could potentially grasp bowl_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The position of bowl_1 appears to be close to the robotic arm's gripper, and there are no visible obstacles between the gripper and bowl_1. The arm seems to be in a position where it could potentially grasp bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 9.378420250544441e-16, 0.9999999999999991, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned above bowl_1. The arm appears to be close to the shelf, and the labels indicate that both bowls are within the same general area. Given the proximity of the arm to the shelf and the position of bowl_2, it seems that bowl_2 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 is positioned above bowl_1. The arm appears to be close to the shelf, and the labels indicate that both bowls are within the same general area. Given the proximity of the arm to the shelf and the position of bowl_2, it seems that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999702385, 2.9761548846950615e-11, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object that is clearly labeled or identifiable as \"piece_of_cloth_1\" near the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, I cannot confirm that the piece_of_cloth_1 is within reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the object labeled as \"piece_of_cloth_1\" and check its proximity to the robotic arm. In the image, there is no visible object that is clearly labeled or identifiable as \"piece_of_cloth_1\" near the robotic arm. The only visible labels are for \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, I cannot confirm that the piece_of_cloth_1 is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 1.562269524347128e-12, 0.9999999999984377, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_1 is positioned on a shelf that appears to be within the reach of the robotic arm, as the arm is very close to the shelf and the bowl. The proximity and orientation of the arm suggest that it can interact with bowl_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_1 is positioned on a shelf that appears to be within the reach of the robotic arm, as the arm is very close to the shelf and the bowl. The proximity and orientation of the arm suggest that it can interact with bowl_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 5.092616506186738e-14, 0.999999999999949, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf where both bowl_1 and bowl_2 are located. The arm appears to be very close to these bowls, and there are no visible obstacles between the arm and bowl_2. The proximity suggests that the arm could reach and interact with bowl_2.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf where both bowl_1 and bowl_2 are located. The arm appears to be very close to these bowls, and there are no visible obstacles between the arm and bowl_2. The proximity suggests that the arm could reach and interact with bowl_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999999996, 4.471274319151615e-16, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The robotic arm is positioned near a metallic surface (likely a refrigerator or oven), and there are some labeled bowls above, but no cloth is visible or labeled in the agent's vicinity.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and assess its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm or within its immediate reach. The robotic arm is positioned near a metallic surface (likely a refrigerator or oven), and there are some labeled bowls above, but no cloth is visible or labeled in the agent's vicinity.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 2.8507009834124447e-16, 0.9999999999999997, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's end effector. The arm is extended toward the shelf, and there are no visible obstructions between the arm and \"bowl_1\". Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_1\" appears to be on a shelf that is close to the robotic arm's end effector. The arm is extended toward the shelf, and there are no visible obstructions between the arm and \"bowl_1\". Given the proximity and the orientation of the arm, it seems that \"bowl_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.4733750755129872e-18, 1.0, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. \"bowl_2\" appears to be on a higher shelf, but it is within the vertical and horizontal reach of the robotic arm, which is extended toward the shelf area. The arm does not appear to be obstructed from reaching \"bowl_2,\" so it is reasonable to conclude that \"bowl_2\" is in reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet, and the labels \"bowl_1\" and \"bowl_2\" are visible above the arm, indicating the locations of the bowls. \"bowl_2\" appears to be on a higher shelf, but it is within the vertical and horizontal reach of the robotic arm, which is extended toward the shelf area. The arm does not appear to be obstructed from reaching \"bowl_2,\" so it is reasonable to conclude that \"bowl_2\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999991018, 8.982075138231196e-13, "In the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object that can be clearly identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visual evidence of a piece of cloth being present or within reach.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near what appears to be a refrigerator and some kitchen furniture. However, there is no visible object that can be clearly identified as \"piece_of_cloth_1\" within the immediate reach of the robotic arm. The labels in the image only indicate the presence of \"bowl_1\" and \"bowl_2,\" and there is no indication or visual evidence of a piece of cloth being present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 5.075426132698884e-15, 0.9999999999999949, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The labels indicate the positions of the bowls, and bowl_1 appears to be on a shelf directly in front of the robotic arm's gripper. The arm is close enough to the shelf, and the gripper is aligned with the area where bowl_1 is located, suggesting that the bowl is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls are labeled as bowl_1 and bowl_2. The labels indicate the positions of the bowls, and bowl_1 appears to be on a shelf directly in front of the robotic arm's gripper. The arm is close enough to the shelf, and the gripper is aligned with the area where bowl_1 is located, suggesting that the bowl is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 4.957266899888929e-19, 1.0, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to reach \"bowl_2\" based on its position and the proximity of the end effector (gripper) to the labeled area. Therefore, \"bowl_2\" is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to reach \"bowl_2\" based on its position and the proximity of the end effector (gripper) to the labeled area. Therefore, \"bowl_2\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999999091, 9.09523729639705e-14, "In the image, the robotic arm (agent) is visible near what appears to be a kitchen area, with its gripper extended toward an appliance. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or vicinity of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible information, \"piece_of_cloth_1\" is not in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near what appears to be a kitchen area, with its gripper extended toward an appliance. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or vicinity of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible information, \"piece_of_cloth_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 3.1185394676645833e-13, 0.9999999999996881, "In the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended toward the area where bowl_1 is situated. Given the proximity of the arm to the compartment and the visible alignment, it seems that bowl_1 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or compartment where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended toward the area where bowl_1 is situated. Given the proximity of the arm to the compartment and the visible alignment, it seems that bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.3017656381999539e-16, 0.9999999999999999, "In the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended towards the area where the bowls are placed. Bowl_2 is visible and seems to be within the same vertical and horizontal plane as the arm's end effector. Given the proximity and the orientation of the arm, it looks like bowl_2 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a shelf or cabinet where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be extended towards the area where the bowls are placed. Bowl_2 is visible and seems to be within the same vertical and horizontal plane as the arm's end effector. Given the proximity and the orientation of the arm, it looks like bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.999999999999551, 4.489512608865008e-13, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is extended towards what appears to be a kitchen appliance, but there is no clear indication of a piece of cloth being present or within reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the image, there is no visible object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is extended towards what appears to be a kitchen appliance, but there is no clear indication of a piece of cloth being present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 9.465087950686245e-12, 0.9999999999905349, "The image shows the robotic arm (the agent) extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be very close to the shelf and the bowls, with the gripper positioned near bowl_1. Given the proximity and the orientation of the arm, it seems that bowl_1 is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be very close to the shelf and the bowls, with the gripper positioned near bowl_1. Given the proximity and the orientation of the arm, it seems that bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.5328342259375688e-13, 0.9999999999998467, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to both bowls, suggesting that \"bowl_2\" is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The labels \"bowl_1\" and \"bowl_2\" are visible, indicating the locations of these objects. \"bowl_2\" appears to be on an upper shelf, and the robotic arm is extended towards the shelves. The arm seems to be close enough to both bowls, suggesting that \"bowl_2\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999999902, 9.77193175996784e-15, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the provided image, there is no visible object that can be clearly identified as a piece of cloth near the robotic arm or within its immediate reach. The robotic arm is close to a metallic surface (possibly a refrigerator or oven) and some bowls are labeled, but there is no indication of a piece of cloth present or within reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 in the image and check its proximity to the robotic arm. In the provided image, there is no visible object that can be clearly identified as a piece of cloth near the robotic arm or within its immediate reach. The robotic arm is close to a metallic surface (possibly a refrigerator or oven) and some bowls are labeled, but there is no indication of a piece of cloth present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 2.2467980136678403e-13, 0.9999999999997753, "In the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The label \"bowl_1\" is visible and appears to be located on a shelf that is close to the robotic arm's gripper. The proximity of the gripper to the shelf where \"bowl_1\" is located suggests that the bowl is within the reach of the agent, as there are no visible obstacles between the gripper and the bowl.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned near a set of shelves or a cabinet. The label \"bowl_1\" is visible and appears to be located on a shelf that is close to the robotic arm's gripper. The proximity of the gripper to the shelf where \"bowl_1\" is located suggests that the bowl is within the reach of the agent, as there are no visible obstacles between the gripper and the bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 9.321712957985885e-13, 0.9999999999990679, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 appears to be positioned on the same shelf as bowl_1, and both are within the vicinity of the robotic arm's reach. The arm is already close to the shelf, indicating that bowl_2 is within the operational range of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. Bowl_2 appears to be positioned on the same shelf as bowl_1, and both are within the vicinity of the robotic arm's reach. The arm is already close to the shelf, indicating that bowl_2 is within the operational range of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999977575, 2.2425247369432226e-12, "In the image, the robotic arm (agent) is visible near a kitchen counter and some appliances. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible evidence, \"piece_of_cloth_1\" is not in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near a kitchen counter and some appliances. However, there is no visible object labeled or identifiable as \"piece_of_cloth_1\" within the immediate reach or grasping area of the robotic arm. The only labeled objects are \"bowl_1\" and \"bowl_2,\" which are above the arm. Therefore, based on the visible evidence, \"piece_of_cloth_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 5.537132689654159e-14, 0.9999999999999446, "In the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be very close to the shelf, and bowl_1 is positioned near the edge of the shelf, within the area the arm can reach. Given the proximity and the orientation of the arm, it seems that bowl_1 is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is extended towards a shelf where two bowls, labeled bowl_1 and bowl_2, are located. The arm appears to be very close to the shelf, and bowl_1 is positioned near the edge of the shelf, within the area the arm can reach. Given the proximity and the orientation of the arm, it seems that bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 3.1613960176614747e-16, 0.9999999999999997, "To determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment, and the labels for bowl_2 and bowl_1 are visible above the arm, indicating their positions. The arm appears to be close to these bowls, and there is no visible obstruction between the arm and bowl_2. The proximity suggests that the arm could reach bowl_2.", true, "<explanation>\nTo determine if bowl_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of bowl_2. In the image, the robotic arm is extended towards a shelf or compartment, and the labels for bowl_2 and bowl_1 are visible above the arm, indicating their positions. The arm appears to be close to these bowls, and there is no visible obstruction between the arm and bowl_2. The proximity suggests that the arm could reach bowl_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.9999999999985266, 1.4733452749345648e-12, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 and check its proximity to the robotic arm. In the image, I do not see any object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is close to a metallic surface (likely a refrigerator or oven) and some bowls are labeled above, but there is no visible piece of cloth within the arm's immediate reach.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to visually identify the piece_of_cloth_1 and check its proximity to the robotic arm. In the image, I do not see any object that is clearly identifiable as a piece of cloth near the robotic arm. The arm is close to a metallic surface (likely a refrigerator or oven) and some bowls are labeled above, but there is no visible piece of cloth within the arm's immediate reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": true}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}], "replans": [{"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6111111111111112, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 4, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 5, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 6, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 7, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 8, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 9, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 10, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 11, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 12, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 13, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 14, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 15, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 16, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 17, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 18, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 19, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 20, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 21, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 22, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 23, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 24, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 25, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 26, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 27, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 28, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.375, "yes_correct": 3, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 29, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7222222222222222, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 30, "actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 4.7130175548309585e-09, 0.9999999952869825, "The robotic arm (agent) is positioned close to cabinet_1, and its end effector is extended towards the upper area where cabinet_1 is located. The arm appears to be within a reasonable distance to interact with cabinet_1, suggesting that it is in reach.", true, "<explanation>\nThe robotic arm (agent) is positioned close to cabinet_1, and its end effector is extended towards the upper area where cabinet_1 is located. The arm appears to be within a reasonable distance to interact with cabinet_1, suggesting that it is in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 1.64627634858434e-15, 0.9999999999999983, "The robotic arm (agent) is positioned near the kitchen counter and is extended towards the area labeled \"cabinet_2.\" The sink is partially visible to the right of the robotic arm, and the arm appears to be close enough to interact with objects on or near the sink. Given the proximity and the typical reach of such robotic arms in virtual household simulators, it is reasonable to conclude that the sink_1 is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the kitchen counter and is extended towards the area labeled \"cabinet_2.\" The sink is partially visible to the right of the robotic arm, and the arm appears to be close enough to interact with objects on or near the sink. Given the proximity and the typical reach of such robotic arms in virtual household simulators, it is reasonable to conclude that the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable bowl_2": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 2.2926645425325356e-09, 0.9999999977073355, "The robotic arm (agent) is positioned close to cabinet_1, and its end effector is extended towards the upper area where cabinet_1 is located. The arm appears to be within a reasonable distance to interact with cabinet_1, suggesting that it is in reach.", true, "<explanation>\nThe robotic arm (agent) is positioned close to cabinet_1, and its end effector is extended towards the upper area where cabinet_1 is located. The arm appears to be within a reasonable distance to interact with cabinet_1, suggesting that it is in reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.9999996106515417, 3.893484582149388e-07, "To determine if cabinet_1 is open, I need to observe the state of the cabinet doors. In the image, cabinet_1 is the upper cabinet. The doors of cabinet_1 appear to be closed, as there is no visible gap or open space indicating that the doors are ajar.", true, "<explanation>\nTo determine if cabinet_1 is open, I need to observe the state of the cabinet doors. In the image, cabinet_1 is the upper cabinet. The doors of cabinet_1 appear to be closed, as there is no visible gap or open space indicating that the doors are ajar.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding bowl_2": [true, false, false], "holding piece_of_cloth_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.9999999773614697, 2.2638530281707436e-08, "To determine if cabinet_1 is open, I need to look at the doors of cabinet_1 and see if any of them are visibly ajar or not aligned with the closed position. In the image, all the doors of cabinet_1 appear to be closed and flush with the cabinet frame, indicating that cabinet_1 is not open.", false, "<explanation>\nTo determine if cabinet_1 is open, I need to look at the doors of cabinet_1 and see if any of them are visibly ajar or not aligned with the closed position. In the image, all the doors of cabinet_1 appear to be closed and flush with the cabinet frame, indicating that cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["yes", 1.7507004079486435e-09, 0.9999999982492996, "The robotic arm (agent) is positioned very close to bowl_1, and its gripper is aligned with the area where bowl_1 is located. The arm appears to be extended towards the bowl, indicating that bowl_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to bowl_1, and its gripper is aligned with the area where bowl_1 is located. The arm appears to be extended towards the bowl, indicating that bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_2": ["yes", 1.8432691531560095e-10, 0.9999999998156731, "The robotic arm (agent) is positioned very close to bowl_2, which is located in the upper cabinet. The arm appears to be extended towards the cabinet where bowl_2 is placed, and there are no visible obstructions between the arm and the bowl. The proximity and orientation of the arm suggest that bowl_2 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to bowl_2, which is located in the upper cabinet. The arm appears to be extended towards the cabinet where bowl_2 is placed, and there are no visible obstructions between the arm and the bowl. The proximity and orientation of the arm suggest that bowl_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable piece_of_cloth_1": ["no", 0.999999999999666, 3.3393556573514003e-13, "To determine if the piece_of_cloth_1 is in reach of the agent, I need to first check if the piece_of_cloth_1 is visible in the image and then see if it is within the area that the robotic arm (the agent) can reach. In the image, there is no visible object labeled as piece_of_cloth_1. The robotic arm is currently interacting with objects labeled as bowl_1 and bowl_2, which are inside an upper cabinet. Since piece_of_cloth_1 is not visible or labeled in the image, I cannot confirm that it is within reach of the agent.", false, "<explanation>\nTo determine if the piece_of_cloth_1 is in reach of the agent, I need to first check if the piece_of_cloth_1 is visible in the image and then see if it is within the area that the robotic arm (the agent) can reach. In the image, there is no visible object labeled as piece_of_cloth_1. The robotic arm is currently interacting with objects labeled as bowl_1 and bowl_2, which are inside an upper cabinet. Since piece_of_cloth_1 is not visible or labeled in the image, I cannot confirm that it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sink_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable sink_1": ["no", 0.9999999999999993, 7.127629507849999e-16, "First, I will identify the location of the robotic arm (the agent) and the sink_1. The robotic arm is positioned near the upper cabinets and is currently interacting with objects in the upper cabinet area. The sink_1 is visible at the bottom right of the image, separated from the agent by the counter and some drawers. Given the current position of the robotic arm, it does not appear to be close enough to reach the sink_1 without moving. Therefore, the sink_1 is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the robotic arm (the agent) and the sink_1. The robotic arm is positioned near the upper cabinets and is currently interacting with objects in the upper cabinet area. The sink_1 is visible at the bottom right of the image, separated from the agent by the counter and some drawers. Given the current position of the robotic arm, it does not appear to be close enough to reach the sink_1 without moving. Therefore, the sink_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable sink_1": ["yes", 7.542859111320426e-07, 0.9999992457140888, "The robotic arm (agent) is positioned above the counter, and the sink (sink_1) is directly below the arm on the counter. The arm appears to be close enough to interact with the sink, indicating that the sink is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the sink (sink_1) is directly below the arm on the counter. The arm appears to be close enough to interact with the sink, indicating that the sink is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": true, "after": false}, "reachable bowl_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable piece_of_cloth_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(bowl_2)", "place-on(bowl_2, sink_1)", "grasp(piece_of_cloth_1)", "place-on(piece_of_cloth_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["yes", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_1,sink_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["yes", "yes"], "nextto bowl_2,sink_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.35294117647058826, "yes_correct": 6, "yes_total": 17, "no_accuracy": 0.8, "no_correct": 24, "no_total": 30, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7333333333333333, "no_correct": 11, "no_total": 15}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}}}, "step": 2, "actions": ["navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}], "remaining_actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.999999999910256, 8.974400172188597e-11, "The apple_1 is located on the counter to the left side of the image, near a microwave. The robotic arm (agent) is positioned further to the right, near a table and not directly adjacent to the counter where the apple_1 is placed. Given the distance and the current position of the arm, the apple_1 does not appear to be within immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near a microwave. The robotic arm (agent) is positioned further to the right, near a table and not directly adjacent to the counter where the apple_1 is placed. Given the distance and the current position of the arm, the apple_1 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 3.1351643526915145e-10, 0.9999999996864836, "The robotic arm (agent) is positioned above the counter where the apple_1 is located. The apple_1 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, it appears that apple_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter where the apple_1 is located. The apple_1 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, it appears that apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.1509292840016005e-08, 0.9999999884907071, "The robotic arm (agent) is positioned above the counter, and the object labeled \"apple_2\" is on the counter near the arm. The arm appears to be close enough to the apple_2, suggesting that it can reach and potentially interact with or grasp the apple_2.", false, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and the object labeled \"apple_2\" is on the counter near the arm. The arm appears to be close enough to the apple_2, suggesting that it can reach and potentially interact with or grasp the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.553354565660617e-08, 0.9999999844664543, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, suggesting that it can easily reach and interact with it. The proximity indicates that the refrigerator is indeed in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, suggesting that it can easily reach and interact with it. The proximity indicates that the refrigerator is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.5831822360132416e-07, 0.9999998416817764, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9971261024428946, 0.0028738975571054575, "In the image, the robotic arm is positioned near the handle of the refrigerator, but the door appears to be fully closed. There is no visible gap or indication that the refrigerator door is open.", true, "<explanation>\nIn the image, the robotic arm is positioned near the handle of the refrigerator, but the door appears to be fully closed. There is no visible gap or indication that the refrigerator door is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 4.613536370277975e-07, 0.9999995386463629, "The image shows the door of the refrigerator is open, as the interior shelves and contents of the refrigerator are visible, and the robotic arm is interacting with objects inside. This indicates that the refrigerator is indeed open.", true, "<explanation>\nThe image shows the door of the refrigerator is open, as the interior shelves and contents of the refrigerator are visible, and the robotic arm is interacting with objects inside. This indicates that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 3.7801259866880446e-11, 0.9999999999621988, "The robotic arm (agent) is positioned above the counter where apple_1 is located. The arm appears to be extended towards the area where apple_1 is placed, and there are no visible obstacles between the arm and apple_1. The apple_1 is on the counter, within the immediate vicinity of the arm's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter where apple_1 is located. The arm appears to be extended towards the area where apple_1 is placed, and there are no visible obstacles between the arm and apple_1. The apple_1 is on the counter, within the immediate vicinity of the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 4.9743040191168696e-08, 0.9999999502569598, "The robotic arm (agent) is positioned above the counter, and \"apple_2\" is located on the counter near the arm. The arm appears to be close enough to the apple_2, suggesting that it is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and \"apple_2\" is located on the counter near the arm. The arm appears to be close enough to the apple_2, suggesting that it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 2.8576149101092537e-12, 0.9999999999971424, "The robotic arm (agent) is positioned above the counter where apple_1 is located. The arm appears to be close enough to the apple_1, which is on the counter near the other objects. Given the proximity and the fact that the arm is already extended toward the counter, apple_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter where apple_1 is located. The arm appears to be close enough to the apple_1, which is on the counter near the other objects. Given the proximity and the fact that the arm is already extended toward the counter, apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999931975474, 6.8024525588146804e-09, "To determine if the agent (robotic arm) is holding the object labeled \"apple_2,\" I need to check if the apple_2 is within the gripper or end effector of the robotic arm. In the image, the robotic arm's gripper is positioned above the counter, but the apple_2 is still on the counter and not within the gripper. Therefore, the agent is not holding the apple_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the object labeled \"apple_2,\" I need to check if the apple_2 is within the gripper or end effector of the robotic arm. In the image, the robotic arm's gripper is positioned above the counter, but the apple_2 is still on the counter and not within the gripper. Therefore, the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 8.106805051016164e-05, 0.9999189319494899, "In the image, the robotic arm (agent) is holding a green object. The label \"apple_1\" is pointing to this green object, indicating that it is apple_1. Therefore, the agent is holding apple_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is holding a green object. The label \"apple_1\" is pointing to this green object, indicating that it is apple_1. Therefore, the agent is holding apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["no", 0.9999999638784289, 3.612157104752325e-08, "To determine if apple_1 is on top of apple_2, I need to observe the positions of both apples in the image. The labels indicate the locations of apple_1 and apple_2. Apple_1 is being held by the robotic arm and is not in contact with apple_2, which is on the counter near other apples. Therefore, apple_1 is not on top of apple_2.", true, "<explanation>\nTo determine if apple_1 is on top of apple_2, I need to observe the positions of both apples in the image. The labels indicate the locations of apple_1 and apple_2. Apple_1 is being held by the robotic arm and is not in contact with apple_2, which is on the counter near other apples. Therefore, apple_1 is not on top of apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["no", 0.9999999940411266, 5.9588733444392e-09, "To determine if apple_1 is next to apple_2, I need to locate both objects in the image. The labels \"apple_1\" and \"apple_2\" are visible. Apple_1 is being held by the robotic arm, while apple_2 is on the counter near the sink. Since apple_1 is not on the counter and is instead in the robotic arm's grip, it is not physically next to apple_2.", true, "<explanation>\nTo determine if apple_1 is next to apple_2, I need to locate both objects in the image. The labels \"apple_1\" and \"apple_2\" are visible. Apple_1 is being held by the robotic arm, while apple_2 is on the counter near the sink. Since apple_1 is not on the counter and is instead in the robotic arm's grip, it is not physically next to apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 6.467669887427066e-06, 0.9999935323301126, "The image shows a robotic arm (the agent) holding a green apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the interior of the refrigerator, indicating that the refrigerator is within the agent's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a green apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the interior of the refrigerator, indicating that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0024850021714109575, 0.997514997828589, "The image shows a robotic arm (the agent) holding an apple (apple_1) directly in its gripper. Since the apple is already being held by the agent, it is clearly within reach.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple (apple_1) directly in its gripper. Since the apple is already being held by the agent, it is clearly within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7407407407407407, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.6865671641791045, "no_correct": 92, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9722222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.4583333333333333, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.3275862068965517, "no_correct": 19, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7530864197530864, "yes_accuracy": 0.8214285714285714, "yes_correct": 23, "yes_total": 28, "no_accuracy": 0.7388059701492538, "no_correct": 99, "no_total": 134, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.4861111111111111, "yes_accuracy": 0.7142857142857143, "yes_correct": 10, "yes_total": 14, "no_accuracy": 0.43103448275862066, "no_correct": 25, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999849372, 1.506284566269931e-11, "The apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table or counter, and appears to be some distance away from the apple_1. Given the apparent distance and the orientation of the arm, it does not seem that the apple_1 is within immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table or counter, and appears to be some distance away from the apple_1. Given the apparent distance and the orientation of the arm, it does not seem that the apple_1 is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.8093725989725208e-09, 0.9999999981906273, "The robotic arm (agent) is positioned next to the counter where the apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and there are no visible obstacles between the arm and the apple. The arm appears to be capable of reaching and interacting with objects on the counter within its immediate vicinity.", true, "<explanation>\nThe robotic arm (agent) is positioned next to the counter where the apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and there are no visible obstacles between the arm and the apple. The arm appears to be capable of reaching and interacting with objects on the counter within its immediate vicinity.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.4641468377338676e-09, 0.9999999975358531, "The robotic arm (agent) is positioned next to the counter where the apple_2 is located. The apple_2 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, it appears that apple_2 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned next to the counter where the apple_2 is located. The apple_2 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, it appears that apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 2.778455504033923e-08, 0.999999972215445, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 2.3660518076494353e-07, 0.9999997633948192, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance of the refrigerator door, suggesting that it is well within reach for interaction.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance of the refrigerator door, suggesting that it is well within reach for interaction.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9985551675125064, 0.0014448324874935658, "In the image, the robotic arm is positioned near the handle of the refrigerator, but the refrigerator door appears to be fully closed. There is no visible gap or indication that the door is open.", true, "<explanation>\nIn the image, the robotic arm is positioned near the handle of the refrigerator, but the refrigerator door appears to be fully closed. There is no visible gap or indication that the door is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 0.00012862140975698538, 0.999871378590243, "In the image, the door of the refrigerator is visibly open, and the robotic arm is interacting with objects inside the refrigerator. This confirms that the electric_refrigerator_1 is open.", true, "<explanation>\nIn the image, the door of the refrigerator is visibly open, and the robotic arm is interacting with objects inside the refrigerator. This confirms that the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.1977683312090421e-11, 0.9999999999880224, "The robotic arm (agent) is positioned close to the counter where apple_1 is located. The arm appears to be extended towards the apples, and apple_1 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_1, and the arm's end effector is close enough to grasp the apple.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the counter where apple_1 is located. The arm appears to be extended towards the apples, and apple_1 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_1, and the arm's end effector is close enough to grasp the apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.2454783391240638e-10, 0.9999999998754522, "The robotic arm (agent) is positioned near the counter where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_2, and the arm's end effector is close enough to grasp the apple.", false, "<explanation>\nThe robotic arm (agent) is positioned near the counter where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_2, and the arm's end effector is close enough to grasp the apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 2.813680998526993e-11, 0.9999999999718632, "The robotic arm (agent) is positioned close to the counter where apple_1 is located. The arm appears to be extended towards the apples, and apple_1 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_1, and the arm's end effector is close enough to grasp the apple.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the counter where apple_1 is located. The arm appears to be extended towards the apples, and apple_1 is on the counter within the immediate vicinity of the arm's reach. There are no visible obstacles between the arm and apple_1, and the arm's end effector is close enough to grasp the apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999932686421, 6.731357877161121e-09, "To determine if the agent (robotic arm) is holding apple_2, I need to observe the position of the robotic arm's gripper and see if it is grasping or in contact with apple_2. In the image, the robotic arm's gripper is positioned above the counter, but it is not holding or grasping apple_2. Apple_2 is resting on the counter, separate from the gripper.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding apple_2, I need to observe the position of the robotic arm's gripper and see if it is grasping or in contact with apple_2. In the image, the robotic arm's gripper is positioned above the counter, but it is not holding or grasping apple_2. Apple_2 is resting on the counter, separate from the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 1.494454339070526e-06, 0.9999985055456609, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is gripping a green object, and the label \"apple_1\" is pointing to this object. This indicates that the object being held by the agent is indeed \"apple_1\".", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is gripping a green object, and the label \"apple_1\" is pointing to this object. This indicates that the object being held by the agent is indeed \"apple_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["no", 0.9999980856294506, 1.91437054941292e-06, "In the image, the robotic arm is holding an apple labeled \"apple_2.\" Another apple, labeled \"apple_1,\" is on the counter near the sink. \"apple_2\" is not placed on top of \"apple_1\"; instead, it is being held by the robotic arm and is separate from \"apple_1.\" Therefore, \"apple_1\" is not on top of \"apple_2.\"", true, "<explanation>\nIn the image, the robotic arm is holding an apple labeled \"apple_2.\" Another apple, labeled \"apple_1,\" is on the counter near the sink. \"apple_2\" is not placed on top of \"apple_1\"; instead, it is being held by the robotic arm and is separate from \"apple_1.\" Therefore, \"apple_1\" is not on top of \"apple_2.\"\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["no", 0.9999953939921107, 4.606007889330122e-06, "In the image, the object labeled \"apple_1\" is being held by the robotic arm and is not placed on the counter. The object labeled \"apple_2\" is on the counter near a plate of food. Since \"apple_1\" is not placed next to \"apple_2\" but is instead being held by the robotic arm, they are not next to each other.", true, "<explanation>\nIn the image, the object labeled \"apple_1\" is being held by the robotic arm and is not placed on the counter. The object labeled \"apple_2\" is on the counter near a plate of food. Since \"apple_1\" is not placed next to \"apple_2\" but is instead being held by the robotic arm, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.753884774388156e-06, 0.9999912461152256, "The image shows the robotic arm (the agent) holding an apple in front of an open refrigerator. Since the arm is able to interact with objects inside the refrigerator, it indicates that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe image shows the robotic arm (the agent) holding an apple in front of an open refrigerator. Since the arm is able to interact with objects inside the refrigerator, it indicates that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0005502952370932276, 0.9994497047629067, "The image shows a robotic arm (the agent) holding an apple inside what appears to be a refrigerator. Since the apple is already in the gripper of the robotic arm, it is clearly within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple inside what appears to be a refrigerator. Since the apple is already in the gripper of the robotic arm, it is clearly within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6234567901234568, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5447761194029851, "no_correct": 73, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9722222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.19444444444444445, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.0, "no_correct": 0, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7592592592592593, "yes_accuracy": 0.8928571428571429, "yes_correct": 25, "yes_total": 28, "no_accuracy": 0.7313432835820896, "no_correct": 98, "no_total": 134, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9444444444444444, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9393939393939394, "no_correct": 62, "no_total": 66}, "nextto": {"accuracy": 0.5138888888888888, "yes_accuracy": 0.7857142857142857, "yes_correct": 11, "yes_total": 14, "no_accuracy": 0.4482758620689655, "no_correct": 26, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999943058, 5.6942490962978835e-12, "The apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned further to the right, near the kitchen island, and appears to be some distance away from the apple_1. Given the current position of the arm and the distance between the arm and the apple_1, it does not appear that the apple_1 is within immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned further to the right, near the kitchen island, and appears to be some distance away from the apple_1. Given the current position of the arm and the distance between the arm and the apple_1, it does not appear that the apple_1 is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 3.3612779220718773e-10, 0.9999999996638722, "The robotic arm (agent) is positioned near a countertop with several objects, including apple_1. Apple_1 is located close to the base of the robotic arm, and there are no visible obstacles between the arm and the apple. The arm appears to be capable of reaching and interacting with objects on the countertop within this proximity.", true, "<explanation>\nThe robotic arm (agent) is positioned near a countertop with several objects, including apple_1. Apple_1 is located close to the base of the robotic arm, and there are no visible obstacles between the arm and the apple. The arm appears to be capable of reaching and interacting with objects on the countertop within this proximity.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.850240019547272e-11, 0.9999999999714976, "The robotic arm (agent) is positioned near a counter with several objects, including apple_2. Apple_2 is located on the counter, close to the robotic arm's end effector. Given the proximity of apple_2 to the arm and the fact that the arm is already extended toward the objects on the counter, it appears that apple_2 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near a counter with several objects, including apple_2. Apple_2 is located on the counter, close to the robotic arm's end effector. Given the proximity of apple_2 to the arm and the fact that the arm is already extended toward the objects on the counter, it appears that apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 1.487084879930241e-14, 0.9999999999999851, "The robotic arm (agent) is positioned near a counter with several objects, including orange_2, which is highlighted in red. The arm appears to be extended toward the objects on the counter, and orange_2 is located close to the other objects that are within the arm's reach. Given the proximity of orange_2 to the robotic arm and the other objects, it is reasonable to conclude that orange_2 is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near a counter with several objects, including orange_2, which is highlighted in red. The arm appears to be extended toward the objects on the counter, and orange_2 is located close to the other objects that are within the arm's reach. Given the proximity of orange_2 to the robotic arm and the other objects, it is reasonable to conclude that orange_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 8.083345795190175e-07, 0.9999991916654205, "The robotic arm (agent) is positioned very close to the refrigerator door, with its gripper near the handle. This indicates that the refrigerator (electric_refrigerator_1) is within the reach of the agent, as the arm can easily interact with the handle or door.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the refrigerator door, with its gripper near the handle. This indicates that the refrigerator (electric_refrigerator_1) is within the reach of the agent, as the arm can easily interact with the handle or door.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 1.1175952516709241e-06, 0.9999988824047483, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with the handle or door.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with the handle or door.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999998089617501, 1.91038249930055e-07, "To determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or visibly separated from the main body of the refrigerator. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening between the door and the refrigerator body.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or visibly separated from the main body of the refrigerator. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening between the door and the refrigerator body.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.1974442008493885e-07, 0.9999997802555799, "In the image, I can see the edge of what appears to be a refrigerator door, and the interior side is visible, indicating that the door is not flush with the rest of the refrigerator. This suggests that the refrigerator is open.", true, "<explanation>\nIn the image, I can see the edge of what appears to be a refrigerator door, and the interior side is visible, indicating that the door is not flush with the rest of the refrigerator. This suggests that the refrigerator is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 3.078327542769615e-08, 0.9999999692167246, "The robotic arm (agent) is positioned close to the apple_1, which is on top of the counter. The arm's gripper is directly above or next to the apple_1, indicating that the apple_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the apple_1, which is on top of the counter. The arm's gripper is directly above or next to the apple_1, indicating that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 4.5259663361389835e-13, 0.9999999999995474, "The robotic arm (agent) is positioned close to the apple_2, which is on the counter. The arm's gripper is extended towards the apple_2, and it appears to be within the arm's immediate reach. There are no visible obstacles between the arm and the apple_2, so the agent can likely interact with or grasp the apple_2.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the apple_2, which is on the counter. The arm's gripper is extended towards the apple_2, and it appears to be within the arm's immediate reach. There are no visible obstacles between the arm and the apple_2, so the agent can likely interact with or grasp the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.3922769699744158e-07, 0.999999860772303, "The robotic arm (agent) is positioned very close to the object labeled \"apple_1\" on the counter. The arm's gripper is directly above or next to the apple, indicating that the apple is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the object labeled \"apple_1\" on the counter. The arm's gripper is directly above or next to the apple, indicating that the apple is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.999998346944181, 1.6530558190356135e-06, "The robotic arm, which is the agent, is positioned above the counter where the apple_2 is located. However, the gripper of the robotic arm is not closed around the apple_2, and the apple_2 is still resting on the counter. This indicates that the agent is not holding the apple_2.", true, "<explanation>\nThe robotic arm, which is the agent, is positioned above the counter where the apple_2 is located. However, the gripper of the robotic arm is not closed around the apple_2, and the apple_2 is still resting on the counter. This indicates that the agent is not holding the apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 4.182484387306225e-11, 0.9999999999581751, "I can see the robotic arm (the agent) in the image, and it is holding a green object. The object resembles an apple in shape and color. The label \"apple_1\" is not directly visible on the object, but based on the context and typical labeling in such environments, the green apple being held by the agent is likely \"apple_1\".", true, "<explanation>\nI can see the robotic arm (the agent) in the image, and it is holding a green object. The object resembles an apple in shape and color. The label \"apple_1\" is not directly visible on the object, but based on the context and typical labeling in such environments, the green apple being held by the agent is likely \"apple_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,orange_2": ["no", 0.999999830095637, 1.6990436300086797e-07, "To determine if apple_1 is on top of orange_2, I need to locate both objects in the image. The apple_1 is being held by the robotic arm and is not in contact with any other object. The orange_2 is on the table, as indicated by the red label. Since the apple_1 is not physically on top of the orange_2, the answer is \"No\".", true, "<explanation>\nTo determine if apple_1 is on top of orange_2, I need to locate both objects in the image. The apple_1 is being held by the robotic arm and is not in contact with any other object. The orange_2 is on the table, as indicated by the red label. Since the apple_1 is not physically on top of the orange_2, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,table_1": ["no", 0.9999999989108751, 1.089124882473492e-09, "To determine if apple_1 is on top of table_1, I need to identify both objects in the image. The apple_1 is being held by the robotic arm, as seen in the foreground of the image. Table_1 is the table in the center of the room with other objects on it. Since apple_1 is in the robotic arm and not resting on the table, it is not on top of table_1.", true, "<explanation>\nTo determine if apple_1 is on top of table_1, I need to identify both objects in the image. The apple_1 is being held by the robotic arm, as seen in the foreground of the image. Table_1 is the table in the center of the room with other objects on it. Since apple_1 is in the robotic arm and not resting on the table, it is not on top of table_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,orange_2": ["no", 0.9999999909526238, 9.047376138525392e-09, "First, I will identify the locations of apple_1 and orange_2 in the image. The apple_1 is being held by the robotic arm, which is in the foreground on the right side of the image. The orange_2 is highlighted in red text and is located on the table in the background. Since apple_1 is not on the table and is instead being held by the robotic arm, it is not next to orange_2.", true, "<explanation>\nFirst, I will identify the locations of apple_1 and orange_2 in the image. The apple_1 is being held by the robotic arm, which is in the foreground on the right side of the image. The orange_2 is highlighted in red text and is located on the table in the background. Since apple_1 is not on the table and is instead being held by the robotic arm, it is not next to orange_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,table_1": ["yes", 1.793404468258329e-09, 0.9999999982065956, "To determine if apple_1 is next to table_1, I need to identify both objects in the image. The robotic arm is holding an apple, which is likely apple_1. The table in the center of the image with chairs around it is table_1. The apple is being held by the robotic arm and is positioned close to the edge of the table, indicating proximity. Therefore, apple_1 is next to table_1.", false, "<explanation>\nTo determine if apple_1 is next to table_1, I need to identify both objects in the image. The robotic arm is holding an apple, which is likely apple_1. The table in the center of the image with chairs around it is table_1. The apple is being held by the robotic arm and is positioned close to the edge of the table, indicating proximity. Therefore, apple_1 is next to table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": true, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.779420342674818e-06, 0.9999982205796574, "The image shows a robotic arm (the agent) inside an open refrigerator, interacting with objects on the shelves. Since the arm is already inside and holding an object from within the refrigerator, it is clear that the electric_refrigerator_1 is within reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) inside an open refrigerator, interacting with objects on the shelves. Since the arm is already inside and holding an object from within the refrigerator, it is clear that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 4.501992951075237e-09, 0.999999995498007, "The image shows a robotic arm (the agent) inside a refrigerator. The arm's gripper is very close to, or possibly already holding, an apple (apple_1) on the refrigerator shelf. Since the apple is within the immediate grasp of the robotic arm, it is definitely in reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) inside a refrigerator. The arm's gripper is very close to, or possibly already holding, an apple (apple_1) on the refrigerator shelf. Since the apple is within the immediate grasp of the robotic arm, it is definitely in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.7093023255813954, "no_correct": 122, "no_total": 172, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "ontop": {"accuracy": 0.9666666666666667, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9642857142857143, "no_correct": 81, "no_total": 84}, "nextto": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.40789473684210525, "no_correct": 31, "no_total": 76}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7345679012345679, "yes_accuracy": 0.9230769230769231, "yes_correct": 24, "yes_total": 26, "no_accuracy": 0.6985294117647058, "no_correct": 95, "no_total": 136, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9861111111111112, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9848484848484849, "no_correct": 65, "no_total": 66}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.8333333333333334, "yes_correct": 10, "yes_total": 12, "no_accuracy": 0.3333333333333333, "no_correct": 20, "no_total": 60}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["yes", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_3": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7262569832402235, "yes_accuracy": 0.7272727272727273, "yes_correct": 8, "yes_total": 11, "no_accuracy": 0.7261904761904762, "no_correct": 122, "no_total": 168, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.95, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.9594594594594594, "no_correct": 71, "no_total": 74}, "nextto": {"accuracy": 0.4375, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.44155844155844154, "no_correct": 34, "no_total": 77}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999999979, 2.1608902028786476e-15, "The apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned closer to the center of the kitchen, and its reach appears to be limited to the area around the kitchen island and the counter adjacent to it. The apple_1 is on a counter that is farther away from the current position of the robotic arm, and there are obstacles (such as the kitchen island) between the arm and the apple_1. Therefore, the apple_1 is not currently in reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned closer to the center of the kitchen, and its reach appears to be limited to the area around the kitchen island and the counter adjacent to it. The apple_1 is on a counter that is farther away from the current position of the robotic arm, and there are obstacles (such as the kitchen island) between the arm and the apple_1. Therefore, the apple_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 2.2307581558754584e-08, 0.9999999776924184, "The robotic arm (agent) is positioned close to the countertop where the apple_1 is located. The apple_1 is within the red highlighted area, which indicates the agent's interaction or reach zone. Since the apple_1 is inside this zone, it is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the countertop where the apple_1 is located. The apple_1 is within the red highlighted area, which indicates the agent's interaction or reach zone. Since the apple_1 is inside this zone, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 2.9043364027940733e-08, 0.999999970956636, "The robotic arm, which is the agent, is positioned very close to the apple_2 on the counter. The apple_2 is within the red highlighted area, which typically indicates the agent's interaction or reach zone in such simulators. Therefore, the apple_2 is in reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is positioned very close to the apple_2 on the counter. The apple_2 is within the red highlighted area, which typically indicates the agent's interaction or reach zone in such simulators. Therefore, the apple_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 1.8059637489786513e-07, 0.9999998194036251, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. This indicates that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. This indicates that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 2.9067927790707983e-07, 0.9999997093207221, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. This indicates that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. This indicates that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999997248314486, 2.751685513521849e-07, "To determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or a visible gap between the door and the main body of the refrigerator. In the image, the refrigerator door appears to be closed, as there is no visible gap and the door is flush with the rest of the refrigerator.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or a visible gap between the door and the main body of the refrigerator. In the image, the refrigerator door appears to be closed, as there is no visible gap and the door is flush with the rest of the refrigerator.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 4.266578003885705e-05, 0.9999573342199611, "The image shows the inside of a refrigerator with shelves and food items visible. The robotic arm is interacting with the contents inside, which would only be possible if the refrigerator door is open. Therefore, the electric_refrigerator_1 is open.", true, "<explanation>\nThe image shows the inside of a refrigerator with shelves and food items visible. The robotic arm is interacting with the contents inside, which would only be possible if the refrigerator door is open. Therefore, the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.2408659255761399e-11, 0.9999999999875914, "The robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the red bounding box, and the arm appears to be able to reach and potentially grasp it without obstruction. Therefore, the apple_1 is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the red bounding box, and the arm appears to be able to reach and potentially grasp it without obstruction. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.0496671528763133e-11, 0.9999999999895033, "The robotic arm (agent) is positioned near a counter with several objects, including apple_2. Apple_2 is located on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the counter, it appears that apple_2 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near a counter with several objects, including apple_2. Apple_2 is located on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the counter, it appears that apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 1.1314351192588818e-14, 0.9999999999999887, "To determine if the orange_2 is in reach of the agent, I need to check the position of the robotic arm relative to the orange_2. The robotic arm is extended over the counter, and orange_2 is located on the plate on the counter, close to the arm's gripper. Since the arm is already positioned near the plate and orange_2 is not obstructed, it appears to be within the arm's reach.", false, "<explanation>\nTo determine if the orange_2 is in reach of the agent, I need to check the position of the robotic arm relative to the orange_2. The robotic arm is extended over the counter, and orange_2 is located on the plate on the counter, close to the arm's gripper. Since the arm is already positioned near the plate and orange_2 is not obstructed, it appears to be within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["no", 0.999999999999999, 9.820400560335498e-16, "To determine if the agent is holding apple_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled \"apple_2\". In the image, the robotic arm is positioned above the counter, and there are apples labeled on the counter. The gripper of the robotic arm is not visibly holding or in contact with the object labeled \"apple_2\"; it appears to be empty or above the objects. Therefore, the agent is not holding apple_2.", false, "<explanation>\nTo determine if the agent is holding apple_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled \"apple_2\". In the image, the robotic arm is positioned above the counter, and there are apples labeled on the counter. The gripper of the robotic arm is not visibly holding or in contact with the object labeled \"apple_2\"; it appears to be empty or above the objects. Therefore, the agent is not holding apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 3.46539906170316e-11, 0.999999999965346, "The robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the immediate vicinity of the arm, suggesting that the arm can reach and potentially grasp it without needing to move significantly. Therefore, apple_1 is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the immediate vicinity of the arm, suggesting that the arm can reach and potentially grasp it without needing to move significantly. Therefore, apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 1.8089519924132888e-11, 0.9999999999819105, "The robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the red bounding box, and the arm appears to be able to reach and potentially grasp it without obstruction. Therefore, apple_1 is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the apple_1, which is on the counter near the arm's end effector. The apple_1 is within the red bounding box, and the arm appears to be able to reach and potentially grasp it without obstruction. Therefore, apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999999991286, 8.713609708883789e-13, "To determine if the agent is holding apple_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as apple_2. In the image, the robotic arm is positioned above the counter, and there are apples labeled on the counter. However, the gripper of the robotic arm is not in contact with or holding apple_2; it is above the counter and not grasping any apple.", true, "<explanation>\nTo determine if the agent is holding apple_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as apple_2. In the image, the robotic arm is positioned above the counter, and there are apples labeled on the counter. However, the gripper of the robotic arm is not in contact with or holding apple_2; it is above the counter and not grasping any apple.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding orange_2": ["no", 0.9999999999972201, 2.779896371697708e-12, "To determine if the agent (robotic arm) is holding the object labeled \"orange_2,\" I need to look at the gripper of the robotic arm and see if the orange_2 is within its grasp. In the image, the robotic arm is positioned above the counter, but the object directly in its gripper appears to be an apple, not the orange_2. The orange_2 is on the plate on the counter, not in the gripper.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the object labeled \"orange_2,\" I need to look at the gripper of the robotic arm and see if the orange_2 is within its grasp. In the image, the robotic arm is positioned above the counter, but the object directly in its gripper appears to be an apple, not the orange_2. The orange_2 is on the plate on the counter, not in the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 2.9893430386445953e-09, 0.999999997010657, "The image shows a robotic arm (the agent) holding a green apple. The apple is clearly in the grip of the robotic hand, and based on the context and labeling, this apple is likely \"apple_1.\" Therefore, the agent is holding apple_1.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a green apple. The apple is clearly in the grip of the robotic hand, and based on the context and labeling, this apple is likely \"apple_1.\" Therefore, the agent is holding apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,orange_2": ["no", 0.999998510796258, 1.4892037420253264e-06, "In the image, the robotic arm is holding an apple (apple_1). The orange (orange_2) is on the counter along with other food items. Since the apple is being held by the robotic arm and is not placed on the counter or on top of the orange, apple_1 is not on top of orange_2.", true, "<explanation>\nIn the image, the robotic arm is holding an apple (apple_1). The orange (orange_2) is on the counter along with other food items. Since the apple is being held by the robotic arm and is not placed on the counter or on top of the orange, apple_1 is not on top of orange_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,orange_2": ["no", 0.9999998270545695, 1.7294543052454616e-07, "In the image, the robotic arm is holding apple_1, which means it is not placed on the counter or next to any other objects. Orange_2 is on the counter with other items, but apple_1 is not next to it since it is being held by the robotic arm.", true, "<explanation>\nIn the image, the robotic arm is holding apple_1, which means it is not placed on the counter or next to any other objects. Orange_2 is on the counter with other items, but apple_1 is not next to it since it is being held by the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": true, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 7.452719502290713e-06, 0.9999925472804977, "The image shows a robotic arm (the agent) holding an apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the refrigerator, indicating that the refrigerator is within the agent's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the refrigerator, indicating that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0014214635739885734, 0.9985785364260115, "The image shows a robotic arm (the agent) holding an apple (apple_1) in its gripper. Since the apple is already being held by the agent, it is clearly within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple (apple_1) in its gripper. Since the apple is already being held by the agent, it is clearly within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6728395061728395, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.6044776119402985, "no_correct": 81, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9722222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.3055555555555556, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.13793103448275862, "no_correct": 8, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["yes", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.645, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5872093023255814, "no_correct": 101, "no_total": 172, "predicates": {"reachable": {"accuracy": 0.9, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.9, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}, "ontop": {"accuracy": 0.9444444444444444, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9404761904761905, "no_correct": 79, "no_total": 84}, "nextto": {"accuracy": 0.28888888888888886, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.15789473684210525, "no_correct": 12, "no_total": 76}}}, "step": 4, "actions": ["place-next-to(apple_2, apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["yes", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["yes", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["yes", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.68, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.627906976744186, "no_correct": 108, "no_total": 172, "predicates": {"reachable": {"accuracy": 0.9, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.9, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}, "ontop": {"accuracy": 0.9555555555555556, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9523809523809523, "no_correct": 80, "no_total": 84}, "nextto": {"accuracy": 0.35555555555555557, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.23684210526315788, "no_correct": 18, "no_total": 76}}}, "step": 5, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999999999, 6.57893048966563e-17, "The apple_1 is located on the counter to the left side of the image, near a microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table or counter. The apple_1 appears to be on a different counter, separated by a walkway and some distance from the agent. Given the apparent reach of the robotic arm and the distance between the arm and the apple_1, it does not seem that the apple_1 is within the immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near a microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table or counter. The apple_1 appears to be on a different counter, separated by a walkway and some distance from the agent. Given the apparent reach of the robotic arm and the distance between the arm and the apple_1, it does not seem that the apple_1 is within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 4.44475174620787e-09, 0.9999999955552482, "The robotic arm (agent) is positioned close to the countertop where the apple_1 is located. The apple_1 is within the red highlighted area, which appears to be the agent's interaction or reach zone. Since the apple_1 is inside this zone, it is in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the countertop where the apple_1 is located. The apple_1 is within the red highlighted area, which appears to be the agent's interaction or reach zone. Since the apple_1 is inside this zone, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.4849627217116353e-09, 0.9999999985150373, "The robotic arm, which is the agent, is positioned close to the countertop where the apple_2 is located. The apple_2 is within the red highlighted area, which appears to be the agent's interaction or reach zone. Since the apple_2 is inside this zone, it is in reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is positioned close to the countertop where the apple_2 is located. The apple_2 is within the red highlighted area, which appears to be the agent's interaction or reach zone. Since the apple_2 is inside this zone, it is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 9.688051457357568e-07, 0.9999990311948542, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with it if needed.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with it if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 7.761763807440418e-07, 0.9999992238236193, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within close proximity and can likely interact with it. Therefore, the refrigerator is in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within close proximity and can likely interact with it. Therefore, the refrigerator is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999872768062517, 1.2723193748304669e-05, "The image shows a robotic arm in front of what appears to be a refrigerator. The door of the refrigerator is closed, as the edges are aligned and there is no visible gap indicating that it is open.", true, "<explanation>\nThe image shows a robotic arm in front of what appears to be a refrigerator. The door of the refrigerator is closed, as the edges are aligned and there is no visible gap indicating that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 8.129492286269064e-08, 0.9999999187050771, "To determine if the electric_refrigerator_1 is open, I need to look for a refrigerator in the image and check if its door is visibly ajar. In the image, there is a refrigerator visible in the background, and its door appears to be open, as the inside of the refrigerator is visible and the door is swung outward.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for a refrigerator in the image and check if its door is visibly ajar. In the image, there is a refrigerator visible in the background, and its door appears to be open, as the inside of the refrigerator is visible and the door is swung outward.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.3882845418356602e-08, 0.9999999861171546, "The robotic arm (agent) is positioned above the counter where apple_1 is located. The arm's end effector is very close to apple_1, indicating that the apple is within the reach of the agent. There are no visible obstacles between the arm and apple_1, so the agent should be able to interact with it.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter where apple_1 is located. The arm's end effector is very close to apple_1, indicating that the apple is within the reach of the agent. There are no visible obstacles between the arm and apple_1, so the agent should be able to interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 3.4708675414296304e-08, 0.9999999652913246, "The robotic arm (agent) is positioned above the counter, and its gripper is very close to the apple_2, which is on the counter next to other objects. The proximity of the gripper to apple_2 indicates that the apple_2 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned above the counter, and its gripper is very close to the apple_2, which is on the counter next to other objects. The proximity of the gripper to apple_2 indicates that the apple_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 1.059198884457285e-09, 0.9999999989408012, "The robotic arm (agent) is positioned above the counter where apple_1 is located. The arm's gripper is close to apple_1, and there are no visible obstacles between the gripper and the apple. The apple is on the same surface as the arm's end effector, indicating that it is within reach.", true, "<explanation>\nThe robotic arm (agent) is positioned above the counter where apple_1 is located. The arm's gripper is close to apple_1, and there are no visible obstacles between the gripper and the apple. The apple is on the same surface as the arm's end effector, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999994702771, 5.297229227473248e-10, "To determine if the agent is holding apple_2, I need to observe the position of the robotic arm's gripper relative to apple_2. In the image, the gripper is positioned above the counter, but it is not in contact with or grasping apple_2. Apple_2 is still resting on the counter, not within the gripper. Therefore, the agent is not holding apple_2.", true, "<explanation>\nTo determine if the agent is holding apple_2, I need to observe the position of the robotic arm's gripper relative to apple_2. In the image, the gripper is positioned above the counter, but it is not in contact with or grasping apple_2. Apple_2 is still resting on the counter, not within the gripper. Therefore, the agent is not holding apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 2.031777597541734e-05, 0.9999796822240246, "In the image, the robotic arm (the agent) is holding a green apple. The label \"apple_1\" is pointing to the apple that is currently in the grip of the robotic arm. This confirms that the agent is indeed holding apple_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is holding a green apple. The label \"apple_1\" is pointing to the apple that is currently in the grip of the robotic arm. This confirms that the agent is indeed holding apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,apple_2": ["no", 0.9999999640777992, 3.5922200749721196e-08, "In the image, apple_1 and apple_2 are both visible on the counter. Apple_1 is labeled and appears to be positioned in front of apple_2, but not on top of it. The apples are side by side, not stacked vertically. Therefore, apple_1 is not on top of apple_2.", true, "<explanation>\nIn the image, apple_1 and apple_2 are both visible on the counter. Apple_1 is labeled and appears to be positioned in front of apple_2, but not on top of it. The apples are side by side, not stacked vertically. Therefore, apple_1 is not on top of apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["yes", 5.84781623154279e-06, 0.9999941521837684, "In the image, apple_1 and apple_2 are both labeled on the kitchen counter. They are positioned very close to each other, with no significant objects separating them. This indicates that apple_1 is next to apple_2.", false, "<explanation>\nIn the image, apple_1 and apple_2 are both labeled on the kitchen counter. They are positioned very close to each other, with no significant objects separating them. This indicates that apple_1 is next to apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 3.3651175540993176e-07, 0.9999996634882445, "The image shows a robotic arm (the agent) holding an apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the refrigerator, indicating that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple in front of an open refrigerator. The arm is positioned such that it is inside or very close to the refrigerator, indicating that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0025111353904656033, 0.9974888646095343, "The image shows a robotic arm (the agent) holding an apple. Since the apple is already being held by the agent, it is clearly within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple. Since the apple is already being held by the agent, it is clearly within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6790123456790124, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.6119402985074627, "no_correct": 82, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9722222222222222, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9696969696969697, "no_correct": 64, "no_total": 66}, "nextto": {"accuracy": 0.3194444444444444, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.15517241379310345, "no_correct": 9, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7265625, "yes_accuracy": 0.7142857142857143, "yes_correct": 20, "yes_total": 28, "no_accuracy": 0.73, "no_correct": 73, "no_total": 100, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "ontop": {"accuracy": 0.8214285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.84, "no_correct": 42, "no_total": 50}, "nextto": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["yes", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,carrot_1": ["yes", "no"], "ontop apple_2,carrot_2": ["yes", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6171875, "yes_accuracy": 0.7307692307692307, "yes_correct": 19, "yes_total": 26, "no_accuracy": 0.5882352941176471, "no_correct": 60, "no_total": 102, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.7321428571428571, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.7254901960784313, "no_correct": 37, "no_total": 51}, "nextto": {"accuracy": 0.4107142857142857, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.36363636363636365, "no_correct": 16, "no_total": 44}}}, "step": 5, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999996316, 3.6837155194151706e-13, "The apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned further to the right, near the kitchen island. The apple_1 appears to be on a different counter and not directly in front of the robotic arm. Given the distance and the current position of the arm, the apple_1 does not seem to be within immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned further to the right, near the kitchen island. The apple_1 appears to be on a different counter and not directly in front of the robotic arm. Given the distance and the current position of the arm, the apple_1 does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 5.793757650778236e-10, 0.9999999994206242, "The robotic arm (agent) is positioned next to the counter where apple_1 is located. The apple_1 is on the counter, close to the robotic arm's end effector, indicating that it is within the arm's reach. There are no visible obstacles between the arm and the apple_1, so the agent should be able to interact with or grasp the apple_1.", true, "<explanation>\nThe robotic arm (agent) is positioned next to the counter where apple_1 is located. The apple_1 is on the counter, close to the robotic arm's end effector, indicating that it is within the arm's reach. There are no visible obstacles between the arm and the apple_1, so the agent should be able to interact with or grasp the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 5.469145979054419e-10, 0.9999999994530854, "The robotic arm (agent) is positioned next to the counter where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the area the arm can reach. There are no visible obstacles between the arm and apple_2, so it is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned next to the counter where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the area the arm can reach. There are no visible obstacles between the arm and apple_2, so it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 3.4127941144054825e-08, 0.9999999658720589, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. Given the proximity and orientation, the refrigerator is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, and its gripper is near the handle area. Given the proximity and orientation, the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 7.308380802118083e-07, 0.9999992691619198, "The image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with the refrigerator if needed.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the door of a refrigerator (electric_refrigerator_1). The arm is extended towards the refrigerator, indicating that it is within reach and could interact with the refrigerator if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999998257961747, 1.7420382522130408e-07, "I will check if the door of the electric refrigerator is visibly open or ajar. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening, and the door is flush with the rest of the refrigerator.", true, "<explanation>\nI will check if the door of the electric refrigerator is visibly open or ajar. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening, and the door is flush with the rest of the refrigerator.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 3.5918437994306647e-05, 0.9999640815620057, "In the image, the door of the refrigerator is visibly ajar, indicating that it is not closed. The interior of the refrigerator is partially visible, which further confirms that the refrigerator is open.", true, "<explanation>\nIn the image, the door of the refrigerator is visibly ajar, indicating that it is not closed. The interior of the refrigerator is partially visible, which further confirms that the refrigerator is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 4.24438725823727e-09, 0.9999999957556127, "The robotic arm (agent) is positioned near a counter where several objects are present. The object labeled \"apple_1\" is on the counter, close to the robotic arm's gripper. Given the proximity of \"apple_1\" to the gripper, it appears to be within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near a counter where several objects are present. The object labeled \"apple_1\" is on the counter, close to the robotic arm's gripper. Given the proximity of \"apple_1\" to the gripper, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 1.5414645796890904e-10, 0.9999999998458535, "The robotic arm (agent) is positioned near a counter with several objects, including an apple labeled \"apple_2.\" The apple_2 is on the counter, close to the robotic arm's gripper. Given the proximity of the apple_2 to the arm, it appears to be within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near a counter with several objects, including an apple labeled \"apple_2.\" The apple_2 is on the counter, close to the robotic arm's gripper. Given the proximity of the apple_2 to the arm, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 2.8326549499984822e-12, 0.9999999999971674, "To determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm relative to the orange_2. The robotic arm is extended over the counter, and orange_2 is located on the plate directly in front of the arm. The arm appears to be close enough to interact with or pick up orange_2, indicating that it is within reach.", false, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm relative to the orange_2. The robotic arm is extended over the counter, and orange_2 is located on the plate directly in front of the arm. The arm appears to be close enough to interact with or pick up orange_2, indicating that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 4.906092463852071e-10, 0.9999999995093908, "The robotic arm (agent) is positioned near a counter where the object labeled \"apple_1\" is located. The apple_1 is on the counter, and the robotic arm is extended towards the objects on the counter, indicating that the apple_1 is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near a counter where the object labeled \"apple_1\" is located. The apple_1 is on the counter, and the robotic arm is extended towards the objects on the counter, indicating that the apple_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999976136476, 2.386352479992429e-09, "To determine if the agent is holding the apple_2, I need to look at the robotic arm (the agent) and see what object, if any, is in its gripper. The apple_2 is labeled on the counter to the left of the robotic arm. The gripper of the robotic arm appears to be empty and is not holding the apple_2 or any other object.", true, "<explanation>\nTo determine if the agent is holding the apple_2, I need to look at the robotic arm (the agent) and see what object, if any, is in its gripper. The apple_2 is labeled on the counter to the left of the robotic arm. The gripper of the robotic arm appears to be empty and is not holding the apple_2 or any other object.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding orange_2": ["no", 0.999999999977597, 2.2402928177557416e-11, "To determine if the agent (robotic arm) is holding the object labeled \"orange_2,\" I need to look at the gripper of the robotic arm and see if the orange_2 is within its grasp. In the image, the robotic arm is holding an object, but the object appears to be a black or dark item, not the orange_2. The orange_2 is labeled and visible on the counter, not in the gripper. Therefore, the agent is not holding the orange_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the object labeled \"orange_2,\" I need to look at the gripper of the robotic arm and see if the orange_2 is within its grasp. In the image, the robotic arm is holding an object, but the object appears to be a black or dark item, not the orange_2. The orange_2 is labeled and visible on the counter, not in the gripper. Therefore, the agent is not holding the orange_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 0.9999999992995726, 7.004273299042469e-10, "To determine if the agent is holding the apple_1, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as apple_1. In the image, apple_1 is located on the floor near the bottom of the cabinet, while the robotic arm is holding a gray bowl-like object above the cabinet. The arm is not in contact with apple_1.", false, "<explanation>\nTo determine if the agent is holding the apple_1, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as apple_1. In the image, apple_1 is located on the floor near the bottom of the cabinet, while the robotic arm is holding a gray bowl-like object above the cabinet. The arm is not in contact with apple_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,apple_2": ["no", 0.9999989436877551, 1.056312244870567e-06, "In the image, there are two apples labeled as apple_1 and apple_2. Apple_1 is located on the floor near the bottom of the dresser, while apple_2 is on top of the dresser. Since apple_1 is not physically above or on top of apple_2, the answer is \"No\".", true, "<explanation>\nIn the image, there are two apples labeled as apple_1 and apple_2. Apple_1 is located on the floor near the bottom of the dresser, while apple_2 is on top of the dresser. Since apple_1 is not physically above or on top of apple_2, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,orange_2": ["no", 0.9999999996966445, 3.033554256877553e-10, "To determine if apple_1 is on top of orange_2, I need to locate both objects in the image. The label \"apple_1\" is visible near the bottom of the image, on the floor in front of the cabinet. The label \"orange_2\" is not directly visible, but there is an orange object on the cabinet, underneath a bowl. Since apple_1 is on the floor and orange_2 is on the cabinet, apple_1 is not on top of orange_2.", true, "<explanation>\nTo determine if apple_1 is on top of orange_2, I need to locate both objects in the image. The label \"apple_1\" is visible near the bottom of the image, on the floor in front of the cabinet. The label \"orange_2\" is not directly visible, but there is an orange object on the cabinet, underneath a bowl. Since apple_1 is on the floor and orange_2 is on the cabinet, apple_1 is not on top of orange_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,apple_2": ["no", 0.9999999999111958, 8.88041796958278e-11, "To determine if apple_1 is next to apple_2, I need to locate both objects in the image. Apple_1 is identified on the floor near the bottom center of the image, outlined in red. Apple_2 is not visible in the image, nor is there a label or outline indicating its presence. Since apple_2 cannot be seen or located, I cannot confirm that apple_1 is next to apple_2.", true, "<explanation>\nTo determine if apple_1 is next to apple_2, I need to locate both objects in the image. Apple_1 is identified on the floor near the bottom center of the image, outlined in red. Apple_2 is not visible in the image, nor is there a label or outline indicating its presence. Since apple_2 cannot be seen or located, I cannot confirm that apple_1 is next to apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,orange_2": ["no", 0.9999973588385892, 2.641161410798033e-06, "In the image, the object labeled \"apple_1\" is located on the floor near the bottom of the cabinet, while the object labeled \"orange_2\" is on top of the cabinet near a bowl. Since \"apple_1\" is on the floor and \"orange_2\" is on the cabinet, they are not next to each other.", true, "<explanation>\nIn the image, the object labeled \"apple_1\" is located on the floor near the bottom of the cabinet, while the object labeled \"orange_2\" is on top of the cabinet near a bowl. Since \"apple_1\" is on the floor and \"orange_2\" is on the cabinet, they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999999952, 4.807162862541562e-15, "The apple_1 is located on the floor near the cabinet, and the robotic arm (agent) is currently extended towards the countertop, holding or interacting with a bowl. The apple_1 is not directly in front of the arm and appears to be lower and further away from the current position of the arm. Given the arm's current orientation and position, it does not seem to be within immediate reach of apple_1 without repositioning.", false, "<explanation>\nThe apple_1 is located on the floor near the cabinet, and the robotic arm (agent) is currently extended towards the countertop, holding or interacting with a bowl. The apple_1 is not directly in front of the arm and appears to be lower and further away from the current position of the arm. Given the arm's current orientation and position, it does not seem to be within immediate reach of apple_1 without repositioning.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding apple_2": ["no", 0.9999999985049385, 1.4950614971823363e-09, "To determine if the agent is holding the apple_2, I need to identify the location of the apple_2 and see if it is within the grasp of the robotic arm. In the image, the apple_2 is located on the floor near the cabinet, and the robotic arm is holding a gray bowl-like object above the cabinet. The apple_2 is not in the grasp of the robotic arm.", true, "<explanation>\nTo determine if the agent is holding the apple_2, I need to identify the location of the apple_2 and see if it is within the grasp of the robotic arm. In the image, the apple_2 is located on the floor near the cabinet, and the robotic arm is holding a gray bowl-like object above the cabinet. The apple_2 is not in the grasp of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding orange_2": ["no", 0.9999999993590281, 6.409719709938805e-10, "To determine if the agent is holding the orange_2, I need to look at the robotic arm (the agent) and see if it is grasping or in contact with the orange_2. In the image, the robotic arm is holding a gray bowl-like object, not the orange_2. The orange_2 is on the counter, underneath the bowl, but not in the agent's grasp.", true, "<explanation>\nTo determine if the agent is holding the orange_2, I need to look at the robotic arm (the agent) and see if it is grasping or in contact with the orange_2. In the image, the robotic arm is holding a gray bowl-like object, not the orange_2. The orange_2 is on the counter, underneath the bowl, but not in the agent's grasp.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999999406, 5.940225170915353e-14, "The apple_1 is located on the floor near the cabinet, and the robotic arm (agent) is currently extended towards the countertop, holding or interacting with a bowl. The arm appears to be positioned above the cabinet, and not directly above or near the apple_1 on the floor. Given the current position and orientation of the arm, the apple_1 does not seem to be within immediate reach without significant repositioning.", true, "<explanation>\nThe apple_1 is located on the floor near the cabinet, and the robotic arm (agent) is currently extended towards the countertop, holding or interacting with a bowl. The arm appears to be positioned above the cabinet, and not directly above or near the apple_1 on the floor. Given the current position and orientation of the arm, the apple_1 does not seem to be within immediate reach without significant repositioning.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 6.720416692584004e-13, 0.999999999999328, "To determine if apple_1 is within reach of the agent, I need to check the position of the apple relative to the robotic arm. In the image, apple_1 is on the floor near the cabinet and directly in front of the robotic arm, which is extended towards the apple. The distance between the arm and the apple appears to be short, suggesting that the apple is within the arm's reach.", true, "<explanation>\nTo determine if apple_1 is within reach of the agent, I need to check the position of the apple relative to the robotic arm. In the image, apple_1 is on the floor near the cabinet and directly in front of the robotic arm, which is extended towards the apple. The distance between the arm and the apple appears to be short, suggesting that the apple is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 1.9026774304426198e-13, 0.9999999999998097, "To determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to orange_2. In the image, the robotic arm is extended towards the left side, and orange_2 is labeled and appears to be close to the arm's gripper. The proximity suggests that the arm could potentially grasp orange_2 without needing to move significantly. Therefore, orange_2 is within reach of the agent.", false, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to orange_2. In the image, the robotic arm is extended towards the left side, and orange_2 is labeled and appears to be close to the arm's gripper. The proximity suggests that the arm could potentially grasp orange_2 without needing to move significantly. Therefore, orange_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 6.7327792730789464e-12, 0.9999999999932673, "To determine if table_1 is in reach of the agent, I need to identify the robotic arm (the agent) and the location of table_1. The robotic arm is visible in the foreground, and table_1 is the wooden table with drawers next to the arm. The arm appears to be very close to table_1, suggesting that it is within reach for interaction.", false, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to identify the robotic arm (the agent) and the location of table_1. The robotic arm is visible in the foreground, and table_1 is the wooden table with drawers next to the arm. The arm appears to be very close to table_1, suggesting that it is within reach for interaction.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 1.726476493796472e-11, 0.9999999999827353, "The apple_1 is located on the floor near the robotic arm, which is the agent. The arm appears to be close enough to the apple_1, as there are no visible obstacles between the arm and the apple, and the apple is within the general area where the arm could reach. Therefore, the apple_1 is in reach of the agent.", true, "<explanation>\nThe apple_1 is located on the floor near the robotic arm, which is the agent. The arm appears to be close enough to the apple_1, as there are no visible obstacles between the arm and the apple, and the apple is within the general area where the arm could reach. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding orange_2": ["no", 0.9999999999938252, 6.17488108560062e-12, "To determine if the agent (the robotic arm) is holding the object labeled \"orange_2\", I need to look for the robotic arm and see if \"orange_2\" is within its grasp or attached to it. In the image, the robotic arm is visible, but \"orange_2\" is not in its grasp or being held by the arm. \"orange_2\" appears to be located on a surface or in the environment, not in the robotic arm's grip.", true, "<explanation>\nTo determine if the agent (the robotic arm) is holding the object labeled \"orange_2\", I need to look for the robotic arm and see if \"orange_2\" is within its grasp or attached to it. In the image, the robotic arm is visible, but \"orange_2\" is not in its grasp or being held by the arm. \"orange_2\" appears to be located on a surface or in the environment, not in the robotic arm's grip.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["yes", 4.277620791485222e-10, 0.999999999572238, "First, I will identify the agent, which is the robotic arm in the image. Next, I will check what object the robotic arm is holding. The object being held by the robotic arm is green, which matches the typical color of an apple. The label \"apple_1\" is not directly visible on the object, but based on the context and the color, it is reasonable to infer that the green object is apple_1.", true, "<explanation>\nFirst, I will identify the agent, which is the robotic arm in the image. Next, I will check what object the robotic arm is holding. The object being held by the robotic arm is green, which matches the typical color of an apple. The label \"apple_1\" is not directly visible on the object, but based on the context and the color, it is reasonable to infer that the green object is apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop apple_1,orange_2": ["no", 0.9999999703675247, 2.9632475219960867e-08, "In the image, the robotic arm is holding an object labeled \"apple_1.\" The label \"orange_2\" is visible on a table in the background, separate from the apple. The apple is not placed on top of the orange; instead, it is being held by the robotic arm and is not in contact with the orange. Therefore, apple_1 is not on top of orange_2.", true, "<explanation>\nIn the image, the robotic arm is holding an object labeled \"apple_1.\" The label \"orange_2\" is visible on a table in the background, separate from the apple. The apple is not placed on top of the orange; instead, it is being held by the robotic arm and is not in contact with the orange. Therefore, apple_1 is not on top of orange_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,table_1": ["no", 0.9999773265925022, 2.2673407497790565e-05, "First, I will identify the location of apple_1 and table_1 in the image. The apple_1 is currently being held by the robotic arm (the agent) and is not resting on any surface. Table_1 is visible in the background with other objects on it, but apple_1 is not on top of it.", true, "<explanation>\nFirst, I will identify the location of apple_1 and table_1 in the image. The apple_1 is currently being held by the robotic arm (the agent) and is not resting on any surface. Table_1 is visible in the background with other objects on it, but apple_1 is not on top of it.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,orange_2": ["no", 0.9999998246747946, 1.753252053803291e-07, "To determine if apple_1 is next to orange_2, I need to identify both objects in the image and assess their proximity. Apple_1 is being held by the robotic arm in the foreground, while orange_2 is labeled and located on a table further in the background. There is a significant distance between apple_1 and orange_2, so they are not next to each other.", true, "<explanation>\nTo determine if apple_1 is next to orange_2, I need to identify both objects in the image and assess their proximity. Apple_1 is being held by the robotic arm in the foreground, while orange_2 is labeled and located on a table further in the background. There is a significant distance between apple_1 and orange_2, so they are not next to each other.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,table_1": ["no", 0.9999999985617409, 1.4382590862071896e-09, "First, I will identify the location of apple_1 and table_1 in the image. The apple_1 is currently being held by the robotic arm and is not placed on or next to any surface. Table_1 is visible in the background, with some objects on it. Since apple_1 is not placed next to table_1 but is instead held by the robotic arm, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of apple_1 and table_1 in the image. The apple_1 is currently being held by the robotic arm and is not placed on or next to any surface. Table_1 is visible in the background, with some objects on it. Since apple_1 is not placed next to table_1 but is instead held by the robotic arm, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": false, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.00019253994823054523, 0.9998074600517695, "The robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is definitely within reach.", false, "<explanation>\nThe robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is definitely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999999981134, 1.8865763815666627e-12, "To determine if orange_2 is in reach of the agent, I need to look at the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green apple and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, with chairs and other objects between the agent and orange_2. Given the distance and obstacles, orange_2 does not appear to be within immediate reach of the agent.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to look at the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green apple and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, with chairs and other objects between the agent and orange_2. Given the distance and obstacles, orange_2 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999969, 3.0984407795163535e-15, "To determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green object and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and some objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and chairs) between them. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green object and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and some objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and chairs) between them. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.000607718581036913, 0.9993922814189631, "The robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is within reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999982791029, 1.7208971100702488e-09, "The robotic arm (agent) is currently holding a green apple and is positioned near a wooden cabinet. The orange_2 is located on a table further away from the agent, as indicated by the red label. Given the distance between the agent and the orange_2, it does not appear to be within immediate reach of the robotic arm.", true, "<explanation>\nThe robotic arm (agent) is currently holding a green apple and is positioned near a wooden cabinet. The orange_2 is located on a table further away from the agent, as indicated by the red label. Given the distance between the agent and the orange_2, it does not appear to be within immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999997027, 2.9736492036441227e-13, "The robotic arm (agent) is currently holding a green object and is positioned near a wooden cabinet and a sink. The table_1 is visible in the background, with some objects on it, but it is not close to the robotic arm. The distance between the agent and table_1 appears to be significant, and there are obstacles (such as chairs) between them. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is currently holding a green object and is positioned near a wooden cabinet and a sink. The table_1 is visible in the background, with some objects on it, but it is not close to the robotic arm. The distance between the agent and table_1 appears to be significant, and there are obstacles (such as chairs) between them. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.00039064140159979465, 0.9996093585984002, "The robotic arm, which is the agent, is currently holding the apple_1. Since the apple_1 is already in the agent's grasp, it is definitely within reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is currently holding the apple_1. Since the apple_1 is already in the agent's grasp, it is definitely within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999999986658, 1.3341316203204117e-12, "To determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green object (likely an apple) and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, with chairs and other objects between the agent and orange_2. Given the distance and obstacles, orange_2 does not appear to be within immediate reach of the agent.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green object (likely an apple) and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, with chairs and other objects between the agent and orange_2. Given the distance and obstacles, orange_2 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999629686, 3.703137218122659e-11, "The robotic arm (agent) is holding a green apple and is positioned near a wooden cabinet. The table_1 is visible in the background, but it is not close to the agent. The distance between the agent and table_1 appears to be significant, and there are obstacles (such as chairs) between them. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is holding a green apple and is positioned near a wooden cabinet. The table_1 is visible in the background, but it is not close to the agent. The distance between the agent and table_1 appears to be significant, and there are obstacles (such as chairs) between them. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0002477746544387668, 0.9997522253455612, "The robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is definitely within reach of the agent.", false, "<explanation>\nThe robotic arm, which is the agent, is currently holding the object labeled \"apple_1.\" Since the apple is already in the agent's grasp, it is definitely within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999999886587, 1.1341221984079564e-11, "To determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green apple and is positioned near a cabinet, while orange_2 is on a table further away in the background. The distance between the robotic arm and orange_2 appears to be significant, and the arm does not seem to be extended toward the table where orange_2 is located. Therefore, orange_2 is not in immediate reach of the agent.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) and the location of orange_2. The robotic arm is currently holding a green apple and is positioned near a cabinet, while orange_2 is on a table further away in the background. The distance between the robotic arm and orange_2 appears to be significant, and the arm does not seem to be extended toward the table where orange_2 is located. Therefore, orange_2 is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999992, 7.837844213382048e-16, "To determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and the table. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and the table. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.00013384825775240698, 0.9998661517422476, "The image shows a robotic arm (the agent) holding an apple labeled \"apple_1.\" Since the apple is already in the grasp of the agent, it is within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple labeled \"apple_1.\" Since the apple is already in the grasp of the agent, it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999969244526, 3.075547403940505e-09, "The robotic arm (agent) is currently holding a green apple and is positioned near a dresser. The object labeled \"orange_2\" is visible in the background, placed on a table that is some distance away from the agent. Given the current position of the agent and the distance to \"orange_2,\" it does not appear to be within immediate reach of the robotic arm.", true, "<explanation>\nThe robotic arm (agent) is currently holding a green apple and is positioned near a dresser. The object labeled \"orange_2\" is visible in the background, placed on a table that is some distance away from the agent. Given the current position of the agent and the distance to \"orange_2,\" it does not appear to be within immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999932, 6.800323419123855e-15, "To determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. In the image, the robotic arm is holding an object and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and table_1. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. In the image, the robotic arm is holding an object and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and table_1. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0001343647587512668, 0.9998656352412487, "The image shows a robotic arm (the agent) holding an apple, which is labeled as \"apple_1.\" Since the apple is already in the grasp of the agent, it is definitely within reach.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple, which is labeled as \"apple_1.\" Since the apple is already in the grasp of the agent, it is definitely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999999999921, 7.876814366038253e-15, "To determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to the location of orange_2. In the image, the robotic arm is holding a green apple and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, in the background. The distance between the robotic arm and orange_2 seems significant, and there are obstacles (such as furniture) between them. Therefore, orange_2 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to the location of orange_2. In the image, the robotic arm is holding a green apple and is positioned near a dresser. Orange_2 is labeled and appears to be on a table further away from the agent, in the background. The distance between the robotic arm and orange_2 seems significant, and there are obstacles (such as furniture) between them. Therefore, orange_2 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999969, 3.139034746780024e-15, "To determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and table_1. Therefore, table_1 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Table_1 is visible further away in the room, with chairs around it and objects on top. The distance between the robotic arm and table_1 appears to be significant, and there are obstacles (such as the cabinet and possibly other furniture) between the agent and table_1. Therefore, table_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": true}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(orange_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable orange_2": ["no", 0.9999999999999999, 7.379806425319434e-17, "To determine if orange_2 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the position of orange_2. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Orange_2 is labeled in the background, on a table in the dining area, which is some distance away from the robotic arm. Given the visible distance and the fact that the arm is currently holding an object and not extended toward orange_2, it is not within immediate reach.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the position of orange_2. The robotic arm is holding a green apple and is positioned near a wooden cabinet. Orange_2 is labeled in the background, on a table in the dining area, which is some distance away from the robotic arm. Given the visible distance and the fact that the arm is currently holding an object and not extended toward orange_2, it is not within immediate reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable orange_2": ["yes", 9.094912087686914e-08, 0.9999999090508791, "The robotic arm (agent) is positioned close to the table, and orange_2 is located on the table near the arm. The proximity of orange_2 to the robotic arm suggests that it is within the arm's reach, as there are no visible obstacles between the arm and the orange.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the table, and orange_2 is located on the table near the arm. The proximity of orange_2 to the robotic arm suggests that it is within the arm's reach, as there are no visible obstacles between the arm and the orange.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 1.9300942610634114e-14, 0.9999999999999807, "The image shows a robotic arm (the agent) positioned at a table with several objects on it, including an apple labeled \"apple_1.\" The apple is located on the table directly in front of the robotic arm, within the area that the arm can likely reach based on its position and orientation. There are no visible obstacles between the arm and the apple, and the apple is not too far from the arm's end effector. Therefore, the apple_1 is in reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) positioned at a table with several objects on it, including an apple labeled \"apple_1.\" The apple is located on the table directly in front of the robotic arm, within the area that the arm can likely reach based on its position and orientation. There are no visible obstacles between the arm and the apple, and the apple is not too far from the arm's end effector. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_1": ["yes", 7.127071378184405e-11, 0.9999999999287292, "The robotic arm (agent) is positioned close to the table where the orange_1 is located. The orange_1 is on the table, and the arm appears to be extended towards the table, within close proximity to the orange_1. Given the position and orientation of the arm, it seems that the orange_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table where the orange_1 is located. The orange_1 is on the table, and the arm appears to be extended towards the table, within close proximity to the orange_1. Given the position and orientation of the arm, it seems that the orange_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.9999999731135473, 2.6886452773478795e-08, "The electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial separation and the fact that the arm is currently interacting with objects on the table, it does not appear that the refrigerator is within the immediate reach of the agent.", true, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial separation and the fact that the arm is currently interacting with objects on the table, it does not appear that the refrigerator is within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 1.230818222830504e-06, 0.9999987691817772, "The robotic arm (agent) is positioned very close to the table_1, with its end effector hovering above the table and near the objects on it. This indicates that the table is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned very close to the table_1, with its end effector hovering above the table and near the objects on it. This indicates that the table is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.9999999678362876, 3.216371234227543e-08, "The electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial separation and the fact that the arm is currently interacting with objects on the table, it is clear that the refrigerator is not within the immediate reach of the agent.", true, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial separation and the fact that the arm is currently interacting with objects on the table, it is clear that the refrigerator is not within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 0.9999999796639305, 2.0336069517727217e-08, "The electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent distance and the fact that the robotic arm is currently interacting with objects on the table, it does not appear that the refrigerator is within the immediate reach of the agent.", false, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent distance and the fact that the robotic arm is currently interacting with objects on the table, it does not appear that the refrigerator is within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 1.3038252274188553e-07, 0.9999998696174772, "The apple_1 is located on the table, and the robotic arm (agent) is positioned very close to the apple_1. The arm appears to be extended towards the apple_1, indicating that it is within the reach of the agent.", false, "<explanation>\nThe apple_1 is located on the table, and the robotic arm (agent) is positioned very close to the apple_1. The arm appears to be extended towards the apple_1, indicating that it is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_1": ["yes", 1.0553911812233673e-08, 0.9999999894460881, "The robotic arm (agent) is positioned very close to the table where orange_1 is located. The orange_1 is on the table, right next to the robotic arm's end effector. Given the proximity and the orientation of the arm, it appears that orange_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned very close to the table where orange_1 is located. The orange_1 is on the table, right next to the robotic arm's end effector. Given the proximity and the orientation of the arm, it appears that orange_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 1.7744385894248196e-09, 0.9999999982255614, "The robotic arm (agent) is positioned at the table, and orange_2 is on the table near the arm. The proximity of orange_2 to the robotic arm suggests that it is within the arm's reach, as the arm appears to be able to interact with objects on the table surface.", false, "<explanation>\nThe robotic arm (agent) is positioned at the table, and orange_2 is on the table near the arm. The proximity of orange_2 to the robotic arm suggests that it is within the arm's reach, as the arm appears to be able to interact with objects on the table surface.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 3.3580747061914347e-07, 0.9999996641925294, "The robotic arm (agent) is positioned right next to the table, with its end effector hovering above the table surface and close to the objects on it. This indicates that the table is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned right next to the table, with its end effector hovering above the table surface and close to the objects on it. This indicates that the table is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.9999999945959579, 5.4040421546373045e-09, "The electric_refrigerator_1 is visible in the background of the image, located against the wall in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent reach of the robotic arm and the distance between the table and the refrigerator, it does not appear that the agent can reach the refrigerator from its current position.", true, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located against the wall in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent reach of the robotic arm and the distance between the table and the refrigerator, it does not appear that the agent can reach the refrigerator from its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 0.9999999399361119, 6.006388810466501e-08, "The electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent reach of the robotic arm and the distance between the table and the refrigerator, it does not appear that the agent can reach the refrigerator from its current position.", false, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the apparent reach of the robotic arm and the distance between the table and the refrigerator, it does not appear that the agent can reach the refrigerator from its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable apple_1": ["yes", 7.266412612602892e-10, 0.9999999992733587, "In the image, the robotic arm (agent) is positioned close to the table, and the object labeled \"apple_1\" is on the table near the arm. The arm appears to be able to reach objects on the table, including \"apple_1,\" as it is within the immediate vicinity of the arm's end effector. Therefore, \"apple_1\" is in reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is positioned close to the table, and the object labeled \"apple_1\" is on the table near the arm. The arm appears to be able to reach objects on the table, including \"apple_1,\" as it is within the immediate vicinity of the arm's end effector. Therefore, \"apple_1\" is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_1": ["yes", 7.31378967261595e-13, 0.9999999999992686, "The image shows a robotic arm (the agent) positioned near a table with several objects on it, including an object labeled \"orange_1.\" The robotic arm appears to be very close to \"orange_1,\" and its end effector is positioned such that it could easily reach and interact with the object. There are no visible obstacles between the arm and \"orange_1,\" and the object is on the table within the arm's operational range.", false, "<explanation>\nThe image shows a robotic arm (the agent) positioned near a table with several objects on it, including an object labeled \"orange_1.\" The robotic arm appears to be very close to \"orange_1,\" and its end effector is positioned such that it could easily reach and interact with the object. There are no visible obstacles between the arm and \"orange_1,\" and the object is on the table within the arm's operational range.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["yes", 3.5858947368492615e-13, 0.9999999999996414, "The robotic arm (agent) is positioned close to the table where orange_2 is located. The arm appears to be extended towards the table, and orange_2 is situated near the edge of the table, within the area that the arm can reach. There are no visible obstacles between the arm and orange_2, and the arm's end effector is close enough to grasp the orange.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the table where orange_2 is located. The arm appears to be extended towards the table, and orange_2 is situated near the edge of the table, within the area that the arm can reach. There are no visible obstacles between the arm and orange_2, and the arm's end effector is close enough to grasp the orange.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 4.2104319739668024e-08, 0.9999999578956803, "The robotic arm (agent) is positioned very close to the table, with its end effector hovering above the table surface and near the objects on it. This indicates that the table is within the reach of the agent, as the arm can interact with objects placed on the table.", false, "<explanation>\nThe robotic arm (agent) is positioned very close to the table, with its end effector hovering above the table surface and near the objects on it. This indicates that the table is within the reach of the agent, as the arm can interact with objects placed on the table.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.9999997326176275, 2.6738237246991903e-07, "The electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial arrangement and the apparent reach of the robotic arm, the refrigerator is not within immediate reach of the agent.", true, "<explanation>\nThe electric_refrigerator_1 is visible in the background of the image, located in the kitchen area. The robotic arm (agent) is positioned at the dining table, which is some distance away from the refrigerator. Given the spatial arrangement and the apparent reach of the robotic arm, the refrigerator is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 2.1251754331566056e-05, 0.9999787482456685, "The robotic arm (agent) is positioned very close to the refrigerator, as evidenced by the proximity of the arm and the apple it is holding to the refrigerator door. This indicates that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the refrigerator, as evidenced by the proximity of the arm and the apple it is holding to the refrigerator door. This indicates that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_1": ["yes", 0.0027797098397531208, 0.9972202901602468, "The image shows a robotic arm (the agent) holding an apple. Since the apple is already being held by the agent, it is within the agent's reach.", false, "<explanation>\nThe image shows a robotic arm (the agent) holding an apple. Since the apple is already being held by the agent, it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": true, "after": false}, "reachable orange_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "place-inside(apple_1, electric_refrigerator_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"holding apple_1": ["yes", 0.00012665341460971064, 0.9998733465853903, "In the image, the robotic arm (the agent) is visibly gripping an apple with its gripper. The apple is securely held and elevated off the surface, indicating that the agent is indeed holding the apple.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visibly gripping an apple with its gripper. The apple is securely held and elevated off the surface, indicating that the agent is indeed holding the apple.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["yes", 1.0247118481764815e-05, 0.9999897528815183, "The robotic arm (agent) is positioned very close to the refrigerator, as seen by the proximity of the arm and the apple it is holding to the refrigerator door. This indicates that the refrigerator is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the refrigerator, as seen by the proximity of the arm and the apple it is holding to the refrigerator door. This indicates that the refrigerator is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 1.867366544828034e-07, 0.9999998132633455, "To determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or open. In the image, the refrigerator door is clearly not flush with the rest of the appliance and is swung outward, indicating that it is open.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or open. In the image, the refrigerator door is clearly not flush with the rest of the appliance and is swung outward, indicating that it is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"inside apple_1,electric_refrigerator_1": ["no", 0.9999732124486316, 2.6787551368378247e-05, "The image shows a robotic arm holding an apple (apple_1) near the door of an electric refrigerator (electric_refrigerator_1). The refrigerator door is open, but the apple is outside the refrigerator, not inside it. Therefore, apple_1 is not inside electric_refrigerator_1.", false, "<explanation>\nThe image shows a robotic arm holding an apple (apple_1) near the door of an electric refrigerator (electric_refrigerator_1). The refrigerator door is open, but the apple is outside the refrigerator, not inside it. Therefore, apple_1 is not inside electric_refrigerator_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.999999902705609, 9.729439099340388e-08, "In the image, the robotic arm (the agent) is visible near the refrigerator door. The apple is also visible, but it is not within the gripper of the robotic arm. The apple appears to be attached to or floating near the refrigerator door, not being held by the agent. Therefore, the agent is not holding the apple.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible near the refrigerator door. The apple is also visible, but it is not within the gripper of the robotic arm. The apple appears to be attached to or floating near the refrigerator door, not being held by the agent. Therefore, the agent is not holding the apple.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "executed but failed"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 1.7177493070029243e-07, 0.9999998282250693, "The image shows a robotic arm (the agent) positioned very close to an apple (apple_1) that is located on the inside of an open refrigerator door. The apple appears to be directly in front of the robotic arm's gripper, indicating that the apple is within the agent's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to an apple (apple_1) that is located on the inside of an open refrigerator door. The apple appears to be directly in front of the robotic arm's gripper, indicating that the apple is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 0.9998971200345546, 0.00010287996544541108, "In the image, the robotic arm (the agent) is visible near an apple (apple_1) that is on the floor. The gripper of the robotic arm is empty and not in contact with the apple. Therefore, the agent is not holding the apple_1.", false, "<explanation>\nIn the image, the robotic arm (the agent) is visible near an apple (apple_1) that is on the floor. The gripper of the robotic arm is empty and not in contact with the apple. Therefore, the agent is not holding the apple_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,electric_refrigerator_1": ["no", 0.9998523734662403, 0.0001476265337597026, "To determine if apple_1 is on top of electric_refrigerator_1, I need to check the position of the apple relative to the refrigerator. In the image, apple_1 is located on the floor in front of the refrigerator, not on top of it. The top of the refrigerator is not visible, but the apple is clearly on the ground.", true, "<explanation>\nTo determine if apple_1 is on top of electric_refrigerator_1, I need to check the position of the apple relative to the refrigerator. In the image, apple_1 is located on the floor in front of the refrigerator, not on top of it. The top of the refrigerator is not visible, but the apple is clearly on the ground.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,electric_refrigerator_1": ["yes", 4.249091363854158e-07, 0.9999995750908636, "To determine if apple_1 is next to electric_refrigerator_1, I need to identify both objects in the image. The electric_refrigerator_1 is the large white appliance on the right side of the image. The green apple (apple_1) is on the floor, very close to the base of the refrigerator. Since the apple is positioned directly adjacent to the refrigerator, it can be considered \"next to\" it.", false, "<explanation>\nTo determine if apple_1 is next to electric_refrigerator_1, I need to identify both objects in the image. The electric_refrigerator_1 is the large white appliance on the right side of the image. The green apple (apple_1) is on the floor, very close to the base of the refrigerator. Since the apple is positioned directly adjacent to the refrigerator, it can be considered \"next to\" it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,orange_2": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": false, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,orange_2": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 6.097556079487906e-06, 0.9999939024439205, "The robotic arm (agent) is positioned very close to the refrigerator, with its gripper extended towards it. The proximity and orientation of the arm suggest that the refrigerator is within the agent's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the refrigerator, with its gripper extended towards it. The proximity and orientation of the arm suggest that the refrigerator is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999917595310968, 8.24046890324826e-06, "To determine if the electric_refrigerator_1 is open, I need to look for visible signs such as the refrigerator door being ajar or open. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for visible signs such as the refrigerator door being ajar or open. In the image, the refrigerator door appears to be closed, as there is no visible gap or opening.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.9979015461906283, 0.0020984538093717074, "The image shows a robotic arm (the agent) and an apple (apple_1) on the floor near the refrigerator. The gripper of the robotic arm is empty and not in contact with the apple. Therefore, the agent is not holding the apple_1.", true, "<explanation>\nThe image shows a robotic arm (the agent) and an apple (apple_1) on the floor near the refrigerator. The gripper of the robotic arm is empty and not in contact with the apple. Therefore, the agent is not holding the apple_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["no", 0.9999992768022306, 7.231977694782487e-07, "To determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or visibly separated from the main body of the refrigerator. In the image, the refrigerator door appears to be closed and flush with the rest of the appliance, with no visible gap indicating it is open.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I need to look for visual cues such as the refrigerator door being ajar or visibly separated from the main body of the refrigerator. In the image, the refrigerator door appears to be closed and flush with the rest of the appliance, with no visible gap indicating it is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 2.1078855696140503e-08, 0.9999999789211443, "The image shows a kitchen environment with a large refrigerator (electric_refrigerator_1) prominently in the foreground, very close to the viewer's perspective. Given the proximity of the refrigerator to the viewpoint, which represents the agent's position, it appears to be within easy reach of the robotic arm agent.", true, "<explanation>\nThe image shows a kitchen environment with a large refrigerator (electric_refrigerator_1) prominently in the foreground, very close to the viewer's perspective. Given the proximity of the refrigerator to the viewpoint, which represents the agent's position, it appears to be within easy reach of the robotic arm agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999937090288156, 6.290971184424278e-06, "I will examine the electric_refrigerator_1 in the image to determine if its door is open. The refrigerator door appears to be closed, as there is no visible gap or opening, and the door is flush with the rest of the appliance.", true, "<explanation>\nI will examine the electric_refrigerator_1 in the image to determine if its door is open. The refrigerator door appears to be closed, as there is no visible gap or opening, and the door is flush with the rest of the appliance.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["yes", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["yes", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5987654320987654, "yes_accuracy": 1.0, "yes_correct": 28, "yes_total": 28, "no_accuracy": 0.5149253731343284, "no_correct": 69, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9027777777777778, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.8939393939393939, "no_correct": 59, "no_total": 66}, "nextto": {"accuracy": 0.20833333333333334, "yes_accuracy": 1.0, "yes_correct": 14, "yes_total": 14, "no_accuracy": 0.017241379310344827, "no_correct": 1, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,apple_2": ["yes", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["yes", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6735537190082644, "yes_accuracy": 0.9, "yes_correct": 27, "yes_total": 30, "no_accuracy": 0.6415094339622641, "no_correct": 136, "no_total": 212, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 11, "no_total": 11}, "ontop": {"accuracy": 0.9454545454545454, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9423076923076923, "no_correct": 98, "no_total": 104}, "nextto": {"accuracy": 0.36363636363636365, "yes_accuracy": 0.8125, "yes_correct": 13, "yes_total": 16, "no_accuracy": 0.2872340425531915, "no_correct": 27, "no_total": 94}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["no", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,carrot_1": ["yes", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["yes", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,meat_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["yes", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["yes", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,meat_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["yes", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["yes", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["yes", "no"], "ontop orange_2,meat_1": ["yes", "no"], "ontop orange_2,carrot_1": ["yes", "no"], "ontop orange_2,carrot_2": ["yes", "no"], "ontop orange_2,carrot_3": ["yes", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["no", "no"], "nextto apple_2,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6570247933884298, "yes_accuracy": 0.7777777777777778, "yes_correct": 21, "yes_total": 27, "no_accuracy": 0.641860465116279, "no_correct": 138, "no_total": 215, "predicates": {"reachable": {"accuracy": 0.6363636363636364, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 11, "no_total": 11}, "ontop": {"accuracy": 0.7454545454545455, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.7333333333333333, "no_correct": 77, "no_total": 105}, "nextto": {"accuracy": 0.5363636363636364, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.5208333333333334, "no_correct": 50, "no_total": 96}}}, "step": 5, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable meat_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable apple_2": ["no", "yes"], "reachable orange_2": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,meat_1": ["yes", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_2": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,meat_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_2": ["yes", "no"], "ontop meat_1,bread_1": ["yes", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_2": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,meat_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_2": ["yes", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["yes", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["yes", "no"], "ontop orange_2,meat_1": ["yes", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["yes", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,apple_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,orange_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,apple_2": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,broccoli_1": ["no", "no"], "nextto apple_2,apple_1": ["no", "no"], "nextto apple_2,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,apple_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6652892561983471, "yes_accuracy": 0.6666666666666666, "yes_correct": 18, "yes_total": 27, "no_accuracy": 0.6651162790697674, "no_correct": 143, "no_total": 215, "predicates": {"reachable": {"accuracy": 0.5454545454545454, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 11, "no_total": 11}, "ontop": {"accuracy": 0.7909090909090909, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.7904761904761904, "no_correct": 83, "no_total": 105}, "nextto": {"accuracy": 0.5181818181818182, "yes_accuracy": 0.5714285714285714, "yes_correct": 8, "yes_total": 14, "no_accuracy": 0.5104166666666666, "no_correct": 49, "no_total": 96}}}, "step": 6, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["yes", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["yes", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["yes", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["yes", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["yes", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["yes", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["yes", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["yes", "no"], "ontop carrot_1,yogurt_1": ["yes", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,milk_1": ["yes", "no"], "ontop carrot_2,chair_1": ["yes", "no"], "ontop carrot_2,meat_1": ["yes", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["yes", "no"], "ontop carrot_2,yogurt_1": ["yes", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["yes", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["yes", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["yes", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["yes", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,bread_1": ["no", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["no", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["no", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7599164926931107, "yes_accuracy": 0.45454545454545453, "yes_correct": 15, "yes_total": 33, "no_accuracy": 0.7825112107623319, "no_correct": 349, "no_total": 446, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "ontop": {"accuracy": 0.8080357142857143, "yes_accuracy": 0.5454545454545454, "yes_correct": 6, "yes_total": 11, "no_accuracy": 0.8215962441314554, "no_correct": 175, "no_total": 213}, "nextto": {"accuracy": 0.7053571428571429, "yes_accuracy": 0.3333333333333333, "yes_correct": 5, "yes_total": 15, "no_accuracy": 0.7320574162679426, "no_correct": 153, "no_total": 209}}}, "step": 7, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["yes", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["yes", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["yes", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["yes", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["yes", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["yes", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["yes", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["yes", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["yes", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["yes", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,bread_1": ["no", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["no", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7703549060542797, "yes_accuracy": 0.38235294117647056, "yes_correct": 13, "yes_total": 34, "no_accuracy": 0.8, "no_correct": 356, "no_total": 445, "predicates": {"reachable": {"accuracy": 0.7647058823529411, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "ontop": {"accuracy": 0.8973214285714286, "yes_accuracy": 0.5454545454545454, "yes_correct": 6, "yes_total": 11, "no_accuracy": 0.9154929577464789, "no_correct": 195, "no_total": 213}, "nextto": {"accuracy": 0.6294642857142857, "yes_accuracy": 0.2, "yes_correct": 3, "yes_total": 15, "no_accuracy": 0.6602870813397129, "no_correct": 138, "no_total": 209}}}, "step": 9, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["yes", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["yes", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["yes", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["yes", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["yes", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["yes", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto meat_1,orange_3": ["yes", "no"], "nextto cheese_1,bread_1": ["no", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["no", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["no", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["no", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7494780793319415, "yes_accuracy": 0.5625, "yes_correct": 18, "yes_total": 32, "no_accuracy": 0.7628635346756152, "no_correct": 341, "no_total": 447, "predicates": {"reachable": {"accuracy": 0.7647058823529411, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.9230769230769231, "no_correct": 12, "no_total": 13}, "ontop": {"accuracy": 0.9196428571428571, "yes_accuracy": 0.6363636363636364, "yes_correct": 7, "yes_total": 11, "no_accuracy": 0.9342723004694836, "no_correct": 199, "no_total": 213}, "nextto": {"accuracy": 0.5669642857142857, "yes_accuracy": 0.5384615384615384, "yes_correct": 7, "yes_total": 13, "no_accuracy": 0.5687203791469194, "no_correct": 120, "no_total": 211}}}, "step": 10, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["yes", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["yes", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["yes", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["yes", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["yes", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["no", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["no", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["no", "no"], "nextto soup_1,carrot_3": ["no", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["no", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["no", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["yes", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["no", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7954070981210856, "yes_accuracy": 0.47058823529411764, "yes_correct": 16, "yes_total": 34, "no_accuracy": 0.8202247191011236, "no_correct": 365, "no_total": 445, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "ontop": {"accuracy": 0.9196428571428571, "yes_accuracy": 0.36363636363636365, "yes_correct": 4, "yes_total": 11, "no_accuracy": 0.9483568075117371, "no_correct": 202, "no_total": 213}, "nextto": {"accuracy": 0.6651785714285714, "yes_accuracy": 0.6, "yes_correct": 9, "yes_total": 15, "no_accuracy": 0.6698564593301436, "no_correct": 140, "no_total": 209}}}, "step": 11, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["yes", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["yes", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["yes", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["yes", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["yes", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["yes", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["yes", "no"], "ontop yogurt_1,carrot_2": ["yes", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["yes", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["yes", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["yes", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,bread_1": ["no", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "no"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["yes", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["yes", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["no", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["no", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7098121085594989, "yes_accuracy": 0.71875, "yes_correct": 23, "yes_total": 32, "no_accuracy": 0.70917225950783, "no_correct": 317, "no_total": 447, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "ontop": {"accuracy": 0.90625, "yes_accuracy": 0.7272727272727273, "yes_correct": 8, "yes_total": 11, "no_accuracy": 0.9154929577464789, "no_correct": 195, "no_total": 213}, "nextto": {"accuracy": 0.4955357142857143, "yes_accuracy": 0.8461538461538461, "yes_correct": 11, "yes_total": 13, "no_accuracy": 0.47393364928909953, "no_correct": 100, "no_total": 211}}}, "step": 12, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["yes", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["yes", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["yes", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["no", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["yes", "no"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["yes", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["no", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["no", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7620041753653445, "yes_accuracy": 0.35294117647058826, "yes_correct": 12, "yes_total": 34, "no_accuracy": 0.7932584269662921, "no_correct": 353, "no_total": 445, "predicates": {"reachable": {"accuracy": 0.7647058823529411, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 0.9285714285714286, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.9230769230769231, "no_correct": 12, "no_total": 13}, "ontop": {"accuracy": 0.9375, "yes_accuracy": 0.36363636363636365, "yes_correct": 4, "yes_total": 11, "no_accuracy": 0.9671361502347418, "no_correct": 206, "no_total": 213}, "nextto": {"accuracy": 0.5758928571428571, "yes_accuracy": 0.26666666666666666, "yes_correct": 4, "yes_total": 15, "no_accuracy": 0.5980861244019139, "no_correct": 125, "no_total": 209}}}, "step": 13, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable broccoli_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["yes", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,broccoli_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,broccoli_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,broccoli_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["yes", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,broccoli_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,orange_2": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["no", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,milk_1": ["no", "no"], "ontop broccoli_1,chair_1": ["no", "no"], "ontop broccoli_1,meat_1": ["no", "no"], "ontop broccoli_1,table_1": ["no", "no"], "ontop broccoli_1,cheese_1": ["no", "no"], "ontop broccoli_1,yogurt_1": ["no", "no"], "ontop broccoli_1,soup_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,orange_2": ["no", "no"], "ontop broccoli_1,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["yes", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,broccoli_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["yes", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,broccoli_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["yes", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,broccoli_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["yes", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,broccoli_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,broccoli_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,carrot_1": ["no", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,broccoli_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "yes"], "nextto carrot_2,carrot_3": ["no", "no"], "nextto carrot_2,broccoli_1": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "no"], "nextto carrot_3,broccoli_1": ["no", "no"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["yes", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto broccoli_1,bread_1": ["no", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,milk_1": ["no", "no"], "nextto broccoli_1,chair_1": ["no", "no"], "nextto broccoli_1,meat_1": ["no", "no"], "nextto broccoli_1,table_1": ["no", "no"], "nextto broccoli_1,cheese_1": ["no", "no"], "nextto broccoli_1,yogurt_1": ["no", "no"], "nextto broccoli_1,soup_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["no", "no"], "nextto broccoli_1,orange_2": ["no", "no"], "nextto broccoli_1,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,broccoli_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,bread_1": ["yes", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["yes", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,carrot_1": ["yes", "no"], "nextto orange_2,carrot_2": ["yes", "no"], "nextto orange_2,carrot_3": ["yes", "no"], "nextto orange_2,broccoli_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["yes", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,broccoli_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7306889352818372, "yes_accuracy": 0.28125, "yes_correct": 9, "yes_total": 32, "no_accuracy": 0.7628635346756152, "no_correct": 341, "no_total": 447, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 1.0, "no_correct": 10, "no_total": 10}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "ontop": {"accuracy": 0.9330357142857143, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.9671361502347418, "no_correct": 206, "no_total": 213}, "nextto": {"accuracy": 0.5133928571428571, "yes_accuracy": 0.23076923076923078, "yes_correct": 3, "yes_total": 13, "no_accuracy": 0.5308056872037915, "no_correct": 112, "no_total": 211}}}, "step": 14, "actions": ["navigate-to(orange_2)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, {"enum_results": {"reachable milk_1": ["no", "no"], "reachable chair_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_1": ["yes", "yes"], "reachable orange_2": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_1": ["no", "no"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop cheese_1,electric_refrigerator_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop soup_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,orange_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_1,electric_refrigerator_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_2,electric_refrigerator_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "ontop orange_3,electric_refrigerator_1": ["no", "no"], "inside cheese_1,electric_refrigerator_1": ["no", "no"], "inside soup_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside orange_1,electric_refrigerator_1": ["no", "no"], "inside orange_2,electric_refrigerator_1": ["no", "no"], "inside orange_3,electric_refrigerator_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "no"], "nextto cheese_1,orange_2": ["yes", "no"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto cheese_1,electric_refrigerator_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_2": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto soup_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,orange_2": ["yes", "yes"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_1,electric_refrigerator_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_1": ["yes", "yes"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_2,electric_refrigerator_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"], "nextto orange_3,orange_2": ["yes", "no"], "nextto orange_3,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7251908396946565, "yes_accuracy": 0.8888888888888888, "yes_correct": 16, "yes_total": 18, "no_accuracy": 0.6991150442477876, "no_correct": 79, "no_total": 113, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9814814814814815, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 0.9795918367346939, "no_correct": 48, "no_total": 49}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.3888888888888889, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.35294117647058826, "no_correct": 18, "no_total": 51}}}, "step": 15, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable milk_1": ["no", "no"], "reachable chair_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["no", "yes"], "reachable yogurt_1": ["no", "yes"], "reachable soup_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_1": ["yes", "yes"], "reachable orange_2": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_1": ["no", "no"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop cheese_1,electric_refrigerator_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop yogurt_1,electric_refrigerator_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop soup_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,orange_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_1,electric_refrigerator_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_2,electric_refrigerator_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "ontop orange_3,electric_refrigerator_1": ["no", "no"], "inside cheese_1,electric_refrigerator_1": ["no", "no"], "inside yogurt_1,electric_refrigerator_1": ["no", "no"], "inside soup_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside orange_1,electric_refrigerator_1": ["no", "no"], "inside orange_2,electric_refrigerator_1": ["no", "no"], "inside orange_3,electric_refrigerator_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto cheese_1,electric_refrigerator_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto yogurt_1,electric_refrigerator_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto soup_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "no"], "nextto orange_1,yogurt_1": ["no", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,orange_2": ["yes", "yes"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_1,electric_refrigerator_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_1": ["yes", "yes"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_2,electric_refrigerator_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"], "nextto orange_3,orange_2": ["yes", "no"], "nextto orange_3,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8253012048192772, "yes_accuracy": 0.6, "yes_correct": 12, "yes_total": 20, "no_accuracy": 0.8561643835616438, "no_correct": 125, "no_total": 146, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.6666666666666666, "yes_correct": 6, "yes_total": 9, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9428571428571428, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.984375, "no_correct": 63, "no_total": 64}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.7142857142857143, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.7014925373134329, "no_correct": 47, "no_total": 67}}}, "step": 16, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable milk_1": ["no", "no"], "reachable chair_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["no", "yes"], "reachable yogurt_1": ["no", "yes"], "reachable soup_1": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable orange_1": ["yes", "yes"], "reachable orange_2": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_1": ["no", "no"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "open electric_refrigerator_1": ["no", "yes"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop cheese_1,electric_refrigerator_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop yogurt_1,electric_refrigerator_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop soup_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,orange_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_1,electric_refrigerator_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_2,electric_refrigerator_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "ontop orange_3,electric_refrigerator_1": ["no", "no"], "inside cheese_1,electric_refrigerator_1": ["no", "no"], "inside yogurt_1,electric_refrigerator_1": ["no", "no"], "inside soup_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside orange_1,electric_refrigerator_1": ["no", "no"], "inside orange_2,electric_refrigerator_1": ["no", "no"], "inside orange_3,electric_refrigerator_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto cheese_1,electric_refrigerator_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_1": ["no", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto yogurt_1,electric_refrigerator_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto soup_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "no"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,orange_2": ["yes", "yes"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_1,electric_refrigerator_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["yes", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_1": ["yes", "yes"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_2,electric_refrigerator_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["no", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"], "nextto orange_3,orange_2": ["yes", "no"], "nextto orange_3,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8192771084337349, "yes_accuracy": 0.6, "yes_correct": 12, "yes_total": 20, "no_accuracy": 0.8493150684931506, "no_correct": 124, "no_total": 146, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.6666666666666666, "yes_correct": 6, "yes_total": 9, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9428571428571428, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.984375, "no_correct": 63, "no_total": 64}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "nextto": {"accuracy": 0.7, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6865671641791045, "no_correct": 46, "no_total": 67}}}, "step": 17, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "yes"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 18, "actions": ["place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["yes", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 19, "actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 20, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 21, "actions": ["open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999555175, 4.448256057188026e-11, "The apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table, and appears to be some distance away from the counter where the apple_1 is placed. Given the apparent distance and the orientation of the arm, it does not seem that the apple_1 is within immediate reach of the agent.", true, "<explanation>\nThe apple_1 is located on the counter to the left side of the image, near the microwave. The robotic arm (agent) is positioned on the right side of the image, attached to a table, and appears to be some distance away from the counter where the apple_1 is placed. Given the apparent distance and the orientation of the arm, it does not seem that the apple_1 is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 7.412246878920181e-12, 0.9999999999925877, "The image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the counter near the robotic arm. The arm appears to be positioned close enough to the apple_1, suggesting that it is within the reach of the agent. The proximity and orientation of the arm relative to the apple_1 indicate that the agent can likely interact with or grasp the apple_1.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the counter near the robotic arm. The arm appears to be positioned close enough to the apple_1, suggesting that it is within the reach of the agent. The proximity and orientation of the arm relative to the apple_1 indicate that the agent can likely interact with or grasp the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 5.275178251383938e-10, 0.9999999994724822, "The robotic arm (agent) is positioned near the countertop where apple_2 is located. The apple_2 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, apple_2 appears to be within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the countertop where apple_2 is located. The apple_2 is on the counter, close to the robotic arm's end effector. Given the proximity and the fact that the arm is already extended toward the objects on the counter, apple_2 appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable electric_refrigerator_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 2.679418585750123e-07, 0.9999997320581414, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it if needed.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 8.533459201228366e-08, 0.9999999146654079, "The image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door or grabbing the handle.", true, "<explanation>\nThe image shows a robotic arm (the agent) positioned very close to the handle of a refrigerator (electric_refrigerator_1). The arm appears to be within a short distance from the refrigerator, indicating that it is in reach and could interact with it, such as opening the door or grabbing the handle.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.9999963298403662, 3.670159633766106e-06, "In the image, the electric_refrigerator_1 appears to be closed. The door is flush with the rest of the refrigerator, and there is no visible gap or opening. The robotic arm is near the handle, but the refrigerator itself is not open.", true, "<explanation>\nIn the image, the electric_refrigerator_1 appears to be closed. The door is flush with the rest of the refrigerator, and there is no visible gap or opening. The robotic arm is near the handle, but the refrigerator itself is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"open electric_refrigerator_1": ["yes", 2.9043557467819105e-07, 0.9999997095644253, "The image shows the robotic arm interacting with what appears to be a refrigerator. The door of the refrigerator is visibly open, as we can see the inside shelves and food items, as well as the open door itself. This confirms that the electric_refrigerator_1 is open.", true, "<explanation>\nThe image shows the robotic arm interacting with what appears to be a refrigerator. The door of the refrigerator is visibly open, as we can see the inside shelves and food items, as well as the open door itself. This confirms that the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 2.8823884938803267e-09, 0.9999999971176116, "The robotic arm (agent) is positioned near the counter where apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and appears to be within the arm's operational range. There are no visible obstacles between the arm and apple_1, so the agent should be able to reach it.", true, "<explanation>\nThe robotic arm (agent) is positioned near the counter where apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and appears to be within the arm's operational range. There are no visible obstacles between the arm and apple_1, so the agent should be able to reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 3.087983591862151e-12, 0.999999999996912, "The robotic arm (agent) is positioned near the countertop where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the general area that the arm can reach. There are no visible obstacles between the arm and apple_2, and the distance seems to be within the operational range of the robotic arm.", false, "<explanation>\nThe robotic arm (agent) is positioned near the countertop where apple_2 is located. The arm appears to be extended towards the apples, and apple_2 is on the counter within the general area that the arm can reach. There are no visible obstacles between the arm and apple_2, and the distance seems to be within the operational range of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable orange_2": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 3.2987367125719284e-09, 0.9999999967012633, "The robotic arm (agent) is positioned near the counter where apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and appears to be within the arm's operational range. There are no visible obstacles between the arm and apple_1, so the agent should be able to reach it.", true, "<explanation>\nThe robotic arm (agent) is positioned near the counter where apple_1 is located. The apple_1 is on the counter, close to the base of the robotic arm, and appears to be within the arm's operational range. There are no visible obstacles between the arm and apple_1, so the agent should be able to reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_2": ["no", 0.9999999950994909, 4.90050916466469e-09, "To determine if the agent (robotic arm) is holding apple_2, I need to check if the apple_2 object is within the gripper or end effector of the robotic arm. In the image, apple_2 is on the counter and not within the grasp of the robotic arm. The arm is positioned above the counter, but it is not holding apple_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding apple_2, I need to check if the apple_2 object is within the gripper or end effector of the robotic arm. In the image, apple_2 is on the counter and not within the grasp of the robotic arm. The arm is positioned above the counter, but it is not holding apple_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding orange_1": [true, false, false], "holding orange_2": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 0.9999999980896422, 1.910357796090904e-09, "In the image, the robotic arm (agent) is visible, and there are some objects labeled in red text. The labels visible are \"carrot_1\" and \"carrot_3,\" but there is no label or visible object indicating \"apple_1\" is being held by the agent. Therefore, the agent is not holding \"apple_1.\"", false, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are some objects labeled in red text. The labels visible are \"carrot_1\" and \"carrot_3,\" but there is no label or visible object indicating \"apple_1\" is being held by the agent. Therefore, the agent is not holding \"apple_1.\"\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop apple_1,orange_2": ["no", 0.9999938685070079, 6.1314929920743175e-06, "In the image, there are labels visible for \"carrot_1\" and \"carrot_3,\" but there are no visible labels or objects identified as \"apple_1\" or \"orange_2.\" Since neither \"apple_1\" nor \"orange_2\" can be seen or identified in the image, it is not possible to determine if \"apple_1\" is on top of \"orange_2.\"", true, "<explanation>\nIn the image, there are labels visible for \"carrot_1\" and \"carrot_3,\" but there are no visible labels or objects identified as \"apple_1\" or \"orange_2.\" Since neither \"apple_1\" nor \"orange_2\" can be seen or identified in the image, it is not possible to determine if \"apple_1\" is on top of \"orange_2.\"\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop apple_1,table_1": ["no", 0.9999999349683728, 6.503162714745404e-08, "In the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1\". Additionally, there is no clear view of \"table_1\" with an apple on top of it. Therefore, based on the provided image, I cannot confirm that \"apple_1\" is on top of \"table_1\".", true, "<explanation>\nIn the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1\". Additionally, there is no clear view of \"table_1\" with an apple on top of it. Therefore, based on the provided image, I cannot confirm that \"apple_1\" is on top of \"table_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,orange_2": ["no", 0.9999994770870794, 5.22912920624803e-07, "In the image, there are labels visible for objects, specifically \"carrot_1\" and \"carrot_3.\" There are no visible labels or objects named \"apple_1\" or \"orange_2\" in the image. Therefore, I cannot determine if \"apple_1\" is next to \"orange_2\" based on the provided visual information.", true, "<explanation>\nIn the image, there are labels visible for objects, specifically \"carrot_1\" and \"carrot_3.\" There are no visible labels or objects named \"apple_1\" or \"orange_2\" in the image. Therefore, I cannot determine if \"apple_1\" is next to \"orange_2\" based on the provided visual information.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto apple_1,table_1": ["no", 0.9999999988119394, 1.1880606872540798e-09, "In the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1.\" Additionally, there is no clear indication of \"table_1\" in the visible part of the image. Since \"apple_1\" cannot be seen or identified, I cannot determine its position relative to \"table_1.\"", true, "<explanation>\nIn the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1.\" Additionally, there is no clear indication of \"table_1\" in the visible part of the image. Since \"apple_1\" cannot be seen or identified, I cannot determine its position relative to \"table_1.\"\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": true, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.999999539070857, 4.609291430114246e-07, "In the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1.\" Since \"apple_1\" is not visible in the image, I cannot determine if it is within reach of the agent. Therefore, the answer is \"No.\"", true, "<explanation>\nIn the image, there is a label for \"carrot_1\" and \"carrot_3\" visible, but there is no visible label or object identified as \"apple_1.\" Since \"apple_1\" is not visible in the image, I cannot determine if it is within reach of the agent. Therefore, the answer is \"No.\"\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 0.9999997677671287, 2.322328713186935e-07, "In the image, I can see the robotic arm (the agent) inside what appears to be a refrigerator. The labels \"carrot_2\" and \"carrot_3\" are visible, but there is no visible label or object identified as \"apple_1\" in the image. Since \"apple_1\" is not visible, I cannot determine if it is within reach of the agent.", false, "<explanation>\nIn the image, I can see the robotic arm (the agent) inside what appears to be a refrigerator. The labels \"carrot_2\" and \"carrot_3\" are visible, but there is no visible label or object identified as \"apple_1\" in the image. Since \"apple_1\" is not visible, I cannot determine if it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable orange_2": ["no", 0.9999999949396007, 5.060399354621708e-09, "In the image, the robotic arm (the agent) is visible and appears to be inside or very close to the refrigerator. The objects \"carrot_2\" and \"carrot_3\" are labeled and visible, but there is no visible label or object named \"orange_2\" in the image. Since \"orange_2\" is not visible, I cannot determine if it is within reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible and appears to be inside or very close to the refrigerator. The objects \"carrot_2\" and \"carrot_3\" are labeled and visible, but there is no visible label or object named \"orange_2\" in the image. Since \"orange_2\" is not visible, I cannot determine if it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999970972, 2.902839616294619e-12, "In the image, the robotic arm (the agent) is visible and appears to be inside or very close to a refrigerator. The objects labeled \"carrot_2\" and \"carrot_3\" are visible inside the refrigerator. There is no visible table labeled \"table_1\" in the immediate vicinity of the robotic arm. Since the table is not visible or clearly within the reach of the agent in this image, I cannot confirm that table_1 is in reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible and appears to be inside or very close to a refrigerator. The objects labeled \"carrot_2\" and \"carrot_3\" are visible inside the refrigerator. There is no visible table labeled \"table_1\" in the immediate vicinity of the robotic arm. Since the table is not visible or clearly within the reach of the agent in this image, I cannot confirm that table_1 is in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999149608578, 8.503914221331202e-08, "In the image, I can see the robotic arm (the agent) inside what appears to be a refrigerator. The objects labeled \"carrot_2\" and \"carrot_3\" are visible, but there is no visible object labeled \"apple_1\" in the image. Since \"apple_1\" is not visible, I cannot determine if it is within reach of the agent.", true, "<explanation>\nIn the image, I can see the robotic arm (the agent) inside what appears to be a refrigerator. The objects labeled \"carrot_2\" and \"carrot_3\" are visible, but there is no visible object labeled \"apple_1\" in the image. Since \"apple_1\" is not visible, I cannot determine if it is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 0.9999999999975097, 2.4903346519837445e-12, "To determine if apple_1 is in reach of the agent, I need to identify the location of apple_1 and the position of the robotic arm. In the image, the robotic arm is holding a white cup-like object and is positioned near a refrigerator. On the dining table in the background, there are several objects, including what appears to be an apple. However, the apple is on the table, and the robotic arm is not close to the table; it is near the refrigerator. Therefore, apple_1 is not in reach of the agent.", false, "<explanation>\nTo determine if apple_1 is in reach of the agent, I need to identify the location of apple_1 and the position of the robotic arm. In the image, the robotic arm is holding a white cup-like object and is positioned near a refrigerator. On the dining table in the background, there are several objects, including what appears to be an apple. However, the apple is on the table, and the robotic arm is not close to the table; it is near the refrigerator. Therefore, apple_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable orange_2": ["no", 0.9999999999434692, 5.653083444074528e-11, "To determine if the orange_2 is in reach of the agent, I need to identify the location of the orange_2 and the position of the robotic arm. The orange_2 is visible on the round wooden table in the background, while the robotic arm is currently positioned near a metallic surface (possibly a refrigerator) and is holding a cup. The arm is not close to the table where the orange_2 is located, so the orange_2 is not within immediate reach of the agent.", true, "<explanation>\nTo determine if the orange_2 is in reach of the agent, I need to identify the location of the orange_2 and the position of the robotic arm. The orange_2 is visible on the round wooden table in the background, while the robotic arm is currently positioned near a metallic surface (possibly a refrigerator) and is holding a cup. The arm is not close to the table where the orange_2 is located, so the orange_2 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999998, 2.495636024209778e-16, "The image shows the perspective of a robotic arm (the agent) in a virtual household environment. The robotic arm is positioned near a reflective surface, possibly a refrigerator or similar appliance. In the background, there is a table with chairs around it (likely table_1). However, the table appears to be some distance away from the robotic arm, with other furniture and open space in between. Given the apparent distance and the fact that the arm is not extended toward the table, it does not seem that the table is within immediate reach of the agent.", true, "<explanation>\nThe image shows the perspective of a robotic arm (the agent) in a virtual household environment. The robotic arm is positioned near a reflective surface, possibly a refrigerator or similar appliance. In the background, there is a table with chairs around it (likely table_1). However, the table appears to be some distance away from the robotic arm, with other furniture and open space in between. Given the apparent distance and the fact that the arm is not extended toward the table, it does not seem that the table is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999999994453, 5.547214663054373e-13, "To determine if apple_1 is in reach of the agent, I need to identify the apple in the image and see if it is close to the robotic arm. In the image, there is a table with objects on it, including what appears to be an apple. However, the robotic arm is currently positioned near a refrigerator and is holding a cup, and the apple is on the table, which is some distance away from the arm. Therefore, the apple is not in immediate reach of the agent.", true, "<explanation>\nTo determine if apple_1 is in reach of the agent, I need to identify the apple in the image and see if it is close to the robotic arm. In the image, there is a table with objects on it, including what appears to be an apple. However, the robotic arm is currently positioned near a refrigerator and is holding a cup, and the apple is on the table, which is some distance away from the arm. Therefore, the apple is not in immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["no", 0.9999999999915793, 8.420746513319008e-12, "The image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the dining table, which is a few feet away from the current position of the robotic arm. The arm appears to be in a different area, separated by some distance and possibly furniture, making it unlikely that the arm can reach the apple_1 without moving closer.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the dining table, which is a few feet away from the current position of the robotic arm. The arm appears to be in a different area, separated by some distance and possibly furniture, making it unlikely that the arm can reach the apple_1 without moving closer.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable orange_2": ["no", 0.9999999999636917, 3.6308292396412135e-11, "The robotic arm (agent) is positioned near the edge of the room, and the object labeled \"orange_2\" is on the dining table, which is some distance away from the agent. Given the visible length and orientation of the robotic arm, it does not appear to be close enough to reach \"orange_2\" without moving closer to the table. Therefore, \"orange_2\" is not in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the edge of the room, and the object labeled \"orange_2\" is on the dining table, which is some distance away from the agent. Given the visible length and orientation of the robotic arm, it does not appear to be close enough to reach \"orange_2\" without moving closer to the table. Therefore, \"orange_2\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 0.9999999999999999, 1.1944806151775788e-16, "The image shows the perspective of the robotic arm agent. The table_1 is visible in the middle of the room, but it appears to be some distance away from the agent. The agent is positioned near the edge of a counter or another surface, and there is a clear gap between the agent and the table_1. Based on the visible distance and the position of the arm, it does not appear that the agent can reach the table_1 from its current location.", true, "<explanation>\nThe image shows the perspective of the robotic arm agent. The table_1 is visible in the middle of the room, but it appears to be some distance away from the agent. The agent is positioned near the edge of a counter or another surface, and there is a clear gap between the agent and the table_1. Based on the visible distance and the position of the arm, it does not appear that the agent can reach the table_1 from its current location.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["no", 0.9999999987611665, 1.2388335137324963e-09, "The image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the dining table, which is some distance away from the current position of the robotic arm. The arm appears to be in a different part of the room and not directly adjacent to the table where apple_1 is placed. Therefore, apple_1 is not within immediate reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The apple_1 is located on the dining table, which is some distance away from the current position of the robotic arm. The arm appears to be in a different part of the room and not directly adjacent to the table where apple_1 is placed. Therefore, apple_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 1.5919947117477485e-14, 0.9999999999999841, "The apple_1 is located on the table in the dining area, and the robotic arm (agent) is positioned near the edge of the kitchen area, close to the table. The apple_1 is on the side of the table that is closest to the agent, and there are no visible obstacles between the agent and the apple_1. The distance appears to be within the reach of the robotic arm, given its proximity to the table.", true, "<explanation>\nThe apple_1 is located on the table in the dining area, and the robotic arm (agent) is positioned near the edge of the kitchen area, close to the table. The apple_1 is on the side of the table that is closest to the agent, and there are no visible obstacles between the agent and the apple_1. The distance appears to be within the reach of the robotic arm, given its proximity to the table.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable orange_2": ["no", 0.9999999999999193, 8.072378709630362e-14, "To determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the location of orange_2. The robotic arm is visible in the foreground, and orange_2 is on the table in the middle of the room, which appears to be some distance away from the agent. Given the current position and orientation of the arm, it does not appear that the arm can reach orange_2 without moving closer.", true, "<explanation>\nTo determine if orange_2 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the location of orange_2. The robotic arm is visible in the foreground, and orange_2 is on the table in the middle of the room, which appears to be some distance away from the agent. Given the current position and orientation of the arm, it does not appear that the arm can reach orange_2 without moving closer.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 2.5676721565903787e-12, 0.9999999999974323, "To determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is visible in the foreground, and table_1 is the table closest to the arm, partially visible on the left side of the image. The arm appears to be very close to the edge of table_1, suggesting that it could interact with objects on or near the table. Therefore, table_1 is within reach of the agent.", false, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to table_1. The robotic arm is visible in the foreground, and table_1 is the table closest to the arm, partially visible on the left side of the image. The arm appears to be very close to the edge of table_1, suggesting that it could interact with objects on or near the table. Therefore, table_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 8.063487082608458e-15, 0.9999999999999919, "The apple_1 is located on the table in the dining area, and the robotic arm (the agent) is positioned near the edge of the kitchen area, close to the table. The apple_1 is on the side of the table that is closest to the agent, and there are no visible obstacles between the agent and the apple_1. The distance appears to be within the reach of the robotic arm, given its proximity to the table.", false, "<explanation>\nThe apple_1 is located on the table in the dining area, and the robotic arm (the agent) is positioned near the edge of the kitchen area, close to the table. The apple_1 is on the side of the table that is closest to the agent, and there are no visible obstacles between the agent and the apple_1. The distance appears to be within the reach of the robotic arm, given its proximity to the table.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["yes", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["yes", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["yes", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.9285714285714286, "yes_correct": 26, "yes_total": 28, "no_accuracy": 0.6119402985074627, "no_correct": 82, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9545454545454546, "no_correct": 63, "no_total": 66}, "nextto": {"accuracy": 0.3055555555555556, "yes_accuracy": 0.8571428571428571, "yes_correct": 12, "yes_total": 14, "no_accuracy": 0.1724137931034483, "no_correct": 10, "no_total": 58}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable broccoli_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding broccoli_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,broccoli_1": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,broccoli_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,broccoli_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,broccoli_1": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,broccoli_1": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,broccoli_1": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop broccoli_1,bread_1": ["no", "no"], "ontop broccoli_1,countertop_1": ["yes", "yes"], "ontop broccoli_1,flour_1": ["no", "no"], "ontop broccoli_1,carrot_1": ["no", "no"], "ontop broccoli_1,carrot_2": ["no", "no"], "ontop broccoli_1,carrot_3": ["no", "no"], "ontop broccoli_1,apple_1": ["no", "no"], "ontop broccoli_1,apple_2": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,broccoli_1": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "no"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,broccoli_1": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "no"], "nextto bread_1,broccoli_1": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "yes"], "nextto bread_1,apple_2": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,broccoli_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,broccoli_1": ["no", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,apple_2": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["no", "yes"], "nextto carrot_1,broccoli_1": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,broccoli_1": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,broccoli_1": ["yes", "no"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto broccoli_1,bread_1": ["yes", "yes"], "nextto broccoli_1,countertop_1": ["yes", "no"], "nextto broccoli_1,flour_1": ["no", "no"], "nextto broccoli_1,carrot_1": ["no", "no"], "nextto broccoli_1,carrot_2": ["no", "yes"], "nextto broccoli_1,carrot_3": ["no", "no"], "nextto broccoli_1,apple_1": ["yes", "no"], "nextto broccoli_1,apple_2": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "yes"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,broccoli_1": ["yes", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["yes", "no"], "nextto apple_2,carrot_1": ["yes", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,broccoli_1": ["yes", "no"], "nextto apple_2,apple_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6358024691358025, "yes_accuracy": 0.8571428571428571, "yes_correct": 24, "yes_total": 28, "no_accuracy": 0.5895522388059702, "no_correct": 79, "no_total": 134, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "ontop": {"accuracy": 0.9444444444444444, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9393939393939394, "no_correct": 62, "no_total": 66}, "nextto": {"accuracy": 0.25, "yes_accuracy": 0.7142857142857143, "yes_correct": 10, "yes_total": 14, "no_accuracy": 0.13793103448275862, "no_correct": 8, "no_total": 58}}}, "step": 4, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable orange_2": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,orange_2": ["yes", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,orange_2": ["yes", "no"], "ontop carrot_3,bread_1": ["yes", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["yes", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["yes", "no"], "ontop carrot_3,orange_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,chair_1": ["no", "no"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7901234567901234, "yes_accuracy": 0.65, "yes_correct": 13, "yes_total": 20, "no_accuracy": 0.8098591549295775, "no_correct": 115, "no_total": 142, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.7083333333333334, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.7164179104477612, "no_correct": 48, "no_total": 67}, "nextto": {"accuracy": 0.8611111111111112, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.875, "no_correct": 56, "no_total": 64}}}, "step": 5, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_2)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["no", "yes"], "reachable flour_1": ["no", "no"], "reachable chair_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["no", "yes"], "reachable orange_2": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,table_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,orange_2": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["yes", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,orange_2": ["no", "no"], "ontop carrot_2,bread_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["yes", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,carrot_1": ["yes", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["yes", "no"], "ontop carrot_2,orange_2": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,carrot_1": ["yes", "no"], "ontop carrot_3,carrot_2": ["yes", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,orange_2": ["yes", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop orange_2,bread_1": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,carrot_1": ["no", "no"], "ontop orange_2,carrot_2": ["no", "no"], "ontop orange_2,carrot_3": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,chair_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,orange_2": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,chair_1": ["yes", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "yes"], "nextto carrot_1,carrot_3": ["yes", "yes"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,orange_2": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,chair_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "yes"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,orange_2": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "yes"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,orange_2": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto orange_2,bread_1": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,chair_1": ["no", "no"], "nextto orange_2,table_1": ["no", "no"], "nextto orange_2,carrot_1": ["no", "no"], "nextto orange_2,carrot_2": ["no", "no"], "nextto orange_2,carrot_3": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8395061728395061, "yes_accuracy": 0.4, "yes_correct": 8, "yes_total": 20, "no_accuracy": 0.9014084507042254, "no_correct": 128, "no_total": 142, "predicates": {"reachable": {"accuracy": 0.7, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 0.8059701492537313, "no_correct": 54, "no_total": 67}, "nextto": {"accuracy": 0.9444444444444444, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 0.984375, "no_correct": 63, "no_total": 64}}}, "step": 6, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_2)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "yes"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["yes", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable apple_1": ["no", "yes"], "reachable orange_2": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,orange_2": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["yes", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["yes", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["yes", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["yes", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["yes", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["yes", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop apple_1,countertop_1": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop orange_2,countertop_1": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["no", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "nextto countertop_1,flour_1": ["no", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,orange_2": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["no", "no"], "nextto cheese_1,soup_1": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["no", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["no", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto orange_2,countertop_1": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,apple_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8603351955307262, "yes_accuracy": 0.1, "yes_correct": 1, "yes_total": 10, "no_accuracy": 0.9053254437869822, "no_correct": 153, "no_total": 169, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.8625, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 0.92, "no_correct": 69, "no_total": 75}, "nextto": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8974358974358975, "no_correct": 70, "no_total": 78}}}, "step": 7, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(orange_2)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)", "navigate-to(orange_2)", "grasp(orange_2)", "navigate-to(table_1)", "place-on(orange_2, table_1)"]}, {"enum_results": {"reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["yes", "no"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["no", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["no", "no"], "reachable apple_1": ["no", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["yes", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["yes", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["yes", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["no", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,flour_1": ["no", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["no", "no"], "nextto soup_1,yogurt_1": ["no", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["no", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,orange_2": ["no", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,milk_1": ["yes", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["no", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["yes", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,apple_1": ["no", "no"], "nextto orange_2,orange_3": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["no", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,orange_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7932960893854749, "yes_accuracy": 0.6363636363636364, "yes_correct": 7, "yes_total": 11, "no_accuracy": 0.8035714285714286, "no_correct": 135, "no_total": 168, "predicates": {"reachable": {"accuracy": 0.8181818181818182, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9, "no_correct": 9, "no_total": 10}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.9375, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.9324324324324325, "no_correct": 69, "no_total": 74}, "nextto": {"accuracy": 0.6375, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6493506493506493, "no_correct": 50, "no_total": 77}}}, "step": 8, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "yes"], "reachable meat_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable cheese_1": ["yes", "no"], "reachable yogurt_1": ["no", "no"], "reachable soup_1": ["yes", "no"], "reachable apple_1": ["no", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["yes", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,flour_1": ["yes", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["yes", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["yes", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["yes", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["yes", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["yes", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,apple_1": ["yes", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["yes", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["no", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6089385474860335, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.6167664670658682, "no_correct": 103, "no_total": 167, "predicates": {"reachable": {"accuracy": 0.5454545454545454, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.85, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.8648648648648649, "no_correct": 64, "no_total": 74}, "nextto": {"accuracy": 0.35, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.33766233766233766, "no_correct": 26, "no_total": 77}}}, "step": 9, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable flour_1": ["no", "no"], "reachable milk_1": ["no", "no"], "reachable chair_1": ["no", "yes"], "reachable meat_1": ["no", "no"], "reachable table_1": ["no", "no"], "reachable cheese_1": ["yes", "no"], "reachable yogurt_1": ["yes", "no"], "reachable soup_1": ["no", "no"], "reachable apple_1": ["yes", "yes"], "reachable orange_2": ["no", "no"], "reachable orange_3": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding apple_1": ["no", "yes"], "holding orange_2": ["no", "no"], "holding orange_3": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["yes", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,orange_2": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["yes", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,orange_2": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["yes", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["no", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,orange_2": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["yes", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,orange_2": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["yes", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,orange_2": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["yes", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,orange_2": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop orange_2,flour_1": ["no", "no"], "ontop orange_2,milk_1": ["no", "no"], "ontop orange_2,chair_1": ["no", "no"], "ontop orange_2,meat_1": ["no", "no"], "ontop orange_2,table_1": ["yes", "yes"], "ontop orange_2,cheese_1": ["no", "no"], "ontop orange_2,yogurt_1": ["no", "no"], "ontop orange_2,soup_1": ["no", "no"], "ontop orange_2,apple_1": ["no", "no"], "ontop orange_2,orange_3": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["yes", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,orange_2": ["no", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,apple_1": ["yes", "no"], "nextto flour_1,orange_2": ["no", "no"], "nextto flour_1,orange_3": ["no", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,apple_1": ["yes", "no"], "nextto meat_1,orange_2": ["no", "yes"], "nextto meat_1,orange_3": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "no"], "nextto cheese_1,apple_1": ["yes", "no"], "nextto cheese_1,orange_2": ["no", "no"], "nextto cheese_1,orange_3": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,apple_1": ["yes", "no"], "nextto yogurt_1,orange_2": ["no", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "no"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,orange_2": ["no", "no"], "nextto soup_1,orange_3": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["no", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["no", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,orange_2": ["yes", "no"], "nextto apple_1,orange_3": ["no", "no"], "nextto orange_2,flour_1": ["no", "no"], "nextto orange_2,milk_1": ["no", "no"], "nextto orange_2,chair_1": ["yes", "no"], "nextto orange_2,meat_1": ["yes", "yes"], "nextto orange_2,table_1": ["yes", "no"], "nextto orange_2,cheese_1": ["no", "no"], "nextto orange_2,yogurt_1": ["no", "no"], "nextto orange_2,soup_1": ["no", "no"], "nextto orange_2,apple_1": ["yes", "no"], "nextto orange_2,orange_3": ["yes", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "no"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,orange_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6424581005586593, "yes_accuracy": 0.6666666666666666, "yes_correct": 8, "yes_total": 12, "no_accuracy": 0.6407185628742516, "no_correct": 107, "no_total": 167, "predicates": {"reachable": {"accuracy": 0.7272727272727273, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "holding": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "ontop": {"accuracy": 0.8875, "yes_accuracy": 0.8333333333333334, "yes_correct": 5, "yes_total": 6, "no_accuracy": 0.8918918918918919, "no_correct": 66, "no_total": 74}, "nextto": {"accuracy": 0.3625, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.35064935064935066, "no_correct": 27, "no_total": 77}}}, "step": 10, "actions": ["grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999988811368, 1.1188632653714942e-09, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The arm is extended, but the ball is on the ground and appears to be some distance away from the end effector of the robotic arm. Given the current position of the arm and the ball, the ball does not appear to be within immediate reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The arm is extended, but the ball is on the ground and appears to be some distance away from the end effector of the robotic arm. Given the current position of the arm and the ball, the ball does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["no", 0.9999999996370429, 3.629571567095899e-10, "The image shows a robotic arm (the agent) in a room. The shelf_1 is visible on the right side of the image, but the robotic arm is positioned closer to the center of the room and appears to be some distance away from the shelf_1. Based on the perspective and the apparent distance, the shelf_1 does not seem to be within immediate reach of the robotic arm.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a room. The shelf_1 is visible on the right side of the image, but the robotic arm is positioned closer to the center of the room and appears to be some distance away from the shelf_1. Based on the perspective and the apparent distance, the shelf_1 does not seem to be within immediate reach of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999991147, 8.852865710907839e-13, "The robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 is located against the wall on the right side of the room. The arm appears to be extended, but there is still a significant distance between the end of the arm and the cabinet_1. Based on the perspective and the visible reach of the arm, it does not seem that the arm can currently reach the cabinet_1 without moving closer.", true, "<explanation>\nThe robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 is located against the wall on the right side of the room. The arm appears to be extended, but there is still a significant distance between the end of the arm and the cabinet_1. Based on the perspective and the visible reach of the arm, it does not seem that the arm can currently reach the cabinet_1 without moving closer.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999059441, 9.405589223425026e-11, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and there is a significant distance between the arm and the ball. Therefore, the ball is not currently within reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and there is a significant distance between the arm and the ball. Therefore, the ball is not currently within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.999999999815845, 1.8415501314870197e-10, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is not close to the ball. The ball is on the ground, some distance away from the arm's gripper. Based on the current position of the arm and the ball, the ball is not within immediate reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is not close to the ball. The ball is on the ground, some distance away from the arm's gripper. Based on the current position of the arm and the ball, the ball is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["no", 0.9999999997012328, 2.9876728450356367e-10, "The robotic arm (agent) is positioned near the door and is extended towards the center of the room. The shelf_1 is located against the wall on the right side of the image. Given the current position and extension of the robotic arm, it does not appear to be close enough to reach the shelf_1. The arm would need to move closer to the shelf to interact with it.", true, "<explanation>\nThe robotic arm (agent) is positioned near the door and is extended towards the center of the room. The shelf_1 is located against the wall on the right side of the image. Given the current position and extension of the robotic arm, it does not appear to be close enough to reach the shelf_1. The arm would need to move closer to the shelf to interact with it.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999377, 6.227060920065475e-14, "The robotic arm (agent) is positioned near the upper right of the image, and the cabinet_1 is located against the wall on the right side of the room. The arm appears to be extended, but there is still a significant distance between the end of the arm and the cabinet_1. Based on the perspective and the apparent reach of the arm, it does not seem that the arm can currently reach the cabinet_1 without moving closer.", true, "<explanation>\nThe robotic arm (agent) is positioned near the upper right of the image, and the cabinet_1 is located against the wall on the right side of the room. The arm appears to be extended, but there is still a significant distance between the end of the arm and the cabinet_1. Based on the perspective and the apparent reach of the arm, it does not seem that the arm can currently reach the cabinet_1 without moving closer.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999997335276, 2.664723849262382e-10, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and there is a significant distance between the arm's gripper and the ball. Therefore, the ball is not currently within reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and there is a significant distance between the arm's gripper and the ball. Therefore, the ball is not currently within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999999994, 5.093335179730064e-16, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be positioned relatively high compared to the ball, which is on the ground. The arm does not seem to be extended towards the ball, and the ball is not directly beneath the arm. Given the apparent distance and the height difference, it does not look like the ball is currently within the immediate reach of the robotic arm without the arm moving or extending further.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be positioned relatively high compared to the ball, which is on the ground. The arm does not seem to be extended towards the ball, and the ball is not directly beneath the arm. Given the apparent distance and the height difference, it does not look like the ball is currently within the immediate reach of the robotic arm without the arm moving or extending further.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["no", 0.9999999999997575, 2.425167958944362e-13, "The robotic arm (agent) is positioned near the wall, and the shelf_1 is visible on the right side of the image, attached to the wall. The arm appears to be extended, but there is a noticeable distance between the end of the arm and the shelf. Based on the perspective and the visible distance, it does not look like the arm can reach the shelf_1 in its current position.", true, "<explanation>\nThe robotic arm (agent) is positioned near the wall, and the shelf_1 is visible on the right side of the image, attached to the wall. The arm appears to be extended, but there is a noticeable distance between the end of the arm and the shelf. Based on the perspective and the visible distance, it does not look like the arm can reach the shelf_1 in its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999875, 1.2535589575375446e-14, "The robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 (the wooden cabinet on the right side of the image) is located against the wall, a short distance away from the arm. The arm does not appear to be extended toward the cabinet, and there is a noticeable gap between the arm and the cabinet. Based on the visible distance, the cabinet_1 is not within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 (the wooden cabinet on the right side of the image) is located against the wall, a short distance away from the arm. The arm does not appear to be extended toward the cabinet, and there is a noticeable gap between the arm and the cabinet. Based on the visible distance, the cabinet_1 is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999998624026, 1.3759735463772981e-10, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is located on the floor at a distance from the arm. Given the current position of the arm and the ball, it does not look like the arm can reach the ball without further extension or movement.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is located on the floor at a distance from the arm. Given the current position of the arm and the ball, it does not look like the arm can reach the ball without further extension or movement.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999991449, 8.551121810565964e-13, "To determine if ball_1 is within reach of the agent, I need to look for the location of ball_1 in the image and compare it to the position of the robotic arm. In the image, I do not see any object that is clearly identifiable as ball_1 within the immediate vicinity of the robotic arm. The robotic arm is extended towards a shelving unit, but there is no visible ball on the shelves or on the floor nearby. Therefore, ball_1 does not appear to be within reach of the agent.", false, "<explanation>\nTo determine if ball_1 is within reach of the agent, I need to look for the location of ball_1 in the image and compare it to the position of the robotic arm. In the image, I do not see any object that is clearly identifiable as ball_1 within the immediate vicinity of the robotic arm. The robotic arm is extended towards a shelving unit, but there is no visible ball on the shelves or on the floor nearby. Therefore, ball_1 does not appear to be within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plate_1": ["yes", 2.893548273668095e-14, 0.999999999999971, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its end effector at a similar height and distance as \"plate_1\". Given the proximity and alignment, it seems that \"plate_1\" is within the reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its end effector at a similar height and distance as \"plate_1\". Given the proximity and alignment, it seems that \"plate_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 2.4220248929219666e-14, 0.9999999999999758, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_2\" is visible on the shelf, and the arm appears to be close to the shelf, with its end effector near the level of \"plate_2\". Given the proximity and the orientation of the arm, it seems that the agent could reach and interact with \"plate_2\".", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_2\" is visible on the shelf, and the arm appears to be close to the shelf, with its end effector near the level of \"plate_2\". Given the proximity and the orientation of the arm, it seems that the agent could reach and interact with \"plate_2\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 5.620286482626118e-14, 0.9999999999999438, "To determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf where plate_3 is located. In the image, the robotic arm is extended towards the shelf, and plate_3 is on the bottom shelf, which is close to the arm's current position. The arm appears to be able to reach the shelf and the plate, as there are no visible obstacles and the distance is short.", false, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf where plate_3 is located. In the image, the robotic arm is extended towards the shelf, and plate_3 is on the bottom shelf, which is close to the arm's current position. The arm appears to be able to reach the shelf and the plate, as there are no visible obstacles and the distance is short.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 8.057545661053622e-12, 0.9999999999919424, "The image shows a robotic arm (the agent) in a room with a shelf labeled with \"Plate 1\", \"Plate 2\", and a black object on the bottom shelf, which appears to be a saucepan. The robotic arm is extended towards the shelf and is close to the black object. Given the proximity of the arm to the shelf and the object, it appears that the saucepan_1 is within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a room with a shelf labeled with \"Plate 1\", \"Plate 2\", and a black object on the bottom shelf, which appears to be a saucepan. The robotic arm is extended towards the shelf and is close to the black object. Given the proximity of the arm to the shelf and the object, it appears that the saucepan_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 5.547820740342149e-07, 0.9999994452179259, "The robotic arm (agent) is extended towards the shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be close to the shelf, indicating that it is within reach for interaction or manipulation of objects on the shelf.", false, "<explanation>\nThe robotic arm (agent) is extended towards the shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be close to the shelf, indicating that it is within reach for interaction or manipulation of objects on the shelf.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 1.1638373657020333e-09, 0.9999999988361626, "The robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and its end effector is near the cabinet's drawers. Given the proximity and the orientation of the arm, it seems that the cabinet is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and its end effector is near the cabinet's drawers. Given the proximity and the orientation of the arm, it seems that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(plate_3, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_3": ["no", 0.9999999999922009, 7.799086148954992e-12, "In the image, the robotic arm (agent) is visible and appears to be holding a black object. The shelf to the right has labels for \"plate_1,\" \"plate_2,\" and \"plate_3.\" The black object is located on the shelf next to the \"plate_3\" label, but it is not in the robotic arm's gripper. The arm is empty, indicating that it is not holding the plate_3.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible and appears to be holding a black object. The shelf to the right has labels for \"plate_1,\" \"plate_2,\" and \"plate_3.\" The black object is located on the shelf next to the \"plate_3\" label, but it is not in the robotic arm's gripper. The arm is empty, indicating that it is not holding the plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["yes", 2.7011780420345966e-07, 0.9999997298821958, "The robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet is short, indicating that the cabinet is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet is short, indicating that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["yes", 5.247813569933962e-06, 0.9999947521864301, "In the image, there is a cabinet labeled \"cabinet_1\" on the right side. The door of the cabinet appears to be open, as the shelves and objects inside are visible. This indicates that the cabinet is not closed.", true, "<explanation>\nIn the image, there is a cabinet labeled \"cabinet_1\" on the right side. The door of the cabinet appears to be open, as the shelves and objects inside are visible. This indicates that the cabinet is not closed.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 1.8893759469758346e-14, 0.9999999999999811, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is extended toward a shelving unit labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its end effector at a similar height and distance as \"plate_1\". Given the proximity and alignment, it seems that \"plate_1\" is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is extended toward a shelving unit labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its end effector at a similar height and distance as \"plate_1\". Given the proximity and alignment, it seems that \"plate_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.999999827830947, 1.721690530399025e-07, "In the image, the robotic arm (agent) is visible, and it is holding a black object. The ball_1, which is typically a small, round, and colorful object, is not seen in the gripper of the robotic arm. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and it is holding a black object. The ball_1, which is typically a small, round, and colorful object, is not seen in the gripper of the robotic arm. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999999466161, 5.338382261466105e-11, "In the image, the robotic arm (agent) is visible near a shelf labeled with \"plate_1\" and \"plate_2\". The shelf has two slots, and \"plate_2\" is clearly visible on the shelf, not in the robotic arm's gripper. The gripper appears to be empty or holding something else, but not \"plate_2\". Therefore, the agent is not holding \"plate_2\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near a shelf labeled with \"plate_1\" and \"plate_2\". The shelf has two slots, and \"plate_2\" is clearly visible on the shelf, not in the robotic arm's gripper. The gripper appears to be empty or holding something else, but not \"plate_2\". Therefore, the agent is not holding \"plate_2\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999981856966391, 1.814303360915843e-06, "In the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The plate labeled \"plate_3\" is still on the shelf, and the robotic arm does not appear to be holding it. The arm's gripper is empty.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The plate labeled \"plate_3\" is still on the shelf, and the robotic arm does not appear to be holding it. The arm's gripper is empty.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 8.125029551291246e-15, 0.9999999999999919, "The image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is extended towards the shelf. The arm appears to be close enough to reach \"plate_1\" without any visible obstacles in the way. The position and orientation of the arm suggest that it can interact with \"plate_1\".", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is extended towards the shelf. The arm appears to be close enough to reach \"plate_1\" without any visible obstacles in the way. The position and orientation of the arm suggest that it can interact with \"plate_1\".\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999990270132971, 9.729867028387325e-07, "In the image, the robotic arm (agent) is visible, and there is a blue and yellow ball on the floor. The gripper of the robotic arm does not appear to be holding any object, including the ball. The ball is on the floor and not in the gripper.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a blue and yellow ball on the floor. The gripper of the robotic arm does not appear to be holding any object, including the ball. The ball is on the floor and not in the gripper.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999996953906, 3.046094184326956e-10, "In the image, the robotic arm (agent) is visible near a shelf labeled with \"plate_1\" and \"plate_2\". The shelf has two plates, and \"plate_2\" is clearly visible on the shelf, not in the robotic arm's gripper. The gripper appears to be empty or holding something else, but not \"plate_2\". Therefore, the agent is not holding \"plate_2\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near a shelf labeled with \"plate_1\" and \"plate_2\". The shelf has two plates, and \"plate_2\" is clearly visible on the shelf, not in the robotic arm's gripper. The gripper appears to be empty or holding something else, but not \"plate_2\". Therefore, the agent is not holding \"plate_2\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.999987101749261, 1.2898250739063422e-05, "In the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The plate labeled \"plate_3\" is still on the shelf, and the robotic arm does not appear to be holding it. Therefore, the agent is not holding plate_3.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The plate labeled \"plate_3\" is still on the shelf, and the robotic arm does not appear to be holding it. Therefore, the agent is not holding plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["yes", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.6779661016949152, "no_correct": 40, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9130434782608695, "no_correct": 21, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.7083333333333334, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21}}}, "step": 4, "actions": ["place-inside(plate_3, cabinet_1)", "grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6610169491525424, "no_correct": 39, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9565217391304348, "no_correct": 22, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5714285714285714, "no_correct": 12, "no_total": 21}}}, "step": 5, "actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9565217391304348, "no_correct": 22, "no_total": 23}, "inside": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21}}}, "step": 6, "actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 3.3070111805310707e-09, 0.9999999966929888, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The arm appears to be extended towards the ball, and the ball is relatively close to the base of the arm. Given the apparent length and reach of the robotic arm, it seems that the ball is within the arm's reachable area.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The arm appears to be extended towards the ball, and the ball is relatively close to the base of the arm. Given the apparent length and reach of the robotic arm, it seems that the ball is within the arm's reachable area.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.999999999999938, 6.194261748917269e-14, "The cabinet_1 is visible in the image, located on the right side of the room. The robotic arm (agent) is positioned near the center-right of the image, but it is not extended towards the cabinet_1. The cabinet_1 appears to be against the wall, and there is a noticeable distance between the robotic arm and the cabinet_1. Based on the current position of the arm, it does not seem to be within immediate reach of the cabinet_1.", true, "<explanation>\nThe cabinet_1 is visible in the image, located on the right side of the room. The robotic arm (agent) is positioned near the center-right of the image, but it is not extended towards the cabinet_1. The cabinet_1 appears to be against the wall, and there is a noticeable distance between the robotic arm and the cabinet_1. Based on the current position of the arm, it does not seem to be within immediate reach of the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_2": ["no", 0.9999999999780549, 2.194513702937206e-11, "The robotic arm (agent) is positioned near the top right of the image, while the object labeled as \"carton_2\" appears to be the open cardboard box on the left side of the image. The arm is currently extended toward the center of the room, and there is a noticeable distance between the arm and the carton_2. Given the current position and extension of the arm, it does not appear to be within immediate reach of the carton_2.", true, "<explanation>\nThe robotic arm (agent) is positioned near the top right of the image, while the object labeled as \"carton_2\" appears to be the open cardboard box on the left side of the image. The arm is currently extended toward the center of the room, and there is a noticeable distance between the arm and the carton_2. Given the current position and extension of the arm, it does not appear to be within immediate reach of the carton_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 3.1214618853377076e-10, 0.9999999996878538, "To determine if carton_1 is within reach of the agent, I need to observe the position of the robotic arm relative to carton_1. In the image, the robotic arm is extended and carton_1 is directly in front of it, close to the arm's end effector. The proximity suggests that the arm can likely reach and interact with carton_1.", true, "<explanation>\nTo determine if carton_1 is within reach of the agent, I need to observe the position of the robotic arm relative to carton_1. In the image, the robotic arm is extended and carton_1 is directly in front of it, close to the arm's end effector. The proximity suggests that the arm can likely reach and interact with carton_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 3.305855826685025e-11, 0.9999999999669414, "To determine if plate_1 is in reach of the agent, I need to check the relative position of plate_1 to the robotic arm (the agent). In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a close distance. The arm is extended towards the area where plate_1 is located, suggesting that the plate is within the operational range of the arm. Therefore, plate_1 is in reach of the agent.", false, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the relative position of plate_1 to the robotic arm (the agent). In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a close distance. The arm is extended towards the area where plate_1 is located, suggesting that the plate is within the operational range of the arm. Therefore, plate_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 1.3929358570954967e-11, 0.9999999999860706, "To determine if plate_2 is in reach of the agent, I need to check the relative position of plate_2 to the robotic arm (the agent). In the image, plate_2 is labeled and appears to be directly in front of the robotic arm, within a close distance. The arm is extended towards the area where plate_2 is located, suggesting that the plate is within the arm's operational range. Therefore, plate_2 is in reach of the agent.", false, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the relative position of plate_2 to the robotic arm (the agent). In the image, plate_2 is labeled and appears to be directly in front of the robotic arm, within a close distance. The arm is extended towards the area where plate_2 is located, suggesting that the plate is within the arm's operational range. Therefore, plate_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 2.9650302554177132e-12, 0.9999999999970349, "To determine if plate_3 is in reach of the agent, I need to check the relative position of plate_3 to the robotic arm. In the image, plate_3 is labeled and appears to be directly in front of the robotic arm, within the area that the arm could potentially reach. The arm is extended towards the plates, and plate_3 is not obstructed by any other objects. Therefore, plate_3 is in reach of the agent.", false, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the relative position of plate_3 to the robotic arm. In the image, plate_3 is labeled and appears to be directly in front of the robotic arm, within the area that the arm could potentially reach. The arm is extended towards the plates, and plate_3 is not obstructed by any other objects. Therefore, plate_3 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 3.584521160445038e-11, 0.9999999999641548, "To determine if the saucepan_1 is in reach of the agent, I need to check the relative position of the robotic arm (the agent) and the labeled object \"saucepan_1\". In the image, the robotic arm is extended and the label \"saucepan_1\" is very close to the end effector of the arm, indicating that the object is within the arm's immediate vicinity and likely within its reach.", false, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, I need to check the relative position of the robotic arm (the agent) and the labeled object \"saucepan_1\". In the image, the robotic arm is extended and the label \"saucepan_1\" is very close to the end effector of the arm, indicating that the object is within the arm's immediate vicinity and likely within its reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["no", 1.0, 2.41934742240084e-17, "To determine if shelf_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the shelf_1. In the image, the robotic arm is extended towards the direction of the shelf, and shelf_1 is visible in the background. However, the shelf appears to be at a considerable distance from the robotic arm, which is currently positioned closer to the foreground. The arm does not appear to be close enough to interact with or reach the shelf_1.", true, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the shelf_1. In the image, the robotic arm is extended towards the direction of the shelf, and shelf_1 is visible in the background. However, the shelf appears to be at a considerable distance from the robotic arm, which is currently positioned closer to the foreground. The arm does not appear to be close enough to interact with or reach the shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999999711, 2.882460621539089e-14, "To determine if cabinet_1 is in reach of the agent, I need to check the relative positions of the robotic arm (the agent) and cabinet_1. In the image, the robotic arm is mounted on the wall and is extended towards the direction of cabinet_1, which is labeled and appears to be at the end of the hallway. However, there is a significant distance between the robotic arm and cabinet_1, and the arm does not appear to be close enough to interact with or reach the cabinet. Therefore, cabinet_1 is not in reach of the agent.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to check the relative positions of the robotic arm (the agent) and cabinet_1. In the image, the robotic arm is mounted on the wall and is extended towards the direction of cabinet_1, which is labeled and appears to be at the end of the hallway. However, there is a significant distance between the robotic arm and cabinet_1, and the arm does not appear to be close enough to interact with or reach the cabinet. Therefore, cabinet_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_2": ["yes", 8.952685868045635e-08, 0.9999999104731413, "The image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"carton_2\" is positioned directly in front of the robotic arm and appears to be within the arm's operational range. The proximity and orientation of the arm relative to \"carton_2\" suggest that the agent can reach and potentially interact with it.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"carton_2\" is positioned directly in front of the robotic arm and appears to be within the arm's operational range. The proximity and orientation of the arm relative to \"carton_2\" suggest that the agent can reach and potentially interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_1": {"before": true, "after": false}, "reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 1.957116660082909e-13, 0.9999999999998043, "To determine if plate_1 is in reach of the agent, I need to check the relative position of plate_1 to the robotic arm (the agent). In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a short distance. The arm is extended towards the area where plate_1 is located, suggesting that the plate is within the arm's operational range. There are no visible obstacles between the arm and plate_1 that would prevent the agent from reaching it.", true, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the relative position of plate_1 to the robotic arm (the agent). In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a short distance. The arm is extended towards the area where plate_1 is located, suggesting that the plate is within the arm's operational range. There are no visible obstacles between the arm and plate_1 that would prevent the agent from reaching it.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding plate_2": ["no", 0.9999999997219695, 2.7803050788662666e-10, "To determine if the agent (robotic arm) is holding plate_2, I need to check if plate_2 is in the gripper of the robotic arm. In the image, the robotic arm is visible, but plate_2 is not seen in its gripper. Instead, plate_2 appears to be located on the table or another surface, not in the grasp of the robotic arm.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plate_2, I need to check if plate_2 is in the gripper of the robotic arm. In the image, the robotic arm is visible, but plate_2 is not seen in its gripper. Instead, plate_2 appears to be located on the table or another surface, not in the grasp of the robotic arm.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999999902354, 9.764605557422587e-12, "To determine if the agent (robotic arm) is holding plate_3, I need to observe the position of the robotic arm and see if plate_3 is in its gripper. In the image, the robotic arm is visible, but plate_3 is not in the gripper; instead, plate_3 is labeled and appears to be on the table or surface below the arm, not being held. Therefore, the agent is not holding plate_3.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plate_3, I need to observe the position of the robotic arm and see if plate_3 is in its gripper. In the image, the robotic arm is visible, but plate_3 is not in the gripper; instead, plate_3 is labeled and appears to be on the table or surface below the arm, not being held. Therefore, the agent is not holding plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 6.798023817639065e-11, 0.9999999999320197, "To determine if plate_1 is in reach of the agent, I need to check the relative positions of the robotic arm (the agent) and plate_1. In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a short distance. The arm is extended towards the plate, indicating that it is close enough for the agent to interact with or grasp it.", true, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the relative positions of the robotic arm (the agent) and plate_1. In the image, plate_1 is labeled and appears to be directly in front of the robotic arm, within a short distance. The arm is extended towards the plate, indicating that it is close enough for the agent to interact with or grasp it.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding plate_2": ["no", 0.9999999997715061, 2.2849394117919754e-10, "To determine if the agent (robotic arm) is holding plate_2, I need to check if plate_2 is in the gripper of the robotic arm. In the image, the robotic arm is visible, and plate_2 is labeled. Plate_2 appears to be on the table or surface in front of the arm, not within the gripper. The gripper is empty and not in contact with plate_2.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plate_2, I need to check if plate_2 is in the gripper of the robotic arm. In the image, the robotic arm is visible, and plate_2 is labeled. Plate_2 appears to be on the table or surface in front of the arm, not within the gripper. The gripper is empty and not in contact with plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999989594618, 1.0405382200067193e-09, "To determine if the agent (robotic arm) is holding plate_3, I need to observe the position of the robotic arm and see if plate_3 is in its gripper. In the image, the robotic arm is visible, but plate_3 is labeled and appears to be on the table, not in the gripper of the robotic arm. The gripper does not appear to be holding any object.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plate_3, I need to observe the position of the robotic arm and see if plate_3 is in its gripper. In the image, the robotic arm is visible, but plate_3 is labeled and appears to be on the table, not in the gripper of the robotic arm. The gripper does not appear to be holding any object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["yes", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["yes", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["yes", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["yes", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["yes", "no"], "inside plate_3,carton_2": ["yes", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["yes", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,carton_1": ["yes", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.35384615384615387, "yes_accuracy": 0.75, "yes_correct": 6, "yes_total": 8, "no_accuracy": 0.2982456140350877, "no_correct": 17, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.09523809523809523, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.05, "no_correct": 1, "no_total": 20}, "inside": {"accuracy": 0.7777777777777778, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}, "nextto": {"accuracy": 0.23809523809523808, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.16666666666666666, "no_correct": 3, "no_total": 18}}}, "step": 2, "actions": ["grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop plate_1,carton_1": ["yes", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["yes", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["yes", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["yes", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["yes", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["yes", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,carton_1": ["yes", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.38461538461538464, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 0.2982456140350877, "no_correct": 17, "no_total": 57, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.1, "no_correct": 2, "no_total": 20}, "inside": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "nextto": {"accuracy": 0.19047619047619047, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.05555555555555555, "no_correct": 1, "no_total": 18}}}, "step": 3, "actions": ["grasp(plate_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.999999999796785, 2.0321497039806883e-10, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is on the floor at some distance from the arm. Given the position of the arm and the ball, it does not look like the arm can reach the ball in its current position.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is on the floor at some distance from the arm. Given the position of the arm and the ball, it does not look like the arm can reach the ball in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999981894, 1.8105154128132086e-12, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is on the floor at a distance from the arm. Given the current position of the arm and the ball, it does not look like the arm can reach the ball without further extension or movement. Therefore, the ball is not in reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is on the floor at a distance from the arm. Given the current position of the arm and the ball, it does not look like the arm can reach the ball without further extension or movement. Therefore, the ball is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999998755958, 1.2440420313246184e-10, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it appears to be positioned higher up and not directly above the ball. The ball is on the ground, and the arm does not seem to be close enough to reach or grasp the ball in its current position.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is extended, but it appears to be positioned higher up and not directly above the ball. The ball is on the ground, and the arm does not seem to be close enough to reach or grasp the ball in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable shelf_1": ["no", 0.9999999999996414, 3.585668436587517e-13, "The image shows a robotic arm (the agent) and a shelf (shelf_1) against the wall on the right side. The robotic arm appears to be extended, but it is not close to the shelf. The shelf is positioned further away from the arm's current location, and there is a noticeable gap between the arm and the shelf. Therefore, the shelf_1 is not within the immediate reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a shelf (shelf_1) against the wall on the right side. The robotic arm appears to be extended, but it is not close to the shelf. The shelf is positioned further away from the arm's current location, and there is a noticeable gap between the arm and the shelf. Therefore, the shelf_1 is not within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["no", 0.9999999999996516, 3.484011416002123e-13, "The robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 is located on the right side of the room, against the wall. The arm appears to be extended, but there is a noticeable distance between the end of the arm and the cabinet. Based on the visible reach of the arm and the spatial arrangement, the cabinet_1 does not appear to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the upper right of the image, while the cabinet_1 is located on the right side of the room, against the wall. The arm appears to be extended, but there is a noticeable distance between the end of the arm and the cabinet. Based on the visible reach of the arm and the spatial arrangement, the cabinet_1 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999628063, 3.719366772977358e-11, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and the arm would need to be lowered and possibly moved forward to reach it. Based on the current positions, the ball is not within immediate reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The arm is extended, but it is positioned high above the ground and not close to the ball. The ball is on the floor, and the arm would need to be lowered and possibly moved forward to reach it. Based on the current positions, the ball is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 7.673369775489005e-12, 0.9999999999923266, "The image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball is positioned relatively close to the base of the robotic arm, and the arm appears to be extended in the direction of the ball. Given the proximity of the ball to the arm and the typical reach of such robotic arms in virtual simulators, it seems likely that the ball is within the arm's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball is positioned relatively close to the base of the robotic arm, and the arm appears to be extended in the direction of the ball. Given the proximity of the ball to the arm and the typical reach of such robotic arms in virtual simulators, it seems likely that the ball is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_2": ["no", 0.9999999999999933, 6.70346886068876e-15, "In the image, the robotic arm (agent) is visible, and there is a label \"plate_2\" in red text. The label \"plate_2\" appears to be located on or near a set of boxes or a shelf, which is not immediately adjacent to the robotic arm. The arm is extended, but there is still a noticeable distance between the arm and the location of \"plate_2\". Therefore, \"plate_2\" does not appear to be within immediate reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a label \"plate_2\" in red text. The label \"plate_2\" appears to be located on or near a set of boxes or a shelf, which is not immediately adjacent to the robotic arm. The arm is extended, but there is still a noticeable distance between the arm and the location of \"plate_2\". Therefore, \"plate_2\" does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["no", 0.9999999999454326, 5.456732519969174e-11, "The image shows a robotic arm (the agent) in a room. The object labeled \"plate_3\" is visible in the background, placed on top of a box or crate. The robotic arm is extended, but it is not close to \"plate_3\"; there is a significant distance between the arm and the plate. Therefore, \"plate_3\" is not within immediate reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a room. The object labeled \"plate_3\" is visible in the background, placed on top of a box or crate. The robotic arm is extended, but it is not close to \"plate_3\"; there is a significant distance between the arm and the plate. Therefore, \"plate_3\" is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["no", 0.999999999911355, 8.864502426707987e-11, "The image shows a robotic arm (the agent) in a room with some furniture, including a shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be extended towards the right, but there is a noticeable distance between the arm and the shelf. The arm does not seem close enough to interact with or reach the shelf directly from its current position.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a room with some furniture, including a shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be extended towards the right, but there is a noticeable distance between the arm and the shelf. The arm does not seem close enough to interact with or reach the shelf directly from its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["yes", 7.449710337889028e-14, 0.9999999999999255, "The robotic arm (agent) is positioned near the right side of the image, and \"cabinet_1\" is likely the cabinet visible on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet seems short enough for the arm to reach and interact with it. Therefore, the cabinet is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the right side of the image, and \"cabinet_1\" is likely the cabinet visible on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet seems short enough for the arm to reach and interact with it. Therefore, the cabinet is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["yes", 6.59811942366992e-11, 0.9999999999340188, "The image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball appears to be directly below the robotic arm and within a close distance. Given the typical reach of such robotic arms in virtual household simulators, it seems that the ball is within the arm's reachable area.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball appears to be directly below the robotic arm and within a close distance. Given the typical reach of such robotic arms in virtual household simulators, it seems that the ball is within the arm's reachable area.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable shelf_1": ["yes", 1.4731548381435632e-13, 0.9999999999998527, "To determine if the shelf_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the shelf_1. The robotic arm is visible in the image, and there is a shelf on the right side of the image. The arm appears to be extended towards the shelf, and the distance between the arm and the shelf seems short enough that the arm could interact with it. Therefore, the shelf_1 is in reach of the agent.", true, "<explanation>\nTo determine if the shelf_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the shelf_1. The robotic arm is visible in the image, and there is a shelf on the right side of the image. The arm appears to be extended towards the shelf, and the distance between the arm and the shelf seems short enough that the arm could interact with it. Therefore, the shelf_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999979733647505, 2.0266352495343453e-06, "To determine if the agent is holding the ball_1, I need to check if the ball is within the robotic arm's gripper. In the image, the ball is visible on the floor in the foreground, and the robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nTo determine if the agent is holding the ball_1, I need to check if the ball is within the robotic arm's gripper. In the image, the ball is visible on the floor in the foreground, and the robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999695240847839, 3.047591521606371e-05, "In the image, the robotic arm (the agent) is visible, and it appears to be empty-handed. The object labeled \"plate_2\" is not visible in the gripper of the robotic arm. Therefore, the agent is not holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible, and it appears to be empty-handed. The object labeled \"plate_2\" is not visible in the gripper of the robotic arm. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999976851281606, 2.314871839460358e-06, "In the image, the robotic arm (the agent) is visible, and there is an object labeled \"plate_3\" on top of a box near the right side of the image. The robotic arm's gripper is empty and not holding any object. Therefore, the agent is not holding the plate_3.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible, and there is an object labeled \"plate_3\" on top of a box near the right side of the image. The robotic arm's gripper is empty and not holding any object. Therefore, the agent is not holding the plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"open shelf_1": [true, false, false], "holding ball_2": [true, false, false], "holding plate_1": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999944553115, 5.5446885202585856e-09, "The image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball appears to be some distance away from the robotic arm, which is extended but not close to the ball. Given the visible distance between the arm and the ball, it does not seem that the arm can reach the ball in its current position.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball labeled \"ball_1\" on the floor. The ball appears to be some distance away from the robotic arm, which is extended but not close to the ball. Given the visible distance between the arm and the ball, it does not seem that the arm can reach the ball in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 1.548133221274731e-07, 0.9999998451866778, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm appears to be extended towards the ball, and the ball is relatively close to the arm's end effector. Given the proximity of the ball to the arm, it seems that the ball is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm appears to be extended towards the ball, and the ball is relatively close to the arm's end effector. Given the proximity of the ball to the arm, it seems that the ball is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["no", 0.9999999999999999, 9.088922437591582e-17, "The robotic arm (agent) is visible in the image, and \"plate_1\" is labeled in red text on a piece of furniture to the right. The arm appears to be extended, but \"plate_1\" is located on a higher shelf or surface, and the arm is not directly next to or above it. The arm would need to be closer or more aligned with \"plate_1\" to be considered within reach. Therefore, \"plate_1\" is not in reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is visible in the image, and \"plate_1\" is labeled in red text on a piece of furniture to the right. The arm appears to be extended, but \"plate_1\" is located on a higher shelf or surface, and the arm is not directly next to or above it. The arm would need to be closer or more aligned with \"plate_1\" to be considered within reach. Therefore, \"plate_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_2": ["yes", 7.025690938163513e-18, 1.0, "To determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_2. The robotic arm is visible in the upper right part of the image, and plate_2 is labeled in red text on a piece of furniture (likely a dresser or shelf) to the right. The arm appears to be extended toward the area where plate_2 is located, and the distance between the arm and plate_2 seems short enough for the arm to reach it. Therefore, plate_2 is likely within reach of the agent.", false, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_2. The robotic arm is visible in the upper right part of the image, and plate_2 is labeled in red text on a piece of furniture (likely a dresser or shelf) to the right. The arm appears to be extended toward the area where plate_2 is located, and the distance between the arm and plate_2 seems short enough for the arm to reach it. Therefore, plate_2 is likely within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["no", 1.0, 1.5240683916490116e-17, "In the image, the robotic arm (agent) is visible in the foreground, and the labels for \"plate_1\", \"plate_2\", and \"plate_3\" are seen on the right side of the image, attached to a piece of furniture. \"plate_3\" appears to be located on a shelf or drawer that is not immediately adjacent to the robotic arm's current position. The arm is extended but is not close to the shelf where \"plate_3\" is located. Therefore, \"plate_3\" does not appear to be within the immediate reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible in the foreground, and the labels for \"plate_1\", \"plate_2\", and \"plate_3\" are seen on the right side of the image, attached to a piece of furniture. \"plate_3\" appears to be located on a shelf or drawer that is not immediately adjacent to the robotic arm's current position. The arm is extended but is not close to the shelf where \"plate_3\" is located. Therefore, \"plate_3\" does not appear to be within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable saucepan_1": ["no", 0.9999999999989706, 1.0293936965176462e-12, "In the image, the robotic arm (agent) is visible, and there are some labeled objects such as \"plate_1\" and \"plate_2\" on the right side of the image. However, there is no visible object labeled \"saucepan_1\" within the immediate reach of the robotic arm. The objects that are visible and labeled do not include a saucepan, and there is no clear indication that a saucepan is nearby or within the arm's reach.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are some labeled objects such as \"plate_1\" and \"plate_2\" on the right side of the image. However, there is no visible object labeled \"saucepan_1\" within the immediate reach of the robotic arm. The objects that are visible and labeled do not include a saucepan, and there is no clear indication that a saucepan is nearby or within the arm's reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["no", 1.0, 1.771969222338837e-17, "To determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. In the image, the robotic arm is extended towards the right side of the image, and the shelf (labeled with \"plate_1\" and \"plate_2\") is visible on the right side. However, the arm appears to be in front of the shelf but not close enough to interact with it directly. The arm is not extended towards the shelf, and there is a noticeable gap between the arm and the shelf. Therefore, the shelf_1 is not currently in reach of the agent.", true, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. In the image, the robotic arm is extended towards the right side of the image, and the shelf (labeled with \"plate_1\" and \"plate_2\") is visible on the right side. However, the arm appears to be in front of the shelf but not close enough to interact with it directly. The arm is not extended towards the shelf, and there is a noticeable gap between the arm and the shelf. Therefore, the shelf_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable cabinet_1": ["yes", 3.32626181315677e-12, 0.9999999999966738, "The robotic arm (agent) is visible in the image, and there is a cabinet (cabinet_1) on the right side of the image. The arm appears to be extended towards the cabinet, and the cabinet is close to the arm's end effector. Given the proximity and the apparent reach of the arm, it seems that the cabinet is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is visible in the image, and there is a cabinet (cabinet_1) on the right side of the image. The arm appears to be extended towards the cabinet, and the cabinet is close to the arm's end effector. Given the proximity and the apparent reach of the arm, it seems that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999997463936, 2.5360639991146666e-10, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm appears to be extended, but the ball is on the ground and not directly beneath or very close to the arm's gripper. The distance between the arm and the ball seems too great for the arm to reach and grasp the ball in its current position.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm appears to be extended, but the ball is on the ground and not directly beneath or very close to the arm's gripper. The distance between the arm and the ball seems too great for the arm to reach and grasp the ball in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["yes", 2.301202546170164e-11, 0.999999999976988, "In the image, the robotic arm (agent) is visible in the foreground, and the object labeled \"ball_1\" is on the floor near the bottom center of the image. The arm appears to be extended toward the area where the ball is located, and the ball is close to the base of the arm. Given the proximity of the ball to the arm, it seems that the ball is within the reach of the agent.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible in the foreground, and the object labeled \"ball_1\" is on the floor near the bottom center of the image. The arm appears to be extended toward the area where the ball is located, and the ball is close to the base of the arm. Given the proximity of the ball to the arm, it seems that the ball is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 3.511400439772182e-14, 0.9999999999999649, "The image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is positioned close to this shelf, with its end effector at a similar height and within a short horizontal distance from \"plate_1\". Given the proximity and alignment, it appears that the robotic arm could reach and interact with \"plate_1\".", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is positioned close to this shelf, with its end effector at a similar height and within a short horizontal distance from \"plate_1\". Given the proximity and alignment, it appears that the robotic arm could reach and interact with \"plate_1\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 1.1390335447963491e-11, 0.9999999999886097, "The image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_2\" is located on the second shelf from the top. The robotic arm appears to be close to the shelf, and its position and orientation suggest that it could reach the \"plate_2\" without significant movement. Therefore, \"plate_2\" is within reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual room. On the right side, there is a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_2\" is located on the second shelf from the top. The robotic arm appears to be close to the shelf, and its position and orientation suggest that it could reach the \"plate_2\" without significant movement. Therefore, \"plate_2\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 1.704040508876453e-13, 0.9999999999998296, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". \"plate_3\" is on the lowest shelf, and the robotic arm appears to be close to this shelf. Given the position and orientation of the arm, it seems that the arm could reach \"plate_3\" without significant difficulty.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". \"plate_3\" is on the lowest shelf, and the robotic arm appears to be close to this shelf. Given the position and orientation of the arm, it seems that the arm could reach \"plate_3\" without significant difficulty.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["yes", 1.1091153270774417e-15, 0.9999999999999989, "In the image, the robotic arm (agent) is visible near a shelving unit. The shelf has labels, and \"saucepan_1\" appears to be on the second shelf from the top, as indicated by the black object next to the label \"saucepan_1\". The robotic arm is extended towards the shelving unit and appears to be close enough to reach the object on the shelf. Therefore, the saucepan_1 is within reach of the agent.", false, "<explanation>\nIn the image, the robotic arm (agent) is visible near a shelving unit. The shelf has labels, and \"saucepan_1\" appears to be on the second shelf from the top, as indicated by the black object next to the label \"saucepan_1\". The robotic arm is extended towards the shelving unit and appears to be close enough to reach the object on the shelf. Therefore, the saucepan_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable shelf_1": ["yes", 1.0606148509072093e-07, 0.999999893938515, "The robotic arm (agent) is positioned close to the shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be extended towards the shelf, and the distance between the arm and the shelf is short, indicating that the shelf is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the shelf labeled \"shelf_1\" on the right side of the image. The arm appears to be extended towards the shelf, and the distance between the arm and the shelf is short, indicating that the shelf is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 1.3737325735500684e-07, 0.9999998626267427, "The robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet is short, indicating that the cabinet is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the cabinet labeled \"cabinet_1\" on the right side of the image. The arm appears to be extended towards the cabinet, and the distance between the arm and the cabinet is short, indicating that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 1.3097107547081722e-13, 0.999999999999869, "The image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its gripper at a similar height to \"plate_1\". Given the proximity and alignment, it seems that the arm could reach and interact with \"plate_1\".", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The arm is extended towards a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm appears to be close to the shelf, with its gripper at a similar height to \"plate_1\". Given the proximity and alignment, it seems that the arm could reach and interact with \"plate_1\".\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999999999728386, 2.7161435547625587e-11, "To determine if the agent is holding the ball_1, I need to look at the robotic arm (the agent) and see if it is grasping an object that resembles a ball. In the image, the robotic arm is visible, but it does not appear to be holding any spherical object that could be identified as a ball. The only visible object near the arm is a black rectangular shape, which does not resemble a ball.", true, "<explanation>\nTo determine if the agent is holding the ball_1, I need to look at the robotic arm (the agent) and see if it is grasping an object that resembles a ball. In the image, the robotic arm is visible, but it does not appear to be holding any spherical object that could be identified as a ball. The only visible object near the arm is a black rectangular shape, which does not resemble a ball.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999997765393, 2.2346072832075503e-10, "To determine if the agent is holding \"plate_2\", I need to check if the robotic arm (the agent) is grasping an object that matches the appearance or location of \"plate_2\". In the image, \"plate_2\" is visible on the shelf labeled as such, and it is not in the robotic arm's gripper. The arm appears to be empty or not holding \"plate_2\".", true, "<explanation>\nTo determine if the agent is holding \"plate_2\", I need to check if the robotic arm (the agent) is grasping an object that matches the appearance or location of \"plate_2\". In the image, \"plate_2\" is visible on the shelf labeled as such, and it is not in the robotic arm's gripper. The arm appears to be empty or not holding \"plate_2\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999968920418, 3.10795822467809e-09, "In the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The slot labeled \"plate_3\" still contains a plate, indicating that the agent is not holding it. The agent's gripper appears to be empty or not holding the plate from the \"plate_3\" slot.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The slot labeled \"plate_3\" still contains a plate, indicating that the agent is not holding it. The agent's gripper appears to be empty or not holding the plate from the \"plate_3\" slot.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["no", 0.9999999999999871, 1.2877227989135199e-14, "The image shows a robotic arm (the agent) in a room with a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is extended towards the shelf but is not directly next to or aligned with \"plate_1\". The arm appears to be at a distance from the shelf, and it does not seem close enough to grasp or interact with \"plate_1\" without moving closer.", false, "<explanation>\nThe image shows a robotic arm (the agent) in a room with a shelf labeled with \"plate_1\" and \"plate_2\". \"plate_1\" is on the top shelf, and the robotic arm is extended towards the shelf but is not directly next to or aligned with \"plate_1\". The arm appears to be at a distance from the shelf, and it does not seem close enough to grasp or interact with \"plate_1\" without moving closer.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding ball_1": ["no", 0.9999993545560864, 6.454439136821762e-07, "To determine if the agent is holding the ball_1, I need to look at the robotic arm (the agent) and see if it is grasping a ball. In the image, the robotic arm is visible, but it does not appear to be holding any object, especially not a ball. The gripper is empty.", true, "<explanation>\nTo determine if the agent is holding the ball_1, I need to look at the robotic arm (the agent) and see if it is grasping a ball. In the image, the robotic arm is visible, but it does not appear to be holding any object, especially not a ball. The gripper is empty.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999927648610019, 7.235138998151965e-06, "In the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\" and \"plate_2\". The plate labeled \"plate_2\" is still on the shelf, and the robotic arm does not appear to be holding it. Therefore, the agent is not holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\" and \"plate_2\". The plate labeled \"plate_2\" is still on the shelf, and the robotic arm does not appear to be holding it. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999928894956, 7.110504446790749e-09, "In the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The slot labeled \"plate_3\" still contains a plate, indicating that the agent is not holding it. The agent's gripper appears to be empty or not holding the plate from the \"plate_3\" slot.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\". The slot labeled \"plate_3\" still contains a plate, indicating that the agent is not holding it. The agent's gripper appears to be empty or not holding the plate from the \"plate_3\" slot.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(ball_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable ball_1": ["yes", 7.159259435590019e-07, 0.9999992840740565, "The image shows a robotic arm (the agent) in a virtual room. The ball_1 is visible at the bottom center of the image, close to the base of the robotic arm. Given the proximity of the ball_1 to the arm, it appears to be within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual room. The ball_1 is visible at the bottom center of the image, close to the base of the robotic arm. Given the proximity of the ball_1 to the arm, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding plate_1": ["no", 0.9999999998806596, 1.193404359536274e-10, "To determine if the agent is holding \"plate_1\", I need to check if the robotic arm (the agent) is grasping an object that can be identified as \"plate_1\". In the image, the robotic arm is visible, but it does not appear to be holding any object. Additionally, the shelf labeled \"plate_1\" still has an object in its slot, indicating that \"plate_1\" has not been picked up by the agent.", true, "<explanation>\nTo determine if the agent is holding \"plate_1\", I need to check if the robotic arm (the agent) is grasping an object that can be identified as \"plate_1\". In the image, the robotic arm is visible, but it does not appear to be holding any object. Additionally, the shelf labeled \"plate_1\" still has an object in its slot, indicating that \"plate_1\" has not been picked up by the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999993971105, 6.0288948649396e-10, "To determine if the agent is holding plate_2, I need to check if the robotic arm (the agent) is grasping an object that is labeled as plate_2. In the image, the robotic arm is visible, but it does not appear to be holding any object. Additionally, the shelf labeled \"plate_2\" still has a plate on it, indicating that plate_2 has not been picked up by the agent.", true, "<explanation>\nTo determine if the agent is holding plate_2, I need to check if the robotic arm (the agent) is grasping an object that is labeled as plate_2. In the image, the robotic arm is visible, but it does not appear to be holding any object. Additionally, the shelf labeled \"plate_2\" still has a plate on it, indicating that plate_2 has not been picked up by the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999996542445, 3.457555196002973e-10, "To determine if the agent is holding plate_3, I need to check if the object labeled \"plate_3\" is in the robotic arm's gripper. In the image, the robotic arm is visible, but it does not appear to be holding any object. The shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\" shows that plate_3 is still on the shelf, not in the gripper. Therefore, the agent is not holding plate_3.", true, "<explanation>\nTo determine if the agent is holding plate_3, I need to check if the object labeled \"plate_3\" is in the robotic arm's gripper. In the image, the robotic arm is visible, but it does not appear to be holding any object. The shelf labeled with \"plate_1\", \"plate_2\", and \"plate_3\" shows that plate_3 is still on the shelf, not in the gripper. Therefore, the agent is not holding plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": {"holding ball_1": ["yes", 1.840589579710261e-10, 0.999999999815941, "The image shows a robotic arm (the agent) holding a blue and yellow ball. Since the ball is clearly grasped by the robotic arm, and based on the context that objects can be interacted with and held, it is reasonable to conclude that the agent is holding the ball. The label \"ball_1\" in the question likely refers to this ball, as there is only one visible ball in the image.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a blue and yellow ball. Since the ball is clearly grasped by the robotic arm, and based on the context that objects can be interacted with and held, it is reasonable to conclude that the agent is holding the ball. The label \"ball_1\" in the question likely refers to this ball, as there is only one visible ball in the image.\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop ball_1,plate_1": ["no", 0.9999941127062096, 5.887293790337403e-06, "In the image, the robotic arm is holding a ball (presumably ball_1). Plate_1 is labeled on the shelf to the right. The ball is not on top of the plate; it is being held in the air by the robotic arm. Therefore, ball_1 is not on top of plate_1.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). Plate_1 is labeled on the shelf to the right. The ball is not on top of the plate; it is being held in the air by the robotic arm. Therefore, ball_1 is not on top of plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop ball_1,plate_2": ["no", 0.9999751228615645, 2.4877138435481238e-05, "In the image, the robotic arm is holding a ball (presumably ball_1). Plate_2 is labeled on the shelf to the right. The ball is not on top of plate_2; it is being held in the air by the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). Plate_2 is labeled on the shelf to the right. The ball is not on top of plate_2; it is being held in the air by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop ball_1,plate_3": ["no", 0.9999998974611732, 1.0253882678294001e-07, "In the image, the robotic arm is holding a ball (presumably ball_1). There is no visible plate labeled as plate_3 underneath the ball or anywhere in the immediate vicinity of the ball being held. The ball is suspended in the air by the robotic arm, not resting on any plate. Therefore, ball_1 is not on top of plate_3.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). There is no visible plate labeled as plate_3 underneath the ball or anywhere in the immediate vicinity of the ball being held. The ball is suspended in the air by the robotic arm, not resting on any plate. Therefore, ball_1 is not on top of plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop ball_1,saucepan_1": ["no", 0.9999999948684403, 5.131559775986744e-09, "In the image, the robotic arm is holding a ball (presumably ball_1). There is no visible saucepan (saucepan_1) underneath the ball or in the immediate vicinity of the ball being held. The ball is not placed on top of any object; it is being gripped by the robotic arm. Therefore, the ball_1 is not on top of saucepan_1.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). There is no visible saucepan (saucepan_1) underneath the ball or in the immediate vicinity of the ball being held. The ball is not placed on top of any object; it is being gripped by the robotic arm. Therefore, the ball_1 is not on top of saucepan_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop ball_1,shelf_1": ["no", 0.9999587762665758, 4.122373342420182e-05, "In the image, the robotic arm is holding a ball labeled as ball_1. The shelf_1 is visible on the right side of the image, but the ball is not on top of it; instead, it is being held by the robotic arm. Therefore, ball_1 is not on top of shelf_1.", true, "<explanation>\nIn the image, the robotic arm is holding a ball labeled as ball_1. The shelf_1 is visible on the right side of the image, but the ball is not on top of it; instead, it is being held by the robotic arm. Therefore, ball_1 is not on top of shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop ball_1,cabinet_1": ["no", 0.999998324377752, 1.6756222480013503e-06, "First, I will identify the location of ball_1 and cabinet_1 in the image. The robotic arm is holding ball_1 in the air, and cabinet_1 is visible on the right side of the image. Since ball_1 is being held by the robotic arm and not resting on any surface, it is not on top of cabinet_1.", true, "<explanation>\nFirst, I will identify the location of ball_1 and cabinet_1 in the image. The robotic arm is holding ball_1 in the air, and cabinet_1 is visible on the right side of the image. Since ball_1 is being held by the robotic arm and not resting on any surface, it is not on top of cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,plate_1": ["no", 0.9999928624818786, 7.137518121474909e-06, "In the image, the robotic arm is holding a ball (presumably ball_1). Plate_1 is labeled on a shelf to the right side of the image. Since the ball is being held by the robotic arm and is not placed next to plate_1 on the shelf, the ball is not next to plate_1.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). Plate_1 is labeled on a shelf to the right side of the image. Since the ball is being held by the robotic arm and is not placed next to plate_1 on the shelf, the ball is not next to plate_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,plate_2": ["no", 0.9999965067713065, 3.4932286934826136e-06, "In the image, the robotic arm is holding a ball (presumably ball_1). Plate_2 is labeled on the shelf to the right. Since the ball is being held by the robotic arm and is not placed next to plate_2 on the shelf, the ball_1 is not next to plate_2.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). Plate_2 is labeled on the shelf to the right. Since the ball is being held by the robotic arm and is not placed next to plate_2 on the shelf, the ball_1 is not next to plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,plate_3": ["no", 0.9999935638517922, 6.436148207873691e-06, "In the image, the robotic arm is holding a ball (presumably ball_1). Plate_3 is not visible in the immediate vicinity of the ball; in fact, there are no plates visible near the ball at all. Therefore, ball_1 is not next to plate_3.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). Plate_3 is not visible in the immediate vicinity of the ball; in fact, there are no plates visible near the ball at all. Therefore, ball_1 is not next to plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,saucepan_1": ["no", 0.9999981980047414, 1.8019952585796823e-06, "In the image, the robotic arm is holding a ball (presumably ball_1). The saucepan_1 is not visible in the immediate vicinity of the ball or the robotic arm. Since the ball is being held in the air and there is no saucepan next to it, ball_1 is not next to saucepan_1.", true, "<explanation>\nIn the image, the robotic arm is holding a ball (presumably ball_1). The saucepan_1 is not visible in the immediate vicinity of the ball or the robotic arm. Since the ball is being held in the air and there is no saucepan next to it, ball_1 is not next to saucepan_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,shelf_1": ["no", 0.9999960668596125, 3.933140387442275e-06, "In the image, the robotic arm is holding ball_1 in the air. The shelf_1 is visible on the right side of the image, but the ball_1 is not placed next to it; instead, it is being held by the robotic arm and is not in close proximity to the shelf_1. Therefore, ball_1 is not next to shelf_1.", true, "<explanation>\nIn the image, the robotic arm is holding ball_1 in the air. The shelf_1 is visible on the right side of the image, but the ball_1 is not placed next to it; instead, it is being held by the robotic arm and is not in close proximity to the shelf_1. Therefore, ball_1 is not next to shelf_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto ball_1,cabinet_1": ["no", 0.9999431446920914, 5.685530790858725e-05, "In the image, the robotic arm is holding ball_1 in the air. The cabinet_1 is visible on the right side of the image. Since the ball is being held by the robotic arm and is not placed next to the cabinet_1, it is not next to the cabinet_1.", true, "<explanation>\nIn the image, the robotic arm is holding ball_1 in the air. The cabinet_1 is visible on the right side of the image. Since the ball is being held by the robotic arm and is not placed next to the cabinet_1, it is not next to the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop ball_1,ball_1": {"before": null, "after": false}, "ontop ball_1,ball_2": {"before": false, "after": false}, "ontop ball_1,carton_1": {"before": false, "after": false}, "ontop ball_1,carton_2": {"before": false, "after": false}, "nextto ball_1,ball_1": {"before": null, "after": false}, "nextto ball_1,ball_2": {"before": false, "after": false}, "nextto ball_1,carton_1": {"before": false, "after": false}, "nextto ball_1,carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.9999999999999488, 5.118290665141176e-14, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be holding an object, but carton_1 is located further away, near the back of the room, while the arm is closer to the foreground. The distance between the arm and carton_1 seems too great for the arm to reach it in its current position.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be holding an object, but carton_1 is located further away, near the back of the room, while the arm is closer to the foreground. The distance between the arm and carton_1 seems too great for the arm to reach it in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable ball_1": ["yes", 3.6381558999822695e-08, 0.999999963618441, "To determine if ball_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to ball_1. In the image, the robotic arm is already holding ball_1, as the ball is gripped by the claw of the arm. Since the agent is already holding the ball, it is definitely within reach.", false, "<explanation>\nTo determine if ball_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to ball_1. In the image, the robotic arm is already holding ball_1, as the ball is gripped by the claw of the arm. Since the agent is already holding the ball, it is definitely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 7.696002694719735e-11, 0.99999999992304, "To determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to plate_1. In the image, the robotic arm is extended and is holding an object very close to plate_1, which is labeled and appears to be directly in front of the arm's gripper. The proximity suggests that plate_1 is within the reach of the agent.", false, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to plate_1. In the image, the robotic arm is extended and is holding an object very close to plate_1, which is labeled and appears to be directly in front of the arm's gripper. The proximity suggests that plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["yes", 9.925743171012205e-12, 0.9999999999900743, "To determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to plate_2. The robotic arm is extended and appears to be very close to plate_2, which is labeled in the image. The arm's gripper is almost touching or directly adjacent to plate_2, indicating that the plate is within the arm's reach.", false, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to plate_2. The robotic arm is extended and appears to be very close to plate_2, which is labeled in the image. The arm's gripper is almost touching or directly adjacent to plate_2, indicating that the plate is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_3": ["yes", 2.1685457069273186e-10, 0.9999999997831455, "To determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plate_3. In the image, the robotic arm is extended and holding an object, and plate_3 is labeled and appears to be very close to the gripper of the arm. The proximity suggests that plate_3 is within the reach of the agent.", false, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plate_3. In the image, the robotic arm is extended and holding an object, and plate_3 is labeled and appears to be very close to the gripper of the arm. The proximity suggests that plate_3 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 1.0, 3.4549883255303653e-18, "To determine if the saucepan_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to the labeled location of \"saucepan_1\". In the image, the robotic arm is holding an object and is extended towards the right side of the image. The label \"saucepan_1\" is visible and appears to be located on a surface below and slightly in front of the arm, but not directly adjacent to the gripper. The arm does not appear to be close enough to immediately grasp the saucepan_1 without further movement.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to the labeled location of \"saucepan_1\". In the image, the robotic arm is holding an object and is extended towards the right side of the image. The label \"saucepan_1\" is visible and appears to be located on a surface below and slightly in front of the arm, but not directly adjacent to the gripper. The arm does not appear to be close enough to immediately grasp the saucepan_1 without further movement.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["yes", 1.8291618473977425e-14, 0.9999999999999817, "To determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. The robotic arm (agent) is extended towards the shelf, and the red lines (likely indicating reach or interaction range) are connecting the arm to the shelf and its components. This suggests that the shelf_1 is within the interaction range of the agent.", false, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. The robotic arm (agent) is extended towards the shelf, and the red lines (likely indicating reach or interaction range) are connecting the arm to the shelf and its components. This suggests that the shelf_1 is within the interaction range of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 9.637644070772168e-13, 0.9999999999990362, "To determine if cabinet_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the cabinet labeled \"cabinet_1\". In the image, the robotic arm is extended towards the direction of the cabinets, and \"cabinet_1\" is labeled and appears to be the closest cabinet to the arm. The arm is very near to the cabinet, suggesting that it is within reach for interaction.", false, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the cabinet labeled \"cabinet_1\". In the image, the robotic arm is extended towards the direction of the cabinets, and \"cabinet_1\" is labeled and appears to be the closest cabinet to the arm. The arm is very near to the cabinet, suggesting that it is within reach for interaction.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 0.9999999999998198, 1.801413157373033e-13, "To determine if carton_2 is in reach of the agent, I need to check the position of the robotic arm relative to carton_2. The robotic arm is extended and appears to be holding an object, but carton_2 is located further away, on the other side of the furniture. The arm does not appear to be close enough to carton_2 to interact with it directly.", true, "<explanation>\nTo determine if carton_2 is in reach of the agent, I need to check the position of the robotic arm relative to carton_2. The robotic arm is extended and appears to be holding an object, but carton_2 is located further away, on the other side of the furniture. The arm does not appear to be close enough to carton_2 to interact with it directly.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 3.005274916257514e-14, 0.9999999999999699, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be close to carton_1, which is labeled in the image. The arm is not obstructed by any objects and is positioned directly above or next to carton_1, indicating that it is within the arm's reach.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be close to carton_1, which is labeled in the image. The arm is not obstructed by any objects and is positioned directly above or next to carton_1, indicating that it is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.9999999999999997, 3.1690843938726875e-16, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be holding an object, but carton_1 is located further away, near the back of the room, while the arm is closer to the foreground. The red lines indicate object positions, and the arm is not close enough to carton_1 to interact with it directly.", true, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is extended and appears to be holding an object, but carton_1 is located further away, near the back of the room, while the arm is closer to the foreground. The red lines indicate object positions, and the arm is not close enough to carton_1 to interact with it directly.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.9999999999999487, 5.13334421465468e-14, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is currently holding a ball and is extended over the couch area. Carton_1 is located further down the hallway, near the door and some drawers, which is a significant distance from the current position of the robotic arm. Therefore, carton_1 is not in reach of the agent.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is currently holding a ball and is extended over the couch area. Carton_1 is located further down the hallway, near the door and some drawers, which is a significant distance from the current position of the robotic arm. Therefore, carton_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable ball_1": ["yes", 0.00023674549488272406, 0.9997632545051173, "The image shows the robotic arm (the agent) holding the ball labeled \"ball_1\" in its gripper. Since the ball is already being held by the agent, it is definitely within reach.", false, "<explanation>\nThe image shows the robotic arm (the agent) holding the ball labeled \"ball_1\" in its gripper. Since the ball is already being held by the agent, it is definitely within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plate_1": ["yes", 2.3312062602674094e-13, 0.9999999999997669, "To determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to plate_1. In the image, the robotic arm is holding a ball and is extended towards the area where plate_1 is located. Plate_1 is labeled and appears to be very close to the robotic arm, within the same area as the arm's end effector. This suggests that plate_1 is within the reach of the agent.", false, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to plate_1. In the image, the robotic arm is holding a ball and is extended towards the area where plate_1 is located. Plate_1 is labeled and appears to be very close to the robotic arm, within the same area as the arm's end effector. This suggests that plate_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["no", 1.0, 2.1874226291182523e-19, "To determine if plate_2 is in reach of the agent, I need to check the position of plate_2 relative to the robotic arm. The image shows the robotic arm holding a ball, and there are red lines pointing to various objects, including plate_2. Plate_2 appears to be located on a surface in front of the arm, but it is not immediately adjacent to the arm's current position. The arm is extended towards the ball, and plate_2 is further away, suggesting that the arm would need to move significantly to reach it. Therefore, plate_2 is not currently in reach of the agent.", true, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the position of plate_2 relative to the robotic arm. The image shows the robotic arm holding a ball, and there are red lines pointing to various objects, including plate_2. Plate_2 appears to be located on a surface in front of the arm, but it is not immediately adjacent to the arm's current position. The arm is extended towards the ball, and plate_2 is further away, suggesting that the arm would need to move significantly to reach it. Therefore, plate_2 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["yes", 2.3329890814302598e-12, 0.999999999997667, "To determine if plate_3 is in reach of the agent, I need to check the position of plate_3 relative to the robotic arm. In the image, the robotic arm is holding a ball and is extended towards the area where plate_3 is located. The red lines and labels indicate the positions of various objects, including plate_3. Plate_3 appears to be very close to the robotic arm, suggesting that it is within the arm's reach.", false, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the position of plate_3 relative to the robotic arm. In the image, the robotic arm is holding a ball and is extended towards the area where plate_3 is located. The red lines and labels indicate the positions of various objects, including plate_3. Plate_3 appears to be very close to the robotic arm, suggesting that it is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 1.0, 9.822491021033055e-22, "To determine if the saucepan_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the position of saucepan_1. The robotic arm is currently holding a ball and is extended over a set of couches. The labels in the image indicate the positions of \"plate_2\", \"plate_3\", and \"saucepan_1\". The label for \"saucepan_1\" is visible but appears to be further away from the robotic arm, near the back of the room, while the arm is positioned closer to the foreground. Since the saucepan_1 is not within the immediate vicinity of the robotic arm, it is not in reach.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, I need to identify the location of the robotic arm (the agent) and the position of saucepan_1. The robotic arm is currently holding a ball and is extended over a set of couches. The labels in the image indicate the positions of \"plate_2\", \"plate_3\", and \"saucepan_1\". The label for \"saucepan_1\" is visible but appears to be further away from the robotic arm, near the back of the room, while the arm is positioned closer to the foreground. Since the saucepan_1 is not within the immediate vicinity of the robotic arm, it is not in reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["yes", 6.977470741069351e-14, 0.9999999999999303, "To determine if shelf_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to shelf_1. In the image, the robotic arm is holding a ball and is positioned near a set of shelves. The red lines and labels indicate the positions of objects and shelves. The arm appears to be very close to the shelf labeled \"shelf_1,\" suggesting that it is within reach.", false, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to shelf_1. In the image, the robotic arm is holding a ball and is positioned near a set of shelves. The red lines and labels indicate the positions of objects and shelves. The arm appears to be very close to the shelf labeled \"shelf_1,\" suggesting that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["no", 0.9999999999995642, 4.3574807141339544e-13, "To determine if cabinet_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the cabinet labeled as \"cabinet_1\". In the image, the robotic arm is holding a ball and is positioned near the center of the room, while the cabinet_1 is located further down the hallway, near the door. There is a significant distance between the robotic arm and the cabinet_1, indicating that the cabinet is not within immediate reach of the agent.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the cabinet labeled as \"cabinet_1\". In the image, the robotic arm is holding a ball and is positioned near the center of the room, while the cabinet_1 is located further down the hallway, near the door. There is a significant distance between the robotic arm and the cabinet_1, indicating that the cabinet is not within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_2": ["no", 0.999999999999998, 1.972171860959799e-15, "The image shows the robotic arm (the agent) holding a ball-like object. The carton_2 is labeled and appears to be located on a surface below and slightly in front of the robotic arm. Given the position of the arm and the proximity of carton_2, it seems that the arm could reach the carton_2 if it were not already holding an object. However, since the arm is currently holding something, it cannot interact with carton_2 at this moment.", true, "<explanation>\nThe image shows the robotic arm (the agent) holding a ball-like object. The carton_2 is labeled and appears to be located on a surface below and slightly in front of the robotic arm. Given the position of the arm and the proximity of carton_2, it seems that the arm could reach the carton_2 if it were not already holding an object. However, since the arm is currently holding something, it cannot interact with carton_2 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(ball_1, carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding ball_1": ["yes", 1.8047661253173455e-06, 0.9999981952338747, "In the image, the robotic arm (the agent) is visibly gripping a ball that is labeled as \"ball_1.\" The ball is securely within the grasp of the robotic arm's gripper, indicating that the agent is indeed holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visibly gripping a ball that is labeled as \"ball_1.\" The ball is securely within the grasp of the robotic arm's gripper, indicating that the agent is indeed holding the ball_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["no", 1.0, 1.4701035113836833e-18, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to carton_1. The robotic arm is currently holding a ball and is extended towards the area where carton_1 is located. The red lines in the image seem to indicate the positions of objects, and one of them is labeled \"carton_1.\" However, carton_1 appears to be some distance away from the robotic arm, and there is a gap between the arm and carton_1. Therefore, carton_1 is not currently within the immediate reach of the agent.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to carton_1. The robotic arm is currently holding a ball and is extended towards the area where carton_1 is located. The red lines in the image seem to indicate the positions of objects, and one of them is labeled \"carton_1.\" However, carton_1 appears to be some distance away from the robotic arm, and there is a gap between the arm and carton_1. Therefore, carton_1 is not currently within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "open carton_1": ["yes", 6.983820335629688e-12, 0.9999999999930161, "To determine if carton_1 is open, I need to look for visual cues indicating that the top flaps of the carton are not closed or are visibly apart. In the image, carton_1 is visible in the background, and its top flaps appear to be open, as they are not aligned flat and seem to be sticking outwards.", true, "<explanation>\nTo determine if carton_1 is open, I need to look for visual cues indicating that the top flaps of the carton are not closed or are visibly apart. In the image, carton_1 is visible in the background, and its top flaps appear to be open, as they are not aligned flat and seem to be sticking outwards.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(plate_2, ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 0.9999999445648493, 5.5435150745457955e-08, "In the image, the robotic arm (the agent) is holding an object. The object being held is a round, blue and yellow item, which appears to be a ball, not a plate. The label \"plate_2\" is pointing to a different object that is not currently in the robotic arm's grasp. Therefore, the agent is not holding plate_2.", false, "<explanation>\nIn the image, the robotic arm (the agent) is holding an object. The object being held is a round, blue and yellow item, which appears to be a ball, not a plate. The label \"plate_2\" is pointing to a different object that is not currently in the robotic arm's grasp. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable ball_1": ["yes", 0.0006274442300523154, 0.9993725557699477, "The image shows a robotic arm (the agent) holding a ball labeled \"ball_1.\" Since the ball is already being held by the agent, it is within the agent's reach.", true, "<explanation>\nThe image shows a robotic arm (the agent) holding a ball labeled \"ball_1.\" Since the ball is already being held by the agent, it is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-inside(plate_2, carton_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["yes", 2.1862123906930088e-08, 0.9999999781378761, "In the image, the robotic arm (agent) is holding an object. The object being held is a round, blue and yellow item, which is labeled as \"plate_2\" in the image. The label \"plate_2\" is directly attached to the object in the robotic arm's grip, confirming that the agent is indeed holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (agent) is holding an object. The object being held is a round, blue and yellow item, which is labeled as \"plate_2\" in the image. The label \"plate_2\" is directly attached to the object in the robotic arm's grip, confirming that the agent is indeed holding plate_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["no", 0.999999999999999, 9.666394245842575e-16, "To determine if carton_2 is in reach of the agent, I need to check the position of the robotic arm relative to carton_2. The robotic arm is currently holding a ball and is extended over the couches. Carton_2 is labeled and appears to be on the floor near the couches, but the arm is not directly above or next to it. The arm would need to move down and forward to reach carton_2, indicating that it is not currently within immediate reach.", false, "<explanation>\nTo determine if carton_2 is in reach of the agent, I need to check the position of the robotic arm relative to carton_2. The robotic arm is currently holding a ball and is extended over the couches. Carton_2 is labeled and appears to be on the floor near the couches, but the arm is not directly above or next to it. The arm would need to move down and forward to reach carton_2, indicating that it is not currently within immediate reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "open carton_2": ["yes", 1.1869358629343715e-09, 0.9999999988130641, "To determine if carton_2 is open, I need to look for visual cues such as an open lid or flaps on the carton. In the image, carton_2 is visible and its top flaps appear to be open, as the inside of the carton is visible and the flaps are not closed or sealed.", true, "<explanation>\nTo determine if carton_2 is open, I need to look for visual cues such as an open lid or flaps on the carton. In the image, carton_2 is visible and its top flaps appear to be open, as the inside of the carton is visible and the flaps are not closed or sealed.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-inside(ball_1, carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding ball_1": ["yes", 1.786602783104789e-06, 0.999998213397217, "In the image, the robotic arm (the agent) is visibly gripping a ball that is labeled as \"ball_1.\" The ball is securely within the grasp of the robotic arm's end effector, indicating that the agent is indeed holding the ball.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visibly gripping a ball that is labeled as \"ball_1.\" The ball is securely within the grasp of the robotic arm's end effector, indicating that the agent is indeed holding the ball.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 2.5574479634940123e-17, 1.0, "To determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is currently holding a ball and is extended towards the area where carton_1 is located. The red lines in the image seem to indicate the positions of objects, and one of them is pointing directly at carton_1, which is on the couch. The arm appears to be close enough to carton_1, suggesting that it is within reach.", true, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of the robotic arm relative to carton_1. The robotic arm is currently holding a ball and is extended towards the area where carton_1 is located. The red lines in the image seem to indicate the positions of objects, and one of them is pointing directly at carton_1, which is on the couch. The arm appears to be close enough to carton_1, suggesting that it is within reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 7.180582138830858e-11, 0.9999999999281942, "To determine if carton_1 is open, I need to look at the state of the box labeled as \"carton_1\" in the image. An open carton would have its flaps visibly apart or open, allowing a view into the box. In the image, carton_1 appears to have its top flaps open, as the inside of the box is visible and the flaps are not closed together.", true, "<explanation>\nTo determine if carton_1 is open, I need to look at the state of the box labeled as \"carton_1\" in the image. An open carton would have its flaps visibly apart or open, allowing a view into the box. In the image, carton_1 appears to have its top flaps open, as the inside of the box is visible and the flaps are not closed together.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"inside ball_1,carton_1": ["yes", 1.1829570132592731e-07, 0.9999998817042987, "To determine if ball_1 is inside carton_1, I need to check the position of ball_1 relative to the boundaries of carton_1. In the image, ball_1 is clearly located within the walls of carton_1, and there are no visible gaps indicating it is outside. Therefore, ball_1 is inside carton_1.", true, "<explanation>\nTo determine if ball_1 is inside carton_1, I need to check the position of ball_1 relative to the boundaries of carton_1. In the image, ball_1 is clearly located within the walls of carton_1, and there are no visible gaps indicating it is outside. Therefore, ball_1 is inside carton_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding ball_1": ["no", 0.9999997372734591, 2.627265408922222e-07, "To determine if the agent (robotic arm) is holding the ball_1, I need to check if the ball_1 is within the gripper of the robotic arm. In the image, the ball_1 is visible inside a container labeled \"carton_2\" and is not in the gripper of the robotic arm. The gripper appears to be empty.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the ball_1, I need to check if the ball_1 is within the gripper of the robotic arm. In the image, the ball_1 is visible inside a container labeled \"carton_2\" and is not in the gripper of the robotic arm. The gripper appears to be empty.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-next-to(plate_2, ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plate_2": ["no", 0.9999999991107505, 8.892494093480765e-10, "In the image, the robotic arm (the agent) is visible near a box labeled \"carton_2.\" The object labeled \"plate_2\" is not clearly visible in the gripper of the robotic arm. Instead, there is a yellow and blue object inside the box, which does not appear to be held by the robotic arm. Therefore, the agent is not holding \"plate_2.\"", false, "<explanation>\nIn the image, the robotic arm (the agent) is visible near a box labeled \"carton_2.\" The object labeled \"plate_2\" is not clearly visible in the gripper of the robotic arm. Instead, there is a yellow and blue object inside the box, which does not appear to be held by the robotic arm. Therefore, the agent is not holding \"plate_2.\"\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable ball_1": ["yes", 2.0973066104347767e-10, 0.9999999997902693, "The image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"ball_1\" is located inside a container, and the robotic arm is positioned very close to it, with its gripper aligned above the ball. Given the proximity and orientation of the arm relative to the ball, it appears that the ball is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The object labeled \"ball_1\" is located inside a container, and the robotic arm is positioned very close to it, with its gripper aligned above the ball. Given the proximity and orientation of the arm relative to the ball, it appears that the ball is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "holding ball_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8055555555555556, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8125, "no_correct": 26, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.4, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8181818181818182, "no_correct": 9, "no_total": 11}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 8, "no_total": 10}}}, "step": 3, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.8125, "no_correct": 26, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8181818181818182, "no_correct": 9, "no_total": 11}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}, "step": 4, "actions": ["open-container(shelf_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(plate_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.78125, "no_correct": 25, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.4, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8181818181818182, "no_correct": 9, "no_total": 11}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}, "step": 5, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["yes", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.65625, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.6440677966101694, "no_correct": 38, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6086956521739131, "no_correct": 14, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5238095238095238, "no_correct": 11, "no_total": 21}}}, "step": 6, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["no", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9565217391304348, "no_correct": 22, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.7142857142857143, "no_correct": 15, "no_total": 21}}}, "step": 7, "actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.703125, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.9166666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9565217391304348, "no_correct": 22, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 8, "actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["yes", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["no", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["yes", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.6610169491525424, "no_correct": 39, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9130434782608695, "no_correct": 21, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5714285714285714, "no_correct": 12, "no_total": 21}}}, "step": 9, "actions": ["grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(cabinet_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable carton_2": ["no", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["yes", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["yes", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["yes", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,ball_1": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,ball_1": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6304347826086957, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.6463414634146342, "no_correct": 53, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "ontop": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7419354838709677, "no_correct": 23, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.46875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5172413793103449, "no_correct": 15, "no_total": 29}}}, "step": 11, "actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable carton_2": ["yes", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["yes", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["yes", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,ball_1": ["yes", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7065217391304348, "yes_accuracy": 0.8, "yes_correct": 8, "yes_total": 10, "no_accuracy": 0.6951219512195121, "no_correct": 57, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "ontop": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8709677419354839, "no_correct": 27, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.5625, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5517241379310345, "no_correct": 16, "no_total": 29}}}, "step": 12, "actions": ["navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["no", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["yes", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["yes", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["yes", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["yes", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7717391304347826, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.8048780487804879, "no_correct": 66, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.84375, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8709677419354839, "no_correct": 27, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.71875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29}}}, "step": 13, "actions": ["place-inside(ball_1, carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable carton_2": ["no", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["yes", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["no", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,ball_1": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7934782608695652, "yes_accuracy": 0.4, "yes_correct": 4, "yes_total": 10, "no_accuracy": 0.8414634146341463, "no_correct": 69, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.90625, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9354838709677419, "no_correct": 29, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.6875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.7586206896551724, "no_correct": 22, "no_total": 29}}}, "step": 14, "actions": ["place-next-to(plate_2, ball_1)", "place-next-to(ball_1, ball_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable carton_2": ["yes", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["no", "no"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["yes", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.782608695652174, "yes_accuracy": 0.6, "yes_correct": 6, "yes_total": 10, "no_accuracy": 0.8048780487804879, "no_correct": 66, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.84375, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8387096774193549, "no_correct": 26, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.71875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.7931034482758621, "no_correct": 23, "no_total": 29}}}, "step": 15, "actions": ["place-inside(plate_2, carton_2)", "place-next-to(ball_1, ball_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["yes", "yes"], "holding plate_1": ["no", "no"], "holding plate_2": ["yes", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,carton_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["no", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["no", "no"], "ontop plate_2,carton_2": ["no", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["no", "no"], "ontop plate_3,carton_2": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,carton_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,carton_1": ["no", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,carton_1": ["no", "no"], "inside plate_2,carton_2": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,carton_1": ["no", "no"], "inside plate_3,carton_2": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,carton_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["yes", "no"], "nextto plate_1,carton_2": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["no", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["no", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,ball_1": ["yes", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["no", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7717391304347826, "yes_accuracy": 0.5, "yes_correct": 5, "yes_total": 10, "no_accuracy": 0.8048780487804879, "no_correct": 66, "no_total": 82, "predicates": {"reachable": {"accuracy": 0.4444444444444444, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9032258064516129, "no_correct": 28, "no_total": 31}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.65625, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.7241379310344828, "no_correct": 21, "no_total": 29}}}, "step": 16, "actions": ["place-inside(ball_1, carton_1)", "place-next-to(plate_2, ball_1)", "grasp(plate_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable ball_1": ["yes", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["yes", "no"], "reachable cabinet_1": ["no", "no"], "reachable saucepan_1": ["yes", "no"], "reachable shelf_1": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,carton_1": ["yes", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["yes", "no"], "ontop ball_1,plate_3": ["yes", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["yes", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,carton_1": ["no", "no"], "ontop plate_1,carton_2": ["yes", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["no", "no"], "ontop plate_2,carton_1": ["yes", "no"], "ontop plate_2,carton_2": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["yes", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["yes", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,carton_1": ["yes", "no"], "ontop plate_3,carton_2": ["yes", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside ball_1,carton_1": ["yes", "yes"], "inside ball_1,carton_2": ["yes", "no"], "inside ball_1,cabinet_1": ["yes", "no"], "inside plate_1,carton_1": ["yes", "no"], "inside plate_1,carton_2": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,carton_1": ["yes", "no"], "inside plate_2,carton_2": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,carton_1": ["yes", "no"], "inside plate_3,carton_2": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,carton_1": ["yes", "yes"], "nextto ball_1,carton_2": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["yes", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,carton_1": ["no", "no"], "nextto plate_1,carton_2": ["yes", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["no", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["no", "yes"], "nextto plate_2,carton_1": ["yes", "no"], "nextto plate_2,carton_2": ["yes", "no"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["no", "no"], "nextto plate_2,cabinet_1": ["no", "no"], "nextto plate_2,saucepan_1": ["yes", "no"], "nextto plate_2,shelf_1": ["no", "yes"], "nextto plate_3,carton_1": ["yes", "no"], "nextto plate_3,carton_2": ["yes", "no"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.7272727272727273, "yes_correct": 8, "yes_total": 11, "no_accuracy": 0.4691358024691358, "no_correct": 38, "no_total": 81, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.46875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.45161290322580644, "no_correct": 14, "no_total": 31}, "inside": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.09090909090909091, "no_correct": 1, "no_total": 11}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.5357142857142857, "no_correct": 15, "no_total": 28}}}, "step": 18, "actions": []}], "remaining_actions": []}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999210891, 7.891092679099827e-11, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The ball is positioned at a noticeable distance from the robotic arm, and the arm appears to be extended but not close enough to the ball. Given the current position of the arm and the ball, the ball does not seem to be within immediate reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The ball is positioned at a noticeable distance from the robotic arm, and the arm appears to be extended but not close enough to the ball. Given the current position of the arm and the ball, the ball does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plate_1": ["yes", 2.8063682542726905e-12, 0.9999999999971936, "The robotic arm (agent) is positioned near a set of shelves or drawers, where \"plate_1\" is labeled. The arm appears to be extended toward the area where \"plate_1\" is located. Given the proximity of the arm to the shelf and the visible reach of the arm, it seems that \"plate_1\" is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near a set of shelves or drawers, where \"plate_1\" is labeled. The arm appears to be extended toward the area where \"plate_1\" is located. Given the proximity of the arm to the shelf and the visible reach of the arm, it seems that \"plate_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plate_2": ["no", 0.9999999999999661, 3.384531593453749e-14, "To determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_2. In the image, the robotic arm is extended towards the right side of the room, and plate_2 is labeled on a shelf or drawer unit. However, the arm appears to be some distance away from the shelf where plate_2 is located, and it does not seem to be close enough to interact with or grasp plate_2.", true, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_2. In the image, the robotic arm is extended towards the right side of the room, and plate_2 is labeled on a shelf or drawer unit. However, the arm appears to be some distance away from the shelf where plate_2 is located, and it does not seem to be close enough to interact with or grasp plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["yes", 3.8793919146537815e-18, 1.0, "To determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_3. In the image, the robotic arm is extended towards the right side of the image, and plate_3 is labeled on a shelf or drawer unit to the right. The arm appears to be close to the shelf where plate_3 is located, and its end effector is near the level of the label \"plate_3\". This suggests that the arm could potentially reach plate_3.", false, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_3. In the image, the robotic arm is extended towards the right side of the image, and plate_3 is labeled on a shelf or drawer unit to the right. The arm appears to be close to the shelf where plate_3 is located, and its end effector is near the level of the label \"plate_3\". This suggests that the arm could potentially reach plate_3.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable saucepan_1": ["no", 0.9999999999999851, 1.484236779496085e-14, "To determine if the saucepan_1 is in reach of the agent, I need to identify the location of the saucepan_1 and compare it to the position of the robotic arm. In the image, there is no visible object that clearly resembles a saucepan within the immediate reach of the robotic arm. The arm is extended towards the right side of the image, near a set of drawers labeled with \"plate_1\" and \"plate_3\", but there is no saucepan visible on or near these drawers or on the floor. Therefore, the saucepan_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, I need to identify the location of the saucepan_1 and compare it to the position of the robotic arm. In the image, there is no visible object that clearly resembles a saucepan within the immediate reach of the robotic arm. The arm is extended towards the right side of the image, near a set of drawers labeled with \"plate_1\" and \"plate_3\", but there is no saucepan visible on or near these drawers or on the floor. Therefore, the saucepan_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["yes", 5.931138772147507e-14, 0.9999999999999407, "To determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. In the image, the robotic arm is extended towards the right side of the image, where the shelf is located. The arm appears to be close to the shelf, and its end effector is at a similar height to the lower shelves. This suggests that the arm could potentially reach and interact with shelf_1.", false, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to check the position of the robotic arm relative to the shelf. In the image, the robotic arm is extended towards the right side of the image, where the shelf is located. The arm appears to be close to the shelf, and its end effector is at a similar height to the lower shelves. This suggests that the arm could potentially reach and interact with shelf_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 5.605116899915689e-12, 0.9999999999943949, "The robotic arm (agent) is positioned near the cabinet, which is labeled with \"plate_1\" and \"plate_2\" on its shelves. The arm appears to be extended towards the cabinet, and the cabinet is close to the arm's end effector. Given the proximity and the orientation of the arm, it seems that the cabinet is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the cabinet, which is labeled with \"plate_1\" and \"plate_2\" on its shelves. The arm appears to be extended towards the cabinet, and the cabinet is close to the arm's end effector. Given the proximity and the orientation of the arm, it seems that the cabinet is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plate_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plate_1": ["yes", 5.7929659460954145e-16, 0.9999999999999994, "The robotic arm (agent) is positioned near a set of drawers, and \"plate_1\" is labeled on the top shelf of the drawers. The arm appears to be close to the drawers, and its end effector is at a height and distance that suggests it could reach the top shelf where \"plate_1\" is located. There are no visible obstacles between the arm and the plate, and the arm seems to have enough range of motion to access the shelf.", true, "<explanation>\nThe robotic arm (agent) is positioned near a set of drawers, and \"plate_1\" is labeled on the top shelf of the drawers. The arm appears to be close to the drawers, and its end effector is at a height and distance that suggests it could reach the top shelf where \"plate_1\" is located. There are no visible obstacles between the arm and the plate, and the arm seems to have enough range of motion to access the shelf.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999950482371898, 4.951762810196464e-06, "To determine if the agent (robotic arm) is holding the ball_1, I need to check if the ball is in the gripper of the robotic arm. In the image, the ball_1 is on the floor and not in the gripper of the robotic arm. The robotic arm's gripper appears to be empty.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the ball_1, I need to check if the ball is in the gripper of the robotic arm. In the image, the ball_1 is on the floor and not in the gripper of the robotic arm. The robotic arm's gripper appears to be empty.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.99999999928305, 7.169500209714096e-10, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on the right side, indicating the locations of these plates on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_2\" is still in its original position on the furniture. Therefore, the agent is not holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on the right side, indicating the locations of these plates on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_2\" is still in its original position on the furniture. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999994741796954, 5.258203045997655e-07, "In the image, the robotic arm (agent) is visible near a set of drawers labeled with \"plate_1\" and \"plate_3\". The arm does not appear to be holding any object, and \"plate_3\" is still visible on the shelf. Therefore, the agent is not holding \"plate_3\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near a set of drawers labeled with \"plate_1\" and \"plate_3\". The arm does not appear to be holding any object, and \"plate_3\" is still visible on the shelf. Therefore, the agent is not holding \"plate_3\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable shelf_1": ["yes", 5.970626583318653e-14, 0.9999999999999403, "To determine if shelf_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the shelf labeled \"shelf_1\". In the image, the robotic arm is extended towards the right side of the image, where the shelf is located. The arm appears to be close to the shelf, and its end effector is positioned near the shelf's drawers. This suggests that the shelf is within the reach of the robotic arm.", true, "<explanation>\nTo determine if shelf_1 is in reach of the agent, I need to observe the position of the robotic arm (the agent) relative to the shelf labeled \"shelf_1\". In the image, the robotic arm is extended towards the right side of the image, where the shelf is located. The arm appears to be close to the shelf, and its end effector is positioned near the shelf's drawers. This suggests that the shelf is within the reach of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999911962011637, 8.803798836321789e-06, "In the image, the robotic arm (agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm is not in contact with or holding the ball; the ball is lying on the ground. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm is not in contact with or holding the ball; the ball is lying on the ground. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_1": ["no", 0.9999996099742259, 3.900257741505893e-07, "In the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_3\" on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_1\" is still on the shelf. Therefore, the agent is not holding \"plate_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_3\" on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_1\" is still on the shelf. Therefore, the agent is not holding \"plate_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.999999711031014, 2.8896898596586235e-07, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and \"plate_2\" is still on the furniture, not in the gripper of the robotic arm. Therefore, the agent is not holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and \"plate_2\" is still on the furniture, not in the gripper of the robotic arm. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999736221612, 2.6377838833808474e-08, "To determine if the agent is holding plate_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as plate_3. In the image, the robotic arm is visible, but it is not holding any object. Plate_3 is labeled on the shelf, and it is not in the grasp of the robotic arm. Therefore, the agent is not holding plate_3.", true, "<explanation>\nTo determine if the agent is holding plate_3, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as plate_3. In the image, the robotic arm is visible, but it is not holding any object. Plate_3 is labeled on the shelf, and it is not in the grasp of the robotic arm. Therefore, the agent is not holding plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"open shelf_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable shelf_1": ["yes", 6.440513036730802e-11, 0.9999999999355949, "The image shows a robotic arm (the agent) in a virtual household environment. The shelf labeled \"shelf_1\" is visible on the right side of the image, and the robotic arm is positioned close to it. The arm appears to be extended towards the shelf, indicating that it is within reach or very close to being within reach. The proximity of the arm to the shelf suggests that the agent can interact with it.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a virtual household environment. The shelf labeled \"shelf_1\" is visible on the right side of the image, and the robotic arm is positioned close to it. The arm appears to be extended towards the shelf, indicating that it is within reach or very close to being within reach. The proximity of the arm to the shelf suggests that the agent can interact with it.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9999997482373754, 2.5176262467660596e-07, "In the image, the robotic arm (the agent) is visible near the right side, and the ball_1 is on the floor in the center of the image. The robotic arm is not in contact with or holding the ball_1; the ball is clearly separate from the arm. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible near the right side, and the ball_1 is on the floor in the center of the image. The robotic arm is not in contact with or holding the ball_1; the ball is clearly separate from the arm. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_1": ["no", 0.9999995523872289, 4.476127710450797e-07, "In the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and \"plate_1\" is still on the shelf. Therefore, the agent is not holding \"plate_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and \"plate_1\" is still on the shelf. Therefore, the agent is not holding \"plate_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999111507433, 8.884925673879397e-08, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture. Therefore, the agent is not holding plate_2.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture. Therefore, the agent is not holding plate_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999998252307298, 1.747692701655795e-07, "In the image, the robotic arm (agent) is visible, and there are labels indicating the positions of \"plate_1\" and \"plate_3\" on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_3\" is still on the furniture, not in the grip of the robotic arm. Therefore, the agent is not holding plate_3.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels indicating the positions of \"plate_1\" and \"plate_3\" on a piece of furniture. The robotic arm does not appear to be holding any object, and \"plate_3\" is still on the furniture, not in the grip of the robotic arm. Therefore, the agent is not holding plate_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"open shelf_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["yes", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.734375, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.7457627118644068, "no_correct": 44, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8695652173913043, "no_correct": 20, "no_total": 23}, "inside": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.7083333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 1, "actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["no", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.734375, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8260869565217391, "no_correct": 19, "no_total": 23}, "inside": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6190476190476191, "no_correct": 13, "no_total": 21}}}, "step": 2, "actions": ["open-container(shelf_1)", "grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["no", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["no", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["no", "yes"], "ontop plate_3,cabinet_1": ["yes", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["yes", "no"], "inside plate_2,cabinet_1": ["yes", "no"], "inside plate_3,cabinet_1": ["yes", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["no", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.6949152542372882, "no_correct": 41, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.782608695652174, "no_correct": 18, "no_total": 23}, "inside": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "nextto": {"accuracy": 0.7083333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 3, "actions": ["open-container(shelf_1)", "grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable ball_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999990845, 9.15487247922768e-13, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned near the door and is elevated above the ground. The ball is on the floor at some distance from the arm. Given the current position of the arm, it does not appear to be close enough to the ball to reach or grasp it without moving closer or lowering itself. Therefore, the ball_1 is not in reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned near the door and is elevated above the ground. The ball is on the floor at some distance from the arm. Given the current position of the arm, it does not appear to be close enough to the ball to reach or grasp it without moving closer or lowering itself. Therefore, the ball_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 0.9999999994898723, 5.101277368687593e-10, "The robotic arm (agent) is positioned near the door, while the cabinet_1 is located on the left side of the image. The arm appears to be extended away from the cabinet, and there is a significant distance between the arm and the cabinet. Based on the visible reach of the arm and the spatial arrangement, the cabinet_1 does not appear to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the door, while the cabinet_1 is located on the left side of the image. The arm appears to be extended away from the cabinet, and there is a significant distance between the arm and the cabinet. Based on the visible reach of the arm and the spatial arrangement, the cabinet_1 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999992093, 7.906886441914842e-13, "To determine if ball_1 is in reach of the agent, I need to assess the distance between the robotic arm (the agent) and the ball on the floor. In the image, the robotic arm is positioned near the door and is elevated, while the ball is on the floor at a noticeable distance from the arm. The arm does not appear to be extended toward the ball, and the ball is not directly beneath or close to the arm's end effector. Therefore, the ball is not currently in reach of the agent.", true, "<explanation>\nTo determine if ball_1 is in reach of the agent, I need to assess the distance between the robotic arm (the agent) and the ball on the floor. In the image, the robotic arm is positioned near the door and is elevated, while the ball is on the floor at a noticeable distance from the arm. The arm does not appear to be extended toward the ball, and the ball is not directly beneath or close to the arm's end effector. Therefore, the ball is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999872867, 1.2713297933102503e-11, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is located on the floor at a distance from the base of the arm. Given the apparent reach of the arm and the position of the ball, it does not look like the ball is within the immediate reach of the robotic arm without further extension or movement.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and appears to be extended, but the ball is located on the floor at a distance from the base of the arm. Given the apparent reach of the arm and the position of the ball, it does not look like the ball is within the immediate reach of the robotic arm without further extension or movement.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 0.999999999989712, 1.028797110836466e-11, "The robotic arm (agent) is positioned near the wall and above the floor. The cabinet_1 is visible on the right side of the image, against the wall. However, the robotic arm appears to be some distance away from the cabinet_1, and there is no indication that the arm is extended toward or close enough to interact with the cabinet_1. Therefore, the cabinet_1 does not appear to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the wall and above the floor. The cabinet_1 is visible on the right side of the image, against the wall. However, the robotic arm appears to be some distance away from the cabinet_1, and there is no indication that the arm is extended toward or close enough to interact with the cabinet_1. Therefore, the cabinet_1 does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999971327, 2.867300655518347e-12, "The image shows a robotic arm (the agent) attached to the wall, and a small ball (ball_1) is on the floor. The robotic arm appears to be positioned relatively high on the wall, while the ball is on the ground and at some distance from the base of the arm. Given the apparent reach of the robotic arm and the distance between the arm and the ball, it does not look like the ball is within immediate reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) attached to the wall, and a small ball (ball_1) is on the floor. The robotic arm appears to be positioned relatively high on the wall, while the ball is on the ground and at some distance from the base of the arm. Given the apparent reach of the robotic arm and the distance between the arm and the ball, it does not look like the ball is within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999988666916, 1.1333084189392568e-09, "The robotic arm (agent) is positioned near the door and is elevated above the floor. The ball_1 is on the floor, some distance away from the arm. Given the current position and orientation of the arm, it does not appear to be close enough to reach or grasp the ball_1 without moving closer or extending further.", false, "<explanation>\nThe robotic arm (agent) is positioned near the door and is elevated above the floor. The ball_1 is on the floor, some distance away from the arm. Given the current position and orientation of the arm, it does not appear to be close enough to reach or grasp the ball_1 without moving closer or extending further.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 0.9999999999739676, 2.603241640279124e-11, "The robotic arm (agent) is positioned near the door, and the cabinet_1 is visible on the left side of the image. The cabinet_1 appears to be some distance away from the robotic arm, and the arm is not extended towards it. Based on the perspective and the apparent distance, it does not look like the cabinet_1 is within the immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned near the door, and the cabinet_1 is visible on the left side of the image. The cabinet_1 appears to be some distance away from the robotic arm, and the arm is not extended towards it. Based on the perspective and the apparent distance, it does not look like the cabinet_1 is within the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_2": ["no", 0.9999999999998899, 1.101086816143392e-13, "To determine if the carton_2 is in reach of the agent, I need to identify both the location of the robotic arm (the agent) and the carton_2. The robotic arm is positioned near the door, elevated above the floor. The carton_2 appears to be the open box on the left side of the image, which is on the floor and some distance away from the robotic arm. Given the current position of the arm, it does not appear to be close enough to interact with or reach the carton_2.", true, "<explanation>\nTo determine if the carton_2 is in reach of the agent, I need to identify both the location of the robotic arm (the agent) and the carton_2. The robotic arm is positioned near the door, elevated above the floor. The carton_2 appears to be the open box on the left side of the image, which is on the floor and some distance away from the robotic arm. Given the current position of the arm, it does not appear to be close enough to interact with or reach the carton_2.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999997858, 2.141146447392119e-13, "The image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and is extended, but the ball is on the floor at a distance from the arm. Based on the position of the arm and the ball, it appears that the ball is not within the immediate reach of the robotic arm, as the arm would need to extend further or move down to reach the ball.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a ball (ball_1) on the floor. The robotic arm is mounted on the wall and is extended, but the ball is on the floor at a distance from the arm. Based on the position of the arm and the ball, it appears that the ball is not within the immediate reach of the robotic arm, as the arm would need to extend further or move down to reach the ball.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999797609, 2.0239178960257937e-11, "The robotic arm (agent) is positioned near the top right of the image, while the ball_1 is on the floor near the center of the room. The arm appears to be extended, but there is a significant distance between the end of the arm and the ball. Given the current position and orientation of the arm, it does not look like the arm can reach the ball without moving closer or extending further.", false, "<explanation>\nThe robotic arm (agent) is positioned near the top right of the image, while the ball_1 is on the floor near the center of the room. The arm appears to be extended, but there is a significant distance between the end of the arm and the ball. Given the current position and orientation of the arm, it does not look like the arm can reach the ball without moving closer or extending further.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 0.9999999999999714, 2.866725523702437e-14, "To determine if cabinet_1 is in reach of the agent, I need to identify the location of both the robotic arm (the agent) and cabinet_1. The robotic arm is visible in the upper right part of the image, and there is a wooden cabinet or crate-like object near the right wall, which is likely cabinet_1. The arm is extended but is not close to the cabinet; there is a significant distance between the arm and the cabinet. Therefore, cabinet_1 is not in reach of the agent.", true, "<explanation>\nTo determine if cabinet_1 is in reach of the agent, I need to identify the location of both the robotic arm (the agent) and cabinet_1. The robotic arm is visible in the upper right part of the image, and there is a wooden cabinet or crate-like object near the right wall, which is likely cabinet_1. The arm is extended but is not close to the cabinet; there is a significant distance between the arm and the cabinet. Therefore, cabinet_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999323138, 6.768622747324828e-11, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and relatively far from the ball. Given the current position of the arm and the distance to the ball, the ball does not appear to be within immediate reach of the agent without further movement or adjustment of the arm.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is extended, but it is positioned high above the ground and relatively far from the ball. Given the current position of the arm and the distance to the ball, the ball does not appear to be within immediate reach of the agent without further movement or adjustment of the arm.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999986645, 1.3354934281814527e-12, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned above the floor, but it is not extended towards the ball. The ball is on the ground, and there is a significant distance between the arm and the ball. Based on the current position of the arm, it does not appear to be within immediate reach of the ball.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned above the floor, but it is not extended towards the ball. The ball is on the ground, and there is a significant distance between the arm and the ball. Based on the current position of the arm, it does not appear to be within immediate reach of the ball.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable cabinet_1": ["no", 1.0, 2.5346575585732192e-18, "In the image, the robotic arm (agent) is visible near the upper right side of the room. The cabinet_1 is not clearly labeled, but there is a wooden box-like object on the right side of the image, which could be interpreted as a cabinet. However, this object is placed against the wall and appears to be some distance away from the robotic arm. The arm is not extended towards it and does not appear to be within immediate reach of the cabinet-like object.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible near the upper right side of the room. The cabinet_1 is not clearly labeled, but there is a wooden box-like object on the right side of the image, which could be interpreted as a cabinet. However, this object is placed against the wall and appears to be some distance away from the robotic arm. The arm is not extended towards it and does not appear to be within immediate reach of the cabinet-like object.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable plate_1": {"before": false, "after": false}, "reachable plate_2": {"before": false, "after": false}, "reachable plate_3": {"before": false, "after": false}, "reachable saucepan_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(ball_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable ball_1": ["no", 0.9999999999991721, 8.278833845251881e-13, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned above the floor, but it is not extended towards the ball. The ball is some distance away from the base of the arm, and based on the perspective, it appears to be out of the immediate reach of the arm's current position. The arm would likely need to move or extend further to reach the ball.", true, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is positioned above the floor, but it is not extended towards the ball. The ball is some distance away from the base of the arm, and based on the perspective, it appears to be out of the immediate reach of the arm's current position. The arm would likely need to move or extend further to reach the ball.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable ball_1": ["no", 0.9999999999491761, 5.082387260539915e-11, "The image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is extended, but it is not close to the ball. The ball is on the ground, some distance away from the arm's gripper. Based on the current position of the arm and the ball, the ball does not appear to be within immediate reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) and a small ball (ball_1) on the floor. The robotic arm is extended, but it is not close to the ball. The ball is on the ground, some distance away from the arm's gripper. Based on the current position of the arm and the ball, the ball does not appear to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plate_1": ["no", 0.9999999999999433, 5.670476125081537e-14, "To determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_1. The robotic arm is extended towards the right side of the image, while plate_1 is labeled on a shelf or drawer unit on the right side of the image. However, the arm does not appear to be close enough to touch or grasp plate_1, as there is still some distance between the arm and the shelf where plate_1 is located.", true, "<explanation>\nTo determine if plate_1 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_1. The robotic arm is extended towards the right side of the image, while plate_1 is labeled on a shelf or drawer unit on the right side of the image. However, the arm does not appear to be close enough to touch or grasp plate_1, as there is still some distance between the arm and the shelf where plate_1 is located.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_2": ["no", 0.9999999999999991, 8.850976762478442e-16, "To determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_2. In the image, the robotic arm is extended towards the right side of the room, while the labels for \"plate_1\" and \"plate_2\" are visible on the shelving unit. However, the arm does not appear to be close enough to the shelf where plate_2 is located, as there is a noticeable distance between the arm and the shelf. Therefore, plate_2 is not in reach of the agent.", true, "<explanation>\nTo determine if plate_2 is in reach of the agent, I need to check the position of the robotic arm relative to the labeled location of plate_2. In the image, the robotic arm is extended towards the right side of the room, while the labels for \"plate_1\" and \"plate_2\" are visible on the shelving unit. However, the arm does not appear to be close enough to the shelf where plate_2 is located, as there is a noticeable distance between the arm and the shelf. Therefore, plate_2 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plate_3": ["no", 0.9999999999999992, 7.95468948338758e-16, "To determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_3. The robotic arm is extended towards the right side of the image, while plate_3 is labeled on a shelf or drawer unit further to the right and slightly below the arm. The arm does not appear to be close enough to directly interact with plate_3, as there is a visible gap between the arm and the shelf where plate_3 is located.", true, "<explanation>\nTo determine if plate_3 is in reach of the agent, I need to check the position of the robotic arm relative to the location of plate_3. The robotic arm is extended towards the right side of the image, while plate_3 is labeled on a shelf or drawer unit further to the right and slightly below the arm. The arm does not appear to be close enough to directly interact with plate_3, as there is a visible gap between the arm and the shelf where plate_3 is located.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable saucepan_1": ["no", 0.9999999999070731, 9.292684102811758e-11, "To determine if the saucepan_1 is in reach of the agent, I need to look for an object that resembles a saucepan and check its proximity to the robotic arm. In the image, I do not see any object that looks like a saucepan near the robotic arm or within its immediate reach. The only visible objects are a small ball on the floor and some labeled plates on a shelf, but no saucepan is present or within reach.", true, "<explanation>\nTo determine if the saucepan_1 is in reach of the agent, I need to look for an object that resembles a saucepan and check its proximity to the robotic arm. In the image, I do not see any object that looks like a saucepan near the robotic arm or within its immediate reach. The only visible objects are a small ball on the floor and some labeled plates on a shelf, but no saucepan is present or within reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable shelf_1": ["yes", 6.784995489747115e-14, 0.9999999999999322, "The image shows a robotic arm (the agent) extended towards the right side of the image. The shelf_1 is visible on the right side, labeled with \"plate_1\" and \"plate_2\" on it. The robotic arm appears to be close to the shelf, and its end effector is positioned near the shelf. Based on the proximity and orientation of the arm relative to the shelf, it seems that the shelf_1 is within the reach of the agent.", false, "<explanation>\nThe image shows a robotic arm (the agent) extended towards the right side of the image. The shelf_1 is visible on the right side, labeled with \"plate_1\" and \"plate_2\" on it. The robotic arm appears to be close to the shelf, and its end effector is positioned near the shelf. Based on the proximity and orientation of the arm relative to the shelf, it seems that the shelf_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 2.6689732787574634e-12, 0.999999999997331, "The robotic arm (agent) is positioned near the right side of the image, and the cabinet_1 is visible next to the arm. The arm appears to be close enough to interact with the cabinet, as it is extended toward that area and the cabinet is within its immediate vicinity. Therefore, the cabinet_1 is in reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned near the right side of the image, and the cabinet_1 is visible next to the arm. The arm appears to be close enough to interact with the cabinet, as it is extended toward that area and the cabinet is within its immediate vicinity. Therefore, the cabinet_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable ball_2": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable shelf_1": ["yes", 4.396083112845126e-09, 0.9999999956039168, "The image shows a robotic arm (the agent) in a room with a shelf labeled \"shelf_1\" on the right side. The arm is extended towards the shelf, and its end effector is close to the shelf. Given the proximity of the arm to the shelf, it appears that the shelf is within the reach of the agent.", true, "<explanation>\nThe image shows a robotic arm (the agent) in a room with a shelf labeled \"shelf_1\" on the right side. The arm is extended towards the shelf, and its end effector is close to the shelf. Given the proximity of the arm to the shelf, it appears that the shelf is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9996443219803831, 0.0003556780196168548, "In the image, the robotic arm (the agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_1": ["no", 0.9999995187283021, 4.812716979003763e-07, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm's gripper appears to be empty and is not in contact with any plate. Therefore, the agent is not holding \"plate_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm's gripper appears to be empty and is not in contact with any plate. Therefore, the agent is not holding \"plate_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.999999891000043, 1.0899995689651544e-07, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on a piece of furniture to the right. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999996002963, 3.997037661427844e-10, "In the image, the robotic arm (the agent) is visible, and there are labels for \"plate_1\" and \"plate_3\" on the right side near a set of drawers. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_3,\" which is still on the furniture.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible, and there are labels for \"plate_1\" and \"plate_3\" on the right side near a set of drawers. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_3,\" which is still on the furniture.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"open shelf_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(shelf_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable shelf_1": ["yes", 3.988814709841598e-09, 0.9999999960111853, "The image shows a robotic arm (the agent) extended towards the right side of the image, where a shelf labeled \"shelf_1\" is visible. The arm appears to be close to the shelf, suggesting that it is within the agent's reach. The proximity of the arm to the shelf indicates that the agent can likely interact with it.", true, "<explanation>\nThe image shows a robotic arm (the agent) extended towards the right side of the image, where a shelf labeled \"shelf_1\" is visible. The arm appears to be close to the shelf, suggesting that it is within the agent's reach. The proximity of the arm to the shelf indicates that the agent can likely interact with it.\n</explanation>\n<answer>\nYes\n</answer>", false], "holding ball_1": ["no", 0.9993380735620183, 0.0006619264379817408, "In the image, the robotic arm (the agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is visible, and there is a ball (presumably ball_1) on the floor. The robotic arm's gripper is empty and not in contact with the ball. Therefore, the agent is not holding the ball_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_1": ["no", 0.9999999822243782, 1.7775621707922604e-08, "In the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_2\" on a piece of furniture. The robotic arm's gripper appears to be empty and is not holding any object. \"plate_1\" is still on the furniture, not in the gripper. Therefore, the agent is not holding \"plate_1\".", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels indicating the locations of \"plate_1\" and \"plate_2\" on a piece of furniture. The robotic arm's gripper appears to be empty and is not holding any object. \"plate_1\" is still on the furniture, not in the gripper. Therefore, the agent is not holding \"plate_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_2": ["no", 0.9999999987551199, 1.244880084178465e-09, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on the right side of the image, attached to a piece of furniture. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_2\" on the right side of the image, attached to a piece of furniture. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_2,\" which is still on the furniture.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plate_3": ["no", 0.9999999996616401, 3.383599135651465e-10, "In the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_3\" on the right side near a set of drawers. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_3,\" which is still on the furniture.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible, and there are labels for \"plate_1\" and \"plate_3\" on the right side near a set of drawers. The robotic arm does not appear to be holding any object, and specifically, it is not holding the object labeled \"plate_3,\" which is still on the furniture.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"open shelf_1": [true, false, false], "holding ball_2": [true, false, false], "holding saucepan_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable carton_2": ["no", "yes"], "reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open carton_2": ["yes", "yes"], "open cabinet_1": ["yes", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,carton_2": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,carton_2": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,carton_2": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.75, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable cabinet_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "inside ball_1,cabinet_1": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)", "navigate-to(shelf_1)", "open-container(shelf_1)", "grasp(plate_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["no", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["no", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["no", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["no", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.734375, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.7288135593220338, "no_correct": 43, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.7083333333333334, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.7083333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 6, "actions": ["open-container(shelf_1)", "grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, {"enum_results": {"reachable ball_1": ["no", "yes"], "reachable plate_1": ["no", "no"], "reachable plate_2": ["yes", "no"], "reachable plate_3": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable saucepan_1": ["no", "no"], "reachable shelf_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "holding ball_1": ["no", "no"], "holding plate_1": ["no", "no"], "holding plate_2": ["no", "no"], "holding plate_3": ["no", "no"], "ontop ball_1,plate_1": ["no", "no"], "ontop ball_1,plate_2": ["no", "no"], "ontop ball_1,plate_3": ["no", "no"], "ontop ball_1,cabinet_1": ["no", "no"], "ontop ball_1,saucepan_1": ["no", "no"], "ontop ball_1,shelf_1": ["no", "no"], "ontop plate_1,ball_1": ["no", "no"], "ontop plate_1,plate_2": ["yes", "no"], "ontop plate_1,plate_3": ["yes", "no"], "ontop plate_1,cabinet_1": ["yes", "no"], "ontop plate_1,saucepan_1": ["no", "no"], "ontop plate_1,shelf_1": ["yes", "no"], "ontop plate_2,ball_1": ["no", "no"], "ontop plate_2,plate_1": ["no", "no"], "ontop plate_2,plate_3": ["yes", "no"], "ontop plate_2,cabinet_1": ["yes", "no"], "ontop plate_2,saucepan_1": ["no", "no"], "ontop plate_2,shelf_1": ["yes", "no"], "ontop plate_3,ball_1": ["no", "no"], "ontop plate_3,plate_1": ["yes", "no"], "ontop plate_3,plate_2": ["yes", "yes"], "ontop plate_3,cabinet_1": ["no", "no"], "ontop plate_3,saucepan_1": ["no", "no"], "ontop plate_3,shelf_1": ["yes", "no"], "inside ball_1,cabinet_1": ["no", "no"], "inside plate_1,cabinet_1": ["no", "no"], "inside plate_2,cabinet_1": ["no", "no"], "inside plate_3,cabinet_1": ["no", "no"], "nextto ball_1,plate_1": ["no", "no"], "nextto ball_1,plate_2": ["no", "no"], "nextto ball_1,plate_3": ["no", "no"], "nextto ball_1,cabinet_1": ["no", "no"], "nextto ball_1,saucepan_1": ["no", "no"], "nextto ball_1,shelf_1": ["no", "no"], "nextto plate_1,ball_1": ["no", "no"], "nextto plate_1,plate_2": ["yes", "no"], "nextto plate_1,plate_3": ["yes", "no"], "nextto plate_1,cabinet_1": ["yes", "no"], "nextto plate_1,saucepan_1": ["no", "no"], "nextto plate_1,shelf_1": ["yes", "yes"], "nextto plate_2,ball_1": ["no", "no"], "nextto plate_2,plate_1": ["yes", "no"], "nextto plate_2,plate_3": ["yes", "no"], "nextto plate_2,cabinet_1": ["yes", "no"], "nextto plate_2,saucepan_1": ["no", "no"], "nextto plate_2,shelf_1": ["yes", "yes"], "nextto plate_3,ball_1": ["no", "no"], "nextto plate_3,plate_1": ["no", "no"], "nextto plate_3,plate_2": ["yes", "no"], "nextto plate_3,cabinet_1": ["yes", "no"], "nextto plate_3,saucepan_1": ["no", "no"], "nextto plate_3,shelf_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.671875, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.6610169491525424, "no_correct": 39, "no_total": 59, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 3, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "ontop": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6086956521739131, "no_correct": 14, "no_total": 23}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6190476190476191, "no_correct": 13, "no_total": 21}}}, "step": 7, "actions": ["open-container(shelf_1)", "grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}], "remaining_actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 4.022865313039313e-16, 0.9999999999999996, "The robotic arm (agent) is mounted on the wall and is currently extended towards the room. The object labeled \"plaything_1\" is on the floor, near the wall and below the arm. Given the arm's current position and the proximity of \"plaything_1\" to the wall and the arm, it appears that the arm could reach down to pick up the object. There are no visible obstacles between the arm and \"plaything_1\" that would prevent the arm from reaching it.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is currently extended towards the room. The object labeled \"plaything_1\" is on the floor, near the wall and below the arm. Given the arm's current position and the proximity of \"plaything_1\" to the wall and the arm, it appears that the arm could reach down to pick up the object. There are no visible obstacles between the arm and \"plaything_1\" that would prevent the arm from reaching it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 3.169906972348471e-13, 0.999999999999683, "The robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_1\" is positioned on the floor, relatively close to the wall where the robotic arm is mounted. Given the arm's current extension and proximity to \"carton_1\", it appears that the arm could reach and interact with \"carton_1\" without significant obstruction. Therefore, \"carton_1\" is within reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_1\" is positioned on the floor, relatively close to the wall where the robotic arm is mounted. Given the arm's current extension and proximity to \"carton_1\", it appears that the arm could reach and interact with \"carton_1\" without significant obstruction. Therefore, \"carton_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 2.5113639230072685e-10, 0.9999999997488636, "The robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_2\" is positioned very close to the robotic arm, within what appears to be the arm's operational range. The arm could likely reach and interact with \"carton_2\" based on their proximity.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_2\" is positioned very close to the robotic arm, within what appears to be the arm's operational range. The arm could likely reach and interact with \"carton_2\" based on their proximity.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.0047322906187218e-11, 0.9999999999899527, "The robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The table_1 is located near the arm, and based on the perspective and proximity, it appears to be within the reach of the robotic arm. The arm is close enough to interact with objects on or near the table.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The table_1 is located near the arm, and based on the perspective and proximity, it appears to be within the reach of the robotic arm. The arm is close enough to interact with objects on or near the table.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["no", 1.0, 1.8424725476398307e-17, "The robotic arm (agent) is mounted on the wall and is currently extended towards the room. The object labeled \"plaything_1\" is on the floor, relatively close to the wall where the robotic arm is mounted. However, the arm appears to be extended towards objects on the table and not directly towards \"plaything_1\". Given the arm's current position and the distance to \"plaything_1\", it does not seem to be within immediate reach of the agent without repositioning or further extension.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is currently extended towards the room. The object labeled \"plaything_1\" is on the floor, relatively close to the wall where the robotic arm is mounted. However, the arm appears to be extended towards objects on the table and not directly towards \"plaything_1\". Given the arm's current position and the distance to \"plaything_1\", it does not seem to be within immediate reach of the agent without repositioning or further extension.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable plaything_1": ["no", 0.9999999999990207, 9.793773224845374e-13, "To determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. In the image, plaything_1 is on the floor near the wall, while the robotic arm is mounted on the wall and is currently extended towards the center of the room, holding another object. The arm does not appear to be close enough to plaything_1 to reach it without repositioning. Therefore, plaything_1 is not currently in reach of the agent.", false, "<explanation>\nTo determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. In the image, plaything_1 is on the floor near the wall, while the robotic arm is mounted on the wall and is currently extended towards the center of the room, holding another object. The arm does not appear to be close enough to plaything_1 to reach it without repositioning. Therefore, plaything_1 is not currently in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable carton_1": ["yes", 6.168093455679065e-12, 0.9999999999938319, "The robotic arm (agent) is positioned close to the wall and is extended towards the room. The object labeled \"carton_1\" is located on the floor near the wall, directly in front of the robotic arm. Given the proximity and the orientation of the arm, it appears that the arm could reach and interact with \"carton_1\" without obstruction.", false, "<explanation>\nThe robotic arm (agent) is positioned close to the wall and is extended towards the room. The object labeled \"carton_1\" is located on the floor near the wall, directly in front of the robotic arm. Given the proximity and the orientation of the arm, it appears that the arm could reach and interact with \"carton_1\" without obstruction.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["no", 0.9999999999960636, 3.936409557515815e-12, "The robotic arm (agent) is positioned close to the wall and is extended towards the room. The object labeled \"carton_2\" is located on a table further away from the arm, with other objects and furniture between the arm and the carton. Given the distance and the obstacles, it does not appear that the robotic arm can reach \"carton_2\" from its current position.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the wall and is extended towards the room. The object labeled \"carton_2\" is located on a table further away from the arm, with other objects and furniture between the arm and the carton. Given the distance and the obstacles, it does not appear that the robotic arm can reach \"carton_2\" from its current position.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["no", 1.0, 1.1547363880164887e-17, "To determine if table_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to table_1. The robotic arm is mounted on the wall to the right and is currently extended towards the open box and the playthings. Table_1 is located further into the room, past the open box and some distance away from the robotic arm. Given the visible distance and the current extension of the arm, table_1 appears to be out of the immediate reach of the agent.", true, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to table_1. The robotic arm is mounted on the wall to the right and is currently extended towards the open box and the playthings. Table_1 is located further into the room, past the open box and some distance away from the robotic arm. Given the visible distance and the current extension of the arm, table_1 appears to be out of the immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["no", 0.9999999999969061, 3.093816610155011e-12, "The robotic arm (agent) is mounted on the wall and is currently holding an object labeled \"plaything_2.\" The object labeled \"plaything_1\" is on the floor, some distance away from the robotic arm. Given the position of the arm and the distance to \"plaything_1,\" it does not appear to be within the immediate reach of the agent, especially since the arm is already holding another object and is extended away from \"plaything_1.\"", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is currently holding an object labeled \"plaything_2.\" The object labeled \"plaything_1\" is on the floor, some distance away from the robotic arm. Given the position of the arm and the distance to \"plaything_1,\" it does not appear to be within the immediate reach of the agent, especially since the arm is already holding another object and is extended away from \"plaything_1.\"\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["no", 0.9999999999964242, 3.5758411408222955e-12, "The robotic arm (agent) is mounted on the wall and is currently holding an object labeled \"plaything_2.\" The object labeled \"plaything_1\" is on the floor, some distance away from the robotic arm. Given the position of the arm and the distance to \"plaything_1,\" it does not appear to be within the immediate reach of the agent without the agent moving or extending significantly. Therefore, \"plaything_1\" is not in reach of the agent in its current position.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is currently holding an object labeled \"plaything_2.\" The object labeled \"plaything_1\" is on the floor, some distance away from the robotic arm. Given the position of the arm and the distance to \"plaything_1,\" it does not appear to be within the immediate reach of the agent without the agent moving or extending significantly. Therefore, \"plaything_1\" is not in reach of the agent in its current position.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 1.477053713124813e-11, 0.9999999999852295, "The robotic arm (agent) is mounted on the wall and is extended towards the shelf. The object labeled \"plaything_1\" is on the lower shelf, directly below the arm. Given the proximity of the arm to the shelf and the position of \"plaything_1,\" it appears that the arm is close enough to reach and interact with the object.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the shelf. The object labeled \"plaything_1\" is on the lower shelf, directly below the arm. Given the proximity of the arm to the shelf and the position of \"plaything_1,\" it appears that the arm is close enough to reach and interact with the object.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["no", 0.9999999999999961, 3.916368519871726e-15, "The robotic arm (agent) is positioned close to the wall and is extended towards the shelf area. The object labeled \"carton_1\" is on the floor near the shelf, but the arm appears to be extended above the shelf, not directly above or near \"carton_1\". Given the current position and orientation of the arm, \"carton_1\" does not seem to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the wall and is extended towards the shelf area. The object labeled \"carton_1\" is on the floor near the shelf, but the arm appears to be extended above the shelf, not directly above or near \"carton_1\". Given the current position and orientation of the arm, \"carton_1\" does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable carton_2": ["yes", 4.496877463064155e-15, 0.9999999999999954, "The robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_2\" is located on top of a table or surface, and it appears to be within the horizontal and vertical reach of the robotic arm. The arm is close to the object, and there are no visible obstacles between the arm and \"carton_2\" that would prevent the agent from reaching it.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The object labeled \"carton_2\" is located on top of a table or surface, and it appears to be within the horizontal and vertical reach of the robotic arm. The arm is close to the object, and there are no visible obstacles between the arm and \"carton_2\" that would prevent the agent from reaching it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["no", 1.0, 2.6630201666235334e-17, "The robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The table_1 is visible in the image, positioned further down the hallway, past the sofa and other objects. The arm appears to be closer to the shelf and not directly adjacent to table_1. Given the distance and the current extension of the arm, table_1 does not seem to be within immediate reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the objects in the room. The table_1 is visible in the image, positioned further down the hallway, past the sofa and other objects. The arm appears to be closer to the shelf and not directly adjacent to table_1. Given the distance and the current extension of the arm, table_1 does not seem to be within immediate reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 3.1623408359100974e-16, 0.9999999999999997, "To determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. The robotic arm is extended and appears to be very close to the shelf where plaything_1 is located. The arm's end effector is aligned with the shelf, and plaything_1 is on the lower shelf, directly in front of the arm. This suggests that the arm could reach and interact with plaything_1 without any major obstruction.", true, "<explanation>\nTo determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. The robotic arm is extended and appears to be very close to the shelf where plaything_1 is located. The arm's end effector is aligned with the shelf, and plaything_1 is on the lower shelf, directly in front of the arm. This suggests that the arm could reach and interact with plaything_1 without any major obstruction.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_1": ["no", 0.9997210981270838, 0.00027890187291618906, "In the image, the robotic arm (agent) is holding an object labeled \"carton_1.\" There is no indication or label showing that the object being held is \"plaything_1.\" Therefore, the agent is not holding the plaything_1.", false, "<explanation>\nIn the image, the robotic arm (agent) is holding an object labeled \"carton_1.\" There is no indication or label showing that the object being held is \"plaything_1.\" Therefore, the agent is not holding the plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_1,carton_1": ["no", 0.9999999959288342, 4.071165900734893e-09, "In the image, the robotic arm is holding an object labeled \"plaything_1\" and is positioned above the open \"carton_1\" box. However, \"plaything_1\" is not resting on or inside the \"carton_1\"; it is still being held by the robotic arm above the box. Therefore, \"plaything_1\" is not on top of \"carton_1\".", true, "<explanation>\nIn the image, the robotic arm is holding an object labeled \"plaything_1\" and is positioned above the open \"carton_1\" box. However, \"plaything_1\" is not resting on or inside the \"carton_1\"; it is still being held by the robotic arm above the box. Therefore, \"plaything_1\" is not on top of \"carton_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop plaything_1,carton_2": ["no", 0.9999999999999921, 7.848108695260835e-15, "First, I will identify the objects in the image: \"plaything_1\" and \"carton_2\". The image shows a robotic arm holding an object, and there are two cartons visible, one of which is labeled \"carton_2\". I do not see any object that is clearly a plaything (such as a toy) on top of \"carton_2\". The top of \"carton_2\" appears to be empty, and the robotic arm is not placing any object on it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image: \"plaything_1\" and \"carton_2\". The image shows a robotic arm holding an object, and there are two cartons visible, one of which is labeled \"carton_2\". I do not see any object that is clearly a plaything (such as a toy) on top of \"carton_2\". The top of \"carton_2\" appears to be empty, and the robotic arm is not placing any object on it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_1,carton_1": ["no", 0.9999971672583954, 2.832741604599036e-06, "In the image, the robotic arm is holding an object labeled \"carton_1\" and there is another carton labeled \"carton_2\" nearby. However, there is no visible object labeled \"plaything_1\" in the image, so I cannot determine if \"plaything_1\" is next to \"carton_1\".", true, "<explanation>\nIn the image, the robotic arm is holding an object labeled \"carton_1\" and there is another carton labeled \"carton_2\" nearby. However, there is no visible object labeled \"plaything_1\" in the image, so I cannot determine if \"plaything_1\" is next to \"carton_1\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_1,carton_2": ["no", 0.9999999997829598, 2.1704016852064444e-10, "In the image, the objects are labeled with their names. The carton_2 is visible and is the open box in the foreground. The plaything_1 is not labeled or visible next to carton_2. Therefore, based on the visible labels and objects, plaything_1 is not next to carton_2.", true, "<explanation>\nIn the image, the objects are labeled with their names. The carton_2 is visible and is the open box in the foreground. The plaything_1 is not labeled or visible next to carton_2. Therefore, based on the visible labels and objects, plaything_1 is not next to carton_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_1,plaything_1": {"before": null, "after": false}, "ontop plaything_1,plaything_2": {"before": false, "after": false}, "ontop plaything_1,plaything_3": {"before": false, "after": false}, "ontop plaything_1,plaything_4": {"before": false, "after": false}, "ontop plaything_1,table_1": {"before": false, "after": false}, "nextto plaything_1,plaything_1": {"before": null, "after": false}, "nextto plaything_1,plaything_2": {"before": false, "after": false}, "nextto plaything_1,plaything_3": {"before": false, "after": false}, "nextto plaything_1,plaything_4": {"before": false, "after": false}, "nextto plaything_1,table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["no", 0.9999999977975838, 2.2024162348677303e-09, "In the image, the robotic arm (agent) is visible and appears to be interacting with two cartons labeled \"carton_1\" and \"carton_2.\" However, there is no visible object labeled \"plaything_1\" within the immediate vicinity of the robotic arm or within the red bounding boxes. Since \"plaything_1\" is not visible or clearly within reach of the agent, I cannot confirm that it is in reach.", true, "<explanation>\nIn the image, the robotic arm (agent) is visible and appears to be interacting with two cartons labeled \"carton_1\" and \"carton_2.\" However, there is no visible object labeled \"plaything_1\" within the immediate vicinity of the robotic arm or within the red bounding boxes. Since \"plaything_1\" is not visible or clearly within reach of the agent, I cannot confirm that it is in reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 8.43436452019281e-10, 0.9999999991565636, "The image shows the robotic arm (the agent) in a virtual household environment. The object labeled \"plaything_1\" is very close to the gripper of the robotic arm, indicating that it is within the arm's reach. The proximity and orientation suggest that the agent can interact with or grasp \"plaything_1\" without needing to move significantly.", true, "<explanation>\nThe image shows the robotic arm (the agent) in a virtual household environment. The object labeled \"plaything_1\" is very close to the gripper of the robotic arm, indicating that it is within the arm's reach. The proximity and orientation suggest that the agent can interact with or grasp \"plaything_1\" without needing to move significantly.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 3.840736136377598e-09, 0.9999999961592638, "To determine if carton_1 is in reach of the agent, I need to check the position of carton_1 relative to the robotic arm. In the image, carton_1 is labeled and appears to be very close to the robotic arm's gripper, within the red bounding boxes. The proximity suggests that the robotic arm can reach and potentially interact with carton_1.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to check the position of carton_1 relative to the robotic arm. In the image, carton_1 is labeled and appears to be very close to the robotic arm's gripper, within the red bounding boxes. The proximity suggests that the robotic arm can reach and potentially interact with carton_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 1.433082956817916e-09, 0.999999998566917, "To determine if carton_2 is in reach of the agent, I need to check the position of carton_2 relative to the robotic arm. In the image, carton_2 is labeled and appears to be very close to the robotic arm's gripper, within the red bounding boxes. The proximity suggests that the robotic arm can reach and potentially interact with carton_2.", false, "<explanation>\nTo determine if carton_2 is in reach of the agent, I need to check the position of carton_2 relative to the robotic arm. In the image, carton_2 is labeled and appears to be very close to the robotic arm's gripper, within the red bounding boxes. The proximity suggests that the robotic arm can reach and potentially interact with carton_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 3.937621913702898e-12, 0.9999999999960624, "To determine if table_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the table_1 in the image. The robotic arm is extended towards the center of the room, and the red bounding box labeled \"table_1\" is very close to the gripper of the robotic arm. This indicates that the table is within the immediate vicinity and can be interacted with by the agent.", false, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the table_1 in the image. The robotic arm is extended towards the center of the room, and the red bounding box labeled \"table_1\" is very close to the gripper of the robotic arm. This indicates that the table is within the immediate vicinity and can be interacted with by the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding plaything_1": ["yes", 4.39608515534108e-08, 0.9999999560391485, "In the image, the robotic arm (agent) is positioned close to several objects, and the object labeled \"plaything_1\" is within the grasp of the robotic hand. The fingers of the robotic hand are wrapped around \"plaything_1,\" indicating that the agent is indeed holding it.", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned close to several objects, and the object labeled \"plaything_1\" is within the grasp of the robotic hand. The fingers of the robotic hand are wrapped around \"plaything_1,\" indicating that the agent is indeed holding it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_1": ["yes", 3.2926034965066473e-13, 0.9999999999996707, "To determine if plaything_1 is within reach of the agent, I need to check the proximity of plaything_1 to the robotic arm (the agent). In the image, plaything_1 is labeled and appears to be very close to the robotic arm's gripper, suggesting that it is within the arm's immediate reach. The gripper is positioned right next to the bounding box labeled \"plaything_1,\" indicating that the agent can likely interact with or grasp it.", true, "<explanation>\nTo determine if plaything_1 is within reach of the agent, I need to check the proximity of plaything_1 to the robotic arm (the agent). In the image, plaything_1 is labeled and appears to be very close to the robotic arm's gripper, suggesting that it is within the arm's immediate reach. The gripper is positioned right next to the bounding box labeled \"plaything_1,\" indicating that the agent can likely interact with or grasp it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"nextto plaything_1,plaything_1": {"before": null, "after": true}, "holding plaything_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 3.5946521500193635e-08, 0.9999999640534785, "The robotic arm (agent) is positioned close to the object labeled \"carton_1.\" The arm appears to be extended toward the carton, and there is no visible obstruction between the arm and the carton. The proximity and orientation suggest that the agent can reach and potentially interact with \"carton_1.\"", true, "<explanation>\nThe robotic arm (agent) is positioned close to the object labeled \"carton_1.\" The arm appears to be extended toward the carton, and there is no visible obstruction between the arm and the carton. The proximity and orientation suggest that the agent can reach and potentially interact with \"carton_1.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 6.398559808932991e-07, 0.9999993601440191, "To determine if carton_1 is open, I need to look at the visual state of the box labeled as \"carton_1\". In the image, carton_1 appears to have its flaps raised and not closed, indicating that the box is open.", false, "<explanation>\nTo determine if carton_1 is open, I need to look at the visual state of the box labeled as \"carton_1\". In the image, carton_1 appears to have its flaps raised and not closed, indicating that the box is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 4.870241462901194e-12, 0.9999999999951298, "The robotic arm (agent) is positioned close to the wall, and plaything_1 is located on the floor near the wall, within the red bounding box. The end effector of the robotic arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems manageable for the arm's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the wall, and plaything_1 is located on the floor near the wall, within the red bounding box. The end effector of the robotic arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems manageable for the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable carton_1": {"before": true, "after": false}, "reachable carton_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable plaything_1": ["yes", 1.1686926465214651e-11, 0.9999999999883131, "The robotic arm (agent) is positioned close to the wall, and plaything_1 is located on the floor near the wall, within the red bounding box. The end effector of the robotic arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems manageable for the arm's reach.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the wall, and plaything_1 is located on the floor near the wall, within the red bounding box. The end effector of the robotic arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems manageable for the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_1": ["yes", 2.2150429347629887e-06, 0.9999977849570653, "In the image, the robotic arm (the agent) is in close proximity to plaything_1, and plaything_1 appears to be within the gripper of the robotic arm. The positioning and alignment suggest that the agent is indeed holding plaything_1.", true, "<explanation>\nIn the image, the robotic arm (the agent) is in close proximity to plaything_1, and plaything_1 appears to be within the gripper of the robotic arm. The positioning and alignment suggest that the agent is indeed holding plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop plaything_1,plaything_1": {"before": null, "after": false}, "ontop plaything_1,plaything_2": {"before": false, "after": false}, "ontop plaything_1,plaything_3": {"before": false, "after": false}, "ontop plaything_1,plaything_4": {"before": false, "after": false}, "ontop plaything_1,carton_1": {"before": false, "after": false}, "ontop plaything_1,carton_2": {"before": false, "after": false}, "ontop plaything_1,table_1": {"before": false, "after": false}, "nextto plaything_1,plaything_1": {"before": false, "after": false}, "nextto plaything_1,plaything_2": {"before": false, "after": false}, "nextto plaything_1,plaything_3": {"before": false, "after": false}, "nextto plaything_1,plaything_4": {"before": false, "after": false}, "nextto plaything_1,carton_1": {"before": false, "after": false}, "nextto plaything_1,carton_2": {"before": false, "after": false}, "nextto plaything_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["no", 0.9999999999999999, 1.2673192712199643e-16, "To determine if plaything_2 is within reach of the agent, I need to check the position of plaything_2 relative to the robotic arm. In the image, plaything_2 is labeled and appears to be on the floor near the bottom center of the image. The robotic arm is extended downward but is positioned above the table and not directly above plaything_2. There is a significant distance between the robotic arm and plaything_2, suggesting that the arm would need to move further down and possibly forward to reach it. Therefore, plaything_2 is not currently within reach of the agent.", false, "<explanation>\nTo determine if plaything_2 is within reach of the agent, I need to check the position of plaything_2 relative to the robotic arm. In the image, plaything_2 is labeled and appears to be on the floor near the bottom center of the image. The robotic arm is extended downward but is positioned above the table and not directly above plaything_2. There is a significant distance between the robotic arm and plaything_2, suggesting that the arm would need to move further down and possibly forward to reach it. Therefore, plaything_2 is not currently within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_1": ["yes", 1.215364493792143e-12, 0.9999999999987846, "To determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. In the image, the robotic arm is extended and appears to be close to plaything_1, which is located on the surface near the arm. The arm is not obstructed and seems to be within a short distance from plaything_1, suggesting that the agent can reach it.", false, "<explanation>\nTo determine if plaything_1 is in reach of the agent, I need to check the position of the robotic arm (the agent) relative to plaything_1. In the image, the robotic arm is extended and appears to be close to plaything_1, which is located on the surface near the arm. The arm is not obstructed and seems to be within a short distance from plaything_1, suggesting that the agent can reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 6.333958753512855e-10, 0.9999999993666041, "The image shows the robotic arm (the agent) in the virtual household environment. The object labeled \"carton_1\" is very close to the robotic arm, and it appears that the arm is either already holding it or is in a position to easily grasp it. The proximity indicates that the carton_1 is within reach of the agent.", false, "<explanation>\nThe image shows the robotic arm (the agent) in the virtual household environment. The object labeled \"carton_1\" is very close to the robotic arm, and it appears that the arm is either already holding it or is in a position to easily grasp it. The proximity indicates that the carton_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_2": ["yes", 4.710363998054953e-08, 0.99999995289636, "The robotic arm (agent) is positioned very close to the object labeled \"carton_2.\" The gripper of the robotic arm appears to be directly adjacent to or almost touching the carton, indicating that the object is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is positioned very close to the object labeled \"carton_2.\" The gripper of the robotic arm appears to be directly adjacent to or almost touching the carton, indicating that the object is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 3.7812313256116114e-11, 0.9999999999621877, "To determine if table_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the table. In the image, the robotic arm is positioned above and very close to the table, suggesting that it is within reach. The arm appears to be able to interact with objects on or near the table, indicating that the table is indeed in reach.", false, "<explanation>\nTo determine if table_1 is in reach of the agent, I need to check the proximity of the robotic arm (the agent) to the table. In the image, the robotic arm is positioned above and very close to the table, suggesting that it is within reach. The arm appears to be able to interact with objects on or near the table, indicating that the table is indeed in reach.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 6.114529737815278e-08, 0.9999999388547026, "The robotic arm (the agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be directly above or next to the carton, indicating that it is within the agent's reach. There are no visible obstacles between the arm and the carton that would prevent interaction.", true, "<explanation>\nThe robotic arm (the agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be directly above or next to the carton, indicating that it is within the agent's reach. There are no visible obstacles between the arm and the carton that would prevent interaction.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.9999999999873354, 1.2664651073272162e-11, "To determine if carton_1 is open, I need to closely observe the state of the carton in the robotic arm's grasp. An open carton would typically have its flaps visibly separated or lifted, showing an opening at the top. In the image, carton_1 appears to be held by the robotic arm, but the top of the carton looks closed and there are no visible open flaps or an opening. Therefore, the carton does not appear to be open.", true, "<explanation>\nTo determine if carton_1 is open, I need to closely observe the state of the carton in the robotic arm's grasp. An open carton would typically have its flaps visibly separated or lifted, showing an opening at the top. In the image, carton_1 appears to be held by the robotic arm, but the top of the carton looks closed and there are no visible open flaps or an opening. Therefore, the carton does not appear to be open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.9999999974939757, 2.506024282726283e-09, "To determine if the agent is holding plaything_1, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_1. In the image, the robotic arm is holding an object, but the object being held is labeled as \"carton_2,\" not \"plaything_1.\" Plaything_1 is visible on the table, away from the robotic arm. Therefore, the agent is not holding plaything_1.", true, "<explanation>\nTo determine if the agent is holding plaything_1, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_1. In the image, the robotic arm is holding an object, but the object being held is labeled as \"carton_2,\" not \"plaything_1.\" Plaything_1 is visible on the table, away from the robotic arm. Therefore, the agent is not holding plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.9999999966782974, 3.3217025901385995e-09, "To determine if the agent is holding plaything_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as plaything_2. In the image, the robotic arm is holding an object, but the label closest to the object being held is \"carton_2,\" not \"plaything_2.\" The label \"plaything_2\" is visible near the bottom of the image, and it is not in contact with the robotic arm. Therefore, the agent is not holding plaything_2.", true, "<explanation>\nTo determine if the agent is holding plaything_2, I need to check if the robotic arm (the agent) is grasping or in contact with the object labeled as plaything_2. In the image, the robotic arm is holding an object, but the label closest to the object being held is \"carton_2,\" not \"plaything_2.\" The label \"plaything_2\" is visible near the bottom of the image, and it is not in contact with the robotic arm. Therefore, the agent is not holding plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 1.0379943058956427e-08, 0.999999989620057, "The image shows the robotic arm (the agent) in close proximity to the object labeled \"carton_1.\" The arm appears to be positioned directly above or next to the carton, indicating that the object is within the agent's reach. There are no visible obstacles between the arm and the carton that would prevent interaction.", true, "<explanation>\nThe image shows the robotic arm (the agent) in close proximity to the object labeled \"carton_1.\" The arm appears to be positioned directly above or next to the carton, indicating that the object is within the agent's reach. There are no visible obstacles between the arm and the carton that would prevent interaction.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.9999999999951114, 4.888693702231191e-12, "To determine if carton_1 is open, I need to look at the object labeled \"carton_1\" in the image and check for any visible opening or if the flaps are not sealed. In the image, carton_1 appears to be held by the robotic arm, and the top of the carton looks closed and sealed, with no visible opening or flaps sticking out. Therefore, carton_1 is not open.", true, "<explanation>\nTo determine if carton_1 is open, I need to look at the object labeled \"carton_1\" in the image and check for any visible opening or if the flaps are not sealed. In the image, carton_1 appears to be held by the robotic arm, and the top of the carton looks closed and sealed, with no visible opening or flaps sticking out. Therefore, carton_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.9999998425473976, 1.5745260237248092e-07, "To determine if the agent is holding plaything_1, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_1. In the image, the robotic arm is holding an object, but plaything_1 is labeled further away on the table, not in the grasp of the robotic arm. Therefore, the agent is not holding plaything_1.", true, "<explanation>\nTo determine if the agent is holding plaything_1, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_1. In the image, the robotic arm is holding an object, but plaything_1 is labeled further away on the table, not in the grasp of the robotic arm. Therefore, the agent is not holding plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.9999999476832959, 5.231670407701681e-08, "To determine if the agent is holding plaything_2, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_2. In the image, the robotic arm is holding an object, but plaything_2 is labeled on the floor near the bottom of the image, away from the robotic arm. Therefore, the agent is not holding plaything_2.", true, "<explanation>\nTo determine if the agent is holding plaything_2, I need to check if the robotic arm (the agent) is grasping or in direct contact with the object labeled as plaything_2. In the image, the robotic arm is holding an object, but plaything_2 is labeled on the floor near the bottom of the image, away from the robotic arm. Therefore, the agent is not holding plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["yes", "no"], "ontop plaything_5,carton_1": ["yes", "no"], "ontop plaything_5,carton_2": ["yes", "no"], "ontop plaything_5,table_1": ["yes", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["yes", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["yes", "no"], "inside plaything_5,carton_2": ["yes", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_5,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.4782608695652174, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.4603174603174603, "no_correct": 29, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 9, "no_total": 24}, "inside": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "nextto": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22}}}, "step": 1, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["no", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["no", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["yes", "no"], "ontop plaything_5,plaything_8": ["yes", "no"], "ontop plaything_5,carton_1": ["yes", "no"], "ontop plaything_5,carton_2": ["yes", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_5,carton_2": ["yes", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,plaything_8": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5217391304347826, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.5079365079365079, "no_correct": 32, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 12, "no_total": 24}, "inside": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22}}}, "step": 2, "actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["no", "no"], "holding plaything_5": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_5": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_5,plaything_1": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["yes", "no"], "ontop plaything_5,carton_1": ["yes", "no"], "ontop plaything_5,carton_2": ["yes", "no"], "ontop plaything_5,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_5": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_5,carton_1": ["yes", "no"], "inside plaything_5,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_1,plaything_5": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_5,plaything_1": ["no", "no"], "nextto plaything_5,plaything_7": ["yes", "no"], "nextto plaything_5,plaything_8": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_5,carton_2": ["no", "no"], "nextto plaything_5,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_5": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5217391304347826, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.5238095238095238, "no_correct": 33, "no_total": 63, "predicates": {"reachable": {"accuracy": 0.2857142857142857, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.2, "no_correct": 1, "no_total": 5}, "holding": {"accuracy": 0.25, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5833333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5833333333333334, "no_correct": 14, "no_total": 24}, "inside": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "nextto": {"accuracy": 0.5833333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22}}}, "step": 3, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.7317073170731707, "no_correct": 30, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7333333333333333, "no_correct": 11, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6923076923076923, "no_correct": 9, "no_total": 13}}}, "step": 4, "actions": ["grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "holding plaything_1": ["no", "yes"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "no"], "nextto plaything_1,carton_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6, "yes_correct": 3, "yes_total": 5, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 5, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["yes", "yes"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_1,plaything_7": ["yes", "no"], "nextto plaything_1,plaything_8": ["yes", "no"], "nextto plaything_1,carton_1": ["yes", "no"], "nextto plaything_1,carton_2": ["yes", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.48936170212765956, "yes_accuracy": 0.6666666666666666, "yes_correct": 4, "yes_total": 6, "no_accuracy": 0.4634146341463415, "no_correct": 19, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.06666666666666667, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 14}}}, "step": 6, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_5": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,plaything_8": ["yes", "no"], "ontop plaything_5,carton_1": ["yes", "no"], "ontop plaything_5,carton_2": ["yes", "no"], "ontop plaything_5,table_1": ["yes", "no"], "ontop plaything_7,plaything_5": ["yes", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["yes", "no"], "ontop plaything_8,plaything_5": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_5,carton_1": ["yes", "no"], "inside plaything_5,carton_2": ["yes", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_5,plaything_7": ["yes", "no"], "nextto plaything_5,plaything_8": ["yes", "no"], "nextto plaything_5,carton_1": ["yes", "no"], "nextto plaything_5,carton_2": ["yes", "no"], "nextto plaything_5,table_1": ["yes", "no"], "nextto plaything_7,plaything_5": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_5": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.19148936170212766, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.13953488372093023, "no_correct": 6, "no_total": 43, "predicates": {"reachable": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.13333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.13333333333333333, "no_correct": 2, "no_total": 15}, "inside": {"accuracy": 0.16666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.16666666666666666, "no_correct": 1, "no_total": 6}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 14}}}, "step": 8, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "yes"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_7": ["yes", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_2,plaything_1": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8115942028985508, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.85, "no_correct": 51, "no_total": 60, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.7916666666666666, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8181818181818182, "no_correct": 18, "no_total": 22}}}, "step": 11, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "yes"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_2": ["yes", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_2,plaything_1": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7971014492753623, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.8333333333333334, "no_correct": 50, "no_total": 60, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.7727272727272727, "no_correct": 17, "no_total": 22}}}, "step": 12, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 2.0946166045161718e-12, 0.9999999999979053, "The robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"plaything_1\" is on the floor near the wall, directly below the arm. Given the proximity of \"plaything_1\" to the base of the robotic arm and the typical reach of such arms, it appears that the object is within the arm's reachable area.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"plaything_1\" is on the floor near the wall, directly below the arm. Given the proximity of \"plaything_1\" to the base of the robotic arm and the typical reach of such arms, it appears that the object is within the arm's reachable area.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 5.764120644147712e-11, 0.9999999999423588, "The robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"carton_1\" is located on the floor near the wall, relatively close to the robotic arm. Given the proximity of \"carton_1\" to the robotic arm and the apparent reach of the arm, it appears that \"carton_1\" is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"carton_1\" is located on the floor near the wall, relatively close to the robotic arm. Given the proximity of \"carton_1\" to the robotic arm and the apparent reach of the arm, it appears that \"carton_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["yes", 1.7824966377033364e-12, 0.9999999999982175, "The robotic arm (agent) is mounted on the wall and extends into the room. The object labeled \"carton_2\" is located on a table or surface within the room. Judging by the position of the arm and the proximity of \"carton_2\" to the arm, it appears that \"carton_2\" is within the reach of the agent, as it is close to the end effector of the robotic arm.", false, "<explanation>\nThe robotic arm (agent) is mounted on the wall and extends into the room. The object labeled \"carton_2\" is located on a table or surface within the room. Judging by the position of the arm and the proximity of \"carton_2\" to the arm, it appears that \"carton_2\" is within the reach of the agent, as it is close to the end effector of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["no", 0.9999999999549384, 4.506163779017e-11, "The robotic arm (agent) is mounted on the wall and is extended towards the room. The table_1 is located further down the room, past the open box and other objects. The arm does not appear to be close enough to reach table_1 from its current position, as there is a significant distance between the arm and the table_1.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the room. The table_1 is located further down the room, past the open box and other objects. The arm does not appear to be close enough to reach table_1 from its current position, as there is a significant distance between the arm and the table_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_1": ["yes", 1.7775026389755666e-11, 0.999999999982225, "The robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"plaything_1\" is on the floor, relatively close to the wall where the robotic arm is mounted. Given the visible reach of the arm and the proximity of \"plaything_1\" to the wall, it appears that the object is within the arm's reach.", true, "<explanation>\nThe robotic arm (agent) is mounted on the wall and is extended towards the room. The object labeled \"plaything_1\" is on the floor, relatively close to the wall where the robotic arm is mounted. Given the visible reach of the arm and the proximity of \"plaything_1\" to the wall, it appears that the object is within the arm's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_1": ["yes", 7.585739688199398e-08, 0.9999999241426031, "In the image, the robotic arm (agent) is visible and appears to be holding an object. The object being held is labeled with the red text \"plaything_1,\" which indicates that the agent is indeed grasping the object named \"plaything_1.\"", true, "<explanation>\nIn the image, the robotic arm (agent) is visible and appears to be holding an object. The object being held is labeled with the red text \"plaything_1,\" which indicates that the agent is indeed grasping the object named \"plaything_1.\"\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop plaything_1,carton_1": ["yes", 2.779211948028941e-09, 0.999999997220788, "To determine if plaything_1 is on top of carton_1, I need to look at the positions of both objects in the image. The red bounding boxes labeled \"plaything_1\" and \"carton_1\" help identify their locations. From the image, plaything_1 appears to be above and possibly in contact with the top surface of carton_1, suggesting that it is on top of carton_1.", false, "<explanation>\nTo determine if plaything_1 is on top of carton_1, I need to look at the positions of both objects in the image. The red bounding boxes labeled \"plaything_1\" and \"carton_1\" help identify their locations. From the image, plaything_1 appears to be above and possibly in contact with the top surface of carton_1, suggesting that it is on top of carton_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop plaything_1,carton_2": ["no", 0.9999943823805834, 5.6176194166895716e-06, "First, I will identify the objects labeled as \"plaything_1\" and \"carton_2\" in the image. Then, I will check the spatial relationship between them to determine if \"plaything_1\" is on top of \"carton_2\". In the image, \"plaything_1\" appears to be held by the robotic arm and is not resting on \"carton_2\". Therefore, \"plaything_1\" is not on top of \"carton_2\".", true, "<explanation>\nFirst, I will identify the objects labeled as \"plaything_1\" and \"carton_2\" in the image. Then, I will check the spatial relationship between them to determine if \"plaything_1\" is on top of \"carton_2\". In the image, \"plaything_1\" appears to be held by the robotic arm and is not resting on \"carton_2\". Therefore, \"plaything_1\" is not on top of \"carton_2\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_1,carton_1": ["yes", 2.9930511350128834e-06, 0.999997006948865, "In the image, both plaything_1 and carton_1 are labeled with red bounding boxes. Plaything_1 appears to be positioned very close to carton_1, with their bounding boxes nearly touching or overlapping. This indicates that plaything_1 is indeed next to carton_1.", false, "<explanation>\nIn the image, both plaything_1 and carton_1 are labeled with red bounding boxes. Plaything_1 appears to be positioned very close to carton_1, with their bounding boxes nearly touching or overlapping. This indicates that plaything_1 is indeed next to carton_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto plaything_1,carton_2": ["yes", 6.589710531432083e-11, 0.9999999999341029, "To determine if plaything_1 is next to carton_2, I need to look at their positions in the image. Both objects are outlined with red boxes and labeled. Plaything_1 and carton_2 are both located on or near the table in the center of the image. The red boxes for plaything_1 and carton_2 are adjacent to each other, indicating that these two objects are next to each other.", false, "<explanation>\nTo determine if plaything_1 is next to carton_2, I need to look at their positions in the image. Both objects are outlined with red boxes and labeled. Plaything_1 and carton_2 are both located on or near the table in the center of the image. The red boxes for plaything_1 and carton_2 are adjacent to each other, indicating that these two objects are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_1,plaything_1": {"before": null, "after": false}, "ontop plaything_1,plaything_2": {"before": false, "after": false}, "ontop plaything_1,plaything_3": {"before": false, "after": false}, "ontop plaything_1,plaything_4": {"before": false, "after": false}, "ontop plaything_1,table_1": {"before": false, "after": false}, "nextto plaything_1,plaything_1": {"before": null, "after": false}, "nextto plaything_1,plaything_2": {"before": false, "after": false}, "nextto plaything_1,plaything_3": {"before": false, "after": false}, "nextto plaything_1,plaything_4": {"before": false, "after": false}, "nextto plaything_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(plaything_1, plaything_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding plaything_1": ["yes", 2.9651150118475713e-08, 0.9999999703488499, "To determine if the agent is holding the plaything_1, I need to check if the robotic arm (the agent) has the object labeled \"plaything_1\" in its grasp. In the image, the robotic arm is holding an object, and the label \"plaything_1\" is directly attached to the object in the gripper of the robotic arm. This indicates that the agent is indeed holding plaything_1.", true, "<explanation>\nTo determine if the agent is holding the plaything_1, I need to check if the robotic arm (the agent) has the object labeled \"plaything_1\" in its grasp. In the image, the robotic arm is holding an object, and the label \"plaything_1\" is directly attached to the object in the gripper of the robotic arm. This indicates that the agent is indeed holding plaything_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_1": ["yes", 5.632302777374999e-09, 0.9999999943676973, "The image shows the perspective of a robotic arm agent in a virtual household environment. The object labeled \"plaything_1\" is highlighted with a red bounding box and appears to be very close to the robotic arm's gripper, which is extended towards it. The proximity suggests that the object is within the reach of the agent.", true, "<explanation>\nThe image shows the perspective of a robotic arm agent in a virtual household environment. The object labeled \"plaything_1\" is highlighted with a red bounding box and appears to be very close to the robotic arm's gripper, which is extended towards it. The proximity suggests that the object is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"nextto plaything_1,plaything_1": {"before": null, "after": true}, "holding plaything_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 1.0594800659693112e-10, 0.999999999894052, "The robotic arm (agent) is positioned close to the wall, and the object labeled \"carton_1\" is directly in front of the arm, within the red bounding box. The proximity of the arm to \"carton_1\" suggests that the object is within the arm's reach, as there are no visible obstacles between the arm and the carton, and the distance appears short enough for the arm to interact with it.", true, "<explanation>\nThe robotic arm (agent) is positioned close to the wall, and the object labeled \"carton_1\" is directly in front of the arm, within the red bounding box. The proximity of the arm to \"carton_1\" suggests that the object is within the arm's reach, as there are no visible obstacles between the arm and the carton, and the distance appears short enough for the arm to interact with it.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["yes", 6.040799360123937e-10, 0.9999999993959201, "To determine if carton_1 is open, I need to look at the state of the box labeled as \"carton_1\" in the image. An open carton would have its flaps visibly apart and not closed together. In the image, carton_1 is clearly shown with its flaps open and spread apart, indicating that it is not closed.", false, "<explanation>\nTo determine if carton_1 is open, I need to look at the state of the box labeled as \"carton_1\" in the image. An open carton would have its flaps visibly apart and not closed together. In the image, carton_1 is clearly shown with its flaps open and spread apart, indicating that it is not closed.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 2.380745742335244e-10, 0.9999999997619254, "The robotic arm (agent) is extended towards the center of the room, and plaything_1 is located on the floor near the arm. The arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems within the arm's operational range.", true, "<explanation>\nThe robotic arm (agent) is extended towards the center of the room, and plaything_1 is located on the floor near the arm. The arm appears to be close enough to reach and potentially grasp plaything_1, as there are no visible obstacles between the arm and the object, and the distance seems within the arm's operational range.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_3": ["yes", 5.647482710975454e-14, 0.9999999999999435, "The robotic arm (agent) is positioned above the sofa and is extended towards the center of the room. The object labeled \"plaything_3\" is located on the floor near the sofa and coffee table, within the area that the robotic arm can reach based on its current extension and orientation. There are no visible obstacles between the arm and \"plaything_3\" that would prevent the agent from reaching it.", false, "<explanation>\nThe robotic arm (agent) is positioned above the sofa and is extended towards the center of the room. The object labeled \"plaything_3\" is located on the floor near the sofa and coffee table, within the area that the robotic arm can reach based on its current extension and orientation. There are no visible obstacles between the arm and \"plaything_3\" that would prevent the agent from reaching it.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 7.08815671844301e-10, 0.9999999992911843, "The robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the table near the robotic arm, and the arm appears to be close enough to interact with or grasp the carton. The proximity suggests that the carton_1 is within the reach of the agent.", false, "<explanation>\nThe robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the table near the robotic arm, and the arm appears to be close enough to interact with or grasp the carton. The proximity suggests that the carton_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_2": ["yes", 2.9148324281745153e-10, 0.9999999997085167, "To determine if carton_2 is in reach of the agent, I need to check the position of carton_2 relative to the robotic arm. In the image, carton_2 is labeled and appears to be on the table near the robotic arm. The arm is extended towards the table, and carton_2 is within the area that the arm can reach. Therefore, carton_2 is in reach of the agent.", false, "<explanation>\nTo determine if carton_2 is in reach of the agent, I need to check the position of carton_2 relative to the robotic arm. In the image, carton_2 is labeled and appears to be on the table near the robotic arm. The arm is extended towards the table, and carton_2 is within the area that the arm can reach. Therefore, carton_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 1.7193998752074758e-18, 1.0, "The robotic arm (agent) is positioned near the sofa and is extended towards the center of the room. The table_1 is located in front of the sofa, and based on the arm's current extension and proximity to the table, it appears that the arm could reach the table_1 without any major obstruction. The arm is not fully extended away from the table, and the table is within the general area the arm can access.", false, "<explanation>\nThe robotic arm (agent) is positioned near the sofa and is extended towards the center of the room. The table_1 is located in front of the sofa, and based on the arm's current extension and proximity to the table, it appears that the arm could reach the table_1 without any major obstruction. The arm is not fully extended away from the table, and the table is within the general area the arm can access.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 4.287355445296871e-09, 0.9999999957126445, "The robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the shelf, and the arm appears to be close enough to interact with it. The proximity of the arm to carton_1 suggests that it is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the shelf, and the arm appears to be close enough to interact with it. The proximity of the arm to carton_1 suggests that it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["yes", 1.987879604908329e-10, 0.999999999801212, "To determine if carton_1 is open, I need to visually inspect the state of the carton_1 object in the image. Carton_1 is located near the robotic arm and appears to be a box. Upon close inspection, the top flaps of carton_1 are not sealed and are visibly open, indicating that the carton is not closed.", false, "<explanation>\nTo determine if carton_1 is open, I need to visually inspect the state of the carton_1 object in the image. Carton_1 is located near the robotic arm and appears to be a box. Upon close inspection, the top flaps of carton_1 are not sealed and are visibly open, indicating that the carton is not closed.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding plaything_1": ["no", 0.9999999999807091, 1.9290893003376287e-11, "To determine if the agent (robotic arm) is holding plaything_1, I need to check if plaything_1 is within the gripper or grasped by the robotic arm. In the image, plaything_1 is located on the floor in front of the sofa and is not inside the gripper of the robotic arm. The robotic arm's gripper appears to be empty, and plaything_1 is not elevated or positioned in a way that suggests it is being held.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plaything_1, I need to check if plaything_1 is within the gripper or grasped by the robotic arm. In the image, plaything_1 is located on the floor in front of the sofa and is not inside the gripper of the robotic arm. The robotic arm's gripper appears to be empty, and plaything_1 is not elevated or positioned in a way that suggests it is being held.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_3": ["no", 0.9999999979990727, 2.0009272959981908e-09, "To determine if the agent (robotic arm) is holding plaything_3, I need to check if plaything_3 is within the grasp of the robotic arm. In the image, plaything_3 is labeled and located on the floor near the center of the room, not in the robotic arm's gripper. The robotic arm appears to be holding another object, but not plaything_3.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plaything_3, I need to check if plaything_3 is within the grasp of the robotic arm. In the image, plaything_3 is labeled and located on the floor near the center of the room, not in the robotic arm's gripper. The robotic arm appears to be holding another object, but not plaything_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 2.7266052197600112e-08, 0.9999999727339478, "The robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the table near the robotic arm, and the arm appears to be close enough to interact with or grasp the carton. Therefore, carton_1 is within reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is extended towards the area where carton_1 is located. Carton_1 is on the table near the robotic arm, and the arm appears to be close enough to interact with or grasp the carton. Therefore, carton_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.9999999793318163, 2.0668183679888504e-08, "To determine if carton_1 is open, I need to visually inspect the object labeled \"carton_1\" in the image. The carton appears to be closed, as there are no visible openings or flaps that are lifted or separated. The top of the carton looks intact and sealed.", true, "<explanation>\nTo determine if carton_1 is open, I need to visually inspect the object labeled \"carton_1\" in the image. The carton appears to be closed, as there are no visible openings or flaps that are lifted or separated. The top of the carton looks intact and sealed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.9999999991818289, 8.181710946867908e-10, "To determine if the agent (robotic arm) is holding plaything_1, I need to check if plaything_1 is within the grasp of the robotic arm or appears to be attached to it. In the image, plaything_1 is located on the floor in front of the sofa and is not in the grasp of the robotic arm. The robotic arm is not holding any object at the moment.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plaything_1, I need to check if plaything_1 is within the grasp of the robotic arm or appears to be attached to it. In the image, plaything_1 is located on the floor in front of the sofa and is not in the grasp of the robotic arm. The robotic arm is not holding any object at the moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_3": ["no", 0.9999999452444268, 5.475557317886178e-08, "To determine if the agent (robotic arm) is holding plaything_3, I need to check if plaything_3 is within the gripper of the robotic arm. In the image, plaything_3 is located on the floor in front of the sofa and is not in the gripper of the robotic arm. The gripper appears to be empty or holding something else, but not plaything_3.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding plaything_3, I need to check if plaything_3 is within the gripper of the robotic arm. In the image, plaything_3 is located on the floor in front of the sofa and is not in the gripper of the robotic arm. The gripper appears to be empty or holding something else, but not plaything_3.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["no", "no"], "reachable table_1": ["no", "no"], "holding plaything_1": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["yes", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["no", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5319148936170213, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 21, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.4666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4666666666666667, "no_correct": 7, "no_total": 15}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.46153846153846156, "no_correct": 6, "no_total": 13}}}, "step": 1, "actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "holding plaything_1": ["yes", "yes"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "no"], "nextto plaything_1,carton_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 2, "actions": ["place-next-to(plaything_1, plaything_1)", "open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["yes", "yes"], "open carton_2": ["yes", "yes"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["yes", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["yes", "no"], "inside plaything_8,carton_2": ["yes", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.27586206896551724, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.19230769230769232, "no_correct": 5, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.375, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}}}, "step": 4, "actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_3": ["yes", "no"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_3": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_3": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_3,plaything_1": ["no", "no"], "ontop plaything_3,plaything_7": ["no", "no"], "ontop plaything_3,plaything_8": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_3,carton_2": ["no", "no"], "ontop plaything_3,table_1": ["no", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_3": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_3": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_3,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_3": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_3,plaything_1": ["yes", "no"], "nextto plaything_3,plaything_7": ["no", "no"], "nextto plaything_3,plaything_8": ["no", "no"], "nextto plaything_3,carton_1": ["no", "no"], "nextto plaything_3,carton_2": ["no", "no"], "nextto plaything_3,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_3": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_3": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7246376811594203, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.7384615384615385, "no_correct": 48, "no_total": 65, "predicates": {"reachable": {"accuracy": 0.14285714285714285, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6521739130434783, "no_correct": 15, "no_total": 23}}}, "step": 5, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_3": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "no"], "reachable carton_2": ["yes", "no"], "reachable table_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_3": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_1,plaything_3": ["no", "no"], "ontop plaything_1,plaything_7": ["no", "no"], "ontop plaything_1,plaything_8": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_1,carton_2": ["no", "no"], "ontop plaything_1,table_1": ["no", "no"], "ontop plaything_3,plaything_1": ["no", "no"], "ontop plaything_3,plaything_7": ["no", "no"], "ontop plaything_3,plaything_8": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_3,carton_2": ["no", "no"], "ontop plaything_3,table_1": ["yes", "no"], "ontop plaything_7,plaything_1": ["no", "no"], "ontop plaything_7,plaything_3": ["no", "no"], "ontop plaything_7,plaything_8": ["yes", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["yes", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_1": ["no", "no"], "ontop plaything_8,plaything_3": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_2": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_3,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_1,plaything_3": ["no", "no"], "nextto plaything_1,plaything_7": ["no", "no"], "nextto plaything_1,plaything_8": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_2": ["no", "no"], "nextto plaything_1,table_1": ["yes", "no"], "nextto plaything_3,plaything_1": ["no", "no"], "nextto plaything_3,plaything_7": ["no", "no"], "nextto plaything_3,plaything_8": ["no", "no"], "nextto plaything_3,carton_1": ["no", "no"], "nextto plaything_3,carton_2": ["no", "no"], "nextto plaything_3,table_1": ["yes", "no"], "nextto plaything_7,plaything_1": ["no", "no"], "nextto plaything_7,plaything_3": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_1": ["no", "no"], "nextto plaything_8,plaything_3": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7536231884057971, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.7692307692307693, "no_correct": 50, "no_total": 65, "predicates": {"reachable": {"accuracy": 0.42857142857142855, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 21, "no_total": 24}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6521739130434783, "no_correct": 15, "no_total": 23}}}, "step": 6, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["no", 1.0, 1.3027642835197409e-18, "To determine if plaything_1 is in reach of the agent, I need to identify plaything_1 in the image and see if it is close enough to the robotic arm for the arm to interact with it. In the image, there is a pink object on the floor near the edge of the rug, which appears to be a toy (likely plaything_1). The robotic arm is positioned above the chairs and table, and the toy is on the floor, not directly next to the arm. The arm would need to extend down and possibly forward to reach the toy, but based on the current position, it does not appear to be within immediate reach.", false, "<explanation>\nTo determine if plaything_1 is in reach of the agent, I need to identify plaything_1 in the image and see if it is close enough to the robotic arm for the arm to interact with it. In the image, there is a pink object on the floor near the edge of the rug, which appears to be a toy (likely plaything_1). The robotic arm is positioned above the chairs and table, and the toy is on the floor, not directly next to the arm. The arm would need to extend down and possibly forward to reach the toy, but based on the current position, it does not appear to be within immediate reach.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable carton_1": ["no", 0.9999999997549203, 2.450797014407223e-10, "To determine if carton_1 is in reach of the agent, I need to identify the location of carton_1 and see if it is close enough to the robotic arm for interaction. In the image, I do not see any object that clearly resembles a carton within the immediate vicinity of the robotic arm. The visible objects near the arm are chairs, a table, and a rug, but no carton is apparent. Therefore, carton_1 does not appear to be in reach of the agent.", true, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to identify the location of carton_1 and see if it is close enough to the robotic arm for interaction. In the image, I do not see any object that clearly resembles a carton within the immediate vicinity of the robotic arm. The visible objects near the arm are chairs, a table, and a rug, but no carton is apparent. Therefore, carton_1 does not appear to be in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.9999999999759217, 2.407826748278315e-11, "To determine if carton_1 is in reach of the agent, I need to identify carton_1 in the image and see if it is close enough to the robotic arm for interaction. In the image, there is no visible carton object near the robotic arm or within its immediate reach. The visible objects are chairs, a table, a rug, and some indistinct items, but none clearly appear to be a carton. Therefore, carton_1 is not in reach of the agent.", false, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to identify carton_1 in the image and see if it is close enough to the robotic arm for interaction. In the image, there is no visible carton object near the robotic arm or within its immediate reach. The visible objects are chairs, a table, a rug, and some indistinct items, but none clearly appear to be a carton. Therefore, carton_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "open carton_1": ["no", 0.9999999997965904, 2.0340965140534059e-10, "In the image, there is a robotic arm and some furniture visible, including chairs, a table, and a rug. However, there is no clear view of an object that can be identified as \"carton_1,\" nor is there any carton-like object visible that could be checked for being open or closed. Therefore, I cannot determine if \"carton_1\" is open based on this image.", true, "<explanation>\nIn the image, there is a robotic arm and some furniture visible, including chairs, a table, and a rug. However, there is no clear view of an object that can be identified as \"carton_1,\" nor is there any carton-like object visible that could be checked for being open or closed. Therefore, I cannot determine if \"carton_1\" is open based on this image.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.9999995902164565, 4.0978354355701527e-07, "To determine if the agent (robotic arm) is holding the plaything_1, I need to look at the gripper of the robotic arm and check if there is an object that resembles a plaything being held. In the image, the robotic arm's gripper appears to be empty and there is no visible plaything in its grasp. Therefore, the agent is not holding the plaything_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the plaything_1, I need to look at the gripper of the robotic arm and check if there is an object that resembles a plaything being held. In the image, the robotic arm's gripper appears to be empty and there is no visible plaything in its grasp. Therefore, the agent is not holding the plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 6.54064152987038e-14, 0.9999999999999346, "To determine if carton_1 is in reach of the agent, I need to identify carton_1 in the image and see if it is close enough to the robotic arm for it to interact with. In the image, there is a pink object on the floor near the chairs, which could be carton_1. The robotic arm is positioned above the chairs and is relatively close to this pink object. Given the proximity of the arm to the object, it appears that the robotic arm could reach and interact with carton_1.", true, "<explanation>\nTo determine if carton_1 is in reach of the agent, I need to identify carton_1 in the image and see if it is close enough to the robotic arm for it to interact with. In the image, there is a pink object on the floor near the chairs, which could be carton_1. The robotic arm is positioned above the chairs and is relatively close to this pink object. Given the proximity of the arm to the object, it appears that the robotic arm could reach and interact with carton_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.9999999999816731, 1.8326875633267326e-11, "To determine if carton_1 is open, I need to first locate carton_1 in the image and then check its state. In the provided image, there is no visible carton or box that can be identified as carton_1, nor is there any object that appears to be open or in a state that would indicate an open carton. Therefore, I cannot confirm that carton_1 is open.", true, "<explanation>\nTo determine if carton_1 is open, I need to first locate carton_1 in the image and then check its state. In the provided image, there is no visible carton or box that can be identified as carton_1, nor is there any object that appears to be open or in a state that would indicate an open carton. Therefore, I cannot confirm that carton_1 is open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.9999986234914578, 1.376508542123948e-06, "To determine if the agent (robotic arm) is holding the plaything_1, I need to look at the gripper of the robotic arm and check if there is an object being held. In the image, the robotic arm's gripper appears to be empty and there is no visible object in its grasp. Therefore, the agent is not holding the plaything_1.", true, "<explanation>\nTo determine if the agent (robotic arm) is holding the plaything_1, I need to look at the gripper of the robotic arm and check if there is an object being held. In the image, the robotic arm's gripper appears to be empty and there is no visible object in its grasp. Therefore, the agent is not holding the plaything_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 1, "actions": ["open-container(carton_1)", "grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "nextto plaything_1,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["no", 0.9999999999974926, 2.5074017973231004e-12, "The image shows the robotic arm (the agent) holding an object labeled \"plaything_4\" above a box. The object labeled \"plaything_1\" is on the floor, a short distance away from the agent. Given the position of the robotic arm and the distance to \"plaything_1\", it appears that \"plaything_1\" is not immediately within the reach of the agent, as the arm would need to move significantly to reach it.", false, "<explanation>\nThe image shows the robotic arm (the agent) holding an object labeled \"plaything_4\" above a box. The object labeled \"plaything_1\" is on the floor, a short distance away from the agent. Given the position of the robotic arm and the distance to \"plaything_1\", it appears that \"plaything_1\" is not immediately within the reach of the agent, as the arm would need to move significantly to reach it.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_4": ["yes", 1.3784857721336704e-12, 0.9999999999986215, "The robotic arm (the agent) is positioned very close to the object labeled \"plaything_4,\" which appears to be inside or on top of an open box. The arm is extended towards the box, suggesting that \"plaything_4\" is within the arm's reach. The proximity and orientation of the arm indicate that it can interact with or grasp \"plaything_4\" without needing to move significantly.", false, "<explanation>\nThe robotic arm (the agent) is positioned very close to the object labeled \"plaything_4,\" which appears to be inside or on top of an open box. The arm is extended towards the box, suggesting that \"plaything_4\" is within the arm's reach. The proximity and orientation of the arm indicate that it can interact with or grasp \"plaything_4\" without needing to move significantly.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 1.6670201719289679e-07, 0.9999998332979828, "The robotic arm (the agent) is positioned directly above the object labeled \"carton_1,\" and its gripper is very close to or possibly already holding the carton. This indicates that the carton is within the reach of the agent.", false, "<explanation>\nThe robotic arm (the agent) is positioned directly above the object labeled \"carton_1,\" and its gripper is very close to or possibly already holding the carton. This indicates that the carton is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(plaything_4, carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 1.9902586461483184e-08, 0.9999999800974135, "The robotic arm (agent) is positioned above an object labeled \"plaything_4\" and its gripper appears to be closed around it, indicating that it is holding the object. The object is elevated and aligned with the gripper, further supporting that the agent is holding \"plaything_4\".", true, "<explanation>\nThe robotic arm (agent) is positioned above an object labeled \"plaything_4\" and its gripper appears to be closed around it, indicating that it is holding the object. The object is elevated and aligned with the gripper, further supporting that the agent is holding \"plaything_4\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 2.0086093102814434e-06, 0.9999979913906897, "The robotic arm (agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be either holding or directly above the carton, indicating that the carton is within the reach of the agent.", true, "<explanation>\nThe robotic arm (agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be either holding or directly above the carton, indicating that the carton is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 3.4556828988874283e-09, 0.9999999965443171, "To determine if the carton_1 is open, I need to observe the state of the carton in the image. The carton appears to have its flaps raised and spread apart, which is a typical indication that a box or carton is open rather than closed. The interior of the carton is visible, further supporting that it is open.", true, "<explanation>\nTo determine if the carton_1 is open, I need to observe the state of the carton in the image. The carton appears to have its flaps raised and spread apart, which is a typical indication that a box or carton is open rather than closed. The interior of the carton is visible, further supporting that it is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-inside(plaything_4, carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding plaything_4": ["yes", 4.5636562961859645e-07, 0.9999995436343704, "In the image, the robotic arm (agent) is positioned above an object labeled \"plaything_4.\" The gripper of the robotic arm appears to be closed around \"plaything_4,\" indicating that it is holding the object. The object is elevated and aligned with the gripper, further supporting that the agent is holding \"plaything_4.\"", true, "<explanation>\nIn the image, the robotic arm (agent) is positioned above an object labeled \"plaything_4.\" The gripper of the robotic arm appears to be closed around \"plaything_4,\" indicating that it is holding the object. The object is elevated and aligned with the gripper, further supporting that the agent is holding \"plaything_4.\"\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 7.144391033819657e-07, 0.9999992855608966, "The robotic arm (the agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be directly above or even touching the carton, indicating that the carton is within the reach of the agent.", true, "<explanation>\nThe robotic arm (the agent) is positioned very close to the object labeled \"carton_1.\" The arm appears to be directly above or even touching the carton, indicating that the carton is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["yes", 5.505753091408383e-06, 0.9999944942469086, "In the image, the object labeled \"carton_1\" is visible and appears to have its flaps open, as the top of the carton is not closed and the inside is visible. This indicates that the carton is open.", true, "<explanation>\nIn the image, the object labeled \"carton_1\" is visible and appears to have its flaps open, as the top of the carton is not closed and the inside is visible. This indicates that the carton is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["yes", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}}}, "step": 1, "actions": ["place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["yes", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "inside": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "nextto": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}}}, "step": 2, "actions": ["place-inside(plaything_4, carton_1)", "navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, "problem_stats": {"data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 11, "remaining_actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Beechwood_0_int_28": {"action_correct": 1, "action_total": 9, "remaining_actions": ["place-inside(document_1, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_20": {"action_correct": 1, "action_total": 24, "remaining_actions": ["place-next-to(document_1, document_1)", "grasp(marker_1)", "place-on(marker_1, table_1)", "navigate-to(cabinet_1)", "open-container(cabinet_1)", "navigate-to(document_3)", "grasp(document_3)", "navigate-to(document_1)", "navigate-to(cabinet_1)", "place-inside(document_3, cabinet_1)", "navigate-to(document_1)", "grasp(document_1)", "navigate-to(cabinet_1)", "place-inside(document_1, cabinet_1)"], "action_accuracy": 0.041666666666666664, "failed": false}, "data/planning/igibson/hard/organizing_file_cabinet_hard.pddl_Pomaria_0_int_21": {"action_correct": 3, "action_total": 17, "remaining_actions": ["grasp(document_1)", "place-inside(document_1, cabinet_1)", "grasp(document_3)", "place-inside(document_3, cabinet_1)", "navigate-to(marker_1)", "grasp(marker_1)", "navigate-to(table_1)", "place-on(marker_1, table_1)"], "action_accuracy": 0.17647058823529413, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_0": {"action_correct": 1, "action_total": 13, "remaining_actions": ["navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.07692307692307693, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_27": {"action_correct": 2, "action_total": 20, "remaining_actions": ["place-on(piece_of_cloth_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_1)", "place-next-to(bowl_1, bowl_2)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.1, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Benevolence_1_int_28": {"action_correct": 2, "action_total": 13, "remaining_actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.15384615384615385, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Pomaria_1_int_23": {"action_correct": 1, "action_total": 42, "remaining_actions": ["navigate-to(cabinet_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_1)", "grasp(bowl_2)", "navigate-to(sink_1)", "place-on(bowl_2, sink_1)", "navigate-to(cabinet_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.023809523809523808, "failed": false}, "data/planning/igibson/hard/cleaning_out_drawers_hard.pddl_Rs_int_0": {"action_correct": 1, "action_total": 12, "remaining_actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(piece_of_cloth_1)", "grasp(piece_of_cloth_1)", "navigate-to(sink_1)", "place-on(piece_of_cloth_1, sink_1)"], "action_accuracy": 0.08333333333333333, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_0": {"action_correct": 6, "action_total": 6, "remaining_actions": [], "action_accuracy": 1.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_20": {"action_correct": 6, "action_total": 6, "remaining_actions": [], "action_accuracy": 1.0, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_21": {"action_correct": 4, "action_total": 6, "remaining_actions": [], "action_accuracy": 0.6666666666666666, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_23": {"action_correct": 5, "action_total": 7, "remaining_actions": [], "action_accuracy": 0.7142857142857143, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_24": {"action_correct": 5, "action_total": 6, "remaining_actions": [], "action_accuracy": 0.8333333333333334, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_26": {"action_correct": 17, "action_total": 26, "remaining_actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.6538461538461539, "failed": false}, "data/planning/igibson/hard/sorting_groceries_hard.pddl_Wainscott_0_int_27": {"action_correct": 4, "action_total": 12, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.3333333333333333, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 14, "remaining_actions": ["navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_23": {"action_correct": 0, "action_total": 9, "remaining_actions": ["place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_26": {"action_correct": 2, "action_total": 18, "remaining_actions": [], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_27": {"action_correct": 0, "action_total": 12, "remaining_actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/organizing_boxes_in_garage_hard.pddl_Ihlen_0_int_29": {"action_correct": 0, "action_total": 16, "remaining_actions": ["grasp(plate_1)", "navigate-to(ball_1)", "navigate-to(carton_1)", "place-inside(plate_1, carton_1)", "navigate-to(ball_1)", "grasp(ball_1)", "navigate-to(carton_1)", "place-inside(ball_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_0": {"action_correct": 3, "action_total": 21, "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.14285714285714285, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Benevolence_1_int_20": {"action_correct": 1, "action_total": 18, "remaining_actions": ["grasp(plaything_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.05555555555555555, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_0_int_22": {"action_correct": 0, "action_total": 17, "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/hard/putting_away_toys_hard.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 12, "remaining_actions": ["navigate-to(plaything_1)", "grasp(plaything_1)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_1, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.6376663254861822, "yes_accuracy": 0.7361853832442068, "yes_correct": 413, "yes_total": 561, "no_accuracy": 0.5048076923076923, "no_correct": 210, "no_total": 416, "correct": 623, "total": 977}, "holding": {"accuracy": 0.9222065063649222, "yes_accuracy": 0.5609756097560976, "yes_correct": 23, "yes_total": 41, "no_accuracy": 0.9444444444444444, "no_correct": 629, "no_total": 666, "correct": 652, "total": 707}, "open": {"accuracy": 0.6291390728476821, "yes_accuracy": 0.6265060240963856, "yes_correct": 52, "yes_total": 83, "no_accuracy": 0.6323529411764706, "no_correct": 43, "no_total": 68, "correct": 95, "total": 151}, "ontop": {"accuracy": 0.8452338450553374, "yes_accuracy": 0.6458923512747875, "yes_correct": 228, "yes_total": 353, "no_accuracy": 0.8586397409030292, "no_correct": 4507, "no_total": 5249, "correct": 4735, "total": 5602}, "inside": {"accuracy": 0.7795992714025501, "yes_accuracy": 0.3191489361702128, "yes_correct": 15, "yes_total": 47, "no_accuracy": 0.8227091633466136, "no_correct": 413, "no_total": 502, "correct": 428, "total": 549}, "nextto": {"accuracy": 0.5489111031774366, "yes_accuracy": 0.6213991769547325, "yes_correct": 453, "yes_total": 729, "no_accuracy": 0.5380668992407142, "no_correct": 2622, "no_total": 4873, "correct": 3075, "total": 5602}}, "predicate_accuracy": 0.707094495142773, "macro_predicate_accuracy": 0.7271260207223517, "action_accuracy": 0.1771117166212534, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "gpt-4.1", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/hard", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7237149_2"}}