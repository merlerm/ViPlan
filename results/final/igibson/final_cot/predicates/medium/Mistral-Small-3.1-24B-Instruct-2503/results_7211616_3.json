{"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the sides enough to reach the book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the sides enough to reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a certain range of motion. By observing the arm's position and the layout of the room, it seems that the arm can reach down to the floor in its immediate vicinity. Since the book_1 is directly below the robotic arm and within the apparent range of its reach, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a certain range of motion. By observing the arm's position and the layout of the room, it seems that the arm can reach down to the floor in its immediate vicinity. Since the book_1 is directly below the robotic arm and within the apparent range of its reach, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a white object with blue markings. I will now check if this object is the book_1. The object the robotic arm is holding is the book_1.", true, "```\nQuestion: Is the agent holding the book_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding a white object with blue markings. I will now check if this object is the book_1. The object the robotic arm is holding is the book_1.\n</explanation>\n<answer>\nYes\n</answer>\n```", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the object labeled \"hardback_1\" in the image. The \"hardback_1\" is the book on the small table in the foreground. Next, I will determine if the robotic arm, which is the agent, can reach this object. The robotic arm appears to be extended towards the book, indicating that it is within reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the object labeled \"hardback_1\" in the image. The \"hardback_1\" is the book on the small table in the foreground. Next, I will determine if the robotic arm, which is the agent, can reach this object. The robotic arm appears to be extended towards the book, indicating that it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is the small table in the center of the image with two books on it. Next, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the table_1, with its end effector pointing towards the books on the table. Since the robotic arm is directly above the table_1 and can reach the objects on it, the table_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is the small table in the center of the image with two books on it. Next, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the table_1, with its end effector pointing towards the books on the table. Since the robotic arm is directly above the table_1 and can reach the objects on it, the table_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the foreground. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be extended towards the book_1, indicating that it is within reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the foreground. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be extended towards the book_1, indicating that it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the top of the image, extending downward. Next, I will locate the shelf_1. The shelf_1 is positioned on the right side of the image, near the bottom. To determine if the shelf_1 is in reach of the agent, I will consider the length of the robotic arm and its position. The robotic arm appears to be long enough to reach from its current position to the shelf_1. Therefore, the answer is \"Yes\".", true, "Question: Is the shelf_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the top of the image, extending downward. Next, I will locate the shelf_1. The shelf_1 is positioned on the right side of the image, near the bottom. To determine if the shelf_1 is in reach of the agent, I will consider the length of the robotic arm and its position. The robotic arm appears to be long enough to reach from its current position to the shelf_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".", false, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".", true, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".", true, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book on the left side of the image. Then, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned above the book_1. Given the length of the robotic arm and its position, it is plausible that the robotic arm can reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["yes", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.44, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.125, "no_correct": 2, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}, "nextto": {"accuracy": 0.2222222222222222, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 7}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it is reasonable to conclude that the robotic arm can reach the book_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it is reasonable to conclude that the robotic arm can reach the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it is reasonable to conclude that the robotic arm can reach the book_1.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it is reasonable to conclude that the robotic arm can reach the book_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"book_1\". In the image, the robotic arm is holding an object that appears to be a book. The book has a visible label that reads \"book_1\". Therefore, the robotic arm is holding the book labeled \"book_1\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"book_1\". In the image, the robotic arm is holding an object that appears to be a book. The book has a visible label that reads \"book_1\". Therefore, the robotic arm is holding the book labeled \"book_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the object labeled \"hardback_1\" in the image. The \"hardback_1\" is located on the table in the foreground. Next, I will determine if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned above the table and appears to be extended towards the \"hardback_1\". Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the \"hardback_1\" is within reach of the agent.", true, "<explanation>\nFirst, I will identify the object labeled \"hardback_1\" in the image. The \"hardback_1\" is located on the table in the foreground. Next, I will determine if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned above the table and appears to be extended towards the \"hardback_1\". Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the \"hardback_1\" is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table in the foreground with two books on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned above the table_1, indicating that it is within reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table in the foreground with two books on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned above the table_1, indicating that it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the foreground. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the table, indicating it can reach objects on the table. Since the book_1 is on the table and the robotic arm is above the table, the book_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the foreground. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the table, indicating it can reach objects on the table. Since the book_1 is on the table and the robotic arm is above the table, the book_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(shelf_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable shelf_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable shelf_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent. The agent is a robotic arm, which is positioned at the top of the image. Next, I will identify the location of the shelf_1. The shelf_1 is the table in the center of the image. The robotic arm appears to be able to extend and reach objects within a certain range. Given the position of the robotic arm and the table, it seems that the arm can reach the table without any obstacles in the way. Therefore, the answer is \"Yes\".", true, "Question: Is the shelf_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent. The agent is a robotic arm, which is positioned at the top of the image. Next, I will identify the location of the shelf_1. The shelf_1 is the table in the center of the image. The robotic arm appears to be able to extend and reach objects within a certain range. Given the position of the robotic arm and the table, it seems that the arm can reach the table without any obstacles in the way. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book closest to the camera, on the left side of the image. Then, I will check if the robotic arm, which is the agent, can reach the book_1. The robotic arm appears to be positioned above the table, and its reach seems to extend over the entire table surface. Since the book_1 is on the table and within the apparent reach of the robotic arm, the answer is \"Yes\".", false, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book closest to the camera, on the left side of the image. Then, I will check if the robotic arm, which is the agent, can reach the book_1. The robotic arm appears to be positioned above the table, and its reach seems to extend over the entire table surface. Since the book_1 is on the table and within the apparent reach of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book closest to the camera on the left side of the table. Next, I will determine the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to be positioned above the table and can extend its reach to cover the entire table surface. Since the book_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".", true, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book closest to the camera on the left side of the table. Next, I will determine the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to be positioned above the table and can extend its reach to cover the entire table surface. Since the book_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is the book closest to the camera on the left side of the table. Next, I will determine the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to be positioned above the table and can extend its reach to cover the entire table surface. Since the book_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".", true, "Question: Is the book_1 in reach of the agent?\n<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is the book closest to the camera on the left side of the table. Next, I will determine the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to be positioned above the table and can extend its reach to cover the entire table surface. Since the book_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["yes", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.56, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.3125, "no_correct": 5, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 3, "actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable shelf_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"], "ontop book_1,shelf_1": ["no", "no"], "nextto book_1,shelf_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 5, "actions": ["grasp(book_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is located on the floor in the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the right sufficiently to reach the book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is located on the floor in the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the right sufficiently to reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the side enough to reach the book_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the book_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and to the side enough to reach the book_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"book_1\". In the image, the robotic arm is holding an object that appears to be a book. The book has a visible label that reads \"book_1\". Therefore, the robotic arm is holding the book labeled \"book_1\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"book_1\". In the image, the robotic arm is holding an object that appears to be a book. The book has a visible label that reads \"book_1\". Therefore, the robotic arm is holding the book labeled \"book_1\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the object labeled \"hardback_1\" in the image. The object is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table, and its reach is indicated by the red lines extending from it. The red lines cover the area above and around the table, including the location of \"hardback_1\". Therefore, \"hardback_1\" is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the object labeled \"hardback_1\" in the image. The object is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table, and its reach is indicated by the red lines extending from it. The red lines cover the area above and around the table, including the location of \"hardback_1\". Therefore, \"hardback_1\" is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the table_1 in the image. The table_1 is the table in the foreground with two books on it. I will then determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned above the table_1, indicating that it is within its reach.", false, "Question: Is the table_1 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the table_1 in the image. The table_1 is the table in the foreground with two books on it. I will then determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned above the table_1, indicating that it is within its reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the book_1 is within the reach of the robotic arm. The robotic arm is positioned above the book_1, indicating that it is within reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the book_1 is within the reach of the robotic arm. The robotic arm is positioned above the book_1, indicating that it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the robotic arm can reach the book_1. The robotic arm appears to be positioned above the book_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the robotic arm can reach the book_1. The robotic arm appears to be positioned above the book_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"hardback_1\". The object labeled \"hardback_1\" is on the table in front of the robotic arm. The robotic arm is not in contact with \"hardback_1\" and is instead holding \"hardback_2\". Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"hardback_1\". The object labeled \"hardback_1\" is on the table in front of the robotic arm. The robotic arm is not in contact with \"hardback_1\" and is instead holding \"hardback_2\". Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the robotic arm can reach the book_1. The robotic arm appears to be positioned above the book_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is holding an object. Next, I will locate the book_1 in the image. The book_1 is on the table in the foreground. I will then determine if the robotic arm can reach the book_1. The robotic arm appears to be positioned above the book_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"hardback_1\". The object labeled \"hardback_1\" is on the table in front of the robotic arm. The robotic arm is not in contact with \"hardback_1\" and is instead holding \"hardback_2\". Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"hardback_1\". The object labeled \"hardback_1\" is on the table in front of the robotic arm. The robotic arm is not in contact with \"hardback_1\" and is instead holding \"hardback_2\". Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.76, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.75, "no_correct": 12, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}}}, "step": 3, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.72, "yes_accuracy": 0.7777777777777778, "yes_correct": 7, "yes_total": 9, "no_accuracy": 0.6875, "no_correct": 11, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned near the top right corner of the image, extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the book_1 is located. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is on the floor in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned near the top right corner of the image, extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the book_1 is located. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the location of the book_1 in the image. The book_1 is on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image, extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the book_1 is located. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the book_1 in the image. The book_1 is on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image, extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the book_1 is located. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"book_1\". In the image, there is a book that the robotic arm is holding. Since the robotic arm is holding the book, and assuming \"book_1\" refers to this book, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"book_1\". In the image, there is a book that the robotic arm is holding. Since the robotic arm is holding the book, and assuming \"book_1\" refers to this book, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.0, 0.0, "First, I will identify the object labeled \"hardback_1\" in the image. The object is a book located on the table in the center of the image. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is extended towards the table, and its end effector is very close to the book labeled \"hardback_1\". Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the book is within reach of the agent.", true, "<explanation>\nFirst, I will identify the object labeled \"hardback_1\" in the image. The object is a book located on the table in the center of the image. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is extended towards the table, and its end effector is very close to the book labeled \"hardback_1\". Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the book is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table in the foreground with two books on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be extended towards the table_1, indicating that it is within reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table in the foreground with two books on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be extended towards the table_1, indicating that it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(hardback_1, book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(hardback_1, book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding hardback_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"book 1\" is labeled as \"hardback_1\". Therefore, the robotic arm is holding \"hardback_1\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"book 1\" is labeled as \"hardback_1\". Therefore, the robotic arm is holding \"hardback_1\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is extended towards the table, and its end effector is very close to the book_1. Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the book_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is extended towards the table, and its end effector is very close to the book_1. Given the proximity and the extension of the robotic arm, it is reasonable to conclude that the book_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.0, 0.0, "First, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the book_1 in the image. The book_1 is located on the table in the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the table and appears to be extended towards the book_1. Given the position and extension of the robotic arm, it seems that the arm can reach the book_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"book 1\". I will then check if this object corresponds to \"hardback_1\". In the image, \"hardback_1\" is labeled on a book that is on the table, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.52, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.3125, "no_correct": 5, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 3, "actions": ["place-next-to(hardback_1, book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.4375, "no_correct": 7, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["yes", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.56, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 6, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 5, "actions": ["place-next-to(hardback_1, book_1)", "grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.56, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 6, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.4444444444444444, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 6, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["yes", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["yes", "no"], "ontop hardback_1,book_2": ["yes", "no"], "ontop book_1,hardback_1": ["yes", "no"], "ontop book_1,table_1": ["yes", "no"], "ontop book_1,book_2": ["yes", "no"], "ontop book_2,hardback_1": ["yes", "no"], "ontop book_2,table_1": ["yes", "yes"], "ontop book_2,book_1": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["no", "no"], "nextto book_1,table_1": ["yes", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["yes", "yes"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.52, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.3125, "no_correct": 5, "no_total": 16, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.14285714285714285, "no_correct": 1, "no_total": 7}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}}}, "step": 7, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned above the countertop, which is at a height that allows it to interact with objects on the countertop and potentially reach the cabinet_1, which is directly below it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned above the countertop, which is at a height that allows it to interact with objects on the countertop and potentially reach the cabinet_1, which is directly below it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable cabinet_2": {"before": true, "after": false}, "reachable spoon_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned directly above the cabinet, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned directly above the cabinet, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.00017716591002003634, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.00017489625359540454, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned close enough to the cabinet to interact with it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly in front of the robotic arm. The robotic arm appears to be positioned close enough to the cabinet to interact with it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0001913175606022846, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door labeled \"cabinet_1\" is open, as the door is not aligned with the cabinet frame and there is a visible gap.", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet door is open or closed. In the image, the cabinet door labeled \"cabinet_1\" is open, as the door is not aligned with the cabinet frame and there is a visible gap.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the drawer of a cabinet. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the drawer and appears to be extended towards the bowl_1. The red dotted lines indicate the reach and grip of the robotic arm, and they are clearly directed at the bowl_1. Therefore, the bowl_1 is within the reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the drawer of a cabinet. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the drawer and appears to be extended towards the bowl_1. The red dotted lines indicate the reach and grip of the robotic arm, and they are clearly directed at the bowl_1. Therefore, the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the drawer of a cabinet. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the drawer and appears to be extended towards the bowl_1. The red lines indicate the reach and grip of the robotic arm, and they are clearly extending to the bowl_1. Therefore, the bowl_1 is within the reach of the agent.", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the drawer of a cabinet. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the drawer and appears to be extended towards the bowl_1. The red lines indicate the reach and grip of the robotic arm, and they are clearly extending to the bowl_1. Therefore, the bowl_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl-shaped object in the image. I will check if the robotic arm is holding this object. In the image, the robotic arm is holding the bowl_1 above the countertop. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl-shaped object in the image. I will check if the robotic arm is holding this object. In the image, the robotic arm is holding the bowl_1 above the countertop. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the objects in the image. There is a robotic arm holding a bowl labeled \"bowl_1\". There is also a cabinet labeled \"cabinet_1\" below the bowl. The bowl is clearly positioned above and not in contact with the cabinet. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image. There is a robotic arm holding a bowl labeled \"bowl_1\". There is also a cabinet labeled \"cabinet_1\" below the bowl. The bowl is clearly positioned above and not in contact with the cabinet. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto bowl_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is a robotic arm holding a bowl labeled \"bowl_1\". There is also a cabinet labeled \"cabinet_1\" below the robotic arm. The bowl is positioned directly above the cabinet, indicating that it is next to the cabinet in a vertical sense. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects in the image. There is a robotic arm holding a bowl labeled \"bowl_1\". There is also a cabinet labeled \"cabinet_1\" below the robotic arm. The bowl is positioned directly above the cabinet, indicating that it is next to the cabinet in a vertical sense. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "inside bowl_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the objects in the image. There is a robotic arm, a bowl labeled \"bowl_1\", and a cabinet labeled \"cabinet_1\". Next, I will determine the relative positions of these objects. The bowl_1 is clearly visible and is positioned above the cabinet_1, not inside it. The cabinet_1 is closed, and there is no indication that the bowl_1 is inside it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image. There is a robotic arm, a bowl labeled \"bowl_1\", and a cabinet labeled \"cabinet_1\". Next, I will determine the relative positions of these objects. The bowl_1 is clearly visible and is positioned above the cabinet_1, not inside it. The cabinet_1 is closed, and there is no indication that the bowl_1 is inside it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,cabinet_2": {"before": false, "after": false}, "ontop bowl_1,spoon_1": {"before": false, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,cabinet_2": {"before": false, "after": false}, "nextto bowl_1,spoon_1": {"before": false, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(cabinet_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned above a table, extending towards the right side of the image. Next, I will locate the cabinet_2. The cabinet_2 is visible on the left side of the image, below the table and to the left of the agent. Given the position and the length of the robotic arm, it appears that the agent can reach the cabinet_2. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned above a table, extending towards the right side of the image. Next, I will locate the cabinet_2. The cabinet_2 is visible on the left side of the image, below the table and to the left of the agent. Given the position and the length of the robotic arm, it appears that the agent can reach the cabinet_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the bowl_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the bowl_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.0, 0.0, "First, I will identify the location of the sink_1 in the image. The sink_1 is located on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be extended and is holding an object above the countertop. Given the position and extension of the robotic arm, it seems capable of reaching the sink_1, as it is within the general area of the arm's reach. Therefore, the answer is \"Yes\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the sink_1 in the image. The sink_1 is located on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be extended and is holding an object above the countertop. Given the position and extension of the robotic arm, it seems capable of reaching the sink_1, as it is within the general area of the arm's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable cabinet_1": {"before": true, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["no", 0.0, 0.0, "First, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".", false, "Question: Is the sink_1 in reach of the agent?\n<explanation>\nFirst, I will look for the sink_1 in the image. The sink_1 is located on the right side of the image, below the countertop. Next, I will assess if the robotic arm (the agent) can reach the sink_1. The robotic arm appears to be extended and positioned above the countertop, but it is not near the sink_1. The arm's current position and length do not seem sufficient to reach the sink_1 without moving closer. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, bowl_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.", true, "Question: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is the brown bowl with a hole in it. The robotic arm is holding this bowl.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the bowl_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on the countertop. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the bowl_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"nextto bowl_1,bowl_1": {"before": null, "after": true}, "holding bowl_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The agent is positioned above a countertop, extending towards the right side of the image. Next, I will locate the cabinet_2. The cabinet_2 is the cabinet on the right side of the image, adjacent to the countertop. Given the agent's position and the length of its arm, it appears that the agent can reach the cabinet_2. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The agent is positioned above a countertop, extending towards the right side of the image. Next, I will locate the cabinet_2. The cabinet_2 is the cabinet on the right side of the image, adjacent to the countertop. Given the agent's position and the length of its arm, it appears that the agent can reach the cabinet_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["no", 0.0, 0.0, "First, I will identify the cabinet_2 in the image. The cabinet_2 is the second cabinet from the left. Then, I will check if the cabinet_2 is open. The cabinet_2 is closed, as the door is aligned with the cabinet frame and there is no visible gap or interior.", true, "<explanation>\nFirst, I will identify the cabinet_2 in the image. The cabinet_2 is the second cabinet from the left. Then, I will check if the cabinet_2 is open. The cabinet_2 is closed, as the door is aligned with the cabinet frame and there is no visible gap or interior.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the countertop near the edge closest to the camera. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to move freely within the kitchen area. Given the arm's position and the typical range of motion for such robotic arms, it seems plausible that the arm can reach the spoon_1 on the countertop. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the countertop near the edge closest to the camera. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to move freely within the kitchen area. Given the arm's position and the typical range of motion for such robotic arms, it seems plausible that the arm can reach the spoon_1 on the countertop. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"open cabinet_2": {"before": false, "after": true}}}, "action_info": "success"}, {"action": "grasp(spoon_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the countertop near the edge closest to the camera. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to move freely within the kitchen area. Given the arm's position and the typical range of motion for such robotic arms, it seems plausible that the arm can reach the spoon_1 on the countertop. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the countertop near the edge closest to the camera. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to move freely within the kitchen area. Given the arm's position and the typical range of motion for such robotic arms, it seems plausible that the arm can reach the spoon_1 on the countertop. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"holding spoon_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"spoon_1\" in the image. The image shows a red dashed line pointing to an object on the countertop, labeled \"spoon_1\". The robotic arm is not in contact with this object, and it appears to be holding another object instead. Therefore, the robotic arm is not holding \"spoon_1\".", false, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"spoon_1\" in the image. The image shows a red dashed line pointing to an object on the countertop, labeled \"spoon_1\". The robotic arm is not in contact with this object, and it appears to be holding another object instead. Therefore, the robotic arm is not holding \"spoon_1\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop spoon_1,bowl_1": {"before": false, "after": false}, "ontop spoon_1,cabinet_1": {"before": false, "after": false}, "ontop spoon_1,cabinet_2": {"before": true, "after": false}, "ontop spoon_1,spoon_1": {"before": null, "after": false}, "ontop spoon_1,sink_1": {"before": false, "after": false}, "nextto spoon_1,bowl_1": {"before": false, "after": false}, "nextto spoon_1,cabinet_1": {"before": false, "after": false}, "nextto spoon_1,cabinet_2": {"before": true, "after": false}, "nextto spoon_1,spoon_1": {"before": null, "after": false}, "nextto spoon_1,sink_1": {"before": false, "after": false}, "inside spoon_1,cabinet_2": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "grasp(spoon_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable spoon_1": ["yes", 0.0, 0.0, "First, I will identify the spoon_1 in the image. The spoon_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the spoon_1. Given the proximity and the arm's apparent range of motion, it seems likely that the robotic arm can reach the spoon_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the spoon_1 in the image. The spoon_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the spoon_1. Given the proximity and the arm's apparent range of motion, it seems likely that the robotic arm can reach the spoon_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(cabinet_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_2)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "ontop bowl_1,bowl_2": ["yes", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["yes", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["yes", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7586206896551724, "yes_accuracy": 0.8, "yes_correct": 8, "yes_total": 10, "no_accuracy": 0.7368421052631579, "no_correct": 14, "no_total": 19, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.8888888888888888, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}}}, "step": 4, "actions": ["navigate-to(cabinet_2)", "place-next-to(bowl_1, cabinet_2)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 5, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 6, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 7, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 8, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 9, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 10, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 11, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["no", "yes"], "holding bowl_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,sink_1": ["yes", "no"], "inside bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,cabinet_2": ["yes", "no"], "nextto bowl_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 12, "actions": ["place-next-to(bowl_1, bowl_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "holding spoon_1": ["no", "yes"], "holding spoon_2": ["no", "no"], "ontop spoon_1,spoon_2": ["yes", "no"], "ontop spoon_2,spoon_1": ["no", "no"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_2,spoon_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 15, "actions": ["grasp(spoon_1)", "navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is labeled and located on the right side of the image, above the oven. Next, I will determine the position and reach of the agent, which is the robotic arm. The robotic arm is also labeled and positioned on the right side of the image, extending towards the cabinet_1. By observing the arm's extension and the proximity to the cabinet_1, it appears that the robotic arm can reach the cabinet_1. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is labeled and located on the right side of the image, above the oven. Next, I will determine the position and reach of the agent, which is the robotic arm. The robotic arm is also labeled and positioned on the right side of the image, extending towards the cabinet_1. By observing the arm's extension and the proximity to the cabinet_1, it appears that the robotic arm can reach the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is the cabinet on the right side of the image, closer to the robotic arm. I will then assess the reach of the robotic arm by observing its position and the length of its arm. The robotic arm appears to be positioned in such a way that it can extend its arm to reach cabinet_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is the cabinet on the right side of the image, closer to the robotic arm. I will then assess the reach of the robotic arm by observing its position and the length of its arm. The robotic arm appears to be positioned in such a way that it can extend its arm to reach cabinet_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the cabinet_1 in the image. The cabinet_1 is labeled and located on the right side of the image, above the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the left side of the image and extends towards the right. By examining the length and position of the robotic arm, it is evident that it can reach the cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the cabinet_1 in the image. The cabinet_1 is labeled and located on the right side of the image, above the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the left side of the image and extends towards the right. By examining the length and position of the robotic arm, it is evident that it can reach the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the cabinet doors are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 6.400035466473975e-05, "First, I will look at the object labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are visible and if there is a gap indicating that it is open. In the image, the cabinet_1 has its doors closed, with no visible gap or open space inside. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look at the object labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are visible and if there is a gap indicating that it is open. In the image, the cabinet_1 has its doors closed, with no visible gap or open space inside. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on a high shelf above the cabinets. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right of the image and appears to have a limited reach, primarily extending towards the cabinets and the area around them. Given the height and position of the bowl_1, it is not within the reachable area of the robotic arm. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on a high shelf above the cabinets. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right of the image and appears to have a limited reach, primarily extending towards the cabinets and the area around them. Given the height and position of the bowl_1, it is not within the reachable area of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["no", 0.0, 0.0, "First, I will identify the location of the bowl_1 in the image. The bowl_1 is located on a high shelf above the cabinets. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right of the image and appears to have a limited reach, primarily extending horizontally and vertically within a certain range. Given the height and position of the bowl_1 on the high shelf, it is unlikely that the robotic arm can reach it without additional tools or extensions. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the bowl_1 in the image. The bowl_1 is located on a high shelf above the cabinets. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right of the image and appears to have a limited reach, primarily extending horizontally and vertically within a certain range. Given the height and position of the bowl_1 on the high shelf, it is unlikely that the robotic arm can reach it without additional tools or extensions. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the bowl_1 in the image. The bowl_1 is positioned on top of a black object, to the left of the robotic arm. I will then assess if the robotic arm can reach the bowl_1. The robotic arm appears to have a sufficient range of motion and is positioned close enough to the bowl_1 to reach it. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the bowl_1 in the image. The bowl_1 is positioned on top of a black object, to the left of the robotic arm. I will then assess if the robotic arm can reach the bowl_1. The robotic arm appears to have a sufficient range of motion and is positioned close enough to the bowl_1 to reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm labeled as \"arm1_2\". Next, I will locate the object labeled as \"cabinet_1\". The cabinet_1 is positioned to the left of the robotic arm and appears to be within the arm's reach based on the spatial arrangement and the length of the robotic arm. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm labeled as \"arm1_2\". Next, I will locate the object labeled as \"cabinet_1\". The cabinet_1 is positioned to the left of the robotic arm and appears to be within the arm's reach based on the spatial arrangement and the length of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable spoon_1": {"before": false, "after": false}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.\n</explanation>\n<answer>\nNo\n</answer>", false], "open cabinet_2": ["no", 0.0, 0.00012813377503342137, "First, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.", true, "<explanation>\nFirst, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.\n</explanation>\n<answer>\nNo\n</answer>", false], "open cabinet_2": ["no", 0.0, 0.00012813377503342137, "First, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.", true, "<explanation>\nFirst, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the top. I will then assess whether the robotic arm can reach cabinet_2. The robotic arm appears to be extended and is positioned near cabinet_1, which is closer to the arm. Given the length and position of the robotic arm, it seems unlikely that it can reach cabinet_2, which is further away and at a different height.\n</explanation>\n<answer>\nNo\n</answer>", false], "open cabinet_2": ["no", 0.0, 0.00012813377503342137, "First, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.", true, "<explanation>\nFirst, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the robotic arm. The robotic arm appears to be extended and positioned in a way that it can reach cabinet_2. Therefore, cabinet_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate cabinet_2 in the image. Cabinet_2 is positioned on the right side of the image, near the robotic arm. The robotic arm appears to be extended and positioned in a way that it can reach cabinet_2. Therefore, cabinet_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["no", 0.0, 0.00012813377503342137, "First, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.", true, "<explanation>\nFirst, I will locate the cabinet_2 in the image. The cabinet_2 is labeled and located on the right side of the image, near the robotic arm. Next, I will observe the state of the cabinet_2. The cabinet_2 appears to be closed, as the doors are aligned with the cabinet frame and there is no visible gap or open space indicating that it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"bowl_1\". The bowl_1 is located above the robotic arm. The robotic arm is not in contact with the bowl_1, and there is no indication that the robotic arm is holding the bowl_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_2": ["no", 0.0, 7.168663603963583e-05, "First, I will look at the object labeled \"cabinet_2\" in the image. Then, I will check if the doors of the cabinet are visible and if there is a gap indicating that it is open. In the image, the cabinet_2 appears to have its doors closed, as there is no visible gap or open space indicating that it is open. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look at the object labeled \"cabinet_2\" in the image. Then, I will check if the doors of the cabinet are visible and if there is a gap indicating that it is open. In the image, the cabinet_2 appears to have its doors closed, as there is no visible gap or open space indicating that it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable spoon_1": ["no", 0.0, 0.0, "First, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the floor, near the bottom right corner of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned near a black cabinet and has a visible range of motion indicated by red lines. The red lines do not extend to the location of the spoon_1 on the floor. Therefore, the spoon_1 is not within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the spoon_1 in the image. The spoon_1 is located on the floor, near the bottom right corner of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned near a black cabinet and has a visible range of motion indicated by red lines. The red lines do not extend to the location of the spoon_1 on the floor. Therefore, the spoon_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(bowl_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the bowl_1 in the image. The bowl_1 is positioned on a surface to the right of the robotic arm. I will then assess whether the robotic arm can reach the bowl_1. The robotic arm appears to have a sufficient range of motion and is positioned close enough to the bowl_1 to reach it. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the bowl_1 in the image. The bowl_1 is positioned on a surface to the right of the robotic arm. I will then assess whether the robotic arm can reach the bowl_1. The robotic arm appears to have a sufficient range of motion and is positioned close enough to the bowl_1 to reach it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding spoon_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"spoon_1\" in the image. The spoon_1 is located towards the bottom right of the image. Finally, I will check if the robotic arm is holding the spoon_1. The robotic arm is not holding the spoon_1, as it is on the ground. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object labeled \"spoon_1\" in the image. The spoon_1 is located towards the bottom right of the image. Finally, I will check if the robotic arm is holding the spoon_1. The robotic arm is not holding the spoon_1, as it is on the ground. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"holding bowl_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. In the image, the robotic arm is holding a round object. I will now check if this object is the bowl_1. The object held by the robotic arm appears to be a bowl, and given the context, it is likely to be the bowl_1. Therefore, the answer is \"Yes\".", true, "```\nQuestion: Is the agent holding the bowl_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. In the image, the robotic arm is holding a round object. I will now check if this object is the bowl_1. The object held by the robotic arm appears to be a bowl, and given the context, it is likely to be the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>\n```", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop bowl_1,bowl_1": {"before": null, "after": false}, "ontop bowl_1,cabinet_1": {"before": false, "after": false}, "ontop bowl_1,cabinet_2": {"before": false, "after": false}, "ontop bowl_1,spoon_1": {"before": false, "after": false}, "ontop bowl_1,sink_1": {"before": false, "after": false}, "nextto bowl_1,bowl_1": {"before": null, "after": false}, "nextto bowl_1,cabinet_1": {"before": false, "after": false}, "nextto bowl_1,cabinet_2": {"before": false, "after": false}, "nextto bowl_1,spoon_1": {"before": false, "after": false}, "nextto bowl_1,sink_1": {"before": false, "after": false}, "inside bowl_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(spoon_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend and rotate to reach the bowl_1. Therefore, the answer is \"Yes\".", false, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend and rotate to reach the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable spoon_1": {"before": false, "after": true}, "reachable cabinet_1": {"before": true, "after": false}, "reachable cabinet_2": {"before": true, "after": false}, "reachable sink_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend its reach to the bowl_1. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend its reach to the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(bowl_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable bowl_1": ["yes", 0.0, 0.0, "First, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend its reach to the bowl_1. Therefore, the answer is \"Yes\".", true, "Question: Is the bowl_1 in reach of the agent?\n<explanation>\nFirst, I will look for the bowl_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the bowl_1. In the image, there is a bowl_1 on the table. The robotic arm is positioned close to the table and appears to be able to extend its reach to the bowl_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["yes", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.575, "yes_accuracy": 0.14285714285714285, "yes_correct": 2, "yes_total": 14, "no_accuracy": 0.8076923076923077, "no_correct": 21, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.4, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}}}, "step": 2, "actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.42857142857142855, "yes_correct": 6, "yes_total": 14, "no_accuracy": 0.7307692307692307, "no_correct": 19, "no_total": 26, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 8, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}}}, "step": 3, "actions": ["open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["yes", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.42857142857142855, "yes_correct": 6, "yes_total": 14, "no_accuracy": 0.7307692307692307, "no_correct": 19, "no_total": 26, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 9, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 4, "actions": ["open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["yes", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.42857142857142855, "yes_correct": 6, "yes_total": 14, "no_accuracy": 0.7307692307692307, "no_correct": 19, "no_total": 26, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 9, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 5, "actions": ["open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_1": ["yes", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.65, "yes_accuracy": 0.42857142857142855, "yes_correct": 6, "yes_total": 14, "no_accuracy": 0.7692307692307693, "no_correct": 20, "no_total": 26, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 10, "no_total": 12}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.4166666666666667, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7}}}, "step": 6, "actions": ["open-container(cabinet_2)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable spoon_1": ["no", "yes"], "reachable spoon_2": ["no", "yes"], "reachable piece_of_cloth_1": ["no", "yes"], "holding bowl_1": ["no", "no"], "holding bowl_2": ["yes", "no"], "holding spoon_1": ["no", "no"], "holding spoon_2": ["yes", "no"], "holding piece_of_cloth_1": ["yes", "no"], "open cabinet_1": ["no", "yes"], "open cabinet_2": ["no", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,spoon_1": ["no", "no"], "ontop bowl_1,spoon_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["yes", "no"], "ontop bowl_2,spoon_1": ["no", "no"], "ontop bowl_2,spoon_2": ["yes", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop spoon_1,bowl_1": ["no", "no"], "ontop spoon_1,bowl_2": ["no", "no"], "ontop spoon_1,cabinet_1": ["no", "no"], "ontop spoon_1,cabinet_2": ["no", "no"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,piece_of_cloth_1": ["yes", "no"], "ontop spoon_2,bowl_1": ["no", "no"], "ontop spoon_2,bowl_2": ["no", "no"], "ontop spoon_2,cabinet_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "no"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,spoon_1": ["no", "no"], "ontop piece_of_cloth_1,spoon_2": ["yes", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside spoon_1,cabinet_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_1": ["no", "no"], "inside spoon_2,cabinet_2": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["yes", "no"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,spoon_1": ["no", "no"], "nextto bowl_1,spoon_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["no", "no"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,cabinet_2": ["yes", "no"], "nextto bowl_2,spoon_1": ["yes", "no"], "nextto bowl_2,spoon_2": ["yes", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "yes"], "nextto spoon_1,bowl_1": ["no", "no"], "nextto spoon_1,bowl_2": ["no", "no"], "nextto spoon_1,cabinet_1": ["no", "no"], "nextto spoon_1,cabinet_2": ["yes", "yes"], "nextto spoon_1,spoon_2": ["no", "yes"], "nextto spoon_1,piece_of_cloth_1": ["no", "no"], "nextto spoon_2,bowl_1": ["no", "no"], "nextto spoon_2,bowl_2": ["yes", "no"], "nextto spoon_2,cabinet_1": ["no", "no"], "nextto spoon_2,cabinet_2": ["yes", "yes"], "nextto spoon_2,spoon_1": ["no", "yes"], "nextto spoon_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,spoon_1": ["yes", "no"], "nextto piece_of_cloth_1,spoon_2": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6309523809523809, "yes_accuracy": 0.2608695652173913, "yes_correct": 6, "yes_total": 23, "no_accuracy": 0.7704918032786885, "no_correct": 47, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5714285714285714, "yes_correct": 4, "yes_total": 7, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.4, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.4, "no_correct": 2, "no_total": 5}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 26, "no_total": 30}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.2222222222222222, "yes_correct": 2, "yes_total": 9, "no_accuracy": 0.6666666666666666, "no_correct": 14, "no_total": 21}}}, "step": 7, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "holding bowl_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 10, "actions": ["grasp(bowl_1)", "navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}], "remaining_actions": ["navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, near the bottom. The robotic arm is positioned in the middle of the image, and its reach is limited by the length of its arm. Given the position of the robotic arm and the distance to the cabinet_1, it appears that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, near the bottom. The robotic arm is positioned in the middle of the image, and its reach is limited by the length of its arm. Given the position of the robotic arm and the distance to the cabinet_1, it appears that the cabinet_1 is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the cabinet_1. The cabinet_1 is on the left side of the image, against the wall. The robotic arm appears to have a limited reach, likely extending a few feet in front of it. Given the distance between the robotic arm and the cabinet_1, it is clear that the cabinet_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the cabinet_1. The cabinet_1 is on the left side of the image, against the wall. The robotic arm appears to have a limited reach, likely extending a few feet in front of it. Given the distance between the robotic arm and the cabinet_1, it is clear that the cabinet_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate the cabinet_1 in the image. The cabinet_1 is the cabinet directly below the robotic arm. The robotic arm is positioned directly above the cabinet_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will locate the cabinet_1 in the image. The cabinet_1 is the cabinet directly below the robotic arm. The robotic arm is positioned directly above the cabinet_1, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly below the countertop that the robotic arm is interacting with. The robotic arm is positioned above the countertop, and its reach extends downward. Given the position of the robotic arm and its reach, it can interact with the cabinet_1. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet directly below the countertop that the robotic arm is interacting with. The robotic arm is positioned above the countertop, and its reach extends downward. Given the position of the robotic arm and its reach, it can interact with the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0002378854292817332, "First, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet with the drawer below it. Then, I will check if the cabinet_1 is open. The cabinet_1 appears to be closed, as the door is aligned with the cabinet frame and there is no visible gap indicating it is open.", true, "<explanation>\nFirst, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet with the drawer below it. Then, I will check if the cabinet_1 is open. The cabinet_1 appears to be closed, as the door is aligned with the cabinet frame and there is no visible gap indicating it is open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0001746997139062162, "First, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet with a yellow circle on the front. Then, I will check if the cabinet_1 is open. The cabinet_1 is open, as the door is not aligned with the cabinet frame and there is a visible gap.", true, "<explanation>\nFirst, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet with a yellow circle on the front. Then, I will check if the cabinet_1 is open. The cabinet_1 is open, as the door is not aligned with the cabinet frame and there is a visible gap.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the red spherical object on the countertop. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop and appears to be able to extend its gripper to reach objects on the countertop. Since the snack_food_1 is on the countertop and within the reachable area of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the red spherical object on the countertop. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop and appears to be able to extend its gripper to reach objects on the countertop. Since the snack_food_1 is on the countertop and within the reachable area of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(snack_food_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the red spherical object on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be holding a green object. The snack_food_1 is within the immediate vicinity of the robotic arm's gripper. Therefore, the snack_food_1 is in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the red spherical object on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be holding a green object. The snack_food_1 is within the immediate vicinity of the robotic arm's gripper. Therefore, the snack_food_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": {"holding snack_food_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will locate the snack_food_1, which appears to be a small red spherical object on the table. I will then check if the robotic arm is holding this object. Upon inspection, the robotic arm is holding a green and yellow object, not the red spherical snack_food_1. Therefore, the answer is \"No\".", false, "```\nQuestion: Is the agent holding the snack_food_1?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will locate the snack_food_1, which appears to be a small red spherical object on the table. I will then check if the robotic arm is holding this object. Upon inspection, the robotic arm is holding a green and yellow object, not the red spherical snack_food_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>\n```", false], "ontop snack_food_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. The object labeled snack_food_1 is the small red sphere. The object labeled cabinet_1 is the piece of furniture with drawers and a countertop. The snack_food_1 is clearly positioned on the countertop of the cabinet_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects in the image. The object labeled snack_food_1 is the small red sphere. The object labeled cabinet_1 is the piece of furniture with drawers and a countertop. The snack_food_1 is clearly positioned on the countertop of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto snack_food_1,cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is a cabinet (cabinet_1) and a small red spherical object (snack_food_1). Next, I will determine the relative positions of these objects. The snack_food_1 is located on the countertop directly in front of the cabinet_1. Since \"next to\" can be interpreted as being adjacent or very close to, and the snack_food_1 is immediately in front of and close to the cabinet_1, it can be considered next to it.", false, "<explanation>\nFirst, I will identify the objects in the image. There is a cabinet (cabinet_1) and a small red spherical object (snack_food_1). Next, I will determine the relative positions of these objects. The snack_food_1 is located on the countertop directly in front of the cabinet_1. Since \"next to\" can be interpreted as being adjacent or very close to, and the snack_food_1 is immediately in front of and close to the cabinet_1, it can be considered next to it.\n</explanation>\n<answer>\nYes\n</answer>", false], "inside snack_food_1,cabinet_1": ["no", 0.0, 0.0, "First, I will identify the objects in the image. There is a robotic arm holding a green object with a yellow top, which appears to be a lamp. On the table, there is a small red spherical object, which is labeled as snack_food_1. There is also a cabinet labeled as cabinet_1, which is located to the right of the table and has three drawers. The snack_food_1 is not inside the cabinet_1; it is on the table.", true, "<explanation>\nFirst, I will identify the objects in the image. There is a robotic arm holding a green object with a yellow top, which appears to be a lamp. On the table, there is a small red spherical object, which is labeled as snack_food_1. There is also a cabinet labeled as cabinet_1, which is located to the right of the table and has three drawers. The snack_food_1 is not inside the cabinet_1; it is on the table.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop snack_food_1,carton_1": {"before": false, "after": false}, "ontop snack_food_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop snack_food_1,sandwich_1": {"before": false, "after": false}, "ontop snack_food_1,snack_food_1": {"before": null, "after": false}, "nextto snack_food_1,carton_1": {"before": false, "after": false}, "nextto snack_food_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto snack_food_1,sandwich_1": {"before": false, "after": false}, "nextto snack_food_1,snack_food_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(snack_food_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is a small red sphere located on the table. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the table and has a reach that extends to the surface of the table. Since the snack_food_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is a small red sphere located on the table. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the table and has a reach that extends to the surface of the table. Since the snack_food_1 is on the table and within the reachable area of the robotic arm, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["no", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable juice_1": ["no", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["yes", "no"], "ontop door_1,cabinet_1": ["yes", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6129032258064516, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 18, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.4, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.625, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}}}, "step": 1, "actions": ["navigate-to(cabinet_1)", "open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(snack_food_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "open cabinet_1": ["yes", "yes"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "holding snack_food_1": ["no", "yes"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,snack_food_1": ["no", "no"], "ontop apple_1,cabinet_1": ["yes", "no"], "ontop apple_1,juice_1": ["yes", "no"], "ontop snack_food_1,countertop_1": ["yes", "no"], "ontop snack_food_1,apple_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["yes", "no"], "ontop snack_food_1,juice_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,snack_food_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,juice_1": ["yes", "yes"], "nextto snack_food_1,countertop_1": ["yes", "no"], "nextto snack_food_1,apple_1": ["yes", "no"], "nextto snack_food_1,cabinet_1": ["yes", "no"], "nextto snack_food_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.8888888888888888, "yes_correct": 8, "yes_total": 9, "no_accuracy": 0.4444444444444444, "no_correct": 12, "no_total": 27, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 5, "yes_total": 5, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.45454545454545453, "no_correct": 5, "no_total": 11}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.18181818181818182, "no_correct": 2, "no_total": 11}}}, "step": 4, "actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the cabinet_1. The cabinet_1 is on the left side of the image, against the wall. The robotic arm appears to have a limited reach, likely extending a few feet in front of it. Given the distance between the robotic arm and the cabinet_1, it is clear that the cabinet_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the cabinet_1. The cabinet_1 is on the left side of the image, against the wall. The robotic arm appears to have a limited reach, likely extending a few feet in front of it. Given the distance between the robotic arm and the cabinet_1, it is clear that the cabinet_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the left side of the image. Then, I will check if the robotic arm can reach the cabinet_1. The robotic arm is positioned close to the cabinet_1, and its reach seems to extend to the cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the left side of the image. Then, I will check if the robotic arm can reach the cabinet_1. The robotic arm is positioned close to the cabinet_1, and its reach seems to extend to the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the left side of the image. The robotic arm is positioned in such a way that it can reach the cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the left side of the image. The robotic arm is positioned in such a way that it can reach the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["yes", 0.0, 0.000155914476807896, "First, I will identify the cabinet labeled \"cabinet_1\" in the image. Then, I will check the state of the cabinet's door to determine if it is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible on the left side. The door of this cabinet is open, as it is not flush with the cabinet frame and there is a visible gap.", false, "<explanation>\nFirst, I will identify the cabinet labeled \"cabinet_1\" in the image. Then, I will check the state of the cabinet's door to determine if it is open or closed. In the image, the cabinet labeled \"cabinet_1\" is visible on the left side. The door of this cabinet is open, as it is not flush with the cabinet frame and there is a visible gap.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(snack_food_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet on the left side of the image. The robotic arm is positioned in such a way that it can extend its reach to the cabinet_1. Therefore, the answer is \"Yes\".", false, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is the cabinet on the left side of the image. The robotic arm is positioned in such a way that it can extend its reach to the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable snack_food_1": {"before": false, "after": true}, "reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located to the left of the agent. The agent's arm is extended and appears to be able to reach objects within a certain radius. Given the position of the cabinet_1 relative to the agent, it seems that the agent can reach the cabinet_1.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located to the left of the agent. The agent's arm is extended and appears to be able to reach objects within a certain radius. Given the position of the cabinet_1 relative to the agent, it seems that the agent can reach the cabinet_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.00021816274405422992, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.0, 0.0, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned in such a way that it can extend its reach to the countertop where the snack_food_1 is placed. Given the position and the apparent flexibility of the robotic arm, it seems feasible for the arm to reach the snack_food_1.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned in such a way that it can extend its reach to the countertop where the snack_food_1 is placed. Given the position and the apparent flexibility of the robotic arm, it seems feasible for the arm to reach the snack_food_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the object labeled \"carton_1.\" The carton_1 is visible on the table to the right side of the image. To determine if the carton_1 is in reach of the agent, I will consider the arm's range of motion. The robotic arm appears to have a significant reach, extending across the room. Given its position and the length of its arm, it is plausible that the robotic arm can reach the table where the carton_1 is located. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned in the middle of the room, near a table. Next, I will locate the object labeled \"carton_1.\" The carton_1 is visible on the table to the right side of the image. To determine if the carton_1 is in reach of the agent, I will consider the arm's range of motion. The robotic arm appears to have a significant reach, extending across the room. Given its position and the length of its arm, it is plausible that the robotic arm can reach the table where the carton_1 is located. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "open cabinet_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 3, "actions": ["open-container(cabinet_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "open cabinet_1": ["no", "yes"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["yes", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "ontop snack_food_1,juice_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["yes", "no"], "nextto snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,juice_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.42857142857142855, "no_correct": 6, "no_total": 14, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.16666666666666666, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 5}}}, "step": 4, "actions": ["navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, above the countertop. The robotic arm is positioned on the right side of the image, near a wall. Given the distance and the fixed position of the robotic arm, it is not feasible for the robotic arm to reach the cabinet_1.", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, above the countertop. The robotic arm is positioned on the right side of the image, near a wall. Given the distance and the fixed position of the robotic arm, it is not feasible for the robotic arm to reach the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located to the right of the robotic arm. The robotic arm appears to be able to move and reach objects within a certain radius. Given the position of the cabinet_1 relative to the robotic arm, it seems within the reachable distance for the robotic arm to interact with it. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located to the right of the robotic arm. The robotic arm appears to be able to move and reach objects within a certain radius. Given the position of the cabinet_1 relative to the robotic arm, it seems within the reachable distance for the robotic arm to interact with it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet directly below the robotic arm. The robotic arm is positioned directly above the cabinet, indicating that it is within its reach. Therefore, the answer is \"Yes\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet directly below the robotic arm. The robotic arm is positioned directly above the cabinet, indicating that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will look at the cabinet labeled \"cabinet_1\" in the image. Then, I will check if the doors of the cabinet are open or closed. In the image, the doors of cabinet_1 are closed. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a range that allows it to interact with objects on the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the snack_food_1 is within reach of the agent.", true, "Question: Is the snack_food_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a range that allows it to interact with objects on the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"open cabinet_1": {"before": false, "after": true}}}, "action_info": "success"}, {"action": "grasp(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a range that allows it to interact with objects on the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the snack_food_1 is within reach of the agent.", true, "Question: Is the snack_food_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be within a range that allows it to interact with objects on the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": {"holding snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"snack_food_1.\" In the image, there is a yellow object that appears to be a banana, which is likely the \"snack_food_1.\" I will then check if the robotic arm is holding this object. The robotic arm's gripper is clearly holding the yellow banana. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"snack_food_1.\" In the image, there is a yellow object that appears to be a banana, which is likely the \"snack_food_1.\" I will then check if the robotic arm is holding this object. The robotic arm's gripper is clearly holding the yellow banana. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop snack_food_1,carton_1": {"before": false, "after": false}, "ontop snack_food_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop snack_food_1,cabinet_1": {"before": false, "after": false}, "ontop snack_food_1,sandwich_1": {"before": false, "after": false}, "ontop snack_food_1,snack_food_1": {"before": null, "after": false}, "nextto snack_food_1,carton_1": {"before": false, "after": false}, "nextto snack_food_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto snack_food_1,cabinet_1": {"before": true, "after": false}, "nextto snack_food_1,sandwich_1": {"before": false, "after": false}, "nextto snack_food_1,snack_food_1": {"before": null, "after": false}, "inside snack_food_1,cabinet_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the carton_1. Given the proximity and the reach of the robotic arm, it appears that the carton_1 is within the agent's reach.", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the carton_1. Given the proximity and the reach of the robotic arm, it appears that the carton_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left side of the image, near the kitchen area. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned in the foreground, near the center of the image. Given the distance between the robotic arm and the refrigerator, it appears that the arm would need to extend significantly to reach the refrigerator. However, considering the typical reach of a robotic arm in such a simulated environment, it is unlikely that the arm can reach the refrigerator from its current position. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left side of the image, near the kitchen area. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned in the foreground, near the center of the image. Given the distance between the robotic arm and the refrigerator, it appears that the arm would need to extend significantly to reach the refrigerator. However, considering the typical reach of a robotic arm in such a simulated environment, it is unlikely that the arm can reach the refrigerator from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will look for the snack_food_1 in the image. The snack_food_1 is located on the countertop in the kitchen area. Next, I will assess the position and reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach objects on the countertop. Given the proximity of the robotic arm to the countertop and the location of the snack_food_1, it is likely that the snack_food_1 is within reach of the agent.", false, "Question: Is the snack_food_1 in reach of the agent?\n<explanation>\nFirst, I will look for the snack_food_1 in the image. The snack_food_1 is located on the countertop in the kitchen area. Next, I will assess the position and reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop and appears to be within a reasonable distance to reach objects on the countertop. Given the proximity of the robotic arm to the countertop and the location of the snack_food_1, it is likely that the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable cabinet_1": {"before": true, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(snack_food_1, carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. Upon inspection, the robotic arm is holding an object. Next, I will determine if the object being held is the snack_food_1. The object in the robotic arm's gripper appears to be a snack food item, and it matches the description of snack_food_1. Therefore, the answer is \"Yes\".", true, "```\nQuestion: Is the agent holding the snack_food_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will check if the robotic arm is holding any object. Upon inspection, the robotic arm is holding an object. Next, I will determine if the object being held is the snack_food_1. The object in the robotic arm's gripper appears to be a snack food item, and it matches the description of snack_food_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>\n```", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the carton_1. Given the proximity and the reach of the robotic arm, it appears that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the countertop, near the carton_1. Given the proximity and the reach of the robotic arm, it appears that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"nextto snack_food_1,carton_1": {"before": false, "after": true}, "holding snack_food_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1.\" The carton_1 is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the carton_1. Given the position of the robotic arm and the distance to the carton_1, it appears that the robotic arm cannot reach the carton_1 due to the physical separation and the presence of other objects and furniture in between. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1.\" The carton_1 is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the carton_1. Given the position of the robotic arm and the distance to the carton_1, it appears that the robotic arm cannot reach the carton_1 due to the physical separation and the presence of other objects and furniture in between. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "open carton_1": ["no", 0.0, 0.00014450472212395744, "First, I will look for the object named \"carton_1\" in the image. The object is located on the table in the foreground. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. The object is located on the table in the foreground. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the wall, and slightly behind the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned in a way that it can extend its reach towards the snack_food_1. Given the relative positions and the flexibility of the robotic arm, it seems feasible for the arm to reach the snack_food_1.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the wall, and slightly behind the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned in a way that it can extend its reach towards the snack_food_1. Given the relative positions and the flexibility of the robotic arm, it seems feasible for the arm to reach the snack_food_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on top of a surface near the mirror. Given the position of the robotic arm and the \"carton_1\", the \"carton_1\" is not within the immediate reach of the agent, as it is on the opposite side of the room.", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on top of a surface near the mirror. Given the position of the robotic arm and the \"carton_1\", the \"carton_1\" is not within the immediate reach of the agent, as it is on the opposite side of the room.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the mirror. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a limited range of motion based on its current orientation and the environment. Given the distance and the potential obstacles between the robotic arm and the electric_refrigerator_1, it is unlikely that the robotic arm can reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the mirror. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a limited range of motion based on its current orientation and the environment. Given the distance and the potential obstacles between the robotic arm and the electric_refrigerator_1, it is unlikely that the robotic arm can reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the wall, and slightly under the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the snack_food_1 and has the capability to extend and grasp objects within its reach. Given the proximity of the snack_food_1 to the robotic arm, it is reasonable to conclude that the snack_food_1 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the wall, and slightly under the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the snack_food_1 and has the capability to extend and grasp objects within its reach. Given the proximity of the snack_food_1 to the robotic arm, it is reasonable to conclude that the snack_food_1 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. Given the position of the robotic arm and the \"carton_1\", the \"carton_1\" is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the \"carton_1\".", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. Given the position of the robotic arm and the \"carton_1\", the \"carton_1\" is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the \"carton_1\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the sink. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a significant range of motion. However, the electric_refrigerator_1 is positioned behind the countertop, which the robotic arm cannot reach over. Therefore, the electric_refrigerator_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the sink. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a significant range of motion. However, the electric_refrigerator_1 is positioned behind the countertop, which the robotic arm cannot reach over. Therefore, the electric_refrigerator_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the base of the wall. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the snack_food_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and forwards to reach the snack_food_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the base of the wall. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a certain range of motion. Given the position of the snack_food_1 on the floor and the apparent reach of the robotic arm, it seems that the robotic arm can extend downwards and forwards to reach the snack_food_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the \"carton_1\" from its current position. Given the distance and the orientation of the robotic arm, it appears that the \"carton_1\" is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the \"carton_1\" from its current position. Given the distance and the orientation of the robotic arm, it appears that the \"carton_1\" is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, near the sink. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center-right of the image. Given the distance and the orientation of the robotic arm, it appears that the electric_refrigerator_1 is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the electric_refrigerator_1.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, near the sink. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center-right of the image. Given the distance and the orientation of the robotic arm, it appears that the electric_refrigerator_1 is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the electric_refrigerator_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image and extends downward. Given the position and length of the robotic arm, it seems capable of reaching down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image and extends downward. Given the position and length of the robotic arm, it seems capable of reaching down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned in the living room area, near the couch. Given the distance and the layout of the environment, the robotic arm cannot reach the carton_1 on the kitchen countertop without moving through the environment. Therefore, the answer is \"No\".", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will look for the carton_1 in the image. The carton_1 is located on the countertop in the kitchen area. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned in the living room area, near the couch. Given the distance and the layout of the environment, the robotic arm cannot reach the carton_1 on the kitchen countertop without moving through the environment. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the kitchen area. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a limited reach, primarily extending forward and to the sides. Given the position of the electric_refrigerator_1 and the reach of the robotic arm, it is clear that the electric_refrigerator_1 is not within the agent's reach.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the kitchen area. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a limited reach, primarily extending forward and to the sides. Given the position of the electric_refrigerator_1 and the reach of the robotic arm, it is clear that the electric_refrigerator_1 is not within the agent's reach.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the yellow object on the floor. Next, I will determine the reachable area for the agent, which is the robotic arm. The robotic arm is positioned in such a way that its reach extends to the floor area where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is the yellow object on the floor. Next, I will determine the reachable area for the agent, which is the robotic arm. The robotic arm is positioned in such a way that its reach extends to the floor area where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the \"carton_1\" from its current position. Given the distance and the orientation of the robotic arm, it appears that the \"carton_1\" is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1\" in the image. The \"carton_1\" is located on the left side of the image, on the countertop near the sink. I will then assess whether the robotic arm can reach the \"carton_1\" from its current position. Given the distance and the orientation of the robotic arm, it appears that the \"carton_1\" is not within the immediate reach of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, near the sink. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center-right of the image. Given the distance and the orientation of the robotic arm, it appears that the electric_refrigerator_1 is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the electric_refrigerator_1.", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, near the sink. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center-right of the image. Given the distance and the orientation of the robotic arm, it appears that the electric_refrigerator_1 is not within the immediate reach of the agent. The agent would need to move or extend significantly to reach the electric_refrigerator_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom center of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended downward. Given the arm's position and extension, it seems capable of reaching down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom center of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended downward. Given the arm's position and extension, it seems capable of reaching down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1.\" The carton_1 is located on the left side of the image, on the countertop near the sink. Given the position of the robotic arm and the location of the carton_1, the carton_1 is not within the immediate reach of the agent. The agent would need to extend its arm significantly or move to reach the carton_1.", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will look for the object labeled \"carton_1.\" The carton_1 is located on the left side of the image, on the countertop near the sink. Given the position of the robotic arm and the location of the carton_1, the carton_1 is not within the immediate reach of the agent. The agent would need to extend its arm significantly or move to reach the carton_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the kitchen area. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a significant range of motion. However, the arm is currently positioned in the living room area, which is separated from the kitchen area by a countertop. Given the current position and the separation by the countertop, the robotic arm cannot reach the electric_refrigerator_1 without moving to the kitchen area. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the image, near the kitchen area. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned in the center of the image and appears to have a significant range of motion. However, the arm is currently positioned in the living room area, which is separated from the kitchen area by a countertop. Given the current position and the separation by the countertop, the robotic arm cannot reach the electric_refrigerator_1 without moving to the kitchen area. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable snack_food_1": ["no", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, and its reach appears to be limited to the area immediately around it. Given the distance and the orientation of the robotic arm, it is not feasible for the agent to reach the snack_food_1 in its current position. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, and its reach appears to be limited to the area immediately around it. Given the distance and the orientation of the robotic arm, it is not feasible for the agent to reach the snack_food_1 in its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(snack_food_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable snack_food_1": ["no", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, and its reach appears to be limited to the area immediately around it. Given the distance and the position of the snack_food_1 relative to the robotic arm, it is clear that the snack_food_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, and its reach appears to be limited to the area immediately around it. Given the distance and the position of the snack_food_1 relative to the robotic arm, it is clear that the snack_food_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable snack_food_1": ["yes", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image, with its end effector (the part that can hold objects) extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located on the floor, near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image, with its end effector (the part that can hold objects) extending downward. Given the position of the robotic arm and its apparent range of motion, it seems that the arm can reach down to the floor where the snack_food_1 is located. Therefore, the snack_food_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "reachable snack_food_1": ["yes", "yes"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "holding snack_food_1": ["yes", "yes"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,electric_refrigerator_1": ["no", "no"], "inside snack_food_1,carton_1": ["no", "no"], "inside snack_food_1,electric_refrigerator_1": ["no", "no"], "nextto snack_food_1,carton_1": ["no", "no"], "nextto snack_food_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 4, "actions": ["place-next-to(snack_food_1, carton_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 10, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 12, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 14, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 16, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["no", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 18, "actions": ["navigate-to(snack_food_1)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable snack_food_1": ["no", "yes"], "reachable door_1": ["no", "yes"], "open door_1": ["yes", "no"], "holding snack_food_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "inside snack_food_1,door_1": ["no", "no"], "nextto snack_food_1,door_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 19, "actions": ["navigate-to(snack_food_1)", "grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, above the countertop. The robotic arm is positioned on the right side of the image, near a wall. Given the distance and the orientation of the robotic arm, it is not feasible for the robotic arm to reach the cabinet_1 without moving to a different position. Therefore, the answer is \"No\".", true, "Question: Is the cabinet_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the cabinet_1. The cabinet_1 is located on the left side of the image, above the countertop. The robotic arm is positioned on the right side of the image, near a wall. Given the distance and the orientation of the robotic arm, it is not feasible for the robotic arm to reach the cabinet_1 without moving to a different position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Next, I will determine if the cabinet_1 is within the reach of the robotic arm. The robotic arm appears to be positioned above the countertop, and its reach seems to extend to the area where the cabinet_1 is located. Therefore, the cabinet_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Next, I will determine if the cabinet_1 is within the reach of the robotic arm. The robotic arm appears to be positioned above the countertop, and its reach seems to extend to the area where the cabinet_1 is located. Therefore, the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable carton_1": {"before": false, "after": false}, "reachable electric_refrigerator_1": {"before": false, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Next, I will determine if the cabinet_1 is within the reach of the robotic arm. The robotic arm appears to be positioned above the countertop, and its reach seems to extend to the area where the cabinet_1 is located. Therefore, the cabinet_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Next, I will determine if the cabinet_1 is within the reach of the robotic arm. The robotic arm appears to be positioned above the countertop, and its reach seems to extend to the area where the cabinet_1 is located. Therefore, the cabinet_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.0, 0.0, "First, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Then, I will check if the cabinet_1 is open. The cabinet_1 has its door closed, as the door is aligned with the cabinet frame and there is no visible gap or open space inside the cabinet.", true, "<explanation>\nFirst, I will identify the cabinet_1 in the image. The cabinet_1 is the cabinet on the right side of the image. Then, I will check if the cabinet_1 is open. The cabinet_1 has its door closed, as the door is aligned with the cabinet frame and there is no visible gap or open space inside the cabinet.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0, 0.0, "First, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, there is a cabinet_1 and it is open.", true, "<explanation>\nFirst, I will look for the cabinet_1 in the image. Then, I will check if the cabinet_1 is open. In the image, there is a cabinet_1 and it is open.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable snack_food_1": ["no", 0.0, 0.0, "First, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located inside a drawer. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the drawer containing the snack_food_1. However, the drawer is closed, and the robotic arm is not currently inside the drawer. Therefore, the snack_food_1 is not within immediate reach of the agent without first opening the drawer.", false, "<explanation>\nFirst, I will identify the location of the snack_food_1 in the image. The snack_food_1 is located inside a drawer. Next, I will assess the position of the robotic arm, which is the agent. The robotic arm is positioned above the drawer containing the snack_food_1. However, the drawer is closed, and the robotic arm is not currently inside the drawer. Therefore, the snack_food_1 is not within immediate reach of the agent without first opening the drawer.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the carton_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the carton_1. In the image, there is a carton_1 on the countertop. The robotic arm is positioned close to the countertop and appears to have a reach that can extend to the carton_1. Therefore, the answer is \"Yes\".", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will look for the carton_1 in the image. Then, I will check if the robotic arm, which is the agent, can reach the carton_1. In the image, there is a carton_1 on the countertop. The robotic arm is positioned close to the countertop and appears to have a reach that can extend to the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left of the agent's view, near the mirror. Next, I will assess the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to have a significant range of motion, but it is positioned in the center of the room, facing forward. Given the distance and the current orientation of the robotic arm, it is unlikely that the arm can reach the refrigerator without moving its base or extending significantly. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The refrigerator is located to the left of the agent's view, near the mirror. Next, I will assess the reach of the agent, which is the robotic arm visible in the image. The robotic arm appears to have a significant range of motion, but it is positioned in the center of the room, facing forward. Given the distance and the current orientation of the robotic arm, it is unlikely that the arm can reach the refrigerator without moving its base or extending significantly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable cabinet_1": {"before": true, "after": false}, "reachable sandwich_1": {"before": false, "after": false}, "reachable snack_food_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable snack_food_1": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["yes", "yes"], "holding snack_food_1": ["yes", "no"], "ontop snack_food_1,cabinet_1": ["no", "no"], "inside snack_food_1,cabinet_1": ["yes", "yes"], "nextto snack_food_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the bottom right corner of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and extends downward. Given the position and length of the robotic arm, it seems that the arm can reach down to the floor where the plaything_2 is located. Therefore, the plaything_2 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the bottom right corner of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and extends downward. Given the position and length of the robotic arm, it seems that the arm can reach down to the floor where the plaything_2 is located. Therefore, the plaything_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the table_1 in the image. The table_1 is the dining table in the center of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1 and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will locate the table_1 in the image. The table_1 is the dining table in the center of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1 and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, to the right of the robotic arm. Next, I will check if the carton_1 is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, to the right of the robotic arm. Next, I will check if the carton_1 is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The \"plaything_2\" is located on the floor towards the bottom right of the image. I will then check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_2\" and it is not being held by the arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The \"plaything_2\" is located on the floor towards the bottom right of the image. I will then check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_2\" and it is not being held by the arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is situated on a table in the middle of the image. To determine if \"carton_1\" is in reach of the agent, I will consider the arm's length and the distance between the arm and the table. The robotic arm appears to be long enough to reach the table where \"carton_1\" is placed. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, to the right of the robotic arm. Next, I will check if the carton_1 is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, to the right of the robotic arm. Next, I will check if the carton_1 is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The \"plaything_2\" is located on the floor towards the bottom right of the image. I will then check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_2\" and it is not being held by the arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will look for the object labeled \"plaything_2\" in the image. The \"plaything_2\" is located on the floor towards the bottom right of the image. I will then check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_2\" and it is not being held by the arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6808510638297872, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.725, "no_correct": 29, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5384615384615384, "no_correct": 7, "no_total": 13}}}, "step": 1, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["yes", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["yes", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["yes", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.7021276595744681, "yes_accuracy": 0.42857142857142855, "yes_correct": 3, "yes_total": 7, "no_accuracy": 0.75, "no_correct": 30, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6153846153846154, "no_correct": 8, "no_total": 13}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to have a significant range of motion, extending from the top right corner of the image down towards the floor. The red lines indicate the potential reach and movement paths of the robotic arm. By tracing these lines, it is evident that the robotic arm can extend down to the floor where the plaything_2 is located. Therefore, the plaything_2 is within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to have a significant range of motion, extending from the top right corner of the image down towards the floor. The red lines indicate the potential reach and movement paths of the robotic arm. By tracing these lines, it is evident that the robotic arm can extend down to the floor where the plaything_2 is located. Therefore, the plaything_2 is within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the bottom right of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a visible range of motion indicated by red lines. The red lines do not extend to the location of the carton_1 on the floor. Therefore, the carton_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the bottom right of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a visible range of motion indicated by red lines. The red lines do not extend to the location of the carton_1 on the floor. Therefore, the carton_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_1 in the image. The table_1 is the dining table in the center of the image. I will then determine if the robotic arm can reach the table_1. The robotic arm appears to have a significant reach, extending across a large portion of the room. Given the position and the apparent range of motion of the robotic arm, it seems plausible that it can reach the table_1.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_1 in the image. The table_1 is the dining table in the center of the image. I will then determine if the robotic arm can reach the table_1. The robotic arm appears to have a significant reach, extending across a large portion of the room. Given the position and the apparent range of motion of the robotic arm, it seems plausible that it can reach the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the bottom right of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and has a long reach. However, the carton_1 is positioned behind a large piece of furniture (a couch), which would obstruct the robotic arm from reaching it directly. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the bottom right of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and has a long reach. However, the carton_1 is positioned behind a large piece of furniture (a couch), which would obstruct the robotic arm from reaching it directly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_2": {"before": true, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object named \"carton_1\" in the image. The object is located on the table in front of the robotic arm. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open lid or contents spilling out.", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. The object is located on the table in front of the robotic arm. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open lid or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. Then, I will check if the robotic arm, which is the agent, can reach it. In the image, there is a carton on the table in front of the robotic arm. The robotic arm appears to be positioned such that it can extend and reach the carton on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object named \"carton_1\" in the image. The object is located on the table in front of the robotic arm. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open lid or contents spilling out.", true, "<explanation>\nFirst, I will look for the object named \"carton_1\" in the image. The object is located on the table in front of the robotic arm. Then, I will check if the carton is open. The carton appears to be closed, as there are no visible signs of it being open, such as an open lid or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_6": ["no", "yes"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["no", "no"], "reachable carton_1": ["no", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["no", "no"], "holding plaything_2": ["no", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_6": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["yes", "no"], "ontop plaything_6,plaything_2": ["no", "no"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_6": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_6": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["yes", "no"], "nextto plaything_6,plaything_2": ["no", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.855072463768116, "yes_accuracy": 0.25, "yes_correct": 2, "yes_total": 8, "no_accuracy": 0.9344262295081968, "no_correct": 57, "no_total": 61, "predicates": {"reachable": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9583333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9583333333333334, "no_correct": 23, "no_total": 24}, "inside": {"accuracy": 0.875, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.9090909090909091, "no_correct": 20, "no_total": 22}}}, "step": 1, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "yes"], "open carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and can reach objects within a certain radius. Given the position of the robotic arm and the plaything_2, it seems that the robotic arm can move to the location of the plaything_2 without obstruction. Therefore, the plaything_2 is within reach of the agent.", true, "Question: Is the plaything_2 in reach of the agent?\n<explanation>\nFirst, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and can reach objects within a certain radius. Given the position of the robotic arm and the plaything_2, it seems that the robotic arm can move to the location of the plaything_2 without obstruction. Therefore, the plaything_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the carton_1. The robotic arm is positioned on the right side of the image, and the carton_1 is positioned on the left side of the image. The robotic arm appears to have a limited reach, and the carton_1 is too far from the robotic arm for it to interact with it. Therefore, the answer is \"No\".", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will identify the location of the carton_1. The robotic arm is positioned on the right side of the image, and the carton_1 is positioned on the left side of the image. The robotic arm appears to have a limited reach, and the carton_1 is too far from the robotic arm for it to interact with it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and can reach objects within a certain radius. Given the position of the robotic arm and the plaything_2, it seems that the robotic arm can move to the location of the plaything_2 without obstruction. Therefore, the plaything_2 is within reach of the agent.", true, "Question: Is the plaything_2 in reach of the agent?\n<explanation>\nFirst, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be able to move around the room and can reach objects within a certain radius. Given the position of the robotic arm and the plaything_2, it seems that the robotic arm can move to the location of the plaything_2 without obstruction. Therefore, the plaything_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the object labeled \"plaything_2\". In the image, \"plaything_2\" is the black rectangular object on the floor. Finally, I will check if the robotic arm is holding this object. The robotic arm is not in contact with or holding the black rectangular object. Therefore, the answer is \"No\".", false, "Question: Is the agent holding the plaything_2?\n\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the object labeled \"plaything_2\". In the image, \"plaything_2\" is the black rectangular object on the floor. Finally, I will check if the robotic arm is holding this object. The robotic arm is not in contact with or holding the black rectangular object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,carton_1": ["no", 0.0, 0.0, "First, I will identify the objects in the image. There is a dog, a sofa, a plant, a picture on the wall, a robotic arm, a black carton (carton_1), and a blue plaything (plaything_2). Next, I will determine the positions of the plaything_2 and the carton_1. The plaything_2 is located on the sofa, while the carton_1 is on the floor in front of the sofa. Since the plaything_2 is not on top of the carton_1, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image. There is a dog, a sofa, a plant, a picture on the wall, a robotic arm, a black carton (carton_1), and a blue plaything (plaything_2). Next, I will determine the positions of the plaything_2 and the carton_1. The plaything_2 is located on the sofa, while the carton_1 is on the floor in front of the sofa. Since the plaything_2 is not on top of the carton_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_2,carton_1": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is a dog, a sofa, a plant, a picture on the wall, a robotic arm, a carton labeled \"carton_1\", and a plaything labeled \"plaything_2\". Next, I will determine the positions of \"plaything_2\" and \"carton_1\". The \"plaything_2\" is located on the sofa, near the edge closest to the carton. The \"carton_1\" is placed on the floor, adjacent to the sofa. Since \"plaything_2\" is on the sofa and very close to the carton, it can be considered next to the carton. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects in the image. There is a dog, a sofa, a plant, a picture on the wall, a robotic arm, a carton labeled \"carton_1\", and a plaything labeled \"plaything_2\". Next, I will determine the positions of \"plaything_2\" and \"carton_1\". The \"plaything_2\" is located on the sofa, near the edge closest to the carton. The \"carton_1\" is placed on the floor, adjacent to the sofa. Since \"plaything_2\" is on the sofa and very close to the carton, it can be considered next to the carton. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,plaything_4": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,plaything_4": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm appears to be positioned near the center of the image, while the \"carton_1\" is located to the left side of the image, near the wall. Given the apparent distance between the robotic arm and the \"carton_1\", it seems unlikely that the robotic arm can reach the \"carton_1\" from its current position. Therefore, the answer is \"No\".", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm appears to be positioned near the center of the image, while the \"carton_1\" is located to the left side of the image, near the wall. Given the apparent distance between the robotic arm and the \"carton_1\", it seems unlikely that the robotic arm can reach the \"carton_1\" from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is located on the right side of the image, near a couch. Next, I will locate the carton_1 in the image. The carton_1 is on the floor, near the bottom left corner of the image. Given the position of the robotic arm and the carton_1, the carton_1 is not within the immediate reach of the agent. The agent would need to move to reach the carton_1.", false, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is located on the right side of the image, near a couch. Next, I will locate the carton_1 in the image. The carton_1 is on the floor, near the bottom left corner of the image. Given the position of the robotic arm and the carton_1, the carton_1 is not within the immediate reach of the agent. The agent would need to move to reach the carton_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is the entity that can hold objects. Next, I will locate the plaything_2 in the image. The plaything_2 is a green object positioned on a surface to the right of the dog. To determine if the plaything_2 is in reach of the agent, I will assess the spatial relationship between the robotic arm and the plaything_2. The robotic arm appears to be positioned near a couch, and its reach is limited by its physical extension. The plaything_2 is located on a surface that is relatively close to the robotic arm, within a reasonable distance for the arm to extend and grasp the object. Therefore, the plaything_2 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is the entity that can hold objects. Next, I will locate the plaything_2 in the image. The plaything_2 is a green object positioned on a surface to the right of the dog. To determine if the plaything_2 is in reach of the agent, I will assess the spatial relationship between the robotic arm and the plaything_2. The robotic arm appears to be positioned near a couch, and its reach is limited by its physical extension. The plaything_2 is located on a surface that is relatively close to the robotic arm, within a reasonable distance for the arm to extend and grasp the object. Therefore, the plaything_2 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the robotic arm, which is the agent. The robotic arm is located on the right side of the image, near a couch. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is not visible in the image, so I will assume it is not within the field of view of the agent. Since the \"carton_1\" is not visible and the agent can only interact with objects within its reach and line of sight, I conclude that the \"carton_1\" is not in reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the robotic arm, which is the agent. The robotic arm is located on the right side of the image, near a couch. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is not visible in the image, so I will assume it is not within the field of view of the agent. Since the \"carton_1\" is not visible and the agent can only interact with objects within its reach and line of sight, I conclude that the \"carton_1\" is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is the white object in the bottom right corner of the image. Next, I will locate the plaything_2, which is the green object on the table. To determine if the plaything_2 is in reach of the agent, I will check the relative positions and the lines indicating reachability. The red lines from the agent extend towards the plaything_2, suggesting that it is within the agent's reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is the white object in the bottom right corner of the image. Next, I will locate the plaything_2, which is the green object on the table. To determine if the plaything_2 is in reach of the agent, I will check the relative positions and the lines indicating reachability. The red lines from the agent extend towards the plaything_2, suggesting that it is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.00017465423621654716, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor to the right of the robotic arm. Next, I will check the state of the carton_1 to determine if it is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor to the right of the robotic arm. Next, I will check the state of the carton_1 to determine if it is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "The image shows a virtual household simulator with a robotic arm (the agent) and various objects, including a dog and two playthings labeled \"plaything_2\" and \"plaything_7\". The robotic arm is positioned near the dog and the playthings. To determine if the agent is holding \"plaything_2\", I need to check the visual clues indicating whether the robotic arm is in contact with or gripping \"plaything_2\".\n\nUpon examining the image, it is clear that the robotic arm is not in contact with \"plaything_2\". The robotic arm appears to be near the dog and \"plaything_7\", but there is no indication that it is holding \"plaything_2\".", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm (the agent) and various objects, including a dog and two playthings labeled \"plaything_2\" and \"plaything_7\". The robotic arm is positioned near the dog and the playthings. To determine if the agent is holding \"plaything_2\", I need to check the visual clues indicating whether the robotic arm is in contact with or gripping \"plaything_2\".\n\nUpon examining the image, it is clear that the robotic arm is not in contact with \"plaything_2\". The robotic arm appears to be near the dog and \"plaything_7\", but there is no indication that it is holding \"plaything_2\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.", true, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the carton_1 in the image. The robotic arm is positioned on the right side of the image, near a table. The carton_1 is also on the table, close to the robotic arm. Given the proximity of the carton_1 to the robotic arm, it appears to be within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.0, 0.00017465423621654716, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor to the right of the robotic arm. Next, I will check the state of the carton_1 to determine if it is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor to the right of the robotic arm. Next, I will check the state of the carton_1 to determine if it is open. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.0, 0.0, "The image shows a virtual household simulator with a robotic arm (the agent) and various objects, including a dog and two playthings labeled \"plaything_2\" and \"plaything_7\". The robotic arm is positioned near the dog and the playthings. To determine if the agent is holding \"plaything_2\", I need to check the visual clues indicating whether the robotic arm is in contact with or gripping \"plaything_2\".\n\nUpon examining the image, it is clear that the robotic arm is not in contact with \"plaything_2\". The robotic arm appears to be near the dog and \"plaything_7\", but there is no indication that it is holding \"plaything_2\".", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm (the agent) and various objects, including a dog and two playthings labeled \"plaything_2\" and \"plaything_7\". The robotic arm is positioned near the dog and the playthings. To determine if the agent is holding \"plaything_2\", I need to check the visual clues indicating whether the robotic arm is in contact with or gripping \"plaything_2\".\n\nUpon examining the image, it is clear that the robotic arm is not in contact with \"plaything_2\". The robotic arm appears to be near the dog and \"plaything_7\", but there is no indication that it is holding \"plaything_2\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["yes", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_5,plaything_2": ["yes", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7241379310344828, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.8, "no_correct": 20, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 3, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["no", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_5,plaything_2": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8275862068965517, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.88, "no_correct": 22, "no_total": 25, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}}}, "step": 4, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_5": ["no", "no"], "reachable plaything_7": ["no", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "holding plaything_5": ["no", "no"], "holding plaything_7": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_5": ["yes", "no"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_5,plaything_2": ["no", "no"], "ontop plaything_5,plaything_7": ["no", "no"], "ontop plaything_5,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_5": ["no", "no"], "ontop plaything_7,carton_1": ["yes", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_5,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "nextto plaything_2,plaything_5": ["no", "no"], "nextto plaything_2,plaything_7": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_5,plaything_2": ["no", "no"], "nextto plaything_5,plaything_7": ["no", "no"], "nextto plaything_5,carton_1": ["no", "no"], "nextto plaything_7,plaything_2": ["yes", "no"], "nextto plaything_7,plaything_5": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7586206896551724, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.8, "no_correct": 20, "no_total": 25, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}}}, "step": 5, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to have a significant range of motion and can extend across a large portion of the room. Given the position of the plaything_2 on the floor and the apparent reach of the robotic arm, it is likely that the robotic arm can reach the plaything_2. Therefore, the answer is \"Yes\".", true, "Question: Is the plaything_2 in reach of the agent?\n<explanation>\nFirst, I will identify the plaything_2 in the image. The plaything_2 is the small object on the floor near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to have a significant range of motion and can extend across a large portion of the room. Given the position of the plaything_2 on the floor and the apparent reach of the robotic arm, it is likely that the robotic arm can reach the plaything_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object named \"carton_1\" in the image. The robotic arm appears to be positioned near the top right of the image, while the \"carton_1\" is located towards the center-left of the image. Given the length and reach of the robotic arm, it seems plausible that the arm can extend to reach the \"carton_1\". Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object named \"carton_1\" in the image. The robotic arm appears to be positioned near the top right of the image, while the \"carton_1\" is located towards the center-left of the image. Given the length and reach of the robotic arm, it seems plausible that the arm can extend to reach the \"carton_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_4 in the image. The plaything_4 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_4 and the reach of the robotic arm, it is plausible that the robotic arm can reach the plaything_4.", true, "<explanation>\nFirst, I will identify the location of the plaything_4 in the image. The plaything_4 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_4 and the reach of the robotic arm, it is plausible that the robotic arm can reach the plaything_4.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_1 and the reach of the robotic arm, it seems that the robotic arm can extend to the location of the plaything_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_1 and the reach of the robotic arm, it seems that the robotic arm can extend to the location of the plaything_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_2 on the floor and the reach of the robotic arm, it is plausible that the robotic arm can reach the plaything_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_2 on the floor and the reach of the robotic arm, it is plausible that the robotic arm can reach the plaything_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_3": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_3 in the image. The plaything_3 is on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_3 and the reach of the robotic arm, it seems that the robotic arm can extend to the location of the plaything_3. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the plaything_3 in the image. The plaything_3 is on the floor, near the center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in the upper right part of the image and has a significant reach, extending towards the floor. Given the position of the plaything_3 and the reach of the robotic arm, it seems that the robotic arm can extend to the location of the plaything_3. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned to the right side of the image and extends towards the center. Given the length and positioning of the robotic arm, it seems capable of reaching the carton_1 on the floor. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned to the right side of the image and extends towards the center. Given the length and positioning of the robotic arm, it seems capable of reaching the carton_1 on the floor. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned to the right side of the image and extends towards the center. Given the length and positioning of the robotic arm, it seems capable of reaching the carton_1 on the floor. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned to the right side of the image and extends towards the center. Given the length and positioning of the robotic arm, it seems capable of reaching the carton_1 on the floor. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, near the robotic arm. Next, I will check the state of the carton_1 to determine if it is open or closed. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, near the robotic arm. Next, I will check the state of the carton_1 to determine if it is open or closed. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_1\". The plaything_1 is on the floor, and the robotic arm is not holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_1\". The plaything_1 is on the floor, and the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_2\" in the image. The plaything_2 is the object on the floor, which is circled in red. I will then check if the robotic arm is holding this object. In the image, the robotic arm is not holding the plaything_2, as it is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_2\" in the image. The plaything_2 is the object on the floor, which is circled in red. I will then check if the robotic arm is holding this object. In the image, the robotic arm is not holding the plaything_2, as it is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_3\" in the image. The image shows a red circle around the object labeled \"plaything_3\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_3\" in the image. The image shows a red circle around the object labeled \"plaything_3\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_4\" in the image. The image shows a red circle around the object labeled \"plaything_4\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_4\" in the image. The image shows a red circle around the object labeled \"plaything_4\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned in the middle of the room and has a long reach, extending from its base to its gripper. Given the position of the carton_1 on the floor and the reach of the robotic arm, it is clear that the robotic arm can extend to the location of the carton_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the carton_1 in the image. The carton_1 is located on the floor, near the center of the image. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned in the middle of the room and has a long reach, extending from its base to its gripper. Given the position of the carton_1 on the floor and the reach of the robotic arm, it is clear that the robotic arm can extend to the location of the carton_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.0, 0.0, "First, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, near the robotic arm. Next, I will check the state of the carton_1 to determine if it is open or closed. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.", true, "<explanation>\nFirst, I will look for the object labeled \"carton_1\" in the image. The carton_1 is located on the floor, near the robotic arm. Next, I will check the state of the carton_1 to determine if it is open or closed. The carton_1 appears to be closed, as there are no visible signs of it being open, such as an open flap or contents spilling out.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_1\". The plaything_1 is on the floor, and the robotic arm is not holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_1\". The plaything_1 is on the floor, and the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_2\" in the image. The plaything_2 is the object on the floor, which is circled in red. I will then check if the robotic arm is holding this object. In the image, the robotic arm is not holding the plaything_2, as it is on the floor. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_2\" in the image. The plaything_2 is the object on the floor, which is circled in red. I will then check if the robotic arm is holding this object. In the image, the robotic arm is not holding the plaything_2, as it is on the floor. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_3\" in the image. The image shows a red circle around the object labeled \"plaything_3\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_3\" in the image. The image shows a red circle around the object labeled \"plaything_3\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_4\" in the image. The image shows a red circle around the object labeled \"plaything_4\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look for the object labeled \"plaything_4\" in the image. The image shows a red circle around the object labeled \"plaything_4\" on the floor. The robotic arm is not in contact with this object and does not appear to be holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["yes", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "no"], "reachable plaything_2": ["yes", "no"], "reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "no"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,plaything_3": ["no", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_3": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "no"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_1": ["yes", "no"], "nextto plaything_3,plaything_2": ["yes", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["yes", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5869565217391305, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.5714285714285714, "no_correct": 24, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.2, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8125, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8125, "no_correct": 13, "no_total": 16}, "inside": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 4, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "no"], "reachable plaything_2": ["yes", "no"], "reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["yes", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "no"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["no", "no"], "ontop plaything_1,plaything_3": ["no", "no"], "ontop plaything_1,plaything_4": ["yes", "no"], "ontop plaything_1,carton_1": ["yes", "no"], "ontop plaything_2,plaything_1": ["no", "no"], "ontop plaything_2,plaything_3": ["no", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_3": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["yes", "no"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_3,plaything_1": ["yes", "no"], "nextto plaything_3,plaything_2": ["yes", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["yes", "yes"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5652173913043478, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.5476190476190477, "no_correct": 23, "no_total": 42, "predicates": {"reachable": {"accuracy": 0.2, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 12, "no_total": 16}, "inside": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.375, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 4, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the length and position of the robotic arm, it appears that it can reach objects within a certain radius around its base. The plaything_2 is within this reachable area, as it is close to the robotic arm's extended position.", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the length and position of the robotic arm, it appears that it can reach objects within a certain radius around its base. The plaything_2 is within this reachable area, as it is close to the robotic arm's extended position.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_4 in the image. The plaything_4 is located on the floor, near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. The arm appears to be able to reach objects within a certain radius around its base. Given the position of the plaything_4 and the reach of the robotic arm, it seems that the plaything_4 is within the reachable area of the agent. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the plaything_4 in the image. The plaything_4 is located on the floor, near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. The arm appears to be able to reach objects within a certain radius around its base. Given the position of the plaything_4 and the reach of the robotic arm, it seems that the plaything_4 is within the reachable area of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. The arm appears to be long enough to reach objects within a certain radius around its base. Given the position of the plaything_2 and the reach of the robotic arm, it seems that the arm can extend to the location of the plaything_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor near the bottom right corner of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. The arm appears to be long enough to reach objects within a certain radius around its base. Given the position of the plaything_2 and the reach of the robotic arm, it seems that the arm can extend to the location of the plaything_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding plaything_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"plaything_4\". The image shows a red circle around the object labeled \"plaything_4\", which is a small toy located on the floor near the center of the image. Finally, I will check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_4\" and it is not holding it.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"plaything_4\". The image shows a red circle around the object labeled \"plaything_4\", which is a small toy located on the floor near the center of the image. Finally, I will check if the robotic arm is holding this object. The robotic arm is not in contact with the \"plaything_4\" and it is not holding it.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"plaything_2.\" In the image, \"plaything_2\" is the orange plaything located on the floor. I will then check if the robotic arm is holding this specific plaything. The robotic arm is not in contact with \"plaything_2,\" and \"plaything_2\" is on the floor, not being held by the robotic arm. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"plaything_2.\" In the image, \"plaything_2\" is the orange plaything located on the floor. I will then check if the robotic arm is holding this specific plaything. The robotic arm is not in contact with \"plaything_2,\" and \"plaything_2\" is on the floor, not being held by the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,plaything_4": ["yes", 0.0, 0.0, "First, I will identify the objects labeled as plaything_2 and plaything_4 in the image. The plaything_2 is the orange dinosaur toy, and the plaything_4 is the gray dinosaur toy. Next, I will determine the spatial relationship between these two objects. The orange dinosaur toy (plaything_2) is positioned above the gray dinosaur toy (plaything_4). Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects labeled as plaything_2 and plaything_4 in the image. The plaything_2 is the orange dinosaur toy, and the plaything_4 is the gray dinosaur toy. Next, I will determine the spatial relationship between these two objects. The orange dinosaur toy (plaything_2) is positioned above the gray dinosaur toy (plaything_4). Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto plaything_2,plaything_4": ["yes", 0.0, 0.0, "First, I will identify the objects labeled as plaything_2 and plaything_4 in the image. The plaything_2 is the orange dinosaur toy located on the floor near the center of the image. The plaything_4 is the gray dinosaur toy located slightly to the right of the plaything_2. To determine if they are next to each other, I will check their relative positions. The plaything_2 and plaything_4 are both on the floor and are positioned close to each other, indicating that they are next to each other.", false, "<explanation>\nFirst, I will identify the objects labeled as plaything_2 and plaything_4 in the image. The plaything_2 is the orange dinosaur toy located on the floor near the center of the image. The plaything_4 is the gray dinosaur toy located slightly to the right of the plaything_2. To determine if they are next to each other, I will check their relative positions. The plaything_2 and plaything_4 are both on the floor and are positioned close to each other, indicating that they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,carton_1": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,carton_1": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom center of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the table, towards the upper right section of the image. Given the position of the robotic arm and the distance to the \"carton_1,\" it appears that the robotic arm would need to extend significantly to reach the \"carton_1.\" Considering typical reach limitations of robotic arms in such environments, it is unlikely that the \"carton_1\" is within reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom center of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the table, towards the upper right section of the image. Given the position of the robotic arm and the distance to the \"carton_1,\" it appears that the robotic arm would need to extend significantly to reach the \"carton_1.\" Considering typical reach limitations of robotic arms in such environments, it is unlikely that the \"carton_1\" is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_2, which is labeled and positioned on the table in the center of the image. To determine if plaything_2 is in reach of the agent, I will consider the distance and any obstacles between them. The robotic arm appears to have a range of motion that can extend to the table where plaything_2 is located. There are no visible obstacles blocking the path from the robotic arm to the table. Therefore, plaything_2 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_2, which is labeled and positioned on the table in the center of the image. To determine if plaything_2 is in reach of the agent, I will consider the distance and any obstacles between them. The robotic arm appears to have a range of motion that can extend to the table where plaything_2 is located. There are no visible obstacles blocking the path from the robotic arm to the table. Therefore, plaything_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_3, which is labeled in the image. The plaything_3 is positioned on the left side of the image, on top of a surface. I will then assess the reach of the robotic arm. The robotic arm appears to have a limited reach, primarily within its immediate vicinity on the right side of the image. Given the position of the plaything_3 on the left side and the apparent reach of the robotic arm, the plaything_3 is not within reach of the agent.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_3, which is labeled in the image. The plaything_3 is positioned on the left side of the image, on top of a surface. I will then assess the reach of the robotic arm. The robotic arm appears to have a limited reach, primarily within its immediate vicinity on the right side of the image. Given the position of the plaything_3 on the left side and the apparent reach of the robotic arm, the plaything_3 is not within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_4, which is labeled and positioned on the table in the center of the image. To determine if plaything_4 is in reach of the agent, I will consider the distance and any obstacles between them. The robotic arm appears to have a range of motion that can extend to the table where plaything_4 is located. There are no visible obstacles blocking the path from the robotic arm to the table. Therefore, plaything_4 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned on the right side of the image. Next, I will locate the plaything_4, which is labeled and positioned on the table in the center of the image. To determine if plaything_4 is in reach of the agent, I will consider the distance and any obstacles between them. The robotic arm appears to have a range of motion that can extend to the table where plaything_4 is located. There are no visible obstacles blocking the path from the robotic arm to the table. Therefore, plaything_4 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom center of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the table, towards the upper right section of the image. Given the position of the robotic arm and the distance to the \"carton_1,\" it appears that the robotic arm would need to extend significantly to reach the \"carton_1.\" Considering typical reach limitations of robotic arms in such environments, it is unlikely that the \"carton_1\" is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom center of the image. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the table, towards the upper right section of the image. Given the position of the robotic arm and the distance to the \"carton_1,\" it appears that the robotic arm would need to extend significantly to reach the \"carton_1.\" Considering typical reach limitations of robotic arms in such environments, it is unlikely that the \"carton_1\" is within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom right of the image, close to a toilet. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the left side of the image, near a toy and some other objects on a surface. Given the positions, the \"carton_1\" is not within the immediate reach of the robotic arm, as it is located across the room from the agent.", false, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is positioned near the bottom right of the image, close to a toilet. Next, I will locate the object labeled \"carton_1.\" The \"carton_1\" is positioned on the left side of the image, near a toy and some other objects on a surface. Given the positions, the \"carton_1\" is not within the immediate reach of the robotic arm, as it is located across the room from the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_2, which is labeled in the image. The plaything_2 is positioned on the floor, near the center of the image. I will then determine if the plaything_2 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_2 is positioned beyond this reach, as it is further away from the arm than the other objects the arm is interacting with. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_2, which is labeled in the image. The plaything_2 is positioned on the floor, near the center of the image. I will then determine if the plaything_2 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_2 is positioned beyond this reach, as it is further away from the arm than the other objects the arm is interacting with. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_3": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_3, which is labeled in the image. The plaything_3 is positioned on the floor, near the center of the image. I will then determine if the plaything_3 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_3 is positioned beyond this reach, as it is not within the immediate vicinity of the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_3, which is labeled in the image. The plaything_3 is positioned on the floor, near the center of the image. I will then determine if the plaything_3 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_3 is positioned beyond this reach, as it is not within the immediate vicinity of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable plaything_4": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_4, which is labeled in the image. The plaything_4 is positioned on the floor, near the center of the image. I will then determine if the plaything_4 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_4 is positioned beyond this reach, as it is not within the immediate vicinity of the robotic arm. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm, which is positioned in the bottom right corner of the image. Next, I will locate the plaything_4, which is labeled in the image. The plaything_4 is positioned on the floor, near the center of the image. I will then determine if the plaything_4 is within the reach of the robotic arm. The robotic arm appears to have a limited reach, and the plaything_4 is positioned beyond this reach, as it is not within the immediate vicinity of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_1": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor, near the bottom right corner of the image. Next, I will determine the position of the agent, which is the robotic arm. The agent appears to be positioned above the plaything_1, as indicated by the red lines extending from the agent to the plaything_1. Given the agent's position and the reach of a robotic arm, it is reasonable to conclude that the plaything_1 is within the agent's reach.", true, "Question: Is the plaything_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the plaything_1 in the image. The plaything_1 is located on the floor, near the bottom right corner of the image. Next, I will determine the position of the agent, which is the robotic arm. The agent appears to be positioned above the plaything_1, as indicated by the red lines extending from the agent to the plaything_1. Given the agent's position and the reach of a robotic arm, it is reasonable to conclude that the plaything_1 is within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_2": ["no", 0.0, 0.0, "First, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the center of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the left of the plaything_2, and its reach is indicated by the red lines extending from it. The red lines do not extend far enough to reach the plaything_2, which is situated beyond the reach of the robotic arm. Therefore, the answer is \"No\".", true, "Question: Is the plaything_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the plaything_2 in the image. The plaything_2 is located on the floor, near the center of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the left of the plaything_2, and its reach is indicated by the red lines extending from it. The red lines do not extend far enough to reach the plaything_2, which is situated beyond the reach of the robotic arm. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_4": ["yes", 0.0, 0.0, "First, I will identify the location of the plaything_4. The plaything_4 is located on the floor, near the couch, and is highlighted by a red bounding box. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is typically mounted in a fixed position and has a limited reach radius. Given the position of the plaything_4 on the floor and the typical reach of a robotic arm in such a setting, the plaything_4 appears to be within the reachable area of the agent. Therefore, the answer is \"Yes\".", false, "Question: Is the plaything_4 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the plaything_4. The plaything_4 is located on the floor, near the couch, and is highlighted by a red bounding box. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is typically mounted in a fixed position and has a limited reach radius. Given the position of the plaything_4 on the floor and the typical reach of a robotic arm in such a setting, the plaything_4 appears to be within the reachable area of the agent. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable carton_1": ["no", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. The robotic arm is located in the bottom right corner of the image. Next, I will locate the object named \"carton_1\". The carton_1 is located in the top left corner of the image, on top of a table. Given the positions of the robotic arm and the carton_1, the carton_1 is not within the reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. The robotic arm is located in the bottom right corner of the image. Next, I will locate the object named \"carton_1\". The carton_1 is located in the top left corner of the image, on top of a table. Given the positions of the robotic arm and the carton_1, the carton_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_3": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.", false, "Question: Is the carton_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the object labeled \"carton_1\" in the image. The robotic arm is positioned near the center of the image, and the \"carton_1\" is located within the red bounding box on the right side of the image. The distance between the robotic arm and the \"carton_1\" appears to be within a reasonable reach for the robotic arm, considering the typical range of motion for such an agent in a virtual household simulator.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_4": ["no", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_4,plaything_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.375, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 2, "no_total": 6, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_3": ["no", "no"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["yes", "yes"], "holding plaything_3": ["yes", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["yes", "no"], "ontop plaything_3,plaything_2": ["yes", "no"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["yes", "no"], "ontop plaything_4,plaything_3": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_3,plaything_2": ["yes", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["no", "no"], "nextto plaything_4,plaything_2": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.3793103448275862, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.36, "no_correct": 9, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.2222222222222222, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.2222222222222222, "no_correct": 2, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 3, "no_total": 9}}}, "step": 3, "actions": ["navigate-to(carton_1)", "place-next-to(plaything_3, carton_1)", "place-next-to(plaything_2, carton_1)", "place-next-to(plaything_4, carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable plaything_3": ["no", "no"], "reachable plaything_4": ["no", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_2": ["yes", "yes"], "holding plaything_3": ["yes", "no"], "holding plaything_4": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_3": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_3,plaything_2": ["no", "no"], "ontop plaything_3,plaything_4": ["yes", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_2": ["yes", "no"], "ontop plaything_4,plaything_3": ["yes", "no"], "ontop plaything_4,carton_1": ["yes", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["yes", "no"], "nextto plaything_2,plaything_3": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_3,plaything_2": ["no", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,plaything_3": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4827586206896552, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.52, "no_correct": 13, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 3, "no_total": 9}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 6, "no_total": 9}}}, "step": 4, "actions": ["navigate-to(plaything_1)", "navigate-to(carton_1)", "place-next-to(plaything_3, carton_1)", "place-next-to(plaything_2, carton_1)", "place-next-to(plaything_4, carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6551724137931034, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.7391304347826086, "no_correct": 17, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}}}, "step": 5, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 6, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 7, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 8, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 9, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 10, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 11, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 12, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6551724137931034, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.7391304347826086, "no_correct": 17, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}}}, "step": 13, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 14, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 15, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 16, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["no", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.7391304347826086, "no_correct": 17, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.875, "no_correct": 7, "no_total": 8}}}, "step": 17, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["no", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 18, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.5862068965517241, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6521739130434783, "no_correct": 15, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.625, "no_correct": 5, "no_total": 8}}}, "step": 19, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_1": ["yes", "yes"], "reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["no", "yes"], "holding plaything_1": ["no", "no"], "holding plaything_2": ["no", "yes"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_1,plaything_2": ["yes", "no"], "ontop plaything_1,plaything_4": ["no", "no"], "ontop plaything_1,carton_1": ["no", "no"], "ontop plaything_2,plaything_1": ["yes", "no"], "ontop plaything_2,plaything_4": ["yes", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_1": ["yes", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_1,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_1,plaything_2": ["no", "no"], "nextto plaything_1,plaything_4": ["no", "no"], "nextto plaything_1,carton_1": ["no", "yes"], "nextto plaything_2,plaything_1": ["yes", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"], "nextto plaything_4,plaything_1": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6206896551724138, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.6956521739130435, "no_correct": 16, "no_total": 23, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.5555555555555556, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 20, "actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the base of the chair. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above and to the right of the gym_shoe_1. Given the length and flexibility of the robotic arm, it seems plausible that the arm can extend downwards and to the left to reach the gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the base of the chair. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above and to the right of the gym_shoe_1. Given the length and flexibility of the robotic arm, it seems plausible that the arm can extend downwards and to the left to reach the gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the base of the chair. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above and to the right of the gym_shoe_1. Given the length and flexibility of the robotic arm, it seems plausible that the arm can extend downwards and to the left to reach the gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the base of the chair. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above and to the right of the gym_shoe_1. Given the length and flexibility of the robotic arm, it seems plausible that the arm can extend downwards and to the left to reach the gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. In the image, the robotic arm is holding a gym shoe, which is labeled as gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. In the image, the robotic arm is holding a gym shoe, which is labeled as gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["no", 0.0, 0.0, "First, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near a shelf, and its reach appears to be limited to the area around the shelf and the floor directly beneath it. Given the distance between the sock_2 and the robotic arm, it is clear that the sock_2 is not within the reach of the agent. Therefore, the answer is \"No\".", false, "Question: Is the sock_2 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the bottom left corner of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near a shelf, and its reach appears to be limited to the area around the shelf and the floor directly beneath it. Given the distance between the sock_2 and the robotic arm, it is clear that the sock_2 is not within the reach of the agent. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is the shoe that the robotic arm is holding. Then, I will check if the gym_shoe_1 is within reach of the agent. Since the robotic arm is the agent and it is currently holding the gym_shoe_1, the gym_shoe_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is the shoe that the robotic arm is holding. Then, I will check if the gym_shoe_1 is within reach of the agent. Since the robotic arm is the agent and it is currently holding the gym_shoe_1, the gym_shoe_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_2 in the image. The table_2 is the table in the center of the image. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned to the right of the table_2 and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_2 in the image. The table_2 is the table in the center of the image. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned to the right of the table_2 and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Then, I will check if the robotic arm, which is the agent, can reach the gym_shoe_1. The robotic arm is positioned near the table and its reach extends over the table. Therefore, the gym_shoe_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Then, I will check if the robotic arm, which is the agent, can reach the gym_shoe_1. The robotic arm is positioned near the table and its reach extends over the table. Therefore, the gym_shoe_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look at what the robotic arm is holding. In the image, the robotic arm is holding an object that appears to be a gym shoe, specifically the one labeled gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look at what the robotic arm is holding. In the image, the robotic arm is holding an object that appears to be a gym shoe, specifically the one labeled gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_2 in the image. The table_2 is the table in the center of the image. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned to the right of the table_2 and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_2 in the image. The table_2 is the table in the center of the image. Next, I will determine if the robotic arm can reach the table_2. The robotic arm is positioned to the right of the table_2 and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"ontop gym_shoe_1,table_2": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Next, I will identify the table_2 in the image. The table_2 is the long table in the center of the image. The gym_shoe_1 is on top of the table_2.", true, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Next, I will identify the table_2 in the image. The table_2 is the long table in the center of the image. The gym_shoe_1 is on top of the table_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" in the image. The gym_shoe_1 is the shoe placed on the table. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is not holding the gym_shoe_1, as it is placed on the table.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look for the object labeled \"gym_shoe_1\" in the image. The gym_shoe_1 is the shoe placed on the table. Finally, I will check if the robotic arm is holding the gym_shoe_1. The robotic arm is not holding the gym_shoe_1, as it is placed on the table.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["no", 0.0, 0.0, "First, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a significant range of motion, but it is positioned to the right side of the image. Given the position of the sock_2 on the floor and the position of the robotic arm, the sock_2 is not within the immediate reach of the agent without moving the arm or the base it is mounted on. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a structure and has a significant range of motion, but it is positioned to the right side of the image. Given the position of the sock_2 on the floor and the position of the robotic arm, the sock_2 is not within the immediate reach of the agent without moving the arm or the base it is mounted on. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the right side of the image, which has some boxes on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table's surface. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the right side of the image, which has some boxes on it. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table's surface. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table, near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image and extends towards the table. Given the length and position of the robotic arm, it seems capable of reaching the gym_shoe_1 on the table. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table, near the center of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right side of the image and extends towards the table. Given the length and position of the robotic arm, it seems capable of reaching the gym_shoe_1 on the table. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a gym shoe, which is located at the bottom right of the image. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a gym shoe, which is located at the bottom right of the image. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a gym shoe, which is located at the bottom right of the image. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a gym shoe, which is located at the bottom right of the image. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The robotic arm appears to be able to extend and rotate, suggesting it has a significant range of motion. I will then locate the table_2 in the image. The table_2 is the wooden table in the center of the image. Given the position and apparent flexibility of the robotic arm, it seems plausible that the arm can reach the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["no", "yes"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["yes", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "ontop gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding sock_2": ["yes", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto sock_2,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"], "ontop gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 7, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"], "ontop gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the wall, and under the table. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the gym_shoe_1 and appears to have a reach that extends downward and to the left. Given the position of the gym_shoe_1 and the reach of the robotic arm, it is likely that the robotic arm can reach the gym_shoe_1.", true, "Question: Is the gym_shoe_1 in reach of the agent?\n<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the wall, and under the table. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the gym_shoe_1 and appears to have a reach that extends downward and to the left. Given the position of the gym_shoe_1 and the reach of the robotic arm, it is likely that the robotic arm can reach the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the wall, and under the table. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the gym_shoe_1 and appears to have a reach that extends downward and to the left. Given the position of the gym_shoe_1 and the reach of the robotic arm, it is likely that the robotic arm can reach the gym_shoe_1.", true, "Question: Is the gym_shoe_1 in reach of the agent?\n<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the wall, and under the table. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the gym_shoe_1 and appears to have a reach that extends downward and to the left. Given the position of the gym_shoe_1 and the reach of the robotic arm, it is likely that the robotic arm can reach the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding an object that appears to be a shoe. I will now verify if this shoe is labeled as gym_shoe_1. Upon close inspection, the shoe being held by the robotic arm is indeed labeled as gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding an object that appears to be a shoe. I will now verify if this shoe is labeled as gym_shoe_1. Upon close inspection, the shoe being held by the robotic arm is indeed labeled as gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the robotic arm. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned in such a way that it can extend its gripper to reach objects on the floor within its vicinity. Given the proximity of the sock_2 to the robotic arm, it is reasonable to conclude that the sock_2 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the sock_2 in the image. The sock_2 is located on the floor, near the robotic arm. Next, I will assess the reach of the robotic arm, which is the agent. The robotic arm appears to be positioned in such a way that it can extend its gripper to reach objects on the floor within its vicinity. Given the proximity of the sock_2 to the robotic arm, it is reasonable to conclude that the sock_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is the shoe that the robotic arm is holding. Then, I will check if the gym_shoe_1 is within the reach of the agent. The agent is the robotic arm, and it is currently holding the gym_shoe_1. Therefore, the gym_shoe_1 is in reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is the shoe that the robotic arm is holding. Then, I will check if the gym_shoe_1 is within the reach of the agent. The agent is the robotic arm, and it is currently holding the gym_shoe_1. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the left side of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the left side of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, table_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding an object that appears to be a shoe. I will now check if this shoe is labeled as gym_shoe_1. The shoe being held by the robotic arm is labeled as gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will check if the robotic arm is holding any object. The robotic arm is holding an object that appears to be a shoe. I will now check if this shoe is labeled as gym_shoe_1. The shoe being held by the robotic arm is labeled as gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the left side of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the table_1 in the image. The table_1 is the table on the left side of the image. Next, I will determine if the robotic arm can reach the table_1. The robotic arm appears to be positioned near the table_1, and its reach seems to extend to the table_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"nextto gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will locate the gym_shoe_1 in the image. The gym_shoe_1 is on the floor to the left side of the image. Next, I will locate the table_1 in the image. The table_1 is on the right side of the image, with various items on top of it. The gym_shoe_1 is not in close proximity to the table_1. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will locate the gym_shoe_1 in the image. The gym_shoe_1 is on the floor to the left side of the image. Next, I will locate the table_1 in the image. The table_1 is on the right side of the image, with various items on top of it. The gym_shoe_1 is not in close proximity to the table_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "holding gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look at what the robotic arm is holding. The robotic arm is not holding any object. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look at what the robotic arm is holding. The robotic arm is not holding any object. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor to the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned near the center of the image and can move within the room. Given the position of the gym_shoe_1 and the mobility of the robotic arm, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor to the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned near the center of the image and can move within the room. Given the position of the gym_shoe_1 and the mobility of the robotic arm, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object named \"sock_2\" in the image. The sock_2 is located on the floor. Finally, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding the sock_2, as it is on the floor.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look for the object named \"sock_2\" in the image. The sock_2 is located on the floor. Finally, I will check if the robotic arm is holding the sock_2. The robotic arm is not holding the sock_2, as it is on the floor.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will look at what the robotic arm is holding. The robotic arm is holding an object that matches the appearance of gym_shoe_1, which is a black and white sneaker. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will look at what the robotic arm is holding. The robotic arm is holding an object that matches the appearance of gym_shoe_1, which is a black and white sneaker. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop gym_shoe_1,sock_2": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is a gym shoe labeled gym_shoe_1 and a sock labeled sock_2. Next, I will determine the spatial relationship between these two objects. The gym_shoe_1 is clearly positioned above the sock_2, indicating that it is on top of it. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the objects in the image. There is a gym shoe labeled gym_shoe_1 and a sock labeled sock_2. Next, I will determine the spatial relationship between these two objects. The gym_shoe_1 is clearly positioned above the sock_2, indicating that it is on top of it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "ontop gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of the table_1. In the image, the gym_shoe_1 is clearly visible and is positioned on the floor, not on top of the table_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. Then, I will check if it is on top of the table_1. In the image, the gym_shoe_1 is clearly visible and is positioned on the floor, not on top of the table_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,sock_2": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is a gym shoe labeled gym_shoe_1 and a sock labeled sock_2. Next, I will determine their relative positions. The gym_shoe_1 is positioned to the left of the sock_2, indicating that they are next to each other.", false, "<explanation>\nFirst, I will identify the objects in the image. There is a gym shoe labeled gym_shoe_1 and a sock labeled sock_2. Next, I will determine their relative positions. The gym_shoe_1 is positioned to the left of the sock_2, indicating that they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_1": ["no", 0.0, 0.0, "First, I will identify the objects in the image. There is a robotic arm holding a gym shoe labeled \"gym_shoe_1\". There is also a table labeled \"table_1\" visible in the image.\n\nNext, I will determine the relative positions of these objects. The gym shoe is being held by the robotic arm, and the table is positioned to the left of the robotic arm.\n\nSince the gym shoe is being held by the robotic arm and is not in direct contact with the table, it is not next to the table.\n\nTherefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image. There is a robotic arm holding a gym shoe labeled \"gym_shoe_1\". There is also a table labeled \"table_1\" visible in the image.\n\nNext, I will determine the relative positions of these objects. The gym shoe is being held by the robotic arm, and the table is positioned to the left of the robotic arm.\n\nSince the gym shoe is being held by the robotic arm and is not in direct contact with the table, it is not next to the table.\n\nTherefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(table_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable table_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent, which is the robotic arm. Then, I will identify the table_2, which is the table in the foreground of the image. The robotic arm is positioned close to the table_2, and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent, which is the robotic arm. Then, I will identify the table_2, which is the table in the foreground of the image. The robotic arm is positioned close to the table_2, and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned near the table and appears to be able to extend its reach to the objects on the table. Given the position of the robotic arm and the location of the gym_shoe_1 on the table, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the gym_shoe_1 in the image. The gym_shoe_1 is located on the table. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned near the table and appears to be able to extend its reach to the objects on the table. Given the position of the robotic arm and the location of the gym_shoe_1 on the table, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(gym_shoe_1, table_2)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm. Then, I will look at what the robotic arm is holding. In the image, the robotic arm is holding an object that appears to be a gym shoe, specifically the one labeled gym_shoe_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm. Then, I will look at what the robotic arm is holding. In the image, the robotic arm is holding an object that appears to be a gym shoe, specifically the one labeled gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent, which is the robotic arm. Then, I will identify the table_2, which is the table in the foreground of the image. The robotic arm is positioned close to the table_2, and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent, which is the robotic arm. Then, I will identify the table_2, which is the table in the foreground of the image. The robotic arm is positioned close to the table_2, and its reachable area seems to cover the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"updated_non_visible_preds": {"nextto gym_shoe_1,table_2": {"before": false, "after": true}, "holding gym_shoe_1": {"before": true, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(sock_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable sock_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable sock_2": ["yes", 0.0, 0.0, "First, I will locate the sock_2 in the image. The sock_2 is on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a rail system along the wall, allowing it to move horizontally. The arm can extend downward and forward. Given the position of the sock_2 on the floor and the mobility of the robotic arm, it is reasonable to conclude that the arm can reach the sock_2 by extending downward and possibly moving along the rail if necessary. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will locate the sock_2 in the image. The sock_2 is on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on a rail system along the wall, allowing it to move horizontally. The arm can extend downward and forward. Given the position of the sock_2 on the floor and the mobility of the robotic arm, it is reasonable to conclude that the arm can reach the sock_2 by extending downward and possibly moving along the rail if necessary. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the location of the agent, which is the robotic arm. Then, I will locate the table_1 in the image. The table_1 is the table on the right side of the image, which has a lamp on it and some boxes underneath it. The robotic arm appears to be positioned above this table, suggesting that it is within its reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the location of the agent, which is the robotic arm. Then, I will locate the table_1 in the image. The table_1 is the table on the right side of the image, which has a lamp on it and some boxes underneath it. The robotic arm appears to be positioned above this table, suggesting that it is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable gym_shoe_1": {"before": true, "after": false}, "reachable sock_1": {"before": false, "after": false}, "reachable table_2": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will locate the gym_shoe_1 in the image. The gym_shoe_1 is on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the gym_shoe_1 on the floor and the apparent reach of the robotic arm, it seems plausible that the arm can extend down to pick up the shoe. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will locate the gym_shoe_1 in the image. The gym_shoe_1 is on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be mounted on the wall and has a significant range of motion. Given the position of the gym_shoe_1 on the floor and the apparent reach of the robotic arm, it seems plausible that the arm can extend down to pick up the shoe. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".", false, "Question: Is the table_2 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": true, "after": false}, "reachable table_1": {"before": true, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm on the right side. Then, I will check if the robotic arm is holding any object. Upon close inspection, the robotic arm is holding a black object. I will now check if this object is the gym_shoe_1. The object held by the robotic arm appears to be a shoe, and given the context and the naming convention, it is likely the gym_shoe_1. Therefore, the answer is \"Yes\".", true, "```\nQuestion: Is the agent holding the gym_shoe_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm on the right side. Then, I will check if the robotic arm is holding any object. Upon close inspection, the robotic arm is holding a black object. I will now check if this object is the gym_shoe_1. The object held by the robotic arm appears to be a shoe, and given the context and the naming convention, it is likely the gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>\n```", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".", true, "Question: Is the table_2 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image, which is the robotic arm on the right side. Then, I will check if the robotic arm is holding any object. Upon close inspection, the robotic arm is holding a black object. I will now check if this object is the gym_shoe_1. The object appears to be a shoe, and given the context and the labeling, it is likely the gym_shoe_1. Therefore, the answer is \"Yes\".", true, "```\nQuestion: Is the agent holding the gym_shoe_1?\n<explanation>\nFirst, I will identify the agent in the image, which is the robotic arm on the right side. Then, I will check if the robotic arm is holding any object. Upon close inspection, the robotic arm is holding a black object. I will now check if this object is the gym_shoe_1. The object appears to be a shoe, and given the context and the labeling, it is likely the gym_shoe_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>\n```", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".", true, "Question: Is the table_2 in reach of the agent?\n<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will locate the table_2. The table_2 is the wooden table in the center of the image with chairs around it. To determine if the table_2 is in reach of the agent, I will consider the length of the robotic arm and its position relative to the table. The robotic arm appears to be long enough to reach the table_2 from its current position. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["yes", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6153846153846154, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.4444444444444444, "no_correct": 4, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}}}, "step": 3, "actions": ["place-next-to(gym_shoe_1, table_1)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "no"], "holding sock_2": ["no", "no"], "ontop gym_shoe_1,sock_2": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "yes"], "nextto sock_2,gym_shoe_1": ["no", "no"], "nextto sock_2,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.8461538461538461, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 4, "actions": ["grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_2": ["yes", "no"], "ontop gym_shoe_1,sock_2": ["yes", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop sock_2,gym_shoe_1": ["no", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto gym_shoe_1,sock_2": ["yes", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto sock_2,gym_shoe_1": ["yes", "no"], "nextto sock_2,table_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6923076923076923, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 5, "actions": ["navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "yes"], "ontop gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,table_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 6, "actions": ["place-next-to(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable sock_2": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "holding sock_2": ["yes", "no"], "ontop sock_2,table_1": ["no", "no"], "nextto sock_2,table_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 8, "actions": ["navigate-to(gym_shoe_1)", "navigate-to(table_2)", "place-on(sock_2, table_2)", "navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,table_2": ["yes", "no"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,table_2": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6153846153846154, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 9, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,table_2": ["yes", "no"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,table_2": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6153846153846154, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.75, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.75, "no_correct": 3, "no_total": 4}, "nextto": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 10, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, extending towards the gym_shoe_1. The red lines indicate the reachable area of the robotic arm. The gym_shoe_1 is within the area covered by these red lines, suggesting that it is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the bottom center of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, extending towards the gym_shoe_1. The red lines indicate the reachable area of the robotic arm. The gym_shoe_1 is within the area covered by these red lines, suggesting that it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_1": ["no", 0.0, 0.0, "First, I will identify the object labeled \"sock_1\" in the image. The sock_1 is located on the bed, towards the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The red lines indicate the reachable area of the robotic arm. The sock_1 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the object labeled \"sock_1\" in the image. The sock_1 is located on the bed, towards the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The red lines indicate the reachable area of the robotic arm. The sock_1 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table labeled \"table_1\" in the image. Then, I will check the position of the robotic arm, which is the agent. The agent's arm extends from the top right corner of the image. I will trace the arm's reach to see if it can extend to the table_1. The table_1 is located towards the center-left of the image. The agent's arm appears to be able to reach the table_1 based on the visible length and direction of the arm. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the table labeled \"table_1\" in the image. Then, I will check the position of the robotic arm, which is the agent. The agent's arm extends from the top right corner of the image. I will trace the arm's reach to see if it can extend to the table_1. The table_1 is located towards the center-left of the image. The agent's arm appears to be able to reach the table_1 based on the visible length and direction of the arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the middle of the image, with a blue object on it. Then, I will check if the robotic arm can reach the table_2. The robotic arm has two red lines extending from it, indicating its reach. The table_2 is within the range of these red lines, suggesting that the robotic arm can reach it.", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the middle of the image, with a blue object on it. Then, I will check if the robotic arm can reach the table_2. The robotic arm has two red lines extending from it, indicating its reach. The table_2 is within the range of these red lines, suggesting that the robotic arm can reach it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue object on it. I will then check if the robotic arm can reach the table_2. The robotic arm's reach is indicated by the red lines extending from it. The red lines do not extend to the table_2, indicating that the robotic arm cannot reach it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 1, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 2, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12}}}, "step": 3, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 4, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 5, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 6, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 7, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12}}}, "step": 8, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 9, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 10, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 11, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 12, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 13, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 14, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 15, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 16, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5833333333333334, "no_correct": 7, "no_total": 12}}}, "step": 17, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6410256410256411, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.625, "no_correct": 20, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.7333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 18, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 19, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable notebook_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "ontop notebook_1,sock_1": ["no", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "yes"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"], "nextto notebook_1,sock_1": ["no", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.65625, "no_correct": 21, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.8333333333333334, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 20, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["no", 0.0, 0.0, "First, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the bed, towards the left side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The arm's reach is indicated by the red lines extending from the arm. By comparing the position of the gym_shoe_1 and the reach of the robotic arm, it is clear that the gym_shoe_1 is not within the reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the gym_shoe_1 in the image. The gym_shoe_1 is located on the floor, near the bed, towards the left side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The arm's reach is indicated by the red lines extending from the arm. By comparing the position of the gym_shoe_1 and the reach of the robotic arm, it is clear that the gym_shoe_1 is not within the reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable sock_1": ["no", 0.0, 0.0, "First, I will identify the location of the sock_1 in the image. The sock_1 is located on the bed, towards the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The red lines in the image indicate the reachable area of the robotic arm. The sock_1 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the sock_1 in the image. The sock_1 is located on the bed, towards the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image, near the kitchen area. The red lines in the image indicate the reachable area of the robotic arm. The sock_1 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable table_1": ["yes", 0.0, 0.0, "First, I will identify the table_1 in the image. The table_1 is the long table in the center of the image. Next, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the kitchen area. I will then assess the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. The table_1 is within the area covered by these red lines, indicating that it is within reach of the agent.", false, "<explanation>\nFirst, I will identify the table_1 in the image. The table_1 is the long table in the center of the image. Next, I will check the position of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the kitchen area. I will then assess the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. The table_1 is within the area covered by these red lines, indicating that it is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Then, I will check if the table_2 is within the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. The table_2 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will identify the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Then, I will check if the table_2 is within the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. The table_2 is outside the reachable area indicated by the red lines. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a red line that is connected to an object labeled \"gym_shoe_1\". Therefore, the robotic arm is holding the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a red line that is connected to an object labeled \"gym_shoe_1\". Therefore, the robotic arm is holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. Then, I will locate the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Finally, I will check if the table_2 is within the reachable area indicated by the red lines. The table_2 is within the reachable area of the robotic arm.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. Then, I will locate the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Finally, I will check if the table_2 is within the reachable area indicated by the red lines. The table_2 is within the reachable area of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a red line that is connected to an object labeled \"gym_shoe_1\". Therefore, the robotic arm is holding the gym_shoe_1.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will check if the robotic arm is holding any object. The robotic arm is holding a red line that is connected to an object labeled \"gym_shoe_1\". Therefore, the robotic arm is holding the gym_shoe_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. Then, I will locate the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Finally, I will check if the table_2 is within the reachable area indicated by the red lines. The table_2 is within the reachable area of the robotic arm.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will determine the reach of the robotic arm. The red lines in the image indicate the reachable area of the robotic arm. Then, I will locate the table_2 in the image. The table_2 is the table in the center of the image, with a blue chair next to it. Finally, I will check if the table_2 is within the reachable area indicated by the red lines. The table_2 is within the reachable area of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["yes", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["yes", "no"], "nextto notebook_1,sock_1": ["yes", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5384615384615384, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 0.59375, "no_correct": 19, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 6, "no_total": 12}}}, "step": 1, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["no", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "no"], "holding notebook_1": ["no", "no"], "holding sock_1": ["yes", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["yes", "no"], "ontop notebook_1,sock_1": ["yes", "no"], "ontop notebook_1,table_1": ["yes", "no"], "ontop notebook_1,table_2": ["yes", "no"], "ontop notebook_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,notebook_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "nextto gym_shoe_1,notebook_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto notebook_1,gym_shoe_1": ["yes", "no"], "nextto notebook_1,sock_1": ["yes", "no"], "nextto notebook_1,table_1": ["yes", "no"], "nextto notebook_1,table_2": ["yes", "yes"], "nextto notebook_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,notebook_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5128205128205128, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 0.5625, "no_correct": 18, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 10, "no_total": 14}, "nextto": {"accuracy": 0.4, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.4166666666666667, "no_correct": 5, "no_total": 12}}}, "step": 2, "actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the object labeled \"apple_1\" in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to extend and move within the kitchen environment. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the object labeled \"apple_1\" in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned above the countertop and appears to be able to extend and move within the kitchen environment. Given the proximity of the apple_1 to the robotic arm and the arm's apparent range of motion, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is located on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_2 is placed. Given the position and the apparent flexibility of the robotic arm, it seems feasible for the arm to reach the apple_2.", false, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is located on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_2 is placed. Given the position and the apparent flexibility of the robotic arm, it seems feasible for the arm to reach the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the positions, the electric_refrigerator_1 is not within the reach of the robotic arm as it is too far to the left. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the positions, the electric_refrigerator_1 is not within the reach of the robotic arm as it is too far to the left. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the positions, the electric_refrigerator_1 is not within the reach of the robotic arm as it is too far to the left. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, extending towards the center. Given the positions, the electric_refrigerator_1 is not within the reach of the robotic arm as it is too far to the left. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The electric_refrigerator_1 is the white object to the right of the robotic arm. The robotic arm is positioned close to the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The electric_refrigerator_1 is the white object to the right of the robotic arm. The robotic arm is positioned close to the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The electric_refrigerator_1 is the white object to the right of the robotic arm. The robotic arm is positioned close to the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The electric_refrigerator_1 is the white object to the right of the robotic arm. The robotic arm is positioned close to the refrigerator, suggesting it is within reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 0.0, 0.00015100929963675656, "First, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open, as it is not aligned with the rest of the refrigerator and the handle is visible.", false, "<explanation>\nFirst, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open, as it is not aligned with the rest of the refrigerator and the handle is visible.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is placed. Given the position of the apple_1 and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is placed. Given the position of the apple_1 and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to have a significant range of motion, but it is positioned on the countertop, which is to the right of the electric_refrigerator_1. Given the arm's position and the distance to the electric_refrigerator_1, it is unlikely that the arm can reach the refrigerator from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to have a significant range of motion, but it is positioned on the countertop, which is to the right of the electric_refrigerator_1. Given the arm's position and the distance to the electric_refrigerator_1, it is unlikely that the arm can reach the refrigerator from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is located. Given the position of the apple_1 and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is located. Given the position of the apple_1 and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"holding apple_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"apple_1\". The apple is visible on the countertop. I will then check if the robotic arm is holding this apple. The robotic arm is not in contact with the apple, and the apple is resting on the countertop. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm visible in the image. Next, I will look for the object labeled \"apple_1\". The apple is visible on the countertop. I will then check if the robotic arm is holding this apple. The robotic arm is not in contact with the apple, and the apple is resting on the countertop. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop apple_1,electric_refrigerator_1": ["yes", 0.0, 7.101537095457132e-05, "First, I will identify the objects in the image. There is an apple labeled \"apple_1\" and an electric refrigerator labeled \"electric_refrigerator_1\". Next, I will determine the positions of these objects. The apple is on the countertop, and the electric refrigerator is directly below the apple. Since the apple is above the electric refrigerator, it can be said that the apple is on top of the electric refrigerator.", false, "<explanation>\nFirst, I will identify the objects in the image. There is an apple labeled \"apple_1\" and an electric refrigerator labeled \"electric_refrigerator_1\". Next, I will determine the positions of these objects. The apple is on the countertop, and the electric refrigerator is directly below the apple. Since the apple is above the electric refrigerator, it can be said that the apple is on top of the electric refrigerator.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto apple_1,electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the objects in the image. There is an apple labeled \"apple_1\" and an electric refrigerator labeled \"electric_refrigerator_1\". Next, I will determine the positions of these objects. The apple is on the countertop, and the electric refrigerator is to the left of the apple. Since the apple is immediately to the right of the electric refrigerator, they are next to each other.", false, "<explanation>\nFirst, I will identify the objects in the image. There is an apple labeled \"apple_1\" and an electric refrigerator labeled \"electric_refrigerator_1\". Next, I will determine the positions of these objects. The apple is on the countertop, and the electric refrigerator is to the left of the apple. Since the apple is immediately to the right of the electric refrigerator, they are next to each other.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": false, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop to the right of the agent. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in front of the countertop and has the capability to extend and grasp objects within its reach. Given the proximity of the apple_1 to the agent and the agent's ability to manipulate objects on the countertop, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop to the right of the agent. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned in front of the countertop and has the capability to extend and grasp objects within its reach. Given the proximity of the apple_1 to the agent and the agent's ability to manipulate objects on the countertop, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["yes", "yes"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7847222222222222, "yes_accuracy": 0.8888888888888888, "yes_correct": 16, "yes_total": 18, "no_accuracy": 0.7698412698412699, "no_correct": 97, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9642857142857143, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.96, "no_correct": 48, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.48214285714285715, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.4807692307692308, "no_correct": 25, "no_total": 52}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}}}, "step": 3, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["yes", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "no"], "ontop apple_1,carrot_1": ["yes", "no"], "ontop apple_1,carrot_2": ["yes", "no"], "ontop apple_1,carrot_3": ["yes", "no"], "ontop apple_1,cabinet_1": ["yes", "no"], "ontop apple_1,electric_refrigerator_1": ["yes", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.6938775510204082, "no_correct": 68, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.625, "yes_accuracy": 0.7142857142857143, "yes_correct": 5, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "open": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "ontop": {"accuracy": 0.7619047619047619, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.7368421052631579, "no_correct": 28, "no_total": 38}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.55, "no_correct": 22, "no_total": 40}}}, "step": 5, "actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1. The apple_1 is on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is located. Given the position and the apparent range of motion of the robotic arm, it seems feasible for the arm to reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1. The apple_1 is on the countertop to the right of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned such that it can extend its reach to the countertop where the apple_1 is located. Given the position and the apparent range of motion of the robotic arm, it seems feasible for the arm to reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2. The apple_2 is on the countertop. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend to the apple_2. Given the proximity and the apparent flexibility of the robotic arm, it is reasonable to conclude that the apple_2 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_2. The apple_2 is on the countertop. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend to the apple_2. Given the proximity and the apparent flexibility of the robotic arm, it is reasonable to conclude that the apple_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, next to the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop with apples. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, next to the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop with apples. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, next to the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop with apples. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, next to the oven. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop with apples. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open, as it is not aligned with the rest of the refrigerator and the interior can be seen.", false, "<explanation>\nFirst, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open, as it is not aligned with the rest of the refrigerator and the interior can be seen.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the apple_1 and appears to be able to extend its reach to the countertop where the apple_1 is placed. Given the proximity and the apparent range of motion of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the apple_1 and appears to be able to extend its reach to the countertop where the apple_1 is placed. Given the proximity and the apparent range of motion of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop. The distance between the robotic arm and the electric_refrigerator_1 appears to be significant, suggesting that the robotic arm cannot physically reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop. The distance between the robotic arm and the electric_refrigerator_1 appears to be significant, suggesting that the robotic arm cannot physically reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the agent, which is the robotic arm. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend to the apple_1. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "Question: Is the apple_1 in reach of the agent?\n<explanation>\nFirst, I will identify the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the agent, which is the robotic arm. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend to the apple_1. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": {"updated_non_visible_preds": {"holding apple_1": {"before": false, "after": true}, "ontop apple_1,apple_1": {"before": null, "after": false}, "ontop apple_1,apple_2": {"before": false, "after": false}, "ontop apple_1,orange_1": {"before": false, "after": false}, "ontop apple_1,electric_refrigerator_1": {"before": false, "after": false}, "ontop apple_1,table_1": {"before": false, "after": false}, "nextto apple_1,apple_1": {"before": null, "after": false}, "nextto apple_1,apple_2": {"before": false, "after": false}, "nextto apple_1,orange_1": {"before": false, "after": false}, "nextto apple_1,electric_refrigerator_1": {"before": false, "after": false}, "nextto apple_1,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, adjacent to the oven. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop. Given the spatial arrangement, the electric_refrigerator_1 is not within the immediate reach of the robotic arm, as it is positioned too far to the left. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image, adjacent to the oven. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned on the right side of the image, near the countertop. Given the spatial arrangement, the electric_refrigerator_1 is not within the immediate reach of the robotic arm, as it is positioned too far to the left. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The refrigerator is located on the right side of the image. The robotic arm is positioned on the left side of the image, near the wall. Given the distance between the robotic arm and the refrigerator, it is clear that the robotic arm cannot reach the refrigerator from its current position. Therefore, the answer is \"No\".", false, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The refrigerator is located on the right side of the image. The robotic arm is positioned on the left side of the image, near the wall. Given the distance between the robotic arm and the refrigerator, it is clear that the robotic arm cannot reach the refrigerator from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The refrigerator is located on the right side of the image. The robotic arm is positioned on the left side of the image, near the wall. Given the distance between the robotic arm and the refrigerator, it is clear that the robotic arm cannot reach the refrigerator from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Then, I will identify the object of interest, which is the electric_refrigerator_1. The refrigerator is located on the right side of the image. The robotic arm is positioned on the left side of the image, near the wall. Given the distance between the robotic arm and the refrigerator, it is clear that the robotic arm cannot reach the refrigerator from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "The image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".", true, "<explanation>\nThe image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": false, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-inside(apple_1, electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "The image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".", true, "<explanation>\nThe image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["no", 0.0, 0.00020962026282609673, "The image shows a close-up view of a refrigerator door. The door appears to be closed, as there is no visible gap or open space indicating that it is open. The handle is in a neutral position, which is typical for a closed refrigerator door.", false, "<explanation>\nThe image shows a close-up view of a refrigerator door. The door appears to be closed, as there is no visible gap or open space indicating that it is open. The handle is in a neutral position, which is typical for a closed refrigerator door.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, true, true], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_1, electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "The image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".", true, "<explanation>\nThe image shows a close-up view of a refrigerator door handle. The robotic arm, which is the agent, is visible and appears to be in close proximity to the refrigerator door. Given the position of the robotic arm relative to the refrigerator handle, it seems that the agent can reach the refrigerator. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding apple_1": [true, true, true], "all_correct": true}, "effects_results": {"nextto apple_1,electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will look for the apple_1 in the image. Then, I will check if the electric_refrigerator_1 is in the image. In the image, there is an apple_1 and there is an electric_refrigerator_1. The apple_1 is on the floor next to the electric_refrigerator_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will look for the apple_1 in the image. Then, I will check if the electric_refrigerator_1 is in the image. In the image, there is an apple_1 and there is an electric_refrigerator_1. The apple_1 is on the floor next to the electric_refrigerator_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding apple_1": ["yes", 0.0, 0.0, "First, I will look for the robotic arm, which is the agent, in the image. The robotic arm is visible in the image. Next, I will check if the robotic arm is holding any object. The robotic arm appears to be holding an object. I will then identify the object to determine if it is the apple_1. The object held by the robotic arm is an apple, and it is labeled as apple_1. Therefore, the answer is \"Yes\".", false, "```\nQuestion: Is the agent holding the apple_1?\n<explanation>\nFirst, I will look for the robotic arm, which is the agent, in the image. The robotic arm is visible in the image. Next, I will check if the robotic arm is holding any object. The robotic arm appears to be holding an object. I will then identify the object to determine if it is the apple_1. The object held by the robotic arm is an apple, and it is labeled as apple_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>\n```", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["yes", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["no", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,cabinet_1": ["yes", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,cabinet_1": ["yes", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8472222222222222, "yes_accuracy": 0.7777777777777778, "yes_correct": 14, "yes_total": 18, "no_accuracy": 0.8571428571428571, "no_correct": 108, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9642857142857143, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": 0.96, "no_correct": 48, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.6428571428571429, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.6923076923076923, "no_correct": 36, "no_total": 52}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 3, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["no", "yes"], "open electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 6, "actions": ["navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable electric_refrigerator_1": ["yes", "yes"], "open electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 8, "actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable apple_1": ["no", "yes"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding apple_1": ["yes", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.5714285714285714, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": []}], "remaining_actions": []}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend over the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned near the countertop and appears to have a range of motion that can extend over the countertop. Given the proximity and the apparent reach of the robotic arm, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, adjacent to the cabinets. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, extending over the countertop. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, adjacent to the cabinets. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, extending over the countertop. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, adjacent to the cabinets and the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, extending over the countertop. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located to the left side of the image, adjacent to the cabinets and the countertop. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, extending over the countertop. Given the distance between the robotic arm and the electric_refrigerator_1, it is clear that the robotic arm cannot reach the electric_refrigerator_1 from its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 0.0, 0.0, "In the image, there is a white electric refrigerator labeled \"electric_refrigerator_1.\" The door of the refrigerator is clearly visible and is open, as indicated by the angle of the door and the visible interior space. The robotic arm is positioned near the open door, confirming that the refrigerator is indeed open.", false, "<explanation>\nIn the image, there is a white electric refrigerator labeled \"electric_refrigerator_1.\" The door of the refrigerator is clearly visible and is open, as indicated by the angle of the door and the visible interior space. The robotic arm is positioned near the open door, confirming that the refrigerator is indeed open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the apple_1 in the image. The apple_1 is the apple on the left side of the counter. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right of the apple_1. Given the length and orientation of the robotic arm, it seems plausible that the arm can extend to reach the apple_1 on the counter. Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the apple_1 in the image. The apple_1 is the apple on the left side of the counter. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right of the apple_1. Given the length and orientation of the robotic arm, it seems plausible that the arm can extend to reach the apple_1 on the counter. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the apple_2 in the image. The apple_2 is the apple on the right side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right of the apple_2 and has a visible range of motion. Given the position of the apple_2 and the robotic arm, it seems that the robotic arm can extend and reach the apple_2. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the apple_2 in the image. The apple_2 is the apple on the right side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned to the right of the apple_2 and has a visible range of motion. Given the position of the apple_2 and the robotic arm, it seems that the robotic arm can extend and reach the apple_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the center. Given the distance and the orientation of the robotic arm, it does not appear to be within reach of the electric_refrigerator_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned on the right side of the image, extending towards the center. Given the distance and the orientation of the robotic arm, it does not appear to be within reach of the electric_refrigerator_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the electric_refrigerator_1 and appears to be extended towards the countertop. Given the distance and the orientation of the robotic arm, it does not seem to be within reach of the electric_refrigerator_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right of the electric_refrigerator_1 and appears to be extended towards the countertop. Given the distance and the orientation of the robotic arm, it does not seem to be within reach of the electric_refrigerator_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "Question: Is the electric_refrigerator_1 in reach of the agent?\n<explanation>\nFirst, I will identify the electric_refrigerator_1 in the image. The electric_refrigerator_1 is the white object on the right side of the image. Next, I will determine the position of the agent, which is the robotic arm. The robotic arm is positioned to the right of the electric_refrigerator_1 and its end effector is very close to the refrigerator. Given the proximity and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open electric_refrigerator_1": ["yes", 0.0, 0.0, "First, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open.", false, "<explanation>\nFirst, I will look at the object labeled \"electric_refrigerator_1\" in the image. Then, I will check if the door of the refrigerator is open or closed. In the image, the door of the electric_refrigerator_1 is open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_1": [true, false, false], "holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_2 in the image. The apple_2 is located on the countertop to the right side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_2 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_2.", false, "<explanation>\nFirst, I will identify the location of the apple_2 in the image. The apple_2 is located on the countertop to the right side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_2 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.0, 0.0, "First, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop, and its base is near the center of the image. Given the length and positioning of the robotic arm, it appears that the arm can extend to the left side of the image but not far enough to reach the electric_refrigerator_1. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the location of the electric_refrigerator_1 in the image. The electric_refrigerator_1 is located on the left side of the image. Next, I will assess the reach of the agent, which is the robotic arm. The robotic arm is positioned above the countertop, and its base is near the center of the image. Given the length and positioning of the robotic arm, it appears that the arm can extend to the left side of the image but not far enough to reach the electric_refrigerator_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the objects labeled \"apple_1\" and \"apple_2\". There are two apples in the image, one labeled \"apple_1\" and the other labeled \"apple_2\". The robotic arm is holding the apple labeled \"apple_2\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the objects labeled \"apple_1\" and \"apple_2\". There are two apples in the image, one labeled \"apple_1\" and the other labeled \"apple_2\". The robotic arm is holding the apple labeled \"apple_2\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the objects labeled as apples. There are two apples visible in the image, labeled \"apple_1\" and \"apple_2\". I will then check if the robotic arm is holding either of these apples. The robotic arm is not holding \"apple_1\" as it is on the counter. The robotic arm is holding \"apple_2\" as it is in the gripper of the robotic arm.", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm. Next, I will look for the objects labeled as apples. There are two apples visible in the image, labeled \"apple_1\" and \"apple_2\". I will then check if the robotic arm is holding either of these apples. The robotic arm is not holding \"apple_1\" as it is on the counter. The robotic arm is holding \"apple_2\" as it is in the gripper of the robotic arm.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.", true, "<explanation>\nFirst, I will identify the location of the apple_1. The apple_1 is on the countertop to the left of the robotic arm. Next, I will assess the reach of the robotic arm. The robotic arm appears to be positioned above the countertop and has a range of motion that allows it to reach objects on the countertop within its vicinity. Given the position of the apple_1 on the countertop and the reach of the robotic arm, it is plausible that the robotic arm can reach the apple_1.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable countertop_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 4, "no_total": 6}}}, "step": 3, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["yes", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["yes", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8194444444444444, "yes_accuracy": 0.6666666666666666, "yes_correct": 12, "yes_total": 18, "no_accuracy": 0.8412698412698413, "no_correct": 106, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 7, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9107142857142857, "yes_accuracy": 0.5, "yes_correct": 3, "yes_total": 6, "no_accuracy": 0.96, "no_correct": 48, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.625, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6538461538461539, "no_correct": 34, "no_total": 52}}}, "step": 4, "actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable countertop_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "yes"], "holding countertop_1": ["no", "no"], "holding carrot_2": ["no", "no"], "open cabinet_1": ["yes", "no"], "open electric_refrigerator_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["yes", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.6363636363636364, "no_correct": 14, "no_total": 22, "predicates": {"reachable": {"accuracy": 0.25, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6, "no_correct": 3, "no_total": 5}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "nextto": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}}}, "step": 6, "actions": ["navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8125, "yes_accuracy": 0.3333333333333333, "yes_correct": 6, "yes_total": 18, "no_accuracy": 0.8809523809523809, "no_correct": 111, "no_total": 126, "predicates": {"reachable": {"accuracy": 0.5555555555555556, "yes_accuracy": 0.5, "yes_correct": 4, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8928571428571429, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.96, "no_correct": 48, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.7692307692307693, "no_correct": 40, "no_total": 52}}}, "step": 7, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["no", "yes"], "reachable carrot_2": ["no", "yes"], "reachable carrot_3": ["no", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["yes", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "no"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["yes", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.8194444444444444, "yes_accuracy": 0.3888888888888889, "yes_correct": 7, "yes_total": 18, "no_accuracy": 0.8809523809523809, "no_correct": 111, "no_total": 126, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.625, "yes_correct": 5, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8928571428571429, "yes_accuracy": 0.3333333333333333, "yes_correct": 2, "yes_total": 6, "no_accuracy": 0.96, "no_correct": 48, "no_total": 50}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "nextto": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 4, "no_accuracy": 0.7692307692307693, "no_correct": 40, "no_total": 52}}}, "step": 8, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image and appears to be able to extend over the table. Given the position of the apple_1 on the table and the reach of the robotic arm, it is plausible that the apple_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will determine the reach of the agent, which is the robotic arm. The robotic arm is positioned to the right side of the image and appears to be able to extend over the table. Given the position of the apple_1 on the table and the reach of the robotic arm, it is plausible that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["yes", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.605427974947808, "yes_accuracy": 0.7105263157894737, "yes_correct": 27, "yes_total": 38, "no_accuracy": 0.5963718820861678, "no_correct": 263, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}, "ontop": {"accuracy": 0.84375, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.8632075471698113, "no_correct": 183, "no_total": 212}, "nextto": {"accuracy": 0.36607142857142855, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.33816425120772947, "no_correct": 70, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6075156576200418, "yes_accuracy": 0.7105263157894737, "yes_correct": 27, "yes_total": 38, "no_accuracy": 0.5986394557823129, "no_correct": 264, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5714285714285714, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}, "ontop": {"accuracy": 0.8526785714285714, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.8726415094339622, "no_correct": 185, "no_total": 212}, "nextto": {"accuracy": 0.35714285714285715, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.3285024154589372, "no_correct": 68, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended towards the table. Given the proximity of the robotic arm to the apple_1 on the table, it is reasonable to conclude that the apple_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended towards the table. Given the proximity of the robotic arm to the apple_1 on the table, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["yes", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.605427974947808, "yes_accuracy": 0.7368421052631579, "yes_correct": 28, "yes_total": 38, "no_accuracy": 0.5941043083900227, "no_correct": 262, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}, "ontop": {"accuracy": 0.8482142857142857, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.8632075471698113, "no_correct": 183, "no_total": 212}, "nextto": {"accuracy": 0.36160714285714285, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.3333333333333333, "no_correct": 69, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["yes", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["yes", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6012526096033403, "yes_accuracy": 0.7105263157894737, "yes_correct": 27, "yes_total": 38, "no_accuracy": 0.5918367346938775, "no_correct": 261, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}, "ontop": {"accuracy": 0.8392857142857143, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.8584905660377359, "no_correct": 182, "no_total": 212}, "nextto": {"accuracy": 0.36160714285714285, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.3333333333333333, "no_correct": 69, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended towards the table. Given the proximity of the robotic arm to the apple_1 on the table, it is reasonable to conclude that the apple_1 is within reach of the agent.", false, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image and appears to be extended towards the table. Given the proximity of the robotic arm to the apple_1 on the table, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(orange_1, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding orange_1": ["yes", 0.0, 0.0, "First, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nFirst, I will identify the agent in the image. The agent is the robotic arm on the right side of the image. Next, I will look at what the robotic arm is holding. The robotic arm is holding an object labeled \"orange_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.0, 0.0, "First, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.", true, "<explanation>\nFirst, I will identify the location of the apple_1 in the image. The apple_1 is located on the table to the right side of the image. Next, I will assess the position and reach of the robotic arm, which is the agent. The robotic arm is positioned to the right side of the image, near the table where the apple_1 is located. Given the proximity of the robotic arm to the table and the apple_1, it is reasonable to conclude that the apple_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["yes", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6075156576200418, "yes_accuracy": 0.7368421052631579, "yes_correct": 28, "yes_total": 38, "no_accuracy": 0.5963718820861678, "no_correct": 263, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5714285714285714, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14}, "ontop": {"accuracy": 0.8482142857142857, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.8632075471698113, "no_correct": 183, "no_total": 212}, "nextto": {"accuracy": 0.36160714285714285, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.3333333333333333, "no_correct": 69, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["no", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["no", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["no", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["yes", "no"], "holding meat_1": ["yes", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["yes", "no"], "holding soup_1": ["yes", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["no", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["yes", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["yes", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["no", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["no", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["yes", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["yes", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["yes", "yes"], "ontop meat_1,cheese_1": ["yes", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["yes", "no"], "ontop meat_1,orange_3": ["yes", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["no", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["yes", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["no", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["yes", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["yes", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["yes", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["yes", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["yes", "no"], "ontop soup_1,orange_3": ["yes", "no"], "ontop carrot_1,bread_1": ["yes", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["yes", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["no", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["yes", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["yes", "no"], "ontop carrot_2,orange_3": ["yes", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["yes", "no"], "ontop carrot_3,soup_1": ["yes", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["yes", "no"], "ontop apple_1,bread_1": ["yes", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["yes", "no"], "ontop apple_1,milk_1": ["yes", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["yes", "no"], "ontop apple_1,table_1": ["no", "no"], "ontop apple_1,cheese_1": ["yes", "no"], "ontop apple_1,yogurt_1": ["yes", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["yes", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["yes", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["yes", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["yes", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["yes", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["yes", "no"], "nextto bread_1,milk_1": ["yes", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["yes", "no"], "nextto bread_1,table_1": ["yes", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["yes", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["yes", "no"], "nextto bread_1,carrot_2": ["no", "yes"], "nextto bread_1,carrot_3": ["yes", "yes"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["yes", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["no", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["no", "no"], "nextto countertop_1,table_1": ["no", "no"], "nextto countertop_1,cheese_1": ["no", "no"], "nextto countertop_1,yogurt_1": ["no", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["no", "no"], "nextto countertop_1,carrot_2": ["no", "no"], "nextto countertop_1,carrot_3": ["no", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["yes", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["yes", "no"], "nextto flour_1,chair_1": ["yes", "no"], "nextto flour_1,meat_1": ["yes", "no"], "nextto flour_1,table_1": ["yes", "no"], "nextto flour_1,cheese_1": ["yes", "no"], "nextto flour_1,yogurt_1": ["yes", "no"], "nextto flour_1,soup_1": ["yes", "no"], "nextto flour_1,carrot_1": ["yes", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["yes", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["yes", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["yes", "no"], "nextto meat_1,countertop_1": ["yes", "no"], "nextto meat_1,flour_1": ["yes", "no"], "nextto meat_1,milk_1": ["yes", "no"], "nextto meat_1,chair_1": ["no", "no"], "nextto meat_1,table_1": ["yes", "no"], "nextto meat_1,cheese_1": ["yes", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["yes", "no"], "nextto meat_1,carrot_1": ["yes", "no"], "nextto meat_1,carrot_2": ["no", "no"], "nextto meat_1,carrot_3": ["yes", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["yes", "no"], "nextto meat_1,orange_3": ["yes", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["yes", "no"], "nextto cheese_1,milk_1": ["yes", "no"], "nextto cheese_1,chair_1": ["yes", "no"], "nextto cheese_1,meat_1": ["yes", "no"], "nextto cheese_1,table_1": ["yes", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["yes", "no"], "nextto cheese_1,carrot_2": ["no", "no"], "nextto cheese_1,carrot_3": ["yes", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["no", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["yes", "no"], "nextto yogurt_1,countertop_1": ["no", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["yes", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["yes", "no"], "nextto yogurt_1,table_1": ["yes", "no"], "nextto yogurt_1,cheese_1": ["no", "no"], "nextto yogurt_1,soup_1": ["yes", "no"], "nextto yogurt_1,carrot_1": ["yes", "no"], "nextto yogurt_1,carrot_2": ["no", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["yes", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["no", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["yes", "no"], "nextto soup_1,chair_1": ["no", "no"], "nextto soup_1,meat_1": ["yes", "no"], "nextto soup_1,table_1": ["yes", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["no", "no"], "nextto soup_1,apple_2": ["no", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["yes", "no"], "nextto carrot_1,milk_1": ["yes", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["yes", "no"], "nextto carrot_1,table_1": ["yes", "no"], "nextto carrot_1,cheese_1": ["yes", "no"], "nextto carrot_1,yogurt_1": ["yes", "no"], "nextto carrot_1,soup_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["yes", "no"], "nextto carrot_1,orange_3": ["yes", "no"], "nextto carrot_2,bread_1": ["yes", "yes"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,flour_1": ["yes", "no"], "nextto carrot_2,milk_1": ["yes", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["yes", "no"], "nextto carrot_2,table_1": ["yes", "no"], "nextto carrot_2,cheese_1": ["yes", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["yes", "no"], "nextto carrot_2,orange_3": ["yes", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["yes", "no"], "nextto carrot_3,milk_1": ["yes", "no"], "nextto carrot_3,chair_1": ["yes", "no"], "nextto carrot_3,meat_1": ["yes", "no"], "nextto carrot_3,table_1": ["yes", "no"], "nextto carrot_3,cheese_1": ["yes", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["yes", "no"], "nextto carrot_3,orange_3": ["yes", "no"], "nextto apple_1,bread_1": ["yes", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["yes", "no"], "nextto apple_1,milk_1": ["yes", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["yes", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["no", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["no", "no"], "nextto apple_2,yogurt_1": ["no", "no"], "nextto apple_2,soup_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["no", "no"], "nextto apple_2,orange_3": ["no", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["yes", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["yes", "no"], "nextto orange_1,table_1": ["yes", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["yes", "no"], "nextto orange_1,carrot_1": ["no", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["yes", "no"], "nextto orange_1,apple_1": ["no", "no"], "nextto orange_1,apple_2": ["no", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["yes", "no"], "nextto orange_3,milk_1": ["yes", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["yes", "yes"], "nextto orange_3,table_1": ["yes", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["yes", "no"], "nextto orange_3,apple_1": ["no", "no"], "nextto orange_3,apple_2": ["no", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.6033402922755741, "yes_accuracy": 0.7368421052631579, "yes_correct": 28, "yes_total": 38, "no_accuracy": 0.5918367346938775, "no_correct": 261, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.7058823529411765, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.375, "no_correct": 3, "no_total": 8}, "holding": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}, "ontop": {"accuracy": 0.8392857142857143, "yes_accuracy": 0.5833333333333334, "yes_correct": 7, "yes_total": 12, "no_accuracy": 0.8537735849056604, "no_correct": 181, "no_total": 212}, "nextto": {"accuracy": 0.36607142857142855, "yes_accuracy": 0.7058823529411765, "yes_correct": 12, "yes_total": 17, "no_accuracy": 0.33816425120772947, "no_correct": 70, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "problem_stats": {"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"action_correct": 4, "action_total": 11, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.36363636363636365, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"action_correct": 4, "action_total": 11, "remaining_actions": ["place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.36363636363636365, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"action_correct": 3, "action_total": 11, "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.2727272727272727, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"action_correct": 3, "action_total": 14, "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.21428571428571427, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"action_correct": 6, "action_total": 23, "remaining_actions": ["navigate-to(bowl_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.2608695652173913, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"action_correct": 3, "action_total": 18, "remaining_actions": ["navigate-to(spoon_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(spoon_1)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"action_correct": 1, "action_total": 12, "remaining_actions": ["navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.08333333333333333, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"action_correct": 2, "action_total": 10, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.2, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"action_correct": 11, "action_total": 28, "remaining_actions": ["grasp(snack_food_1)", "navigate-to(carton_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.39285714285714285, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"action_correct": 2, "action_total": 8, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"action_correct": 0, "action_total": 13, "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"action_correct": 0, "action_total": 12, "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"action_correct": 1, "action_total": 6, "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 31, "remaining_actions": ["navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"action_correct": 5, "action_total": 13, "remaining_actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.38461538461538464, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"action_correct": 7, "action_total": 15, "remaining_actions": ["navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.4666666666666667, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"action_correct": 0, "action_total": 26, "remaining_actions": ["place-on(gym_shoe_1, table_2)", "place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"action_correct": 0, "action_total": 8, "remaining_actions": ["place-next-to(sock_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"action_correct": 3, "action_total": 7, "remaining_actions": ["place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.42857142857142855, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"action_correct": 4, "action_total": 9, "remaining_actions": [], "action_accuracy": 0.4444444444444444, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"action_correct": 5, "action_total": 15, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.3333333333333333, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.725328947368421, "yes_accuracy": 0.836104513064133, "yes_correct": 352, "yes_total": 421, "no_accuracy": 0.47593582887700536, "no_correct": 89, "no_total": 187, "correct": 441, "total": 608}, "holding": {"accuracy": 0.5931758530183727, "yes_accuracy": 0.3392857142857143, "yes_correct": 19, "yes_total": 56, "no_accuracy": 0.6369230769230769, "no_correct": 207, "no_total": 325, "correct": 226, "total": 381}, "ontop": {"accuracy": 0.793359375, "yes_accuracy": 0.5328947368421053, "yes_correct": 81, "yes_total": 152, "no_accuracy": 0.8098006644518272, "no_correct": 1950, "no_total": 2408, "correct": 2031, "total": 2560}, "nextto": {"accuracy": 0.46171875, "yes_accuracy": 0.5448028673835126, "yes_correct": 152, "yes_total": 279, "no_accuracy": 0.45155633494081543, "no_correct": 1030, "no_total": 2281, "correct": 1182, "total": 2560}, "open": {"accuracy": 0.40384615384615385, "yes_accuracy": 0.07692307692307693, "yes_correct": 4, "yes_total": 52, "no_accuracy": 0.7307692307692307, "no_correct": 38, "no_total": 52, "correct": 42, "total": 104}, "inside": {"accuracy": 0.8901960784313725, "yes_accuracy": 0.041666666666666664, "yes_correct": 1, "yes_total": 24, "no_accuracy": 0.9783549783549783, "no_correct": 226, "no_total": 231, "correct": 227, "total": 255}}, "predicate_accuracy": 0.641465677179963, "macro_predicate_accuracy": 0.6446041929440534, "action_accuracy": 0.18991097922848665, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "mistralai/Mistral-Small-3.1-24B-Instruct-2503", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/medium", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7211616_3"}}