{"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.09793096780776978, 0.007094095926731825, "In the virtual household simulator, the robotic arm, which is the agent, is positioned in the room. The book_1 is located on the floor, and the agent's arm is extended towards it. Given the distance and the positioning of the arm, it is within reach of the agent. Therefore, the book_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned in the room. The book_1 is located on the floor, and the agent's arm is extended towards it. Given the distance and the positioning of the arm, it is within reach of the agent. Therefore, the book_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.09793096780776978, 0.007094095926731825, "In the virtual household simulator, the robotic arm, which is the agent, is positioned in the room. The book_1 is located on the floor, and the agent's arm is extended towards it. Given the distance and the positioning of the arm, it is within reach of the agent. Therefore, the book_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned in the room. The book_1 is located on the floor, and the agent's arm is extended towards it. Given the distance and the positioning of the arm, it is within reach of the agent. Therefore, the book_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.13934969902038574, 0.014687350019812584, "The environment is a virtual household simulator with a robotic arm that can hold objects. The image shows a robotic arm holding a book, which matches the description of the agent holding an object. Therefore, the answer is \"Yes\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The image shows a robotic arm holding a book, which matches the description of the agent holding an object. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["yes", 0.325083464384079, 0.0019330170471221209, "In the virtual household simulator, the robotic arm (the agent) is positioned in such a way that it can easily reach the hardback_1. The hardback_1 is located on a shelf, which is within the arm's reach. Additionally, the arm is positioned to interact with objects, indicating it is capable of picking up items within its vicinity. Therefore, the hardback_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm (the agent) is positioned in such a way that it can easily reach the hardback_1. The hardback_1 is located on a shelf, which is within the arm's reach. Additionally, the arm is positioned to interact with objects, indicating it is capable of picking up items within its vicinity. Therefore, the hardback_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_1": ["no", 0.4469071626663208, 0.002657407196238637, "To determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach. The table_1 is located in the corner of the room, and the robotic arm is positioned in the center of the room. The distance between the table and the robotic arm appears to be greater than the typical reach of a robotic arm. Additionally, there are no visible objects that are being held by the robotic arm that could be used to extend its reach to the table. Therefore, the table_1 is not within reach of the agent.", true, "<explanation>\nTo determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach. The table_1 is located in the corner of the room, and the robotic arm is positioned in the center of the room. The distance between the table and the robotic arm appears to be greater than the typical reach of a robotic arm. Additionally, there are no visible objects that are being held by the robotic arm that could be used to extend its reach to the table. Therefore, the table_1 is not within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable book_1": ["yes", 0.4425813853740692, 0.0018087290227413177, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.4425813853740692, 0.0018087290227413177, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.15343810617923737, 0.0183255672454834, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the image, and there is a hardback book labeled \"hardback_1\" in the scene. The robotic arm is not holding any objects in the image, so it is not holding the hardback_1. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the image, and there is a hardback book labeled \"hardback_1\" in the scene. The robotic arm is not holding any objects in the image, so it is not holding the hardback_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.4425813853740692, 0.0018087290227413177, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a shelf, and the robotic arm is positioned in front of it. Given the height of the shelf and the reach of the arm, it is reasonable to assume that the agent can reach the book. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.15343810617923737, 0.0183255672454834, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the image, and there is a hardback book labeled \"hardback_1\" in the scene. The robotic arm is not holding any objects in the image, so it is not holding the hardback_1. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the image, and there is a hardback book labeled \"hardback_1\" in the scene. The robotic arm is not holding any objects in the image, so it is not holding the hardback_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable hardback_2": ["yes", "no"], "reachable table_1": ["no", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding hardback_2": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,hardback_2": ["yes", "no"], "ontop hardback_1,table_1": ["no", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop hardback_2,hardback_1": ["yes", "no"], "ontop hardback_2,table_1": ["no", "no"], "ontop hardback_2,book_1": ["no", "no"], "ontop hardback_2,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,hardback_2": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,hardback_2": ["no", "no"], "ontop book_2,table_1": ["no", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,hardback_2": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto hardback_2,hardback_1": ["no", "no"], "nextto hardback_2,table_1": ["no", "no"], "nextto hardback_2,book_1": ["no", "no"], "nextto hardback_2,book_2": ["no", "no"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,hardback_2": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,hardback_2": ["no", "no"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7317073170731707, "yes_accuracy": 0.4444444444444444, "yes_correct": 4, "yes_total": 9, "no_accuracy": 0.8125, "no_correct": 26, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.8125, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}}}, "step": 3, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["yes", "yes"], "reachable hardback_2": ["yes", "no"], "reachable table_1": ["no", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding hardback_2": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,hardback_2": ["yes", "no"], "ontop hardback_1,table_1": ["no", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop hardback_2,hardback_1": ["yes", "no"], "ontop hardback_2,table_1": ["no", "no"], "ontop hardback_2,book_1": ["no", "no"], "ontop hardback_2,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,hardback_2": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,hardback_2": ["no", "no"], "ontop book_2,table_1": ["no", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,hardback_2": ["no", "no"], "nextto hardback_1,table_1": ["no", "no"], "nextto hardback_1,book_1": ["no", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto hardback_2,hardback_1": ["no", "no"], "nextto hardback_2,table_1": ["no", "no"], "nextto hardback_2,book_1": ["no", "no"], "nextto hardback_2,book_2": ["no", "no"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,hardback_2": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["no", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,hardback_2": ["no", "no"], "nextto book_2,table_1": ["no", "no"], "nextto book_2,book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7317073170731707, "yes_accuracy": 0.4444444444444444, "yes_correct": 4, "yes_total": 9, "no_accuracy": 0.8125, "no_correct": 26, "no_total": 32, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.75, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.6875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.7857142857142857, "no_correct": 11, "no_total": 14}, "nextto": {"accuracy": 0.8125, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 12, "no_total": 14}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.13169178366661072, 0.005106245167553425, "In the virtual household simulator, the robotic arm, which is the agent, is positioned above a small object on the floor. The object appears to be a book, based on its shape and size. Given the position of the robotic arm, it is within reach of the object. Therefore, the book is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned above a small object on the floor. The object appears to be a book, based on its shape and size. Given the position of the robotic arm, it is within reach of the object. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable book_1": ["yes", 0.13169178366661072, 0.005106245167553425, "In the virtual household simulator, the robotic arm, which is the agent, is positioned above a small object on the floor. The object appears to be a book, based on its shape and size. Given the position of the robotic arm, it is within reach of the object. Therefore, the book is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned above a small object on the floor. The object appears to be a book, based on its shape and size. Given the position of the robotic arm, it is within reach of the object. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["yes", 0.12293656170368195, 0.01885293424129486, "The image shows a virtual household simulator with a robotic arm. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the agent is indeed holding the book.", true, "<explanation>\nThe image shows a virtual household simulator with a robotic arm. The robotic arm is holding a book, which is labeled as \"book_1\". Therefore, the agent is indeed holding the book.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(hardback_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable hardback_1": ["no", 0.20850488543510437, 0.007134645711630583, "To determine if the hardback_1 is in reach of the agent, I need to consider the position of the hardback_1 and the capabilities of the agent. The hardback_1 is located on a table in the center of the room. The agent, represented by the robotic arm, is positioned in the corner of the room. Given the distance between the table and the robotic arm, it is unlikely that the agent can reach the hardback_1 without moving significantly. Therefore, the answer is \"No\".", false, "<explanation>\nTo determine if the hardback_1 is in reach of the agent, I need to consider the position of the hardback_1 and the capabilities of the agent. The hardback_1 is located on a table in the center of the room. The agent, represented by the robotic arm, is positioned in the corner of the room. Given the distance between the table and the robotic arm, it is unlikely that the agent can reach the hardback_1 without moving significantly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 0.3662470281124115, 0.0076012141071259975, "To determine if the table_1 is in reach of the agent, I will consider the position of the table and the robotic arm's capabilities. The table is located in the center of the room, and the robotic arm is positioned above the table, suggesting it is within reach. Additionally, the table is not obstructed by any objects that would prevent the arm from reaching it. Therefore, the table_1 is likely within the agent's reach.", false, "<explanation>\nTo determine if the table_1 is in reach of the agent, I will consider the position of the table and the robotic arm's capabilities. The table is located in the center of the room, and the robotic arm is positioned above the table, suggesting it is within reach. Additionally, the table is not obstructed by any objects that would prevent the arm from reaching it. Therefore, the table_1 is likely within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable book_1": ["yes", 0.28614360094070435, 0.00524090277031064, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.28614360094070435, 0.00524090277031064, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.09900712966918945, 0.04127231240272522, "The environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, in the provided image, the robotic arm is not holding any objects. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, in the provided image, the robotic arm is not holding any objects. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.28614360094070435, 0.00524090277031064, "To determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if book_1 is within reach of the agent, I will consider the position of the book and the reach of the robotic arm. The book is located on a table in the center of the room, and the robotic arm is positioned above the table. Given the height of the table and the reach of the robotic arm, it is likely that the agent can reach the book without any obstacles. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "holding hardback_1": ["no", 0.09900712966918945, 0.04127231240272522, "The environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, in the provided image, the robotic arm is not holding any objects. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, in the provided image, the robotic arm is not holding any objects. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable hardback_1": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["no", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["yes", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}}}, "step": 3, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable hardback_1": ["no", "yes"], "reachable table_1": ["yes", "yes"], "reachable book_1": ["yes", "yes"], "reachable book_2": ["yes", "yes"], "holding hardback_1": ["no", "no"], "holding book_1": ["no", "yes"], "holding book_2": ["no", "no"], "ontop hardback_1,table_1": ["yes", "yes"], "ontop hardback_1,book_1": ["no", "no"], "ontop hardback_1,book_2": ["no", "no"], "ontop book_1,hardback_1": ["no", "no"], "ontop book_1,table_1": ["no", "no"], "ontop book_1,book_2": ["no", "no"], "ontop book_2,hardback_1": ["no", "no"], "ontop book_2,table_1": ["no", "yes"], "ontop book_2,book_1": ["yes", "no"], "nextto hardback_1,table_1": ["yes", "no"], "nextto hardback_1,book_1": ["yes", "no"], "nextto hardback_1,book_2": ["yes", "yes"], "nextto book_1,hardback_1": ["yes", "no"], "nextto book_1,table_1": ["no", "no"], "nextto book_1,book_2": ["yes", "no"], "nextto book_2,hardback_1": ["no", "yes"], "nextto book_2,table_1": ["yes", "no"], "nextto book_2,book_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.625, "no_correct": 10, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.7777777777777778, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.2857142857142857, "no_correct": 2, "no_total": 7}}}, "step": 4, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.1391642987728119, 0.0037086030934005976, "In the virtual household simulator, the robotic arm, which is the agent, is positioned above a white card on the floor. The card appears to be a book, labeled as \"book_1\". Given the position of the robotic arm, it is within reach of the card. Therefore, the book is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned above a white card on the floor. The card appears to be a book, labeled as \"book_1\". Given the position of the robotic arm, it is within reach of the card. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.1391642987728119, 0.0037086030934005976, "In the virtual household simulator, the robotic arm, which is the agent, is positioned above a white card on the floor. The card appears to be a book, labeled as \"book_1\". Given the position of the robotic arm, it is within reach of the card. Therefore, the book is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned above a white card on the floor. The card appears to be a book, labeled as \"book_1\". Given the position of the robotic arm, it is within reach of the card. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["no", 0.2110576331615448, 0.019631419330835342, "The environment is a virtual household simulator with a robotic arm that can hold objects. The image shows a book on a table, but the robotic arm is not holding the book. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The image shows a book on a table, but the robotic arm is not holding the book. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.19856326282024384, 0.004121048841625452, "In the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is capable of holding objects. The object in question, book_1, is within the range of the robotic arm. Therefore, the book is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 4, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 5, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 8, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 10, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 11, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 12, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 13, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 14, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 15, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 16, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 17, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 18, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 19, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, {"enum_results": {"reachable book_1": ["no", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 20, "actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(book_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable book_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable book_1": ["yes", 0.18032224476337433, 0.0037424687761813402, "In the virtual household simulator, the robotic arm, which is the agent, is positioned in a way that it can reach the book_1. The book_1 is located on a surface within the agent's reach, indicating that the agent can interact with it. Therefore, the book_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned in a way that it can reach the book_1. The book_1 is located on a surface within the agent's reach, indicating that the agent can interact with it. Therefore, the book_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable hardback_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable shelf_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.18032224476337433, 0.0037424687761813402, "In the virtual household simulator, the robotic arm, which is the agent, is positioned in a way that it can reach the book_1. The book_1 is located on a surface within the agent's reach, indicating that the agent can interact with it. Therefore, the book_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is positioned in a way that it can reach the book_1. The book_1 is located on a surface within the agent's reach, indicating that the agent can interact with it. Therefore, the book_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": {"holding book_1": ["no", 0.12784993648529053, 0.025175146758556366, "The environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding a book. Instead, it shows a book floating in the air. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is indeed a virtual household simulator with interactive objects and furniture. The agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding a book. Instead, it shows a book floating in the air. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop book_1,hardback_1": {"before": false, "after": false}, "ontop book_1,table_1": {"before": false, "after": false}, "ontop book_1,shelf_1": {"before": false, "after": false}, "ontop book_1,book_1": {"before": null, "after": false}, "nextto book_1,hardback_1": {"before": false, "after": false}, "nextto book_1,table_1": {"before": false, "after": false}, "nextto book_1,shelf_1": {"before": false, "after": false}, "nextto book_1,book_1": {"before": null, "after": false}}}, "action_info": "success"}, {"action": "grasp(book_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable book_1": ["yes", 0.15996111929416656, 0.004830407444387674, "In the virtual household simulator environment, the agent (robotic arm) is positioned near a table. The book_1 is located on the table, which is within the agent's reach. Therefore, the book_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned near a table. The book_1 is located on the table, which is within the agent's reach. Therefore, the book_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding hardback_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable book_1": ["yes", "yes"], "holding book_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}], "remaining_actions": ["navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.24823960661888123, 0.00401241984218359, "In the virtual household simulator, the cabinet_1 is located in the kitchen area, which is within reach of the robotic arm. The robotic arm is positioned above the countertop and can easily access the cabinet_1 to pick up objects. Therefore, the cabinet_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_1 is located in the kitchen area, which is within reach of the robotic arm. The robotic arm is positioned above the countertop and can easily access the cabinet_1 to pick up objects. Therefore, the cabinet_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable cabinet_2": {"before": true, "after": false}, "reachable spoon_1": {"before": false, "after": false}, "reachable sink_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.24821409583091736, 0.004012007266283035, "In the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_1. Therefore, the cabinet_1 is indeed within the reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_1. Therefore, the cabinet_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.05817887932062149, 0.014709924347698689, "In the image, there is a cabinet with doors that are closed. There is no visible indication that the cabinet is open. Therefore, the answer is \"No\".", true, "<explanation>\nIn the image, there is a cabinet with doors that are closed. There is no visible indication that the cabinet is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.056478649377822876, 0.016181403771042824, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet with its doors closed, indicating that it is not open. There are no visible gaps or openings that would suggest otherwise. Therefore, the cabinet_1 is indeed closed.", false, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet with its doors closed, indicating that it is not open. There are no visible gaps or openings that would suggest otherwise. Therefore, the cabinet_1 is indeed closed.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2707687020301819, 0.004959301557391882, "In the virtual household simulator, the cabinet_1 is positioned to the left of the agent (robotic arm). Given the agent's current position and orientation, it is within reach of the cabinet_1. The cabinet is not too far away, and the agent can easily access it.", true, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned to the left of the agent (robotic arm). Given the agent's current position and orientation, it is within reach of the cabinet_1. The cabinet is not too far away, and the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.056247323751449585, 0.016115128993988037, "In the image, there is a cabinet with doors that are closed. There is no visible indication that the cabinet is open. Therefore, the answer is \"No\".", true, "<explanation>\nIn the image, there is a cabinet with doors that are closed. There is no visible indication that the cabinet is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.1453852653503418, 0.004390254616737366, "To determine if cabinet_1 is open, I will examine the image for any visible signs of the cabinet doors being open. In the image, cabinet_1 appears to have closed doors, as there are no visible gaps or openings around the cabinet frame. Therefore, the cabinet is not open.", false, "<explanation>\nTo determine if cabinet_1 is open, I will examine the image for any visible signs of the cabinet doors being open. In the image, cabinet_1 appears to have closed doors, as there are no visible gaps or openings around the cabinet frame. Therefore, the cabinet is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable bowl_1": ["no", 0.26870691776275635, 0.005576834548264742, "To determine if the bowl_1 is in reach of the agent, I will consider the position of the bowl and the robotic arm. The bowl is located on the bottom drawer of the cabinet, which is below the countertop where the agent is positioned. The robotic arm is extended towards the countertop, but it is not positioned to reach the bowl. Therefore, the bowl_1 is not in reach of the agent.", false, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, I will consider the position of the bowl and the robotic arm. The bowl is located on the bottom drawer of the cabinet, which is below the countertop where the agent is positioned. The robotic arm is extended towards the countertop, but it is not positioned to reach the bowl. Therefore, the bowl_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "navigate-to(cabinet_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_2": ["yes", 0.2628059387207031, 0.002006548224017024, "In the virtual household simulator, the cabinet_2 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_2. Therefore, the cabinet_2 is indeed within reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_2 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_2. Therefore, the cabinet_2 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.19468246400356293, 0.002162726828828454, "In the virtual household simulator, the agent (robotic arm) is positioned near a countertop with various objects, including a sink. The sink is located within the agent's reach, as it is situated on the countertop, which is accessible to the robotic arm. Therefore, the sink is indeed within the agent's reach.", false, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near a countertop with various objects, including a sink. The sink is located within the agent's reach, as it is situated on the countertop, which is accessible to the robotic arm. Therefore, the sink is indeed within the agent's reach.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": true, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.2628059387207031, 0.002006548224017024, "In the virtual household simulator, the cabinet_2 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_2. Therefore, the cabinet_2 is indeed within reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_2 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of reaching and interacting with objects in this environment, including the cabinet_2. Therefore, the cabinet_2 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["no", 0.060276925563812256, 0.007199052255600691, "In the image, there is a cabinet labeled \"cabinet_2\". To determine if it is open, I will look for any visible doors or openings that indicate it is not closed. The cabinet appears to have a closed door, suggesting it is not open. Therefore, the answer is \"No\".", true, "<explanation>\nIn the image, there is a cabinet labeled \"cabinet_2\". To determine if it is open, I will look for any visible doors or openings that indicate it is not closed. The cabinet appears to have a closed door, suggesting it is not open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_2": ["no", 0.1393713802099228, 0.004208650905638933, "To determine if cabinet_2 is open, I will look for the cabinet in the image and check its state. In the image, cabinet_2 is shown with its door closed. There are no visible signs of it being open. Therefore, the answer is \"No\".", false, "<explanation>\nTo determine if cabinet_2 is open, I will look for the cabinet in the image and check its state. In the image, cabinet_2 is shown with its door closed. There are no visible signs of it being open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable spoon_1": ["yes", 0.2810489535331726, 0.0016711782664060593, "In the virtual household simulator environment, the agent (robotic arm) is positioned near a table with various objects on it, including a spoon labeled as \"spoon_1\". The agent's arm is extended towards the table, indicating that it is within reach of the spoon. Therefore, the spoon is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned near a table with various objects on it, including a spoon labeled as \"spoon_1\". The agent's arm is extended towards the table, indicating that it is within reach of the spoon. Therefore, the spoon is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-on(spoon_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding spoon_1": ["no", 0.2721458375453949, 0.00821809284389019, "In the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is positioned near a spoon labeled as \"spoon_1\". The arm is extended and appears to be in a position that could potentially hold the spoon. However, the spoon is not currently being held by the arm. The arm is simply positioned near the spoon, suggesting that it is ready to pick it up if necessary. Therefore, the agent is not holding the spoon_1 at this moment.\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable sink_1": ["yes", 0.15235558152198792, 0.009739765897393227, "To determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is within reach of the agent, I will consider the position of the sink_1 and the range of motion of the robotic arm. The sink_1 is located in the kitchen area, which is accessible to the agent. The robotic arm is positioned above the sink_1, suggesting it is within reach. Additionally, the sink_1 is not too far from the agent's current position, indicating that the agent could easily reach it. Therefore, the sink_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "open cabinet_1": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 2, "actions": ["open-container(cabinet_1)", "grasp(bowl_1)", "navigate-to(cabinet_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_2)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["no", "yes"], "reachable bowl_2": ["no", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["no", "yes"], "ontop bowl_1,bowl_2": ["no", "no"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "no"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["no", "yes"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,bowl_1": ["yes", "yes"], "nextto bowl_2,cabinet_1": ["no", "yes"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.6551724137931034, "yes_accuracy": 0.3076923076923077, "yes_correct": 4, "yes_total": 13, "no_accuracy": 0.9375, "no_correct": 15, "no_total": 16, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}}}, "step": 3, "actions": ["navigate-to(cabinet_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_2)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}}}, "step": 4, "actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 5, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 6, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 7, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 8, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 9, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 10, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 11, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 12, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 13, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 14, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 15, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 16, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 17, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 18, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 19, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable cabinet_2": ["no", "yes"], "reachable spoon_1": ["yes", "yes"], "reachable spoon_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding spoon_1": ["yes", "no"], "holding spoon_2": ["yes", "no"], "open cabinet_2": ["no", "yes"], "ontop spoon_1,cabinet_2": ["no", "yes"], "ontop spoon_1,spoon_2": ["no", "no"], "ontop spoon_1,sink_1": ["no", "no"], "ontop spoon_2,cabinet_2": ["no", "yes"], "ontop spoon_2,spoon_1": ["no", "no"], "ontop spoon_2,sink_1": ["no", "no"], "inside spoon_1,cabinet_2": ["no", "yes"], "inside spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_1,cabinet_2": ["no", "yes"], "nextto spoon_1,spoon_2": ["no", "no"], "nextto spoon_1,sink_1": ["yes", "no"], "nextto spoon_2,cabinet_2": ["no", "yes"], "nextto spoon_2,spoon_1": ["no", "no"], "nextto spoon_2,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.2727272727272727, "yes_correct": 3, "yes_total": 11, "no_accuracy": 0.6, "no_correct": 6, "no_total": 10, "predicates": {"reachable": {"accuracy": 0.75, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "nextto": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}}}, "step": 20, "actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable cabinet_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.20588596165180206, 0.0025917217135429382, "To determine if cabinet_1 is within reach of the agent, we need to consider the height of the cabinet and the height of the agent. In the virtual household simulator, the agent is a robotic arm that can reach a certain height. The cabinet_1 is located above the ground and is positioned in a way that suggests it is within the agent's reach. Given the context and the visual cues, it appears that the cabinet_1 is accessible to the agent.", true, "<explanation>\nTo determine if cabinet_1 is within reach of the agent, we need to consider the height of the cabinet and the height of the agent. In the virtual household simulator, the agent is a robotic arm that can reach a certain height. The cabinet_1 is located above the ground and is positioned in a way that suggests it is within the agent's reach. Given the context and the visual cues, it appears that the cabinet_1 is accessible to the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["no", 0.21253572404384613, 0.0030316596385091543, "To determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned to the right of the oven and above the countertop. The cabinet_2 is located to the right of the oven, but it is not within the direct reach of the robotic arm. The cabinet is positioned higher than the arm's current reach, making it inaccessible for the agent to interact with at its current position. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned to the right of the oven and above the countertop. The cabinet_2 is located to the right of the oven, but it is not within the direct reach of the robotic arm. The cabinet is positioned higher than the arm's current reach, making it inaccessible for the agent to interact with at its current position. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable sink_1": ["no", 0.08931388705968857, 0.009413613937795162, "To determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the agent. The sink_1 is located on the left side of the image, near the bottom edge. The agent, represented by the robotic arm, is positioned on the right side of the image, higher up. Given the distance and the height of the sink_1, it is unlikely that the agent can reach it directly. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the agent. The sink_1 is located on the left side of the image, near the bottom edge. The agent, represented by the robotic arm, is positioned on the right side of the image, higher up. Given the distance and the height of the sink_1, it is unlikely that the agent can reach it directly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": false}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.20588596165180206, 0.0025917217135429382, "To determine if cabinet_1 is within reach of the agent, we need to consider the height of the cabinet and the height of the agent. In the virtual household simulator, the agent is a robotic arm that can reach a certain height. The cabinet_1 is located above the ground and is positioned in a way that suggests it is within the agent's reach. Given the context and the visual cues, it appears that the cabinet_1 is accessible to the agent.", true, "<explanation>\nTo determine if cabinet_1 is within reach of the agent, we need to consider the height of the cabinet and the height of the agent. In the virtual household simulator, the agent is a robotic arm that can reach a certain height. The cabinet_1 is located above the ground and is positioned in a way that suggests it is within the agent's reach. Given the context and the visual cues, it appears that the cabinet_1 is accessible to the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["yes", 0.03574169799685478, 0.007037958595901728, "To determine if cabinet_1 is open, I will look for any visible indicators of an open cabinet, such as a door that is not fully closed or a drawer that is pulled out. In the image, cabinet_1 appears to have a door that is partially open, as indicated by the red line marking the cabinet and the visible gap in the door. Therefore, the cabinet is open.", false, "<explanation>\nTo determine if cabinet_1 is open, I will look for any visible indicators of an open cabinet, such as a door that is not fully closed or a drawer that is pulled out. In the image, cabinet_1 appears to have a door that is partially open, as indicated by the red line marking the cabinet and the visible gap in the door. Therefore, the cabinet is open.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "navigate-to(bowl_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable bowl_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable cabinet_1": ["yes", 0.22718733549118042, 0.0032406530808657408, "To determine if cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily reach the cabinet_1, which is located near the oven. The arm's position allows it to interact with objects on the countertop and shelves, including cabinet_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily reach the cabinet_1, which is located near the oven. The arm's position allows it to interact with objects on the countertop and shelves, including cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_2": ["yes", 0.2014300376176834, 0.005367928650230169, "To determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily access the objects on the counter and shelves. Cabinet_2 is located on the counter, which is within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily access the objects on the counter and shelves. Cabinet_2 is located on the counter, which is within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sink_1": ["yes", 0.08995665609836578, 0.008367273025214672, "To determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the agent. In the virtual household simulator, the sink_1 is located on the countertop, and the agent (the robotic arm) is positioned to the right of the sink_1. Given the agent's ability to hold objects and its reach, it is reasonable to assume that the agent can reach the sink_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the agent. In the virtual household simulator, the sink_1 is located on the countertop, and the agent (the robotic arm) is positioned to the right of the sink_1. Given the agent's ability to hold objects and its reach, it is reasonable to assume that the agent can reach the sink_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable bowl_1": {"before": false, "after": true}, "reachable spoon_1": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "open-container(cabinet_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable cabinet_1": ["yes", 0.22718733549118042, 0.0032406530808657408, "To determine if cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily reach the cabinet_1, which is located near the oven. The arm's position allows it to interact with objects on the countertop and shelves, including cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned in a way that it can easily reach the cabinet_1, which is located near the oven. The arm's position allows it to interact with objects on the countertop and shelves, including cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.040524255484342575, 0.007042059674859047, "To determine if cabinet_1 is open, I will look for any visible doors or openings associated with cabinet_1. In the image, there is no visible door or opening that indicates cabinet_1 is open. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if cabinet_1 is open, I will look for any visible doors or openings associated with cabinet_1. In the image, there is no visible door or opening that indicates cabinet_1 is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding bowl_1": [true, false, false], "holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["yes", 0.0494668073952198, 0.005213762633502483, "To determine if cabinet_1 is open, I will look for any visible indicators such as doors or drawers that are ajar. In the image, cabinet_1 appears to have a door that is partially open, indicating that it is indeed open. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if cabinet_1 is open, I will look for any visible indicators such as doors or drawers that are ajar. In the image, cabinet_1 appears to have a door that is partially open, indicating that it is indeed open. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable bowl_1": ["yes", 0.16290460526943207, 0.0038311490789055824, "To determine if the bowl_1 is in reach of the agent, I will consider the position of the bowl_1 and the reach of the robotic arm. The bowl_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily access the bowl_1. Therefore, the bowl_1 is in reach of the agent.", true, "<explanation>\nTo determine if the bowl_1 is in reach of the agent, I will consider the position of the bowl_1 and the reach of the robotic arm. The bowl_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily access the bowl_1. Therefore, the bowl_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(cabinet_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_2": ["yes", 0.25525394082069397, 0.0028356153052300215, "To determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned above the ground and can be extended to various heights. The cabinet_2 is located on the countertop, which is at a higher elevation than the ground. However, the robotic arm can reach up to a certain height, which is sufficient to grasp objects on the countertop. Therefore, the cabinet_2 is within reach of the agent.", true, "<explanation>\nTo determine if cabinet_2 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the robotic arm is positioned above the ground and can be extended to various heights. The cabinet_2 is located on the countertop, which is at a higher elevation than the ground. However, the robotic arm can reach up to a certain height, which is sufficient to grasp objects on the countertop. Therefore, the cabinet_2 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_2": ["no", 0.0493057481944561, 0.00519678695127368, "To determine if cabinet_2 is open, I will look for any visible signs of it being open. In the image, cabinet_2 is shown with its door closed. There are no visible gaps or openings that would indicate it is open. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if cabinet_2 is open, I will look for any visible signs of it being open. In the image, cabinet_2 is shown with its door closed. There are no visible gaps or openings that would indicate it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding bowl_1": ["yes", 0.07345616817474365, 0.039318256080150604, "In the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding spoon_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.07345616817474365, 0.039318256080150604, "In the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 0.12826818227767944, 0.006386097054928541, "To determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the robotic arm. In the virtual household simulator, the sink_1 is located on the countertop, which is within the range of the robotic arm. The robotic arm is capable of holding objects and can reach the sink_1. Therefore, the sink_1 is in reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the robotic arm. In the virtual household simulator, the sink_1 is located on the countertop, which is within the range of the robotic arm. The robotic arm is capable of holding objects and can reach the sink_1. Therefore, the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(bowl_1, sink_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding bowl_1": ["yes", 0.07345616817474365, 0.039318256080150604, "In the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is positioned near a cabinet and a microwave. The bowl_1 is located on the countertop, which is within reach of the robotic arm. Given the context and the positioning of the objects, it is reasonable to infer that the agent could pick up the bowl_1 if it were intended to be interacted with. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable sink_1": ["yes", 0.12826818227767944, 0.006386097054928541, "To determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the robotic arm. In the virtual household simulator, the sink_1 is located on the countertop, which is within the range of the robotic arm. The robotic arm is capable of holding objects and can reach the sink_1. Therefore, the sink_1 is in reach of the agent.", true, "<explanation>\nTo determine if the sink_1 is in reach of the agent, I will consider the position of the sink_1 and the capabilities of the robotic arm. In the virtual household simulator, the sink_1 is located on the countertop, which is within the range of the robotic arm. The robotic arm is capable of holding objects and can reach the sink_1. Therefore, the sink_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["no", "yes"], "reachable sink_1": ["no", "yes"], "open cabinet_1": ["yes", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.4, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(cabinet_2)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)", "navigate-to(cabinet_2)", "open-container(cabinet_2)", "grasp(spoon_1)", "navigate-to(sink_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "open cabinet_1": ["no", "no"], "open cabinet_2": ["no", "no"]}, "enum_metrics": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 3, "actions": ["open-container(cabinet_1)", "open-container(cabinet_2)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7446808510638298, "yes_accuracy": 0.5294117647058824, "yes_correct": 9, "yes_total": 17, "no_accuracy": 0.8666666666666667, "no_correct": 26, "no_total": 30, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}, "step": 5, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)"]}, {"enum_results": {"reachable bowl_1": ["yes", "yes"], "reachable bowl_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable cabinet_2": ["yes", "yes"], "reachable piece_of_cloth_1": ["yes", "yes"], "reachable sink_1": ["yes", "yes"], "holding bowl_1": ["yes", "no"], "holding bowl_2": ["no", "no"], "holding piece_of_cloth_1": ["no", "no"], "open cabinet_1": ["yes", "yes"], "open cabinet_2": ["no", "no"], "ontop bowl_1,bowl_2": ["no", "yes"], "ontop bowl_1,cabinet_1": ["no", "no"], "ontop bowl_1,cabinet_2": ["no", "no"], "ontop bowl_1,piece_of_cloth_1": ["no", "no"], "ontop bowl_1,sink_1": ["no", "no"], "ontop bowl_2,bowl_1": ["no", "yes"], "ontop bowl_2,cabinet_1": ["no", "no"], "ontop bowl_2,cabinet_2": ["no", "no"], "ontop bowl_2,piece_of_cloth_1": ["no", "no"], "ontop bowl_2,sink_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_1": ["no", "no"], "ontop piece_of_cloth_1,bowl_2": ["no", "no"], "ontop piece_of_cloth_1,cabinet_1": ["no", "no"], "ontop piece_of_cloth_1,cabinet_2": ["no", "no"], "ontop piece_of_cloth_1,sink_1": ["no", "no"], "inside bowl_1,cabinet_1": ["no", "yes"], "inside bowl_1,cabinet_2": ["no", "no"], "inside bowl_2,cabinet_1": ["no", "yes"], "inside bowl_2,cabinet_2": ["no", "no"], "inside piece_of_cloth_1,cabinet_1": ["no", "yes"], "inside piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto bowl_1,bowl_2": ["no", "yes"], "nextto bowl_1,cabinet_1": ["yes", "yes"], "nextto bowl_1,cabinet_2": ["no", "no"], "nextto bowl_1,piece_of_cloth_1": ["no", "no"], "nextto bowl_1,sink_1": ["yes", "no"], "nextto bowl_2,bowl_1": ["no", "yes"], "nextto bowl_2,cabinet_1": ["yes", "yes"], "nextto bowl_2,cabinet_2": ["no", "no"], "nextto bowl_2,piece_of_cloth_1": ["no", "no"], "nextto bowl_2,sink_1": ["yes", "no"], "nextto piece_of_cloth_1,bowl_1": ["no", "no"], "nextto piece_of_cloth_1,bowl_2": ["no", "no"], "nextto piece_of_cloth_1,cabinet_1": ["no", "yes"], "nextto piece_of_cloth_1,cabinet_2": ["no", "no"], "nextto piece_of_cloth_1,sink_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7446808510638298, "yes_accuracy": 0.5294117647058824, "yes_correct": 9, "yes_total": 17, "no_accuracy": 0.8666666666666667, "no_correct": 26, "no_total": 30, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 6, "yes_total": 6, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 13, "no_total": 13}, "inside": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "nextto": {"accuracy": 0.6, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.7, "no_correct": 7, "no_total": 10}}}, "step": 6, "actions": ["place-next-to(bowl_1, sink_1)", "open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)"]}], "remaining_actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2732679545879364, 0.0034399356227368116, "In the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.", false, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2532782554626465, 0.0031883029732853174, "In the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.07030671089887619, 0.009514979086816311, "In the virtual household simulator environment, the cabinet_1 is not depicted as open. The image shows the cabinet closed, as there is no visible gap or door open, and the surrounding area does not indicate any interaction with the cabinet that would suggest it is open. Therefore, the cabinet_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is not depicted as open. The image shows the cabinet closed, as there is no visible gap or door open, and the surrounding area does not indicate any interaction with the cabinet that would suggest it is open. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.07280412316322327, 0.005976126994937658, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. Therefore, the cabinet_1 is not open.", false, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 0.163199782371521, 0.006327942479401827, "In the virtual household simulator, the agent, represented by a robotic arm, is positioned in a kitchen area. The snack_food_1 is located on a countertop, which is within the reach of the robotic arm. The arm can easily grasp objects placed on the countertop, making the snack_food_1 accessible to the agent. Therefore, the snack_food_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is positioned in a kitchen area. The snack_food_1 is located on a countertop, which is within the reach of the robotic arm. The arm can easily grasp objects placed on the countertop, making the snack_food_1 accessible to the agent. Therefore, the snack_food_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.1703839898109436, 0.003536206902936101, "In the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the kitchen counter, which is within the reach of the robotic arm. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the kitchen counter, which is within the reach of the robotic arm. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.04191321134567261, 0.010597318410873413, "In the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.06304039061069489, 0.03374308720231056, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not in contact with any object labeled as snack_food_1. Therefore, the agent is not holding the snack_food_1.", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not in contact with any object labeled as snack_food_1. Therefore, the agent is not holding the snack_food_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.1703839898109436, 0.003536206902936101, "In the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the kitchen counter, which is within the reach of the robotic arm. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the kitchen counter, which is within the reach of the robotic arm. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.04191321134567261, 0.010597318410873413, "In the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.06304039061069489, 0.03374308720231056, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not in contact with any object labeled as snack_food_1. Therefore, the agent is not holding the snack_food_1.", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not in contact with any object labeled as snack_food_1. Therefore, the agent is not holding the snack_food_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "yes"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["yes", "no"], "inside snack_food_1,cabinet_1": ["yes", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["yes", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.7317073170731707, "no_correct": 30, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "inside": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "yes"], "ontop snack_food_1,juice_1": ["no", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["yes", "no"], "inside snack_food_1,cabinet_1": ["yes", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["yes", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["yes", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["no", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7, "yes_accuracy": 0.5555555555555556, "yes_correct": 5, "yes_total": 9, "no_accuracy": 0.7317073170731707, "no_correct": 30, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}, "inside": {"accuracy": 0.75, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2732679545879364, 0.0034399356227368116, "In the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.", false, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2532782554626465, 0.0031883029732853174, "In the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the cabinet_1 is positioned in the kitchen area, which is within reach of the robotic arm. The robotic arm is capable of holding objects and can easily access the cabinet_1, as it is not too far away or obstructed by other objects. Therefore, the cabinet_1 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open cabinet_1": ["no", 0.07030671089887619, 0.009514979086816311, "In the virtual household simulator environment, the cabinet_1 is not depicted as open. The image shows the cabinet closed, as there is no visible gap or door open, and the surrounding area does not indicate any interaction with the cabinet that would suggest it is open. Therefore, the cabinet_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is not depicted as open. The image shows the cabinet closed, as there is no visible gap or door open, and the surrounding area does not indicate any interaction with the cabinet that would suggest it is open. Therefore, the cabinet_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": {"open cabinet_1": ["no", 0.08360502868890762, 0.00471667293459177, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. Therefore, the answer is \"No\".", false, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable snack_food_1": ["yes", 0.14965438842773438, 0.0074508534744381905, "In the virtual household simulator, the agent, represented by the robotic arm, is positioned in the kitchen area. The snack_food_1 is located on the countertop, which is within the reach of the robotic arm. The arm can easily grasp and move objects on the countertop, making the snack_food_1 accessible to the agent.", true, "<explanation>\nIn the virtual household simulator, the agent, represented by the robotic arm, is positioned in the kitchen area. The snack_food_1 is located on the countertop, which is within the reach of the robotic arm. The arm can easily grasp and move objects on the countertop, making the snack_food_1 accessible to the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.1883949190378189, 0.003910011611878872, "In the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the counter, within the agent's reach. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the counter, within the agent's reach. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.04304248467087746, 0.008475568145513535, "In the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.061966024339199066, 0.04258858785033226, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not holding any object, let alone the snack_food_1. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not holding any object, let alone the snack_food_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.1883949190378189, 0.003910011611878872, "In the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the counter, within the agent's reach. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the kitchen counter. The carton_1 is located on the counter, within the agent's reach. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.04304248467087746, 0.008475568145513535, "In the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.", true, "<explanation>\nIn the virtual household simulator environment, the carton_1 object is present, but there is no visible indication that it is open. The image does not show any signs of the carton being opened, such as a lifted lid or any other openings. Therefore, based on the visual information provided, it can be concluded that the carton_1 is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding snack_food_1": ["no", 0.061966024339199066, 0.04258858785033226, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not holding any object, let alone the snack_food_1. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The question asks if the agent is holding the snack_food_1. Upon inspection, the robotic arm is not holding any object, let alone the snack_food_1. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "no"], "open door_1": ["yes", "no"], "holding countertop_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside door_1,carton_1": ["no", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["no", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["yes", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,cabinet_1": ["yes", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7419354838709677, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7407407407407407, "no_correct": 20, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 3, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 8, "no_total": 8}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 5, "no_total": 5}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 4, "no_total": 8}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "yes"], "ontop snack_food_1,juice_1": ["yes", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["yes", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["yes", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["yes", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.66, "yes_accuracy": 0.4444444444444444, "yes_correct": 4, "yes_total": 9, "no_accuracy": 0.7073170731707317, "no_correct": 29, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "inside": {"accuracy": 0.625, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "yes"], "reachable snack_food_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable juice_1": ["yes", "yes"], "reachable door_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open cabinet_1": ["no", "yes"], "open door_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding snack_food_1": ["no", "no"], "holding door_1": ["no", "no"], "ontop countertop_1,carton_1": ["no", "no"], "ontop countertop_1,snack_food_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop countertop_1,door_1": ["no", "no"], "ontop snack_food_1,carton_1": ["no", "no"], "ontop snack_food_1,countertop_1": ["no", "no"], "ontop snack_food_1,cabinet_1": ["no", "yes"], "ontop snack_food_1,juice_1": ["yes", "no"], "ontop snack_food_1,door_1": ["no", "no"], "ontop door_1,carton_1": ["no", "no"], "ontop door_1,countertop_1": ["no", "no"], "ontop door_1,snack_food_1": ["no", "no"], "ontop door_1,cabinet_1": ["no", "no"], "ontop door_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,door_1": ["no", "no"], "inside snack_food_1,carton_1": ["yes", "no"], "inside snack_food_1,cabinet_1": ["no", "yes"], "inside snack_food_1,door_1": ["no", "no"], "inside door_1,carton_1": ["yes", "no"], "inside door_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,snack_food_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto countertop_1,door_1": ["yes", "no"], "nextto snack_food_1,carton_1": ["yes", "no"], "nextto snack_food_1,countertop_1": ["no", "no"], "nextto snack_food_1,cabinet_1": ["no", "yes"], "nextto snack_food_1,juice_1": ["no", "no"], "nextto snack_food_1,door_1": ["no", "no"], "nextto door_1,carton_1": ["no", "no"], "nextto door_1,countertop_1": ["no", "no"], "nextto door_1,snack_food_1": ["yes", "no"], "nextto door_1,cabinet_1": ["no", "no"], "nextto door_1,juice_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.66, "yes_accuracy": 0.4444444444444444, "yes_correct": 4, "yes_total": 9, "no_accuracy": 0.7073170731707317, "no_correct": 29, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 4, "yes_total": 4, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "open": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "inside": {"accuracy": 0.625, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7142857142857143, "no_correct": 5, "no_total": 7}, "nextto": {"accuracy": 0.4666666666666667, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 7, "no_total": 14}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2497568577528, 0.002160820411518216, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", false, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.24966157972812653, 0.002447596052661538, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", true, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.05768033117055893, 0.005365106277167797, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.24966157972812653, 0.002447596052661538, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", true, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.05768033117055893, 0.005365106277167797, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4864864864864865, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5294117647058824, "no_correct": 18, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4864864864864865, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5294117647058824, "no_correct": 18, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.2497568577528, 0.002160820411518216, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", false, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.24966157972812653, 0.002447596052661538, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", true, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.05768033117055893, 0.005365106277167797, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable cabinet_1": ["yes", 0.24966157972812653, 0.002447596052661538, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.", true, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the corner of the room. Given the typical reach of a robotic arm in such a setting, it is reasonable to assume that the cabinet is within the arm's reach. The cabinet's height and the arm's length suggest that the agent can easily access it.\n</explanation>\n<answer>\nYes\n</answer>", false], "open cabinet_1": ["no", 0.05768033117055893, 0.005365106277167797, "In the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.", true, "<explanation>\nIn the virtual household simulator environment, the cabinet_1 is closed. The image shows the cabinet in a closed position, with no visible doors or drawers open. The robotic arm, which is the agent, is not interacting with the cabinet, indicating that it is not currently open.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding sandwich_1": [true, false, false], "holding snack_food_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4864864864864865, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5294117647058824, "no_correct": 18, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}}}, "step": 1, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, {"enum_results": {"reachable carton_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable electric_refrigerator_1": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable cabinet_1": ["yes", "no"], "reachable juice_1": ["yes", "no"], "open carton_1": ["no", "yes"], "open electric_refrigerator_1": ["no", "no"], "open cabinet_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding apple_1": ["no", "no"], "ontop countertop_1,carton_1": ["yes", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,juice_1": ["no", "no"], "ontop apple_1,carton_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,juice_1": ["no", "no"], "inside countertop_1,carton_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["yes", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside apple_1,carton_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "nextto countertop_1,carton_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,juice_1": ["yes", "no"], "nextto apple_1,carton_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,cabinet_1": ["yes", "no"], "nextto apple_1,juice_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.4864864864864865, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.5294117647058824, "no_correct": 18, "no_total": 34, "predicates": {"reachable": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 6}, "open": {"accuracy": 0.6666666666666666, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "nextto": {"accuracy": 0.1, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.1111111111111111, "no_correct": 1, "no_total": 9}}}, "step": 2, "actions": ["open-container(cabinet_1)", "open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}], "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.15901753306388855, 0.0048019131645560265, "To determine if the plaything_2 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the plaything_2. The agent is positioned above the ground and has a long reach, as indicated by the robotic arm's trajectory. The plaything_2 is located on a low shelf, which is within the range of the agent's reach. Therefore, the plaything_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the plaything_2. The agent is positioned above the ground and has a long reach, as indicated by the robotic arm's trajectory. The plaything_2 is located on a low shelf, which is within the range of the agent's reach. Therefore, the plaything_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["no", 0.15697558224201202, 0.0036917116958647966, "To determine if the carton_1 is in reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on a shelf, which is out of the direct reach of the robotic arm. The robotic arm is positioned above the floor and cannot directly reach the shelf without moving around other objects. Therefore, the carton_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the carton_1 is in reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on a shelf, which is out of the direct reach of the robotic arm. The robotic arm is positioned above the floor and cannot directly reach the shelf without moving around other objects. Therefore, the carton_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 0.2957408130168915, 0.003722826950252056, "To determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach capabilities. In the virtual household simulator, the agent (robotic arm) is positioned above the table, suggesting it is within reach. Additionally, the table is located in a position that is accessible to the agent, given its height and the space around it. Therefore, the table_1 is indeed within reach of the agent.", false, "<explanation>\nTo determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach capabilities. In the virtual household simulator, the agent (robotic arm) is positioned above the table, suggesting it is within reach. Additionally, the table is located in a position that is accessible to the agent, given its height and the space around it. Therefore, the table_1 is indeed within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(plaything_4)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_4": ["no", 0.18839336931705475, 0.009379553608596325, "To determine if plaything_4 is in reach of the agent, I need to consider the position of both the agent (the robotic arm) and plaything_4. The robotic arm is positioned in the upper right corner of the image, while plaything_4 is located on the floor in the lower left corner. Given the distance and angle between the two, it is unlikely that the robotic arm can reach plaything_4 without moving significantly. Therefore, the answer is \"No\".", false, "<explanation>\nTo determine if plaything_4 is in reach of the agent, I need to consider the position of both the agent (the robotic arm) and plaything_4. The robotic arm is positioned in the upper right corner of the image, while plaything_4 is located on the floor in the lower left corner. Given the distance and angle between the two, it is unlikely that the robotic arm can reach plaything_4 without moving significantly. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable plaything_2": ["no", 0.2013351321220398, 0.006079794839024544, "To determine if plaything_2 is in reach of the agent, I need to consider the position of both the agent (the robotic arm) and plaything_2. The robotic arm is positioned in the upper right corner of the image, while plaything_2 is located on the floor to the left of the agent. Given the height and position of the robotic arm, it is unlikely that the agent can reach plaything_2 without additional movement or manipulation. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if plaything_2 is in reach of the agent, I need to consider the position of both the agent (the robotic arm) and plaything_2. The robotic arm is positioned in the upper right corner of the image, while plaything_2 is located on the floor to the left of the agent. Given the height and position of the robotic arm, it is unlikely that the agent can reach plaything_2 without additional movement or manipulation. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "reachable carton_1": ["yes", 0.18628601729869843, 0.0043810270726680756, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it can reach objects within a reasonable distance from its center point. Since the carton_1 is not too far from the center of the room, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it can reach objects within a reasonable distance from its center point. Since the carton_1 is not too far from the center of the room, it is likely within the reach of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.18628601729869843, 0.0043810270726680756, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it appears to be able to reach the carton_1, as it is within the arm's extended range. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it appears to be able to reach the carton_1, as it is within the arm's extended range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.07791891694068909, 0.006395974662154913, "In the virtual household simulator environment, the agent (robotic arm) can interact with various objects, including cartons. Upon examining the image, I observe a carton on the floor, and it appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any gaps indicating access. Therefore, based on the visual information provided, the carton is not open.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) can interact with various objects, including cartons. Upon examining the image, I observe a carton on the floor, and it appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any gaps indicating access. Therefore, based on the visual information provided, the carton is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.08347537368535995, 0.03070887364447117, "The environment is a virtual household simulator with a robotic arm that can hold objects. In the image, there is a robotic arm and a plaything_2. However, the robotic arm is not holding the plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. In the image, there is a robotic arm and a plaything_2. However, the robotic arm is not holding the plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.0724501982331276, 0.056424275040626526, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the room, but there is no indication that it is holding any object at the moment. The plaything_4 is not mentioned as being in the robotic arm's grip in the provided description. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the room, but there is no indication that it is holding any object at the moment. The plaything_4 is not mentioned as being in the robotic arm's grip in the provided description. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.18628601729869843, 0.0043810270726680756, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it appears to be able to reach the carton_1, as it is within the arm's extended range. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor near the left side of the room, while the robotic arm is positioned in the center of the room. Given the length of the robotic arm, it appears to be able to reach the carton_1, as it is within the arm's extended range. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "open carton_1": ["no", 0.07791891694068909, 0.006395974662154913, "In the virtual household simulator environment, the agent (robotic arm) can interact with various objects, including cartons. Upon examining the image, I observe a carton on the floor, and it appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any gaps indicating access. Therefore, based on the visual information provided, the carton is not open.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) can interact with various objects, including cartons. Upon examining the image, I observe a carton on the floor, and it appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any gaps indicating access. Therefore, based on the visual information provided, the carton is not open.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.08347537368535995, 0.03070887364447117, "The environment is a virtual household simulator with a robotic arm that can hold objects. In the image, there is a robotic arm and a plaything_2. However, the robotic arm is not holding the plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. In the image, there is a robotic arm and a plaything_2. However, the robotic arm is not holding the plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.0724501982331276, 0.056424275040626526, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the room, but there is no indication that it is holding any object at the moment. The plaything_4 is not mentioned as being in the robotic arm's grip in the provided description. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned in the room, but there is no indication that it is holding any object at the moment. The plaything_4 is not mentioned as being in the robotic arm's grip in the provided description. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "yes"], "reachable carton_2": ["yes", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_2,carton_2": ["no", "no"], "ontop plaything_2,table_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["yes", "no"], "ontop plaything_8,carton_2": ["yes", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_2,carton_2": ["no", "no"], "nextto plaything_2,table_1": ["no", "no"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_7,carton_2": ["yes", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_2": ["yes", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["yes", "no"], "nextto plaything_8,carton_2": ["yes", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6382978723404256, "yes_accuracy": 0.2857142857142857, "yes_correct": 2, "yes_total": 7, "no_accuracy": 0.7, "no_correct": 28, "no_total": 40, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.6666666666666666, "yes_correct": 2, "yes_total": 3, "no_accuracy": 0.0, "no_correct": 0, "no_total": 3}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8666666666666667, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8666666666666667, "no_correct": 13, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.5333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.6153846153846154, "no_correct": 8, "no_total": 13}}}, "step": 1, "actions": ["navigate-to(plaything_4)", "navigate-to(carton_1)", "place-next-to(plaything_2, carton_1)", "open-container(carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "no"], "reachable plaything_4": ["no", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_4,plaything_2": ["yes", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "no"], "reachable plaything_4": ["no", "yes"], "reachable carton_1": ["yes", "no"], "holding plaything_2": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"], "nextto plaything_4,plaything_2": ["yes", "no"], "nextto plaything_4,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 3, "no_accuracy": 0.8461538461538461, "no_correct": 11, "no_total": 13, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["no", 0.20122548937797546, 0.0028703275602310896, "To determine if carton_1 is within reach of the agent, we need to consider the position of the agent (the robotic arm) and the position of carton_1 in the virtual environment. The agent is positioned in the room, and its reach is determined by its arm length and any obstacles in its path. Carton_1 is located on a shelf, which is out of the direct reach of the agent's arm. There are no objects between the agent and carton_1 that would allow the agent to reach it. Therefore, the agent cannot reach carton_1.", true, "<explanation>\nTo determine if carton_1 is within reach of the agent, we need to consider the position of the agent (the robotic arm) and the position of carton_1 in the virtual environment. The agent is positioned in the room, and its reach is determined by its arm length and any obstacles in its path. Carton_1 is located on a shelf, which is out of the direct reach of the agent's arm. There are no objects between the agent and carton_1 that would allow the agent to reach it. Therefore, the agent cannot reach carton_1.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable table_1": ["yes", 0.38211461901664734, 0.0037461197935044765, "To determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach capabilities. In the virtual household simulator, the agent (robotic arm) is positioned in a way that it can easily reach most objects in the room, including furniture like the table_1. The table_1 is located near the agent, and there are no visible obstacles that would hinder the arm's ability to reach it. Given the design of the robotic arm and its placement in the environment, it is reasonable to conclude that the table_1 is within reach of the agent.", false, "<explanation>\nTo determine if the table_1 is within reach of the agent, we need to consider the position of the table and the robotic arm's reach capabilities. In the virtual household simulator, the agent (robotic arm) is positioned in a way that it can easily reach most objects in the room, including furniture like the table_1. The table_1 is located near the agent, and there are no visible obstacles that would hinder the arm's ability to reach it. Given the design of the robotic arm and its placement in the environment, it is reasonable to conclude that the table_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_2": {"before": false, "after": true}, "reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}}}, "action_info": "executed but failed"}, {"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.17107370495796204, 0.005853820126503706, "To determine if plaything_2 is within reach of the agent, I will consider the position of plaything_2 and the reach of the robotic arm. The robotic arm is positioned in the room and appears to be able to reach objects on the floor and shelves. Plaything_2 is located on a shelf, which is within the range of the robotic arm. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if plaything_2 is within reach of the agent, I will consider the position of plaything_2 and the reach of the robotic arm. The robotic arm is positioned in the room and appears to be able to reach objects on the floor and shelves. Plaything_2 is located on a shelf, which is within the range of the robotic arm. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.27076053619384766, 0.003007878316566348, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": true, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.27076053619384766, 0.003007878316566348, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.09295196086168289, 0.004627805203199387, "In the image, there is a carton box located near the center of the room. The box appears to be closed, as there are no visible openings or gaps in its surface. The robotic arm is not interacting with the box, indicating that it is not currently open. Therefore, the carton_1 is closed.", true, "<explanation>\nIn the image, there is a carton box located near the center of the room. The box appears to be closed, as there are no visible openings or gaps in its surface. The robotic arm is not interacting with the box, indicating that it is not currently open. Therefore, the carton_1 is closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.07824809104204178, 0.028785865753889084, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned near a plaything_2, but it is not holding it. The plaything_2 is lying on the floor, not in the robotic arm's grip. Therefore, the agent is not holding the plaything_2.", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned near a plaything_2, but it is not holding it. The plaything_2 is lying on the floor, not in the robotic arm's grip. Therefore, the agent is not holding the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.27076053619384766, 0.003007878316566348, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the range of motion of the robotic arm. The carton_1 is located near the floor on the right side of the image, while the robotic arm is positioned towards the center-right. Given the length of the robotic arm and its ability to reach objects within its grasp, it is reasonable to assume that the carton_1 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.09295196086168289, 0.004627805203199387, "In the image, there is a carton box located near the center of the room. The box appears to be closed, as there are no visible openings or gaps in its surface. The robotic arm is not interacting with the box, indicating that it is not currently open. Therefore, the carton_1 is closed.", true, "<explanation>\nIn the image, there is a carton box located near the center of the room. The box appears to be closed, as there are no visible openings or gaps in its surface. The robotic arm is not interacting with the box, indicating that it is not currently open. Therefore, the carton_1 is closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.07824809104204178, 0.028785865753889084, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned near a plaything_2, but it is not holding it. The plaything_2 is lying on the floor, not in the robotic arm's grip. Therefore, the agent is not holding the plaything_2.", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is positioned near a plaything_2, but it is not holding it. The plaything_2 is lying on the floor, not in the robotic arm's grip. Therefore, the agent is not holding the plaything_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_6": ["yes", "yes"], "reachable plaything_7": ["no", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["no", "yes"], "reachable carton_2": ["no", "yes"], "reachable table_1": ["yes", "no"], "holding plaything_6": ["no", "no"], "holding plaything_7": ["no", "no"], "holding plaything_8": ["no", "no"], "open carton_1": ["no", "yes"], "open carton_2": ["no", "yes"], "ontop plaything_6,plaything_7": ["no", "no"], "ontop plaything_6,plaything_8": ["no", "no"], "ontop plaything_6,carton_1": ["no", "no"], "ontop plaything_6,carton_2": ["no", "no"], "ontop plaything_6,table_1": ["no", "no"], "ontop plaything_7,plaything_6": ["yes", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_7,carton_2": ["no", "no"], "ontop plaything_7,table_1": ["no", "no"], "ontop plaything_8,plaything_6": ["no", "no"], "ontop plaything_8,plaything_7": ["no", "no"], "ontop plaything_8,carton_1": ["no", "no"], "ontop plaything_8,carton_2": ["no", "no"], "ontop plaything_8,table_1": ["no", "no"], "inside plaything_6,carton_1": ["no", "no"], "inside plaything_6,carton_2": ["no", "no"], "inside plaything_7,carton_1": ["no", "no"], "inside plaything_7,carton_2": ["no", "no"], "inside plaything_8,carton_1": ["no", "no"], "inside plaything_8,carton_2": ["no", "no"], "nextto plaything_6,plaything_7": ["no", "no"], "nextto plaything_6,plaything_8": ["no", "no"], "nextto plaything_6,carton_1": ["no", "no"], "nextto plaything_6,carton_2": ["no", "no"], "nextto plaything_6,table_1": ["no", "no"], "nextto plaything_7,plaything_6": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["no", "no"], "nextto plaything_7,carton_2": ["no", "no"], "nextto plaything_7,table_1": ["no", "no"], "nextto plaything_8,plaything_6": ["no", "no"], "nextto plaything_8,plaything_7": ["no", "no"], "nextto plaything_8,carton_1": ["no", "no"], "nextto plaything_8,carton_2": ["no", "no"], "nextto plaything_8,table_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.8297872340425532, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 0.926829268292683, "no_correct": 38, "no_total": 41, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.9333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9333333333333333, "no_correct": 14, "no_total": 15}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 6, "no_total": 6}, "nextto": {"accuracy": 0.9333333333333333, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 14, "no_total": 14}}}, "step": 1, "actions": ["navigate-to(plaything_2)", "navigate-to(carton_1)", "open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6896551724137931, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.68, "no_correct": 17, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_7": ["yes", "no"], "reachable plaything_8": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "holding plaything_7": ["yes", "no"], "holding plaything_8": ["yes", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,plaything_7": ["no", "no"], "ontop plaything_2,plaything_8": ["no", "no"], "ontop plaything_2,carton_1": ["no", "no"], "ontop plaything_7,plaything_2": ["no", "no"], "ontop plaything_7,plaything_8": ["no", "no"], "ontop plaything_7,carton_1": ["no", "no"], "ontop plaything_8,plaything_2": ["no", "no"], "ontop plaything_8,plaything_7": ["yes", "no"], "ontop plaything_8,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "inside plaything_7,carton_1": ["yes", "no"], "inside plaything_8,carton_1": ["no", "no"], "nextto plaything_2,plaything_7": ["no", "no"], "nextto plaything_2,plaything_8": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "yes"], "nextto plaything_7,plaything_2": ["no", "no"], "nextto plaything_7,plaything_8": ["no", "no"], "nextto plaything_7,carton_1": ["yes", "no"], "nextto plaything_8,plaything_2": ["no", "no"], "nextto plaything_8,plaything_7": ["yes", "no"], "nextto plaything_8,carton_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.6896551724137931, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.68, "no_correct": 17, "no_total": 25, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 0.3333333333333333, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.3333333333333333, "no_correct": 1, "no_total": 3}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 0.8888888888888888, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 0.6666666666666666, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3}, "nextto": {"accuracy": 0.7777777777777778, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.75, "no_correct": 6, "no_total": 8}}}, "step": 3, "actions": ["open-container(carton_1)", "grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.18912793695926666, 0.010669868439435959, "To determine if the plaything_2 is in reach of the agent, I will analyze the position of the plaything_2 and the agent's robotic arm. The plaything_2 is located on a table, and the agent's robotic arm is positioned near the table. Given the height and reach capabilities of the robotic arm, it appears that the plaything_2 is within the agent's reach. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, I will analyze the position of the plaything_2 and the agent's robotic arm. The plaything_2 is located on a table, and the agent's robotic arm is positioned near the table. Given the height and reach capabilities of the robotic arm, it appears that the plaything_2 is within the agent's reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.2891790568828583, 0.0028350118082016706, "In the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.", false, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.2891790568828583, 0.0028350118082016706, "In the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.06304091215133667, 0.006644463166594505, "In the virtual household simulator environment, the agent (robotic arm) is present and capable of interacting with objects. The specific object in question is labeled as \"carton_1.\" To determine if it is open, I will look for visual cues such as flaps or doors that indicate it is not fully closed. In the image, the carton appears to be closed, as there are no visible flaps or doors that suggest it is open. Therefore, the answer is \"No.\"", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is present and capable of interacting with objects. The specific object in question is labeled as \"carton_1.\" To determine if it is open, I will look for visual cues such as flaps or doors that indicate it is not fully closed. In the image, the carton appears to be closed, as there are no visible flaps or doors that suggest it is open. Therefore, the answer is \"No.\"\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.09637592732906342, 0.03545472398400307, "In the virtual household simulator environment, the agent, represented by a robotic arm, is present and capable of interacting with objects. The question asks if the agent is holding the plaything_2. Upon examining the image, it is clear that the robotic arm is not holding any object that can be identified as plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is present and capable of interacting with objects. The question asks if the agent is holding the plaything_2. Upon examining the image, it is clear that the robotic arm is not holding any object that can be identified as plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.2891790568828583, 0.0028350118082016706, "In the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The proximity of the agent to the carton_1 suggests that the agent could easily pick it up.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.06304091215133667, 0.006644463166594505, "In the virtual household simulator environment, the agent (robotic arm) is present and capable of interacting with objects. The specific object in question is labeled as \"carton_1.\" To determine if it is open, I will look for visual cues such as flaps or doors that indicate it is not fully closed. In the image, the carton appears to be closed, as there are no visible flaps or doors that suggest it is open. Therefore, the answer is \"No.\"", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is present and capable of interacting with objects. The specific object in question is labeled as \"carton_1.\" To determine if it is open, I will look for visual cues such as flaps or doors that indicate it is not fully closed. In the image, the carton appears to be closed, as there are no visible flaps or doors that suggest it is open. Therefore, the answer is \"No.\"\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.09637592732906342, 0.03545472398400307, "In the virtual household simulator environment, the agent, represented by a robotic arm, is present and capable of interacting with objects. The question asks if the agent is holding the plaything_2. Upon examining the image, it is clear that the robotic arm is not holding any object that can be identified as plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is present and capable of interacting with objects. The question asks if the agent is holding the plaything_2. Upon examining the image, it is clear that the robotic arm is not holding any object that can be identified as plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["open-container(carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["yes", "no"], "nextto plaything_2,carton_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7142857142857143, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "nextto": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.20933276414871216, 0.017183080315589905, "To determine if the plaything_2 is in reach of the agent, I will consider the position of the plaything_2 and the reach of the robotic arm. The plaything_2 is located on the floor, while the robotic arm is positioned in the upper right corner of the image. Given the length of the robotic arm, it appears to be able to reach the plaything_2 on the floor. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, I will consider the position of the plaything_2 and the reach of the robotic arm. The plaything_2 is located on the floor, while the robotic arm is positioned in the upper right corner of the image. Given the length of the robotic arm, it appears to be able to reach the plaything_2 on the floor. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable carton_1": ["yes", 0.3750506043434143, 0.0028635466005653143, "To determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor in front of the agent, and the robotic arm is positioned to the right of the carton_1. Given the length of the robotic arm, it appears to be able to reach the carton_1 without any obstructions. Therefore, the carton_1 is within reach of the agent.", false, "<explanation>\nTo determine if the carton_1 is within reach of the agent, I will consider the position of the carton_1 and the reach of the robotic arm. The carton_1 is located on the floor in front of the agent, and the robotic arm is positioned to the right of the carton_1. Given the length of the robotic arm, it appears to be able to reach the carton_1 without any obstructions. Therefore, the carton_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable plaything_4": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable plaything_2": ["yes", 0.23724433779716492, 0.017185920849442482, "To determine if the plaything_2 is in reach of the agent, I will consider the position of the plaything_2 and the reach of the robotic arm. The plaything_2 is located on the floor near the center of the room, while the robotic arm is positioned on the right side of the room, extending towards the left. Given the length of the robotic arm, it appears to be able to reach the plaything_2, as it extends beyond the plaything_2's current position. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the plaything_2 is in reach of the agent, I will consider the position of the plaything_2 and the reach of the robotic arm. The plaything_2 is located on the floor near the center of the room, while the robotic arm is positioned on the right side of the room, extending towards the left. Given the length of the robotic arm, it appears to be able to reach the plaything_2, as it extends beyond the plaything_2's current position. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": {"holding plaything_2": ["no", 0.09267617762088776, 0.056210942566394806, "The environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop plaything_2,carton_1": ["no", 0.05406723916530609, 0.02553955465555191, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a carton. However, the plaything_2 is not on top of the carton_1. Instead, the plaything_2 is located on the floor near the carton. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a carton. However, the plaything_2 is not on top of the carton_1. Instead, the plaything_2 is located on the floor near the carton. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto plaything_2,carton_1": ["yes", 0.14313939213752747, 0.021951137110590935, "In the virtual household simulator environment, the plaything_2 is located next to the carton_1. The robotic arm, which is the agent, is holding the carton_1. Therefore, the plaything_2 is indeed next to the carton_1.", false, "<explanation>\nIn the virtual household simulator environment, the plaything_2 is located next to the carton_1. The robotic arm, which is the agent, is holding the carton_1. Therefore, the plaything_2 is indeed next to the carton_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop plaything_2,plaything_1": {"before": false, "after": false}, "ontop plaything_2,plaything_2": {"before": null, "after": false}, "ontop plaything_2,plaything_3": {"before": false, "after": false}, "ontop plaything_2,plaything_4": {"before": false, "after": false}, "ontop plaything_2,table_1": {"before": false, "after": false}, "nextto plaything_2,plaything_1": {"before": false, "after": false}, "nextto plaything_2,plaything_2": {"before": null, "after": false}, "nextto plaything_2,plaything_3": {"before": false, "after": false}, "nextto plaything_2,plaything_4": {"before": false, "after": false}, "nextto plaything_2,table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.2880796492099762, 0.004656373057514429, "In the virtual household simulator environment, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The agent's position and the proximity to the carton_1 suggest that it can easily grasp or manipulate the object if needed.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The agent's position and the proximity to the carton_1 suggest that it can easily grasp or manipulate the object if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.10634411126375198, 0.003211313858628273, "In the image, there is a large, black box on the floor, and a lion is standing on it. The box appears to be closed, as there are no visible openings or gaps in its surface. The lion's position suggests that it is not interacting with the box in a way that would imply it is open. Therefore, based on the visual information provided, the carton_1 is likely closed.", true, "<explanation>\nIn the image, there is a large, black box on the floor, and a lion is standing on it. The box appears to be closed, as there are no visible openings or gaps in its surface. The lion's position suggests that it is not interacting with the box in a way that would imply it is open. Therefore, based on the visual information provided, the carton_1 is likely closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.09267617762088776, 0.056210942566394806, "The environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.2880796492099762, 0.004656373057514429, "In the virtual household simulator environment, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The agent's position and the proximity to the carton_1 suggest that it can easily grasp or manipulate the object if needed.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned near the carton_1. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the carton_1 is within the agent's reach. The agent's position and the proximity to the carton_1 suggest that it can easily grasp or manipulate the object if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.10634411126375198, 0.003211313858628273, "In the image, there is a large, black box on the floor, and a lion is standing on it. The box appears to be closed, as there are no visible openings or gaps in its surface. The lion's position suggests that it is not interacting with the box in a way that would imply it is open. Therefore, based on the visual information provided, the carton_1 is likely closed.", true, "<explanation>\nIn the image, there is a large, black box on the floor, and a lion is standing on it. The box appears to be closed, as there are no visible openings or gaps in its surface. The lion's position suggests that it is not interacting with the box in a way that would imply it is open. Therefore, based on the visual information provided, the carton_1 is likely closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_2": ["no", 0.09267617762088776, 0.056210942566394806, "The environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".", true, "<explanation>\nThe environment is a virtual household simulator with interactive objects and furniture. The agent, a robotic arm, is present and capable of holding objects. However, the image does not show the agent holding any object, let alone the plaything_2. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_3": [true, false, false], "holding plaything_4": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "no"], "open carton_1": ["yes", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.8571428571428571, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 1.0, "no_correct": 3, "no_total": 3, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 1, "actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 2, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_2": ["no", "yes"], "reachable carton_1": ["yes", "yes"], "holding plaything_2": ["no", "yes"], "open carton_1": ["no", "yes"], "ontop plaything_2,carton_1": ["no", "no"], "inside plaything_2,carton_1": ["no", "no"], "nextto plaything_2,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.42857142857142855, "yes_accuracy": 0.25, "yes_correct": 1, "yes_total": 4, "no_accuracy": 0.6666666666666666, "no_correct": 2, "no_total": 3, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}}}, "step": 3, "actions": ["open-container(carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}], "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"]}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(plaything_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable plaything_2": [true, false, false], "all_correct": true}, "effects_results": {"reachable plaything_2": ["yes", 0.21558742225170135, 0.002394960029050708, "In the virtual household simulator, the agent (robotic arm) is positioned near the plaything_2, which is on the floor. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the plaything_2 is within the agent's grasp. The proximity and accessibility suggest that the agent could easily pick up the plaything_2 if needed.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the plaything_2, which is on the floor. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the plaything_2 is within the agent's grasp. The proximity and accessibility suggest that the agent could easily pick up the plaything_2 if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_4": ["yes", 0.21573568880558014, 0.0027157117146998644, "In the virtual household simulator, the agent (robotic arm) is positioned near the plaything_4, which is on the floor. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the agent can reach the plaything_4. Therefore, the answer is \"Yes\".", false, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned near the plaything_4, which is on the floor. Given the agent's ability to interact with objects and its reach, it is reasonable to conclude that the agent can reach the plaything_4. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_3": {"before": false, "after": false}, "reachable carton_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable carton_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable carton_1": ["yes", 0.24549058079719543, 0.00240670470520854, "In the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable plaything_3": ["yes", 0.10253841429948807, 0.00742785818874836, "First, I will identify the plaything_3 in the image. The plaything_3 appears to be a small object on the floor near the robotic arm. Next, I will check if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned in a way that it can easily reach the plaything_3, which is on the floor within its reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the plaything_3 in the image. The plaything_3 appears to be a small object on the floor near the robotic arm. Next, I will check if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned in a way that it can easily reach the plaything_3, which is on the floor within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable plaything_4": ["yes", 0.1397407054901123, 0.00541833508759737, "First, I will identify the plaything_4 in the image. It appears to be a small object on the floor near the robotic arm. Next, I will assess if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned in a way that it can easily access the plaything_4, which is within its reach. Therefore, the answer is \"Yes\".", false, "<explanation>\nFirst, I will identify the plaything_4 in the image. It appears to be a small object on the floor near the robotic arm. Next, I will assess if the robotic arm, which is the agent, can reach this object. The robotic arm is positioned in a way that it can easily access the plaything_4, which is within its reach. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable plaything_1": {"before": false, "after": false}, "reachable plaything_2": {"before": true, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.24549058079719543, 0.00240670470520854, "In the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.10714222490787506, 0.0028552436269819736, "In the image, the carton_1 appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any objects falling out. The surrounding environment and the robotic arm's position do not indicate any interaction with the carton, suggesting it remains closed.", true, "<explanation>\nIn the image, the carton_1 appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any objects falling out. The surrounding environment and the robotic arm's position do not indicate any interaction with the carton, suggesting it remains closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_3": ["no", 0.08079710602760315, 0.02042870968580246, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_3 is also visible in the scene. However, the robotic arm is not holding the plaything_3. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_3 is also visible in the scene. However, the robotic arm is not holding the plaything_3. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.11302678287029266, 0.013499123975634575, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_4 object is also visible in the scene. However, the robotic arm is not holding the plaything_4. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_4 object is also visible in the scene. However, the robotic arm is not holding the plaything_4. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(carton_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable carton_1": ["yes", 0.24549058079719543, 0.00240670470520854, "In the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the agent (robotic arm) is positioned in the room and has the capability to interact with objects. The carton_1 is located on the floor in the room, which is within the reach of the agent. Therefore, the carton_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "open carton_1": ["no", 0.10714222490787506, 0.0028552436269819736, "In the image, the carton_1 appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any objects falling out. The surrounding environment and the robotic arm's position do not indicate any interaction with the carton, suggesting it remains closed.", true, "<explanation>\nIn the image, the carton_1 appears to be closed. There are no visible signs of it being open, such as flaps being pulled apart or any objects falling out. The surrounding environment and the robotic arm's position do not indicate any interaction with the carton, suggesting it remains closed.\n</explanation>\n<answer>\nNo\n</answer>", false], "holding plaything_3": ["no", 0.08079710602760315, 0.02042870968580246, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_3 is also visible in the scene. However, the robotic arm is not holding the plaything_3. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_3 is also visible in the scene. However, the robotic arm is not holding the plaything_3. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding plaything_4": ["no", 0.11302678287029266, 0.013499123975634575, "In the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_4 object is also visible in the scene. However, the robotic arm is not holding the plaything_4. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator, the agent, represented by a robotic arm, is present in the environment. The plaything_4 object is also visible in the scene. However, the robotic arm is not holding the plaything_4. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding plaything_1": [true, false, false], "holding plaything_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable plaything_2": ["yes", "yes"], "reachable plaything_4": ["yes", "no"], "holding plaything_2": ["yes", "no"], "holding plaything_4": ["yes", "no"], "ontop plaything_2,plaything_4": ["no", "no"], "ontop plaything_4,plaything_2": ["no", "no"], "nextto plaything_2,plaything_4": ["no", "no"], "nextto plaything_4,plaything_2": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5714285714285714, "no_correct": 4, "no_total": 7, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}}}, "step": 1, "actions": ["navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "place-inside(plaything_4, carton_1)"]}, {"enum_results": {"reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_3,plaything_4": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_3": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}}}, "step": 2, "actions": ["open-container(carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, {"enum_results": {"reachable plaything_3": ["yes", "no"], "reachable plaything_4": ["yes", "no"], "reachable carton_1": ["yes", "yes"], "holding plaything_3": ["no", "no"], "holding plaything_4": ["no", "no"], "open carton_1": ["no", "yes"], "ontop plaything_3,plaything_4": ["no", "no"], "ontop plaything_3,carton_1": ["no", "no"], "ontop plaything_4,plaything_3": ["no", "no"], "ontop plaything_4,carton_1": ["no", "no"], "inside plaything_3,carton_1": ["no", "no"], "inside plaything_4,carton_1": ["no", "no"], "nextto plaything_3,plaything_4": ["yes", "no"], "nextto plaything_3,carton_1": ["yes", "no"], "nextto plaything_4,plaything_3": ["yes", "no"], "nextto plaything_4,carton_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.5625, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.5714285714285714, "no_correct": 8, "no_total": 14, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 2}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 4, "no_total": 4}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}}}, "step": 3, "actions": ["open-container(carton_1)", "grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}], "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.035392291843891144, 0.00696915527805686, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.035392291843891144, 0.00696915527805686, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.1166217103600502, 0.008448049426078796, "The environment is a virtual household simulator with a robotic arm that can hold objects. The gym shoe is visible in the image, but the robotic arm is not holding it. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The gym shoe is visible in the image, but the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["no", 0.2189173400402069, 0.0031226882711052895, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects. The gym shoe is located above the agent, but it is not within the agent's reach. The gym shoe is suspended from a vertical structure, and the agent's arm is not extended to reach it. Therefore, the gym shoe is not in reach for the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": null}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 3, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 4, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 5, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 6, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 7, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 8, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 9, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 10, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 11, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 12, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 13, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 14, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 15, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 16, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 17, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 18, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 19, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 20, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.03542010486125946, 0.006155090872198343, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable table_2": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.03542010486125946, 0.006155090872198343, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym_shoe_1 is located on the floor, which is within the range of the robotic arm. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.18326818943023682, 0.005534219555556774, "The environment is a virtual household simulator with a robotic arm that can hold objects. The gym shoe is present in the image, but the robotic arm is not holding it. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The gym shoe is present in the image, but the robotic arm is not holding it. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": false, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.24349114298820496, 0.002704941900447011, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym shoe, labeled as gym_shoe_1, is located on a shelf that is within the reach of the robotic arm. Therefore, the gym shoe is indeed in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned to interact with objects within its reach. The gym shoe, labeled as gym_shoe_1, is located on a shelf that is within the reach of the robotic arm. Therefore, the gym shoe is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": null, "no_correct": 0, "no_total": 0}}}, "step": 2, "actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.045509859919548035, 0.008961423300206661, "In the virtual household simulator environment, the agent (robotic arm) is positioned in the kitchen area, which is adjacent to the living room where the gym_shoe_1 is located. Given the layout and the ability of the robotic arm to reach across the room, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent. The proximity of the kitchen to the living room suggests that the agent can easily access the gym_shoe_1 without any significant obstacles.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned in the kitchen area, which is adjacent to the living room where the gym_shoe_1 is located. Given the layout and the ability of the robotic arm to reach across the room, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent. The proximity of the kitchen to the living room suggests that the agent can easily access the gym_shoe_1 without any significant obstacles.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable sock_1": ["yes", 0.10354505479335785, 0.0035431168507784605, "To determine if the sock_1 is in reach of the agent, I will consider the position of the sock_1 and the capabilities of the agent. The sock_1 is located on the floor near the kitchen area. The agent, which is a robotic arm, can reach objects on the floor and can be extended to pick up items within its reach. Given the layout of the room and the position of the sock_1, it is within the agent's reach to pick up the sock_1. Therefore, the answer is \"Yes\".", false, "<explanation>\nTo determine if the sock_1 is in reach of the agent, I will consider the position of the sock_1 and the capabilities of the agent. The sock_1 is located on the floor near the kitchen area. The agent, which is a robotic arm, can reach objects on the floor and can be extended to pick up items within its reach. Given the layout of the room and the position of the sock_1, it is within the agent's reach to pick up the sock_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_1": ["yes", 0.28612497448921204, 0.00247546611353755, "To determine if the table_1 is within reach of the agent, we need to consider the position of the table and the reach of the robotic arm. In the virtual household simulator, the agent (robotic arm) is positioned in a way that it can easily access the table_1. The table is located in the kitchen area, which is within the agent's reach. Therefore, the table_1 is indeed within the reach of the agent.", false, "<explanation>\nTo determine if the table_1 is within reach of the agent, we need to consider the position of the table and the reach of the robotic arm. In the virtual household simulator, the agent (robotic arm) is positioned in a way that it can easily access the table_1. The table is located in the kitchen area, which is within the agent's reach. Therefore, the table_1 is indeed within the reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable table_2": ["yes", 0.2575758993625641, 0.0028614101465791464, "To determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm's capabilities. The table_2 is located in the living room area, which is accessible to the agent. The robotic arm is capable of reaching objects within the room. Since the table_2 is within the room and the agent can access it, the answer is \"Yes\".", false, "<explanation>\nTo determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm's capabilities. The table_2 is located in the living room area, which is accessible to the agent. The robotic arm is capable of reaching objects within the room. Since the table_2 is within the room and the agent can access it, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable cabinet_1": ["no", 0.17823152244091034, 0.0028808442875742912, "To determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the living room. Given the layout of the house, the distance between the kitchen and the living room seems substantial, and the robotic arm's reach is likely limited to the immediate surroundings of its current position. Since the cabinet is in the kitchen, which is not within the immediate reach of the robotic arm from the living room, the answer is \"No\".", true, "<explanation>\nTo determine if the cabinet_1 is within reach of the agent, we need to consider the position of the cabinet and the reach of the robotic arm. In the virtual household simulator, the cabinet is located in the kitchen area, and the robotic arm is positioned in the living room. Given the layout of the house, the distance between the kitchen and the living room seems substantial, and the robotic arm's reach is likely limited to the immediate surroundings of its current position. Since the cabinet is in the kitchen, which is not within the immediate reach of the robotic arm from the living room, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.05027293786406517, 0.009899328462779522, "In the virtual household simulator environment, the agent (robotic arm) is positioned in the kitchen area, which is adjacent to the living room where the gym_shoe_1 is located. Given the layout and the ability of the robotic arm to reach across the room, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent. The proximity of the kitchen to the living room suggests that the agent can easily access the gym_shoe_1 without any significant obstacles.", true, "<explanation>\nIn the virtual household simulator environment, the agent (robotic arm) is positioned in the kitchen area, which is adjacent to the living room where the gym_shoe_1 is located. Given the layout and the ability of the robotic arm to reach across the room, it is reasonable to conclude that the gym_shoe_1 is within reach of the agent. The proximity of the kitchen to the living room suggests that the agent can easily access the gym_shoe_1 without any significant obstacles.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_1": ["no", 0.07090816646814346, 0.02031552977859974, "In the virtual household simulator environment, the agent is present and capable of interacting with objects. The question asks if the agent is holding the sock_1. Since the environment is a virtual simulation and the agent is capable of holding objects, it is reasonable to assume that the agent could be holding the sock_1 if it were present in the simulation. However, the image provided does not show the sock_1, and there is no indication that the agent is holding any object in the image. Therefore, based on the information given, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the agent is present and capable of interacting with objects. The question asks if the agent is holding the sock_1. Since the environment is a virtual simulation and the agent is capable of holding objects, it is reasonable to assume that the agent could be holding the sock_1 if it were present in the simulation. However, the image provided does not show the sock_1, and there is no indication that the agent is holding any object in the image. Therefore, based on the information given, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["yes", 0.12200560420751572, 0.007799558341503143, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is holding a gym shoe, which is identified as \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is holding a gym shoe, which is identified as \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "ontop gym_shoe_1,sock_1": ["no", 0.016664279624819756, 0.02424638532102108, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of a sock. The shoe is positioned in front of a table, and there is no sock visible in the immediate vicinity of the shoe. Therefore, the gym_shoe_1 is not on top of the sock_1.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of a sock. The shoe is positioned in front of a table, and there is no sock visible in the immediate vicinity of the shoe. Therefore, the gym_shoe_1 is not on top of the sock_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_1": ["no", 0.03094949573278427, 0.011385682970285416, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm. Therefore, the gym_shoe_1 is not on top of the table_1.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm. Therefore, the gym_shoe_1 is not on top of the table_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_2": ["no", 0.033763498067855835, 0.009673404507339, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm, which is positioned near the table but not on top of it. Therefore, the gym_shoe_1 is not on top of the table_2.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm, which is positioned near the table but not on top of it. Therefore, the gym_shoe_1 is not on top of the table_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,cabinet_1": ["no", 0.010045932605862617, 0.024098938331007957, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the cabinet. Instead, it is being held by the robotic arm, which is positioned near the table. Therefore, the shoe is not on top of the cabinet.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the cabinet. Instead, it is being held by the robotic arm, which is positioned near the table. Therefore, the shoe is not on top of the cabinet.\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,sock_1": ["no", 0.06791901588439941, 0.015154780820012093, "In the virtual household simulator environment, I will first locate the gym_shoe_1 and the sock_1. The gym_shoe_1 is positioned on the table, while the sock_1 is on the floor next to the chair. Since the sock_1 is not next to the gym_shoe_1, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, I will first locate the gym_shoe_1 and the sock_1. The gym_shoe_1 is positioned on the table, while the sock_1 is on the floor next to the chair. Since the sock_1 is not next to the gym_shoe_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_1": ["yes", 0.12579631805419922, 0.00804189033806324, "In the virtual household simulator environment, I will first identify the gym shoe labeled as \"gym_shoe_1\" and the table labeled as \"table_1\". Upon examining the scene, I observe that the gym shoe is placed on the floor next to the table, not on the table itself. Therefore, the gym shoe is indeed next to the table.", false, "<explanation>\nIn the virtual household simulator environment, I will first identify the gym shoe labeled as \"gym_shoe_1\" and the table labeled as \"table_1\". Upon examining the scene, I observe that the gym shoe is placed on the floor next to the table, not on the table itself. Therefore, the gym shoe is indeed next to the table.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_2": ["yes", 0.12535347044467926, 0.006240982562303543, "In the virtual household simulator environment, I will first identify the objects \"gym_shoe_1\" and \"table_2\". The \"gym_shoe_1\" is indeed present in the scene, and it is located next to the \"table_2\". Therefore, the answer is \"Yes\".", false, "<explanation>\nIn the virtual household simulator environment, I will first identify the objects \"gym_shoe_1\" and \"table_2\". The \"gym_shoe_1\" is indeed present in the scene, and it is located next to the \"table_2\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,cabinet_1": ["no", 0.06583612412214279, 0.01296390313655138, "In the virtual household simulator environment, the gym_shoe_1 is located on the table, not next to the cabinet_1. The table is positioned in the center of the room, and the gym_shoe_1 is clearly visible on it. The cabinet_1 is located on the opposite side of the room, away from the table. Therefore, the gym_shoe_1 is not next to the cabinet_1.", true, "<explanation>\nIn the virtual household simulator environment, the gym_shoe_1 is located on the table, not next to the cabinet_1. The table is positioned in the center of the room, and the gym_shoe_1 is clearly visible on it. The cabinet_1 is located on the opposite side of the room, away from the table. Therefore, the gym_shoe_1 is not next to the cabinet_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-on(gym_shoe_1, table_2)", "action_correct": false, "action_state_correct": true, "preconditions_results": {"holding gym_shoe_1": ["yes", 0.1219673827290535, 0.00779711501672864, "The environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is holding a gym shoe, which is identified as \"gym_shoe_1\". Therefore, the answer is \"Yes\".", true, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. The robotic arm is holding a gym shoe, which is identified as \"gym_shoe_1\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["yes", 0.2970075011253357, 0.0025696184020489454, "To determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm's reach capabilities. The table_2 is located to the left of the agent, and the robotic arm is extended towards it. Given the length of the arm and the distance between the agent and the table, it is reasonable to assume that the agent can reach the table_2. Therefore, the answer is \"Yes\".", true, "<explanation>\nTo determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm's reach capabilities. The table_2 is located to the left of the agent, and the robotic arm is extended towards it. Given the length of the arm and the distance between the agent and the table, it is reasonable to assume that the agent can reach the table_2. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"ontop gym_shoe_1,table_2": ["no", 0.016749044880270958, 0.016749044880270958, "In the virtual household simulator environment, the robotic arm (agent) is capable of holding objects and interacting with furniture. However, the image does not show the gym_shoe_1 on top of the table_2. The gym_shoe_1 is likely in the environment but not on the table. Therefore, the answer is \"No\".", false, "<explanation>\nIn the virtual household simulator environment, the robotic arm (agent) is capable of holding objects and interacting with furniture. However, the image does not show the gym_shoe_1 on top of the table_2. The gym_shoe_1 is likely in the environment but not on the table. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding gym_shoe_1": ["no", 0.030976660549640656, 0.03510115668177605, "In the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding any object, let alone a gym shoe. Therefore, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding any object, let alone a gym shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {}}, "action_info": "executed but failed"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.06685864925384521, 0.009048334322869778, "In the virtual household simulator environment, the agent (the robotic arm) is positioned in the living room area. The gym_shoe_1 is located on the floor near the entrance. Given the agent's position and the distance between the agent and the gym_shoe_1, it is within reach for the agent to pick it up. Therefore, the gym_shoe_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator environment, the agent (the robotic arm) is positioned in the living room area. The gym_shoe_1 is located on the floor near the entrance. Given the agent's position and the distance between the agent and the gym_shoe_1, it is within reach for the agent to pick it up. Therefore, the gym_shoe_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "holding sock_1": ["no", 0.07330212742090225, 0.018533680588006973, "In the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding any specific object labeled as \"sock_1\". Therefore, based on the information provided, the agent is not holding the sock_1.", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. However, the image does not show the agent holding any specific object labeled as \"sock_1\". Therefore, based on the information provided, the agent is not holding the sock_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.11179602891206741, 0.015129946172237396, "In the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. The image shows a gym shoe (gym_shoe_1) on the floor, and the robotic arm is positioned near it. However, the robotic arm is not holding the gym shoe. Therefore, the answer is \"No\".", false, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is capable of holding objects. The image shows a gym shoe (gym_shoe_1) on the floor, and the robotic arm is positioned near it. However, the robotic arm is not holding the gym shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "ontop gym_shoe_1,sock_1": ["no", 0.02421119250357151, 0.031087785959243774, "In the virtual household simulator environment, the robotic arm (agent) is holding the gym_shoe_1. However, there is no sock_1 present in the image. Therefore, the gym_shoe_1 cannot be on top of the sock_1 because the sock_1 does not exist.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm (agent) is holding the gym_shoe_1. However, there is no sock_1 present in the image. Therefore, the gym_shoe_1 cannot be on top of the sock_1 because the sock_1 does not exist.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_1": ["no", 0.030891384929418564, 0.02123131789267063, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm. Therefore, the gym_shoe_1 is not on top of the table_1.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. However, the shoe is not on top of the table. Instead, it is being held by the robotic arm. Therefore, the gym_shoe_1 is not on top of the table_1.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,table_2": ["no", 0.034139953553676605, 0.02070692740380764, "In the virtual household simulator environment, the robotic arm (agent) is holding a shoe, which is the gym_shoe_1. However, the shoe is not placed on top of the table (table_2). Instead, it is being held by the robotic arm, indicating that it is not positioned on the table. Therefore, the gym_shoe_1 is not on top of the table_2.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm (agent) is holding a shoe, which is the gym_shoe_1. However, the shoe is not placed on top of the table (table_2). Instead, it is being held by the robotic arm, indicating that it is not positioned on the table. Therefore, the gym_shoe_1 is not on top of the table_2.\n</explanation>\n<answer>\nNo\n</answer>", true], "ontop gym_shoe_1,cabinet_1": ["no", 0.012636206112802029, 0.03434877097606659, "In the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. The shoe appears to be a gym shoe. However, there is no cabinet labeled as \"cabinet_1\" in the image. Therefore, it is not possible to determine if the gym shoe is on top of the cabinet_1. Since the shoe is held by the robotic arm and not placed on any surface, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is holding a shoe. The shoe appears to be a gym shoe. However, there is no cabinet labeled as \"cabinet_1\" in the image. Therefore, it is not possible to determine if the gym shoe is on top of the cabinet_1. Since the shoe is held by the robotic arm and not placed on any surface, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,sock_1": ["no", 0.06647826731204987, 0.0314021110534668, "In the virtual household simulator environment, I will first identify the positions of the gym_shoe_1 and the sock_1. The gym_shoe_1 is located on the table near the robotic arm, while the sock_1 is on the floor next to the chair. Since the gym_shoe_1 is not next to the sock_1, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, I will first identify the positions of the gym_shoe_1 and the sock_1. The gym_shoe_1 is located on the table near the robotic arm, while the sock_1 is on the floor next to the chair. Since the gym_shoe_1 is not next to the sock_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "nextto gym_shoe_1,table_1": ["yes", 0.08942411839962006, 0.01995321735739708, "In the virtual household simulator environment, I will first identify the gym_shoe_1 and the table_1. The gym_shoe_1 is located on the floor near the table_1. Therefore, the gym_shoe_1 is indeed next to the table_1.", false, "<explanation>\nIn the virtual household simulator environment, I will first identify the gym_shoe_1 and the table_1. The gym_shoe_1 is located on the floor near the table_1. Therefore, the gym_shoe_1 is indeed next to the table_1.\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,table_2": ["yes", 0.11154434829950333, 0.01332207303494215, "In the virtual household simulator environment, I will first identify the objects \"gym_shoe_1\" and \"table_2\". The \"gym_shoe_1\" is indeed located next to the \"table_2\". Therefore, the answer is \"Yes\".", false, "<explanation>\nIn the virtual household simulator environment, I will first identify the objects \"gym_shoe_1\" and \"table_2\". The \"gym_shoe_1\" is indeed located next to the \"table_2\". Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "nextto gym_shoe_1,cabinet_1": ["no", 0.053551867604255676, 0.025296110659837723, "In the virtual household simulator environment, I will first identify the gym_shoe_1 and cabinet_1. The gym_shoe_1 is located on the floor near the table, while the cabinet_1 is positioned against the wall. Since the gym_shoe_1 is not next to the cabinet_1, the answer is \"No\".", true, "<explanation>\nIn the virtual household simulator environment, I will first identify the gym_shoe_1 and cabinet_1. The gym_shoe_1 is located on the floor near the table, while the cabinet_1 is positioned against the wall. Since the gym_shoe_1 is not next to the cabinet_1, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(sock_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding sock_1": ["yes", 0.1318102777004242, 0.009548305533826351, "In the virtual household simulator environment, the agent, represented by a robotic arm, is holding the sock_1. The sock_1 is clearly visible in the agent's grip, indicating that it is being held.", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is holding the sock_1. The sock_1 is clearly visible in the agent's grip, indicating that it is being held.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.22898347675800323, 0.003701172536239028, "In the virtual household simulator environment, the agent (the robotic arm) is positioned in a way that it can interact with objects within its reach. The cabinet_1 is located in the room, and given the agent's position and movement capabilities, it is within reach of the cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent (the robotic arm) is positioned in a way that it can interact with objects within its reach. The cabinet_1 is located in the room, and given the agent's position and movement capabilities, it is within reach of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(sock_1, cabinet_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding sock_1": ["yes", 0.1318102777004242, 0.009548305533826351, "In the virtual household simulator environment, the agent, represented by a robotic arm, is holding the sock_1. The sock_1 is clearly visible in the agent's grip, indicating that it is being held.", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by a robotic arm, is holding the sock_1. The sock_1 is clearly visible in the agent's grip, indicating that it is being held.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable cabinet_1": ["yes", 0.22898347675800323, 0.003701172536239028, "In the virtual household simulator environment, the agent (the robotic arm) is positioned in a way that it can interact with objects within its reach. The cabinet_1 is located in the room, and given the agent's position and movement capabilities, it is within reach of the cabinet_1. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent (the robotic arm) is positioned in a way that it can interact with objects within its reach. The cabinet_1 is located in the room, and given the agent's position and movement capabilities, it is within reach of the cabinet_1. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["no", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["no", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["yes", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["yes", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "yes"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["yes", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.5806451612903226, "yes_accuracy": 0.4, "yes_correct": 2, "yes_total": 5, "no_accuracy": 0.6153846153846154, "no_correct": 16, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.8, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.8888888888888888, "no_correct": 8, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.2, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 2, "no_total": 8}}}, "step": 1, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["no", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["yes", "yes"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,cabinet_1": ["no", "no"], "nextto sock_1,sofa_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.8387096774193549, "yes_accuracy": 0.8, "yes_correct": 4, "yes_total": 5, "no_accuracy": 0.8461538461538461, "no_correct": 22, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.6666666666666666, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.5, "no_correct": 2, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.8, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}}}, "step": 2, "actions": ["place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["yes", "no"], "holding gym_shoe_1": ["no", "no"], "holding sock_1": ["no", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["no", "no"], "nextto gym_shoe_1,table_2": ["no", "no"], "nextto gym_shoe_1,cabinet_1": ["yes", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["yes", "no"], "nextto sock_1,table_2": ["yes", "no"], "nextto sock_1,cabinet_1": ["yes", "no"], "nextto sock_1,sofa_1": ["yes", "yes"]}, "enum_metrics": {"accuracy": 0.7096774193548387, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.7037037037037037, "no_correct": 19, "no_total": 27, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 1.0, "yes_correct": 2, "yes_total": 2, "no_accuracy": 0.0, "no_correct": 0, "no_total": 4}, "holding": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.6, "yes_accuracy": 1.0, "yes_correct": 1, "yes_total": 1, "no_accuracy": 0.5555555555555556, "no_correct": 5, "no_total": 9}}}, "step": 3, "actions": ["grasp(gym_shoe_1)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["no", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "yes"], "holding sock_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,cabinet_1": ["no", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6774193548387096, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7692307692307693, "no_correct": 20, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.7, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}}}, "step": 4, "actions": ["place-next-to(sock_1, cabinet_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, {"enum_results": {"reachable gym_shoe_1": ["yes", "yes"], "reachable sock_1": ["yes", "no"], "reachable table_1": ["yes", "no"], "reachable table_2": ["no", "yes"], "reachable cabinet_1": ["yes", "no"], "reachable sofa_1": ["no", "no"], "holding gym_shoe_1": ["no", "yes"], "holding sock_1": ["yes", "no"], "open cabinet_1": ["no", "no"], "ontop gym_shoe_1,sock_1": ["no", "no"], "ontop gym_shoe_1,table_1": ["no", "no"], "ontop gym_shoe_1,table_2": ["no", "no"], "ontop gym_shoe_1,cabinet_1": ["no", "no"], "ontop gym_shoe_1,sofa_1": ["no", "no"], "ontop sock_1,gym_shoe_1": ["no", "no"], "ontop sock_1,table_1": ["no", "no"], "ontop sock_1,table_2": ["no", "no"], "ontop sock_1,cabinet_1": ["no", "no"], "ontop sock_1,sofa_1": ["no", "yes"], "inside gym_shoe_1,cabinet_1": ["no", "no"], "inside sock_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sock_1": ["no", "no"], "nextto gym_shoe_1,table_1": ["yes", "no"], "nextto gym_shoe_1,table_2": ["yes", "no"], "nextto gym_shoe_1,cabinet_1": ["no", "no"], "nextto gym_shoe_1,sofa_1": ["no", "no"], "nextto sock_1,gym_shoe_1": ["no", "no"], "nextto sock_1,table_1": ["no", "no"], "nextto sock_1,table_2": ["no", "no"], "nextto sock_1,cabinet_1": ["no", "no"], "nextto sock_1,sofa_1": ["no", "yes"]}, "enum_metrics": {"accuracy": 0.6774193548387096, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 0.7692307692307693, "no_correct": 20, "no_total": 26, "predicates": {"reachable": {"accuracy": 0.3333333333333333, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.25, "no_correct": 1, "no_total": 4}, "holding": {"accuracy": 0.0, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 0.9, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 9, "no_total": 9}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.7, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 0.7777777777777778, "no_correct": 7, "no_total": 9}}}, "step": 5, "actions": ["place-next-to(sock_1, cabinet_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(gym_shoe_1)", "action_correct": true, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable gym_shoe_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable gym_shoe_1": ["yes", 0.05065646022558212, 0.009974848479032516, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned near a table and a chair. The gym_shoe_1 is located on the floor, near the chair. Given the position of the robotic arm and the gym_shoe_1, it is within reach of the agent. The gym_shoe_1 is not too far from the robotic arm, suggesting that the agent could easily interact with it.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned near a table and a chair. The gym_shoe_1 is located on the floor, near the chair. Given the position of the robotic arm and the gym_shoe_1, it is within reach of the agent. The gym_shoe_1 is not too far from the robotic arm, suggesting that the agent could easily interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable table_2": ["no", 0.3481985926628113, 0.0016124795656651258, "To determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm. The table is located to the right of the agent, and the robotic arm is extended towards the table. However, the table is positioned at a height that is likely beyond the reach of the robotic arm, as it is placed higher than the average height of the agent's arm. Additionally, there are no objects obstructing the robotic arm's path to the table. Therefore, based on the visual information, the table_2 is not within reach of the agent.", true, "<explanation>\nTo determine if the table_2 is within reach of the agent, I will consider the position of the table and the robotic arm. The table is located to the right of the agent, and the robotic arm is extended towards the table. However, the table is positioned at a height that is likely beyond the reach of the robotic arm, as it is placed higher than the average height of the agent's arm. Additionally, there are no objects obstructing the robotic arm's path to the table. Therefore, based on the visual information, the table_2 is not within reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": true, "all_state_correct": false, "updated_non_visible_preds": {"reachable sock_1": {"before": false, "after": false}, "reachable sock_2": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}, "reachable cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "grasp(gym_shoe_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable gym_shoe_1": ["yes", 0.05071870982646942, 0.008813590742647648, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned near a table and a chair. The gym_shoe_1 is located on the floor, near the chair. Given the position of the robotic arm and the gym_shoe_1, it is within reach of the agent. The gym_shoe_1 is not too far from the robotic arm, suggesting that the agent could easily interact with it.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned near a table and a chair. The gym_shoe_1 is located on the floor, near the chair. Given the position of the robotic arm and the gym_shoe_1, it is within reach of the agent. The gym_shoe_1 is not too far from the robotic arm, suggesting that the agent could easily interact with it.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"holding sock_1": [true, false, false], "holding sock_2": [true, false, false], "all_correct": true}, "effects_results": {"holding gym_shoe_1": ["no", 0.05362572893500328, 0.03685639053583145, "The environment is a virtual household simulator with a robotic arm that can hold objects. However, the image does not show the robotic arm holding any object, let alone a gym shoe. Therefore, the answer is \"No\".", false, "<explanation>\nThe environment is a virtual household simulator with a robotic arm that can hold objects. However, the image does not show the robotic arm holding any object, let alone a gym shoe. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"ontop gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "ontop gym_shoe_1,sock_1": {"before": false, "after": false}, "ontop gym_shoe_1,sock_2": {"before": false, "after": false}, "ontop gym_shoe_1,table_1": {"before": false, "after": false}, "ontop gym_shoe_1,table_2": {"before": false, "after": false}, "ontop gym_shoe_1,cabinet_1": {"before": false, "after": false}, "nextto gym_shoe_1,gym_shoe_1": {"before": null, "after": false}, "nextto gym_shoe_1,sock_1": {"before": false, "after": false}, "nextto gym_shoe_1,sock_2": {"before": false, "after": false}, "nextto gym_shoe_1,table_1": {"before": false, "after": false}, "nextto gym_shoe_1,table_2": {"before": true, "after": false}, "nextto gym_shoe_1,cabinet_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable gym_shoe_1": ["no", "yes"], "reachable notebook_1": ["yes", "yes"], "holding gym_shoe_1": ["no", "yes"], "holding notebook_1": ["no", "no"], "ontop gym_shoe_1,notebook_1": ["no", "no"], "ontop notebook_1,gym_shoe_1": ["no", "no"], "nextto gym_shoe_1,notebook_1": ["yes", "no"], "nextto notebook_1,gym_shoe_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.625, "yes_accuracy": 0.3333333333333333, "yes_correct": 1, "yes_total": 3, "no_accuracy": 0.8, "no_correct": 4, "no_total": 5, "predicates": {"reachable": {"accuracy": 0.5, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": null, "no_correct": 0, "no_total": 0}, "holding": {"accuracy": 0.5, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 1, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "ontop": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "nextto": {"accuracy": 0.5, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.5, "no_correct": 1, "no_total": 2}}}, "step": 2, "actions": ["navigate-to(gym_shoe_1)", "grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}], "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.3615705668926239, 0.0010155773488804698, "In the virtual household simulator, the robotic arm (agent) is positioned above the countertop and can reach objects on the countertop. The apple_1 is located on the countertop, within the reach of the robotic arm. Therefore, the apple_1 is in reach of the agent.", true, "<explanation>\nIn the virtual household simulator, the robotic arm (agent) is positioned above the countertop and can reach objects on the countertop. The apple_1 is located on the countertop, within the reach of the robotic arm. Therefore, the apple_1 is in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.32911285758018494, 0.0010474941227585077, "In the virtual household simulator, the robotic arm (agent) is positioned above the countertop and can reach the apples on the counter. The apples are within the grasp range of the robotic arm, as it is designed to interact with objects in the environment. Therefore, the apple_2 is indeed in reach of the agent.", false, "<explanation>\nIn the virtual household simulator, the robotic arm (agent) is positioned above the countertop and can reach the apples on the counter. The apples are within the grasp range of the robotic arm, as it is designed to interact with objects in the environment. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.20015163719654083, 0.002855009865015745, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned above the countertop and seems to be oriented towards the kitchen area. The electric_refrigerator_1 is located on the far side of the kitchen, beyond the countertop and out of the immediate reach of the robotic arm. Given the distance and the orientation of the robotic arm, it is not possible for the agent to reach the electric_refrigerator_1 without adjusting its position or orientation significantly. Therefore, the electric_refrigerator_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned above the countertop and seems to be oriented towards the kitchen area. The electric_refrigerator_1 is located on the far side of the kitchen, beyond the countertop and out of the immediate reach of the robotic arm. Given the distance and the orientation of the robotic arm, it is not possible for the agent to reach the electric_refrigerator_1 without adjusting its position or orientation significantly. Therefore, the electric_refrigerator_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "navigate-to(electric_refrigerator_1)", "action_correct": true, "action_state_correct": true, "preconditions_results": {"reachable electric_refrigerator_1": ["no", 0.21840254962444305, 0.0031153454910963774, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned above the countertop and seems to be oriented towards the kitchen area. The electric_refrigerator_1 is located on the far side of the kitchen, beyond the countertop and out of the immediate reach of the robotic arm. Therefore, the electric_refrigerator_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned above the countertop and seems to be oriented towards the kitchen area. The electric_refrigerator_1 is located on the far side of the kitchen, beyond the countertop and out of the immediate reach of the robotic arm. Therefore, the electric_refrigerator_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": true}, "non_visible_precond_results": {"all_correct": true}, "effects_results": {"reachable electric_refrigerator_1": ["yes", 0.38705527782440186, 0.0012319120578467846, "In the virtual household simulator environment, the robotic arm, which is the agent, is positioned near the electric refrigerator. Given the context and the positioning of the robotic arm, it is within reach of the electric refrigerator. The refrigerator is located within the agent's grasp range, suggesting that the agent could interact with it if needed.", true, "<explanation>\nIn the virtual household simulator environment, the robotic arm, which is the agent, is positioned near the electric refrigerator. Given the context and the positioning of the robotic arm, it is within reach of the electric refrigerator. The refrigerator is located within the agent's grasp range, suggesting that the agent could interact with it if needed.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": true, "updated_non_visible_preds": {"reachable apple_1": {"before": true, "after": false}, "reachable apple_2": {"before": true, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["yes", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["yes", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["yes", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["yes", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"], "nextto apple_2,electric_refrigerator_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7569444444444444, "yes_accuracy": 0.6111111111111112, "yes_correct": 11, "yes_total": 18, "no_accuracy": 0.7777777777777778, "no_correct": 98, "no_total": 126, "predicates": {"reachable": {"accuracy": 1.0, "yes_accuracy": 1.0, "yes_correct": 8, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.42857142857142855, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.42857142857142855, "no_correct": 3, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9107142857142857, "yes_accuracy": 0.16666666666666666, "yes_correct": 1, "yes_total": 6, "no_accuracy": 1.0, "no_correct": 50, "no_total": 50}, "inside": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.5535714285714286, "yes_accuracy": 0.5, "yes_correct": 2, "yes_total": 4, "no_accuracy": 0.5576923076923077, "no_correct": 29, "no_total": 52}}}, "step": 1, "actions": ["navigate-to(electric_refrigerator_1)", "place-next-to(apple_2, electric_refrigerator_1)", "place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": true, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["yes", 0.32880905270576477, 0.0011858706129714847, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable apple_2": ["yes", 0.29717156291007996, 0.001214472227729857, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_2 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "reachable electric_refrigerator_1": ["no", 0.15783360600471497, 0.0025511428248137236, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned on the countertop, which is at a height suitable for grabbing objects placed on the same surface. The electric_refrigerator_1 is located on the floor, which is below the countertop. Given the height difference and the fact that the agent is on the countertop, it is not possible for the agent to reach the electric_refrigerator_1 without additional assistance or movement. Therefore, the electric_refrigerator_1 is not in reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1. The robotic arm is positioned on the countertop, which is at a height suitable for grabbing objects placed on the same surface. The electric_refrigerator_1 is located on the floor, which is below the countertop. Given the height difference and the fact that the agent is on the countertop, it is not possible for the agent to reach the electric_refrigerator_1 without additional assistance or movement. Therefore, the electric_refrigerator_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": false, "all_state_correct": true, "updated_non_visible_preds": {"reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.2679421007633209, 0.004907530732452869, "In the virtual household simulator, the robotic arm, which is the agent, is holding an apple. The apple is labeled as \"apple_2\" in the image. Therefore, the agent is indeed holding the apple_2.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is holding an apple. The apple is labeled as \"apple_2\" in the image. Therefore, the agent is indeed holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.32880905270576477, 0.0011858706129714847, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.2679421007633209, 0.004907530732452869, "In the virtual household simulator, the robotic arm, which is the agent, is holding an apple. The apple is labeled as \"apple_2\" in the image. Therefore, the agent is indeed holding the apple_2.", true, "<explanation>\nIn the virtual household simulator, the robotic arm, which is the agent, is holding an apple. The apple is labeled as \"apple_2\" in the image. Therefore, the agent is indeed holding the apple_2.\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_1": ["yes", 0.32880905270576477, 0.0011858706129714847, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the countertop, which is within the reach of the robotic arm. The robotic arm is positioned above the countertop and can easily grasp objects placed on it. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["yes", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7361111111111112, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7619047619047619, "no_correct": 96, "no_total": 126, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "inside": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.4807692307692308, "no_correct": 25, "no_total": 52}}}, "step": 1, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["no", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable apple_2": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["no", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,apple_2": ["yes", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["no", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,cabinet_1": ["no", "no"], "ontop apple_2,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["yes", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "inside apple_2,cabinet_1": ["no", "no"], "inside apple_2,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,cabinet_1": ["yes", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["yes", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,carrot_2": ["yes", "no"], "nextto carrot_1,carrot_3": ["yes", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,apple_2": ["yes", "yes"], "nextto carrot_1,cabinet_1": ["no", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["yes", "no"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,carrot_1": ["yes", "no"], "nextto carrot_2,carrot_3": ["yes", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,apple_2": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "no"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,apple_2": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["yes", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["yes", "no"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"], "nextto apple_2,bread_1": ["no", "no"], "nextto apple_2,countertop_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "yes"], "nextto apple_2,carrot_2": ["no", "no"], "nextto apple_2,carrot_3": ["no", "no"], "nextto apple_2,apple_1": ["yes", "no"], "nextto apple_2,cabinet_1": ["no", "no"], "nextto apple_2,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7361111111111112, "yes_accuracy": 0.5555555555555556, "yes_correct": 10, "yes_total": 18, "no_accuracy": 0.7619047619047619, "no_correct": 96, "no_total": 126, "predicates": {"reachable": {"accuracy": 0.8888888888888888, "yes_accuracy": 0.875, "yes_correct": 7, "yes_total": 8, "no_accuracy": 1.0, "no_correct": 1, "no_total": 1}, "holding": {"accuracy": 0.8571428571428571, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8571428571428571, "no_correct": 6, "no_total": 7}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.875, "yes_accuracy": 0.0, "yes_correct": 0, "yes_total": 6, "no_accuracy": 0.98, "no_correct": 49, "no_total": 50}, "inside": {"accuracy": 0.9285714285714286, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.9285714285714286, "no_correct": 13, "no_total": 14}, "nextto": {"accuracy": 0.5, "yes_accuracy": 0.75, "yes_correct": 3, "yes_total": 4, "no_accuracy": 0.4807692307692308, "no_correct": 25, "no_total": 52}}}, "step": 2, "actions": ["place-next-to(apple_2, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {}, "non_visible_precond_results": {"reachable apple_1": [true, false, false], "all_correct": true}, "effects_results": {"reachable apple_1": ["no", 0.1142953634262085, 0.015468194149434566, "In the virtual household simulator, the robotic arm (agent) is positioned above a countertop with a carrot on it. The apple_1 is located on the floor, which is outside the reach of the robotic arm. Therefore, the apple_1 is not in reach of the agent.", false, "<explanation>\nIn the virtual household simulator, the robotic arm (agent) is positioned above a countertop with a carrot on it. The apple_1 is located on the floor, which is outside the reach of the robotic arm. Therefore, the apple_1 is not in reach of the agent.\n</explanation>\n<answer>\nNo\n</answer>", false], "reachable electric_refrigerator_1": ["yes", 0.19685809314250946, 0.0024780777748674154, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", false, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false, "updated_non_visible_preds": {"reachable apple_2": {"before": false, "after": false}, "reachable orange_1": {"before": false, "after": false}, "reachable table_1": {"before": false, "after": false}}}, "action_info": "success"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.19685809314250946, 0.0024780777748674154, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0538821816444397, 0.001435911632142961, "To determine if the electric_refrigerator_1 is open, I will examine the image for any visual cues indicating that the refrigerator door is in an open position. In the image, the refrigerator door appears to be closed, as there is no visible gap or indication that it is open. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I will examine the image for any visual cues indicating that the refrigerator door is in an open position. In the image, the refrigerator door appears to be closed, as there is no visible gap or indication that it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.05707865208387375, 0.04445289820432663, "First, I will identify the objects in the image, including the robotic arm and the apple. Then, I will check if the robotic arm is holding the apple. In the image, the robotic arm is not holding the apple. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image, including the robotic arm and the apple. Then, I will check if the robotic arm is holding the apple. In the image, the robotic arm is not holding the apple. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "open-container(electric_refrigerator_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable electric_refrigerator_1": ["yes", 0.19685809314250946, 0.0024780777748674154, "To determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.", true, "<explanation>\nTo determine if the electric_refrigerator_1 is in reach of the agent, I will consider the position of the agent (the robotic arm) and the location of the electric_refrigerator_1 in the virtual environment. The robotic arm is positioned above the countertop, which suggests it has a relatively high reach. The electric_refrigerator_1 is located in the kitchen area, which is accessible from the countertop. Given the height of the countertop and the reach of the robotic arm, it is reasonable to conclude that the electric_refrigerator_1 is within reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "open electric_refrigerator_1": ["no", 0.0538821816444397, 0.001435911632142961, "To determine if the electric_refrigerator_1 is open, I will examine the image for any visual cues indicating that the refrigerator door is in an open position. In the image, the refrigerator door appears to be closed, as there is no visible gap or indication that it is open. Therefore, the answer is \"No\".", true, "<explanation>\nTo determine if the electric_refrigerator_1 is open, I will examine the image for any visual cues indicating that the refrigerator door is in an open position. In the image, the refrigerator door appears to be closed, as there is no visible gap or indication that it is open. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "holding apple_1": ["no", 0.05707865208387375, 0.04445289820432663, "First, I will identify the objects in the image, including the robotic arm and the apple. Then, I will check if the robotic arm is holding the apple. In the image, the robotic arm is not holding the apple. Therefore, the answer is \"No\".", true, "<explanation>\nFirst, I will identify the objects in the image, including the robotic arm and the apple. Then, I will check if the robotic arm is holding the apple. In the image, the robotic arm is not holding the apple. Therefore, the answer is \"No\".\n</explanation>\n<answer>\nNo\n</answer>", true], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"holding apple_2": [true, false, false], "holding orange_1": [true, false, false], "all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7678571428571429, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7857142857142857, "no_correct": 77, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 37, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.525, "no_correct": 21, "no_total": 40}}}, "step": 1, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "yes"], "reachable countertop_1": ["yes", "yes"], "reachable carrot_1": ["yes", "yes"], "reachable carrot_2": ["yes", "yes"], "reachable carrot_3": ["yes", "yes"], "reachable apple_1": ["yes", "yes"], "reachable cabinet_1": ["yes", "yes"], "reachable electric_refrigerator_1": ["yes", "no"], "holding bread_1": ["no", "no"], "holding countertop_1": ["yes", "no"], "holding carrot_1": ["no", "no"], "holding carrot_2": ["no", "no"], "holding carrot_3": ["no", "no"], "holding apple_1": ["no", "no"], "open cabinet_1": ["no", "no"], "open electric_refrigerator_1": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,cabinet_1": ["no", "no"], "ontop bread_1,electric_refrigerator_1": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,carrot_1": ["no", "no"], "ontop countertop_1,carrot_2": ["no", "no"], "ontop countertop_1,carrot_3": ["no", "no"], "ontop countertop_1,apple_1": ["no", "no"], "ontop countertop_1,cabinet_1": ["no", "no"], "ontop countertop_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["no", "yes"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,cabinet_1": ["no", "no"], "ontop carrot_1,electric_refrigerator_1": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["no", "yes"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,cabinet_1": ["no", "no"], "ontop carrot_2,electric_refrigerator_1": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,cabinet_1": ["no", "no"], "ontop carrot_3,electric_refrigerator_1": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,cabinet_1": ["no", "no"], "ontop apple_1,electric_refrigerator_1": ["no", "no"], "inside bread_1,cabinet_1": ["no", "no"], "inside bread_1,electric_refrigerator_1": ["no", "no"], "inside countertop_1,cabinet_1": ["no", "no"], "inside countertop_1,electric_refrigerator_1": ["no", "no"], "inside carrot_1,cabinet_1": ["no", "no"], "inside carrot_1,electric_refrigerator_1": ["no", "no"], "inside carrot_2,cabinet_1": ["no", "no"], "inside carrot_2,electric_refrigerator_1": ["no", "no"], "inside carrot_3,cabinet_1": ["no", "no"], "inside carrot_3,electric_refrigerator_1": ["no", "no"], "inside apple_1,cabinet_1": ["no", "no"], "inside apple_1,electric_refrigerator_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["no", "no"], "nextto bread_1,carrot_3": ["no", "no"], "nextto bread_1,apple_1": ["no", "no"], "nextto bread_1,cabinet_1": ["no", "no"], "nextto bread_1,electric_refrigerator_1": ["no", "no"], "nextto countertop_1,bread_1": ["yes", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,cabinet_1": ["yes", "no"], "nextto countertop_1,electric_refrigerator_1": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["yes", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["yes", "no"], "nextto carrot_1,cabinet_1": ["yes", "no"], "nextto carrot_1,electric_refrigerator_1": ["no", "no"], "nextto carrot_2,bread_1": ["no", "no"], "nextto carrot_2,countertop_1": ["yes", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["yes", "no"], "nextto carrot_2,cabinet_1": ["no", "no"], "nextto carrot_2,electric_refrigerator_1": ["yes", "no"], "nextto carrot_3,bread_1": ["no", "no"], "nextto carrot_3,countertop_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["yes", "no"], "nextto carrot_3,carrot_2": ["yes", "yes"], "nextto carrot_3,apple_1": ["yes", "no"], "nextto carrot_3,cabinet_1": ["no", "no"], "nextto carrot_3,electric_refrigerator_1": ["yes", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,carrot_1": ["yes", "no"], "nextto apple_1,carrot_2": ["no", "no"], "nextto apple_1,carrot_3": ["yes", "no"], "nextto apple_1,cabinet_1": ["no", "no"], "nextto apple_1,electric_refrigerator_1": ["no", "no"]}, "enum_metrics": {"accuracy": 0.7678571428571429, "yes_accuracy": 0.6428571428571429, "yes_correct": 9, "yes_total": 14, "no_accuracy": 0.7857142857142857, "no_correct": 77, "no_total": 98, "predicates": {"reachable": {"accuracy": 0.875, "yes_accuracy": 1.0, "yes_correct": 7, "yes_total": 7, "no_accuracy": 0.0, "no_correct": 0, "no_total": 1}, "holding": {"accuracy": 0.8333333333333334, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.8333333333333334, "no_correct": 5, "no_total": 6}, "open": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 2, "no_total": 2}, "ontop": {"accuracy": 0.9047619047619048, "yes_accuracy": 0.2, "yes_correct": 1, "yes_total": 5, "no_accuracy": 1.0, "no_correct": 37, "no_total": 37}, "inside": {"accuracy": 1.0, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 1.0, "no_correct": 12, "no_total": 12}, "nextto": {"accuracy": 0.5238095238095238, "yes_accuracy": 0.5, "yes_correct": 1, "yes_total": 2, "no_accuracy": 0.525, "no_correct": 21, "no_total": 40}}}, "step": 2, "actions": ["open-container(electric_refrigerator_1)", "grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.24607329070568085, 0.001463205087929964, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.24607329070568085, 0.001463205087929964, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"all_correct": false, "goal_reached": false, "action_results": [{"action": "navigate-to(apple_1)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"reachable apple_1": ["yes", 0.24607329070568085, 0.001463205087929964, "To determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.", false, "<explanation>\nTo determine if the apple_1 is in reach of the agent, I will consider the position of the apple_1 and the reach of the robotic arm. The apple_1 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_1 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": false, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": null}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}, {"action": "place-next-to(apple_2, apple_2)", "action_correct": false, "action_state_correct": false, "preconditions_results": {"holding apple_2": ["yes", 0.11284806579351425, 0.006366451736539602, "In the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".", true, "<explanation>\nIn the virtual household simulator environment, the agent, represented by the robotic arm, is capable of holding objects. Upon examining the image, there are several objects on the table, including an apple_2. The robotic arm is positioned near the apple_2, suggesting that it is likely holding it. Therefore, the answer is \"Yes\".\n</explanation>\n<answer>\nYes\n</answer>", false], "reachable apple_2": ["yes", 0.20050673186779022, 0.0015308877918869257, "To determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.", true, "<explanation>\nTo determine if the apple_2 is in reach of the agent, I will consider the position of the apple_2 and the reach of the robotic arm. The apple_2 is located on the table, which is within the reach of the robotic arm. The robotic arm is positioned in a way that it can easily grasp objects on the table. Therefore, the apple_2 is indeed in reach of the agent.\n</explanation>\n<answer>\nYes\n</answer>", false], "all_correct": true, "all_state_correct": false}, "non_visible_precond_results": {"all_correct": true}, "effects_results": null, "action_info": "not legal"}], "replans": [{"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 1, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, {"enum_results": {"reachable bread_1": ["yes", "no"], "reachable countertop_1": ["yes", "no"], "reachable flour_1": ["yes", "no"], "reachable milk_1": ["yes", "yes"], "reachable chair_1": ["yes", "yes"], "reachable meat_1": ["yes", "yes"], "reachable table_1": ["yes", "yes"], "reachable cheese_1": ["yes", "yes"], "reachable yogurt_1": ["yes", "yes"], "reachable soup_1": ["yes", "yes"], "reachable carrot_1": ["yes", "no"], "reachable carrot_2": ["yes", "no"], "reachable carrot_3": ["yes", "no"], "reachable apple_1": ["yes", "no"], "reachable apple_2": ["yes", "no"], "reachable orange_1": ["yes", "yes"], "reachable orange_3": ["yes", "yes"], "holding bread_1": ["no", "no"], "holding countertop_1": ["no", "no"], "holding flour_1": ["no", "no"], "holding meat_1": ["no", "no"], "holding cheese_1": ["no", "no"], "holding yogurt_1": ["no", "no"], "holding soup_1": ["no", "no"], "holding carrot_1": ["yes", "no"], "holding carrot_2": ["yes", "no"], "holding carrot_3": ["yes", "no"], "holding apple_1": ["no", "no"], "holding apple_2": ["yes", "no"], "holding orange_1": ["yes", "no"], "holding orange_3": ["no", "no"], "ontop bread_1,countertop_1": ["no", "yes"], "ontop bread_1,flour_1": ["no", "no"], "ontop bread_1,milk_1": ["no", "no"], "ontop bread_1,chair_1": ["no", "no"], "ontop bread_1,meat_1": ["no", "no"], "ontop bread_1,table_1": ["yes", "no"], "ontop bread_1,cheese_1": ["no", "no"], "ontop bread_1,yogurt_1": ["no", "no"], "ontop bread_1,soup_1": ["no", "no"], "ontop bread_1,carrot_1": ["no", "no"], "ontop bread_1,carrot_2": ["no", "no"], "ontop bread_1,carrot_3": ["no", "no"], "ontop bread_1,apple_1": ["no", "no"], "ontop bread_1,apple_2": ["no", "no"], "ontop bread_1,orange_1": ["no", "no"], "ontop bread_1,orange_3": ["no", "no"], "ontop countertop_1,bread_1": ["no", "no"], "ontop countertop_1,flour_1": ["yes", "no"], "ontop countertop_1,milk_1": ["no", "no"], "ontop countertop_1,chair_1": ["no", "no"], "ontop countertop_1,meat_1": ["no", "no"], "ontop countertop_1,table_1": ["no", "no"], "ontop countertop_1,cheese_1": ["no", "no"], "ontop countertop_1,yogurt_1": ["no", "no"], "ontop countertop_1,soup_1": ["no", "no"], "ontop countertop_1,carrot_1": ["yes", "no"], "ontop countertop_1,carrot_2": ["yes", "no"], "ontop countertop_1,carrot_3": ["yes", "no"], "ontop countertop_1,apple_1": ["yes", "no"], "ontop countertop_1,apple_2": ["no", "no"], "ontop countertop_1,orange_1": ["no", "no"], "ontop countertop_1,orange_3": ["no", "no"], "ontop flour_1,bread_1": ["no", "no"], "ontop flour_1,countertop_1": ["yes", "no"], "ontop flour_1,milk_1": ["no", "no"], "ontop flour_1,chair_1": ["no", "no"], "ontop flour_1,meat_1": ["no", "no"], "ontop flour_1,table_1": ["no", "no"], "ontop flour_1,cheese_1": ["no", "no"], "ontop flour_1,yogurt_1": ["no", "no"], "ontop flour_1,soup_1": ["no", "no"], "ontop flour_1,carrot_1": ["no", "no"], "ontop flour_1,carrot_2": ["no", "no"], "ontop flour_1,carrot_3": ["no", "no"], "ontop flour_1,apple_1": ["no", "no"], "ontop flour_1,apple_2": ["no", "no"], "ontop flour_1,orange_1": ["no", "no"], "ontop flour_1,orange_3": ["no", "no"], "ontop meat_1,bread_1": ["no", "no"], "ontop meat_1,countertop_1": ["no", "no"], "ontop meat_1,flour_1": ["no", "no"], "ontop meat_1,milk_1": ["no", "no"], "ontop meat_1,chair_1": ["no", "no"], "ontop meat_1,table_1": ["no", "yes"], "ontop meat_1,cheese_1": ["no", "no"], "ontop meat_1,yogurt_1": ["no", "no"], "ontop meat_1,soup_1": ["no", "no"], "ontop meat_1,carrot_1": ["no", "no"], "ontop meat_1,carrot_2": ["no", "no"], "ontop meat_1,carrot_3": ["no", "no"], "ontop meat_1,apple_1": ["no", "no"], "ontop meat_1,apple_2": ["no", "no"], "ontop meat_1,orange_1": ["no", "no"], "ontop meat_1,orange_3": ["no", "no"], "ontop cheese_1,bread_1": ["no", "no"], "ontop cheese_1,countertop_1": ["yes", "no"], "ontop cheese_1,flour_1": ["no", "no"], "ontop cheese_1,milk_1": ["no", "no"], "ontop cheese_1,chair_1": ["no", "no"], "ontop cheese_1,meat_1": ["no", "no"], "ontop cheese_1,table_1": ["yes", "yes"], "ontop cheese_1,yogurt_1": ["no", "no"], "ontop cheese_1,soup_1": ["no", "no"], "ontop cheese_1,carrot_1": ["no", "no"], "ontop cheese_1,carrot_2": ["no", "no"], "ontop cheese_1,carrot_3": ["no", "no"], "ontop cheese_1,apple_1": ["no", "no"], "ontop cheese_1,apple_2": ["no", "no"], "ontop cheese_1,orange_1": ["no", "no"], "ontop cheese_1,orange_3": ["no", "no"], "ontop yogurt_1,bread_1": ["no", "no"], "ontop yogurt_1,countertop_1": ["yes", "no"], "ontop yogurt_1,flour_1": ["no", "no"], "ontop yogurt_1,milk_1": ["no", "no"], "ontop yogurt_1,chair_1": ["no", "no"], "ontop yogurt_1,meat_1": ["no", "no"], "ontop yogurt_1,table_1": ["no", "yes"], "ontop yogurt_1,cheese_1": ["no", "no"], "ontop yogurt_1,soup_1": ["no", "no"], "ontop yogurt_1,carrot_1": ["no", "no"], "ontop yogurt_1,carrot_2": ["no", "no"], "ontop yogurt_1,carrot_3": ["no", "no"], "ontop yogurt_1,apple_1": ["no", "no"], "ontop yogurt_1,apple_2": ["no", "no"], "ontop yogurt_1,orange_1": ["no", "no"], "ontop yogurt_1,orange_3": ["no", "no"], "ontop soup_1,bread_1": ["no", "no"], "ontop soup_1,countertop_1": ["no", "no"], "ontop soup_1,flour_1": ["no", "no"], "ontop soup_1,milk_1": ["no", "no"], "ontop soup_1,chair_1": ["no", "no"], "ontop soup_1,meat_1": ["no", "no"], "ontop soup_1,table_1": ["no", "yes"], "ontop soup_1,cheese_1": ["no", "no"], "ontop soup_1,yogurt_1": ["no", "no"], "ontop soup_1,carrot_1": ["no", "no"], "ontop soup_1,carrot_2": ["no", "no"], "ontop soup_1,carrot_3": ["no", "no"], "ontop soup_1,apple_1": ["no", "no"], "ontop soup_1,apple_2": ["no", "no"], "ontop soup_1,orange_1": ["no", "no"], "ontop soup_1,orange_3": ["no", "no"], "ontop carrot_1,bread_1": ["no", "no"], "ontop carrot_1,countertop_1": ["yes", "yes"], "ontop carrot_1,flour_1": ["no", "no"], "ontop carrot_1,milk_1": ["no", "no"], "ontop carrot_1,chair_1": ["no", "no"], "ontop carrot_1,meat_1": ["no", "no"], "ontop carrot_1,table_1": ["no", "no"], "ontop carrot_1,cheese_1": ["no", "no"], "ontop carrot_1,yogurt_1": ["no", "no"], "ontop carrot_1,soup_1": ["no", "no"], "ontop carrot_1,carrot_2": ["no", "no"], "ontop carrot_1,carrot_3": ["no", "no"], "ontop carrot_1,apple_1": ["no", "no"], "ontop carrot_1,apple_2": ["no", "no"], "ontop carrot_1,orange_1": ["no", "no"], "ontop carrot_1,orange_3": ["no", "no"], "ontop carrot_2,bread_1": ["no", "no"], "ontop carrot_2,countertop_1": ["yes", "yes"], "ontop carrot_2,flour_1": ["no", "no"], "ontop carrot_2,milk_1": ["no", "no"], "ontop carrot_2,chair_1": ["no", "no"], "ontop carrot_2,meat_1": ["no", "no"], "ontop carrot_2,table_1": ["yes", "no"], "ontop carrot_2,cheese_1": ["no", "no"], "ontop carrot_2,yogurt_1": ["no", "no"], "ontop carrot_2,soup_1": ["no", "no"], "ontop carrot_2,carrot_1": ["no", "no"], "ontop carrot_2,carrot_3": ["no", "no"], "ontop carrot_2,apple_1": ["no", "no"], "ontop carrot_2,apple_2": ["no", "no"], "ontop carrot_2,orange_1": ["no", "no"], "ontop carrot_2,orange_3": ["no", "no"], "ontop carrot_3,bread_1": ["no", "no"], "ontop carrot_3,countertop_1": ["yes", "yes"], "ontop carrot_3,flour_1": ["no", "no"], "ontop carrot_3,milk_1": ["no", "no"], "ontop carrot_3,chair_1": ["no", "no"], "ontop carrot_3,meat_1": ["no", "no"], "ontop carrot_3,table_1": ["no", "no"], "ontop carrot_3,cheese_1": ["no", "no"], "ontop carrot_3,yogurt_1": ["no", "no"], "ontop carrot_3,soup_1": ["no", "no"], "ontop carrot_3,carrot_1": ["no", "no"], "ontop carrot_3,carrot_2": ["no", "no"], "ontop carrot_3,apple_1": ["no", "no"], "ontop carrot_3,apple_2": ["no", "no"], "ontop carrot_3,orange_1": ["no", "no"], "ontop carrot_3,orange_3": ["no", "no"], "ontop apple_1,bread_1": ["no", "no"], "ontop apple_1,countertop_1": ["no", "yes"], "ontop apple_1,flour_1": ["no", "no"], "ontop apple_1,milk_1": ["no", "no"], "ontop apple_1,chair_1": ["no", "no"], "ontop apple_1,meat_1": ["no", "no"], "ontop apple_1,table_1": ["yes", "no"], "ontop apple_1,cheese_1": ["no", "no"], "ontop apple_1,yogurt_1": ["no", "no"], "ontop apple_1,soup_1": ["no", "no"], "ontop apple_1,carrot_1": ["no", "no"], "ontop apple_1,carrot_2": ["no", "no"], "ontop apple_1,carrot_3": ["no", "no"], "ontop apple_1,apple_2": ["no", "no"], "ontop apple_1,orange_1": ["no", "no"], "ontop apple_1,orange_3": ["no", "no"], "ontop apple_2,bread_1": ["no", "no"], "ontop apple_2,countertop_1": ["no", "yes"], "ontop apple_2,flour_1": ["no", "no"], "ontop apple_2,milk_1": ["no", "no"], "ontop apple_2,chair_1": ["no", "no"], "ontop apple_2,meat_1": ["no", "no"], "ontop apple_2,table_1": ["no", "no"], "ontop apple_2,cheese_1": ["no", "no"], "ontop apple_2,yogurt_1": ["no", "no"], "ontop apple_2,soup_1": ["no", "no"], "ontop apple_2,carrot_1": ["no", "no"], "ontop apple_2,carrot_2": ["no", "no"], "ontop apple_2,carrot_3": ["no", "no"], "ontop apple_2,apple_1": ["no", "no"], "ontop apple_2,orange_1": ["no", "no"], "ontop apple_2,orange_3": ["no", "no"], "ontop orange_1,bread_1": ["no", "no"], "ontop orange_1,countertop_1": ["no", "no"], "ontop orange_1,flour_1": ["no", "no"], "ontop orange_1,milk_1": ["no", "no"], "ontop orange_1,chair_1": ["no", "no"], "ontop orange_1,meat_1": ["no", "no"], "ontop orange_1,table_1": ["yes", "yes"], "ontop orange_1,cheese_1": ["no", "no"], "ontop orange_1,yogurt_1": ["no", "no"], "ontop orange_1,soup_1": ["no", "no"], "ontop orange_1,carrot_1": ["no", "no"], "ontop orange_1,carrot_2": ["no", "no"], "ontop orange_1,carrot_3": ["no", "no"], "ontop orange_1,apple_1": ["no", "no"], "ontop orange_1,apple_2": ["no", "no"], "ontop orange_1,orange_3": ["no", "no"], "ontop orange_3,bread_1": ["no", "no"], "ontop orange_3,countertop_1": ["no", "no"], "ontop orange_3,flour_1": ["no", "no"], "ontop orange_3,milk_1": ["no", "no"], "ontop orange_3,chair_1": ["no", "no"], "ontop orange_3,meat_1": ["no", "no"], "ontop orange_3,table_1": ["yes", "yes"], "ontop orange_3,cheese_1": ["no", "no"], "ontop orange_3,yogurt_1": ["no", "no"], "ontop orange_3,soup_1": ["no", "no"], "ontop orange_3,carrot_1": ["no", "no"], "ontop orange_3,carrot_2": ["no", "no"], "ontop orange_3,carrot_3": ["no", "no"], "ontop orange_3,apple_1": ["no", "no"], "ontop orange_3,apple_2": ["no", "no"], "ontop orange_3,orange_1": ["no", "no"], "nextto bread_1,countertop_1": ["no", "no"], "nextto bread_1,flour_1": ["no", "no"], "nextto bread_1,milk_1": ["no", "no"], "nextto bread_1,chair_1": ["yes", "no"], "nextto bread_1,meat_1": ["no", "no"], "nextto bread_1,table_1": ["no", "no"], "nextto bread_1,cheese_1": ["yes", "no"], "nextto bread_1,yogurt_1": ["no", "no"], "nextto bread_1,soup_1": ["yes", "no"], "nextto bread_1,carrot_1": ["no", "no"], "nextto bread_1,carrot_2": ["yes", "yes"], "nextto bread_1,carrot_3": ["no", "yes"], "nextto bread_1,apple_1": ["yes", "no"], "nextto bread_1,apple_2": ["no", "no"], "nextto bread_1,orange_1": ["yes", "no"], "nextto bread_1,orange_3": ["no", "no"], "nextto countertop_1,bread_1": ["no", "no"], "nextto countertop_1,flour_1": ["yes", "no"], "nextto countertop_1,milk_1": ["yes", "no"], "nextto countertop_1,chair_1": ["no", "no"], "nextto countertop_1,meat_1": ["yes", "no"], "nextto countertop_1,table_1": ["yes", "no"], "nextto countertop_1,cheese_1": ["yes", "no"], "nextto countertop_1,yogurt_1": ["yes", "no"], "nextto countertop_1,soup_1": ["no", "no"], "nextto countertop_1,carrot_1": ["yes", "no"], "nextto countertop_1,carrot_2": ["yes", "no"], "nextto countertop_1,carrot_3": ["yes", "no"], "nextto countertop_1,apple_1": ["yes", "no"], "nextto countertop_1,apple_2": ["yes", "no"], "nextto countertop_1,orange_1": ["no", "no"], "nextto countertop_1,orange_3": ["no", "no"], "nextto flour_1,bread_1": ["no", "no"], "nextto flour_1,countertop_1": ["yes", "no"], "nextto flour_1,milk_1": ["no", "no"], "nextto flour_1,chair_1": ["no", "no"], "nextto flour_1,meat_1": ["no", "no"], "nextto flour_1,table_1": ["no", "no"], "nextto flour_1,cheese_1": ["no", "no"], "nextto flour_1,yogurt_1": ["no", "no"], "nextto flour_1,soup_1": ["no", "no"], "nextto flour_1,carrot_1": ["no", "no"], "nextto flour_1,carrot_2": ["no", "no"], "nextto flour_1,carrot_3": ["no", "no"], "nextto flour_1,apple_1": ["no", "no"], "nextto flour_1,apple_2": ["no", "no"], "nextto flour_1,orange_1": ["no", "no"], "nextto flour_1,orange_3": ["yes", "no"], "nextto meat_1,bread_1": ["no", "no"], "nextto meat_1,countertop_1": ["no", "no"], "nextto meat_1,flour_1": ["no", "no"], "nextto meat_1,milk_1": ["no", "no"], "nextto meat_1,chair_1": ["yes", "no"], "nextto meat_1,table_1": ["no", "no"], "nextto meat_1,cheese_1": ["no", "no"], "nextto meat_1,yogurt_1": ["yes", "no"], "nextto meat_1,soup_1": ["no", "no"], "nextto meat_1,carrot_1": ["no", "no"], "nextto meat_1,carrot_2": ["yes", "no"], "nextto meat_1,carrot_3": ["no", "no"], "nextto meat_1,apple_1": ["no", "no"], "nextto meat_1,apple_2": ["no", "no"], "nextto meat_1,orange_1": ["no", "no"], "nextto meat_1,orange_3": ["no", "yes"], "nextto cheese_1,bread_1": ["yes", "no"], "nextto cheese_1,countertop_1": ["no", "no"], "nextto cheese_1,flour_1": ["no", "no"], "nextto cheese_1,milk_1": ["no", "no"], "nextto cheese_1,chair_1": ["no", "no"], "nextto cheese_1,meat_1": ["no", "no"], "nextto cheese_1,table_1": ["no", "no"], "nextto cheese_1,yogurt_1": ["yes", "no"], "nextto cheese_1,soup_1": ["yes", "yes"], "nextto cheese_1,carrot_1": ["no", "no"], "nextto cheese_1,carrot_2": ["yes", "no"], "nextto cheese_1,carrot_3": ["no", "no"], "nextto cheese_1,apple_1": ["no", "no"], "nextto cheese_1,apple_2": ["yes", "no"], "nextto cheese_1,orange_1": ["yes", "yes"], "nextto cheese_1,orange_3": ["yes", "no"], "nextto yogurt_1,bread_1": ["no", "no"], "nextto yogurt_1,countertop_1": ["yes", "no"], "nextto yogurt_1,flour_1": ["no", "no"], "nextto yogurt_1,milk_1": ["no", "no"], "nextto yogurt_1,chair_1": ["yes", "no"], "nextto yogurt_1,meat_1": ["no", "no"], "nextto yogurt_1,table_1": ["no", "no"], "nextto yogurt_1,cheese_1": ["yes", "no"], "nextto yogurt_1,soup_1": ["no", "no"], "nextto yogurt_1,carrot_1": ["no", "no"], "nextto yogurt_1,carrot_2": ["yes", "no"], "nextto yogurt_1,carrot_3": ["yes", "no"], "nextto yogurt_1,apple_1": ["no", "no"], "nextto yogurt_1,apple_2": ["no", "no"], "nextto yogurt_1,orange_1": ["yes", "no"], "nextto yogurt_1,orange_3": ["no", "no"], "nextto soup_1,bread_1": ["yes", "no"], "nextto soup_1,countertop_1": ["yes", "no"], "nextto soup_1,flour_1": ["yes", "no"], "nextto soup_1,milk_1": ["no", "no"], "nextto soup_1,chair_1": ["yes", "no"], "nextto soup_1,meat_1": ["no", "no"], "nextto soup_1,table_1": ["no", "no"], "nextto soup_1,cheese_1": ["yes", "yes"], "nextto soup_1,yogurt_1": ["yes", "no"], "nextto soup_1,carrot_1": ["yes", "no"], "nextto soup_1,carrot_2": ["yes", "no"], "nextto soup_1,carrot_3": ["yes", "no"], "nextto soup_1,apple_1": ["yes", "no"], "nextto soup_1,apple_2": ["yes", "no"], "nextto soup_1,orange_1": ["yes", "no"], "nextto soup_1,orange_3": ["yes", "no"], "nextto carrot_1,bread_1": ["no", "no"], "nextto carrot_1,countertop_1": ["no", "no"], "nextto carrot_1,flour_1": ["no", "no"], "nextto carrot_1,milk_1": ["no", "no"], "nextto carrot_1,chair_1": ["no", "no"], "nextto carrot_1,meat_1": ["no", "no"], "nextto carrot_1,table_1": ["no", "no"], "nextto carrot_1,cheese_1": ["no", "no"], "nextto carrot_1,yogurt_1": ["no", "no"], "nextto carrot_1,soup_1": ["no", "no"], "nextto carrot_1,carrot_2": ["no", "no"], "nextto carrot_1,carrot_3": ["no", "no"], "nextto carrot_1,apple_1": ["no", "no"], "nextto carrot_1,apple_2": ["no", "no"], "nextto carrot_1,orange_1": ["no", "no"], "nextto carrot_1,orange_3": ["no", "no"], "nextto carrot_2,bread_1": ["no", "yes"], "nextto carrot_2,countertop_1": ["no", "no"], "nextto carrot_2,flour_1": ["no", "no"], "nextto carrot_2,milk_1": ["no", "no"], "nextto carrot_2,chair_1": ["yes", "no"], "nextto carrot_2,meat_1": ["no", "no"], "nextto carrot_2,table_1": ["no", "no"], "nextto carrot_2,cheese_1": ["no", "no"], "nextto carrot_2,yogurt_1": ["yes", "no"], "nextto carrot_2,soup_1": ["no", "no"], "nextto carrot_2,carrot_1": ["no", "no"], "nextto carrot_2,carrot_3": ["no", "yes"], "nextto carrot_2,apple_1": ["no", "yes"], "nextto carrot_2,apple_2": ["no", "no"], "nextto carrot_2,orange_1": ["no", "no"], "nextto carrot_2,orange_3": ["no", "no"], "nextto carrot_3,bread_1": ["yes", "yes"], "nextto carrot_3,countertop_1": ["no", "no"], "nextto carrot_3,flour_1": ["no", "no"], "nextto carrot_3,milk_1": ["no", "no"], "nextto carrot_3,chair_1": ["no", "no"], "nextto carrot_3,meat_1": ["no", "no"], "nextto carrot_3,table_1": ["no", "no"], "nextto carrot_3,cheese_1": ["no", "no"], "nextto carrot_3,yogurt_1": ["yes", "no"], "nextto carrot_3,soup_1": ["yes", "no"], "nextto carrot_3,carrot_1": ["no", "no"], "nextto carrot_3,carrot_2": ["no", "yes"], "nextto carrot_3,apple_1": ["no", "no"], "nextto carrot_3,apple_2": ["no", "no"], "nextto carrot_3,orange_1": ["no", "no"], "nextto carrot_3,orange_3": ["no", "no"], "nextto apple_1,bread_1": ["no", "no"], "nextto apple_1,countertop_1": ["no", "no"], "nextto apple_1,flour_1": ["no", "no"], "nextto apple_1,milk_1": ["no", "no"], "nextto apple_1,chair_1": ["yes", "no"], "nextto apple_1,meat_1": ["yes", "no"], "nextto apple_1,table_1": ["no", "no"], "nextto apple_1,cheese_1": ["yes", "no"], "nextto apple_1,yogurt_1": ["yes", "no"], "nextto apple_1,soup_1": ["no", "no"], "nextto apple_1,carrot_1": ["no", "no"], "nextto apple_1,carrot_2": ["no", "yes"], "nextto apple_1,carrot_3": ["no", "no"], "nextto apple_1,apple_2": ["no", "yes"], "nextto apple_1,orange_1": ["yes", "no"], "nextto apple_1,orange_3": ["yes", "no"], "nextto apple_2,bread_1": ["yes", "no"], "nextto apple_2,countertop_1": ["no", "no"], "nextto apple_2,flour_1": ["no", "no"], "nextto apple_2,milk_1": ["no", "no"], "nextto apple_2,chair_1": ["yes", "no"], "nextto apple_2,meat_1": ["no", "no"], "nextto apple_2,table_1": ["no", "no"], "nextto apple_2,cheese_1": ["yes", "no"], "nextto apple_2,yogurt_1": ["yes", "no"], "nextto apple_2,soup_1": ["yes", "no"], "nextto apple_2,carrot_1": ["no", "no"], "nextto apple_2,carrot_2": ["yes", "no"], "nextto apple_2,carrot_3": ["yes", "no"], "nextto apple_2,apple_1": ["no", "yes"], "nextto apple_2,orange_1": ["yes", "no"], "nextto apple_2,orange_3": ["yes", "no"], "nextto orange_1,bread_1": ["yes", "no"], "nextto orange_1,countertop_1": ["no", "no"], "nextto orange_1,flour_1": ["no", "no"], "nextto orange_1,milk_1": ["no", "no"], "nextto orange_1,chair_1": ["yes", "no"], "nextto orange_1,meat_1": ["no", "no"], "nextto orange_1,table_1": ["no", "no"], "nextto orange_1,cheese_1": ["yes", "yes"], "nextto orange_1,yogurt_1": ["yes", "no"], "nextto orange_1,soup_1": ["no", "no"], "nextto orange_1,carrot_1": ["yes", "no"], "nextto orange_1,carrot_2": ["no", "no"], "nextto orange_1,carrot_3": ["no", "no"], "nextto orange_1,apple_1": ["yes", "no"], "nextto orange_1,apple_2": ["yes", "no"], "nextto orange_1,orange_3": ["yes", "no"], "nextto orange_3,bread_1": ["yes", "no"], "nextto orange_3,countertop_1": ["no", "no"], "nextto orange_3,flour_1": ["no", "no"], "nextto orange_3,milk_1": ["no", "no"], "nextto orange_3,chair_1": ["yes", "yes"], "nextto orange_3,meat_1": ["no", "yes"], "nextto orange_3,table_1": ["no", "no"], "nextto orange_3,cheese_1": ["yes", "no"], "nextto orange_3,yogurt_1": ["yes", "no"], "nextto orange_3,soup_1": ["yes", "no"], "nextto orange_3,carrot_1": ["yes", "no"], "nextto orange_3,carrot_2": ["no", "no"], "nextto orange_3,carrot_3": ["no", "no"], "nextto orange_3,apple_1": ["yes", "no"], "nextto orange_3,apple_2": ["yes", "no"], "nextto orange_3,orange_1": ["yes", "no"]}, "enum_metrics": {"accuracy": 0.7536534446764092, "yes_accuracy": 0.5789473684210527, "yes_correct": 22, "yes_total": 38, "no_accuracy": 0.7687074829931972, "no_correct": 339, "no_total": 441, "predicates": {"reachable": {"accuracy": 0.5294117647058824, "yes_accuracy": 1.0, "yes_correct": 9, "yes_total": 9, "no_accuracy": 0.0, "no_correct": 0, "no_total": 8}, "holding": {"accuracy": 0.6428571428571429, "yes_accuracy": null, "yes_correct": 0, "yes_total": 0, "no_accuracy": 0.6428571428571429, "no_correct": 9, "no_total": 14}, "ontop": {"accuracy": 0.9241071428571429, "yes_accuracy": 0.5, "yes_correct": 6, "yes_total": 12, "no_accuracy": 0.9481132075471698, "no_correct": 201, "no_total": 212}, "nextto": {"accuracy": 0.6071428571428571, "yes_accuracy": 0.4117647058823529, "yes_correct": 7, "yes_total": 17, "no_accuracy": 0.6231884057971014, "no_correct": 129, "no_total": 207}}}, "step": 2, "actions": ["place-next-to(apple_2, apple_2)", "place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}], "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"]}, "problem_stats": {"data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_0": {"action_correct": 2, "action_total": 11, "remaining_actions": ["navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.18181818181818182, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_20": {"action_correct": 2, "action_total": 12, "remaining_actions": ["navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_21": {"action_correct": 1, "action_total": 29, "remaining_actions": ["navigate-to(book_1)", "grasp(book_1)", "navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.034482758620689655, "failed": false}, "data/planning/igibson/medium/sorting_books_medium.pddl_Pomaria_1_int_23": {"action_correct": 1, "action_total": 10, "remaining_actions": ["navigate-to(hardback_1)", "navigate-to(shelf_1)", "place-on(book_1, shelf_1)", "navigate-to(hardback_1)", "grasp(hardback_1)", "navigate-to(shelf_1)", "place-on(hardback_1, shelf_1)"], "action_accuracy": 0.1, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Benevolence_1_int_21": {"action_correct": 3, "action_total": 25, "remaining_actions": ["place-on(spoon_1, sink_1)", "navigate-to(bowl_1)", "grasp(bowl_1)", "navigate-to(sink_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.12, "failed": false}, "data/planning/igibson/medium/cleaning_out_drawers_medium.pddl_Rs_int_0": {"action_correct": 2, "action_total": 12, "remaining_actions": ["open-container(cabinet_2)", "grasp(spoon_1)", "place-on(spoon_1, sink_1)", "grasp(bowl_1)", "place-on(bowl_1, sink_1)"], "action_accuracy": 0.16666666666666666, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Beechwood_0_int_20": {"action_correct": 0, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "navigate-to(carton_1)", "place-inside(sandwich_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_0": {"action_correct": 0, "action_total": 9, "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/packing_food_for_work_medium.pddl_Wainscott_0_int_20": {"action_correct": 0, "action_total": 9, "remaining_actions": ["open-container(carton_1)", "open-container(electric_refrigerator_1)", "grasp(sandwich_1)", "place-inside(sandwich_1, carton_1)", "grasp(snack_food_1)", "place-inside(snack_food_1, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_0": {"action_correct": 0, "action_total": 13, "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Benevolence_1_int_21": {"action_correct": 1, "action_total": 10, "remaining_actions": ["grasp(plaything_2)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.1, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_0": {"action_correct": 1, "action_total": 7, "remaining_actions": ["navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.14285714285714285, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_0_int_20": {"action_correct": 1, "action_total": 13, "remaining_actions": ["navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)", "navigate-to(plaything_4)", "grasp(plaything_4)", "navigate-to(carton_1)", "place-inside(plaything_4, carton_1)"], "action_accuracy": 0.07692307692307693, "failed": false}, "data/planning/igibson/medium/putting_away_toys_medium.pddl_Ihlen_1_int_0": {"action_correct": 0, "action_total": 10, "remaining_actions": ["grasp(plaything_4)", "place-inside(plaything_4, carton_1)", "navigate-to(plaything_2)", "grasp(plaything_2)", "navigate-to(carton_1)", "place-inside(plaything_2, carton_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_23": {"action_correct": 1, "action_total": 28, "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.03571428571428571, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Beechwood_0_int_24": {"action_correct": 1, "action_total": 10, "remaining_actions": ["navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.1, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_0": {"action_correct": 1, "action_total": 14, "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.07142857142857142, "failed": false}, "data/planning/igibson/medium/collect_misplaced_items_medium.pddl_Merom_1_int_22": {"action_correct": 0, "action_total": 10, "remaining_actions": ["grasp(gym_shoe_1)", "navigate-to(sock_2)", "navigate-to(table_2)", "place-on(gym_shoe_1, table_2)", "navigate-to(sock_2)", "grasp(sock_2)", "navigate-to(table_2)", "place-on(sock_2, table_2)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_23": {"action_correct": 2, "action_total": 8, "remaining_actions": ["place-next-to(apple_1, electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.25, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_24": {"action_correct": 1, "action_total": 9, "remaining_actions": ["navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.1111111111111111, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Beechwood_0_int_29": {"action_correct": 0, "action_total": 5, "remaining_actions": ["grasp(apple_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_0": {"action_correct": 0, "action_total": 10, "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_20": {"action_correct": 0, "action_total": 10, "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}, "data/planning/igibson/medium/sorting_groceries_medium.pddl_Pomaria_1_int_23": {"action_correct": 0, "action_total": 10, "remaining_actions": ["place-next-to(orange_1, apple_1)", "navigate-to(electric_refrigerator_1)", "open-container(electric_refrigerator_1)", "navigate-to(apple_1)", "grasp(apple_1)", "navigate-to(electric_refrigerator_1)", "place-inside(apple_1, electric_refrigerator_1)"], "action_accuracy": 0.0, "failed": false}}, "predicate_stats": {"reachable": {"accuracy": 0.5915492957746479, "yes_accuracy": 0.8141891891891891, "yes_correct": 241, "yes_total": 296, "no_accuracy": 0.08461538461538462, "no_correct": 11, "no_total": 130, "correct": 252, "total": 426}, "holding": {"accuracy": 0.52, "yes_accuracy": 0.02, "yes_correct": 1, "yes_total": 50, "no_accuracy": 0.6311111111111111, "no_correct": 142, "no_total": 225, "correct": 143, "total": 275}, "ontop": {"accuracy": 0.899009900990099, "yes_accuracy": 0.2611464968152866, "yes_correct": 41, "yes_total": 157, "no_accuracy": 0.95276435856146, "no_correct": 1775, "no_total": 1863, "correct": 1816, "total": 2020}, "nextto": {"accuracy": 0.5693069306930693, "yes_accuracy": 0.34517766497461927, "yes_correct": 68, "yes_total": 197, "no_accuracy": 0.5935271530444323, "no_correct": 1082, "no_total": 1823, "correct": 1150, "total": 2020}, "open": {"accuracy": 0.4482758620689655, "yes_accuracy": 0.0625, "yes_correct": 3, "yes_total": 48, "no_accuracy": 0.9230769230769231, "no_correct": 36, "no_total": 39, "correct": 39, "total": 87}, "inside": {"accuracy": 0.7181818181818181, "yes_accuracy": 0.044444444444444446, "yes_correct": 2, "yes_total": 45, "no_accuracy": 0.8914285714285715, "no_correct": 156, "no_total": 175, "correct": 158, "total": 220}}, "predicate_accuracy": 0.7048335974643423, "macro_predicate_accuracy": 0.6243873012847666, "action_accuracy": 0.06622516556291391, "task_accuracy": 0.0, "fail_ratio": 0.0, "metadata": {"model_name": "CohereLabs/aya-vision-8b", "prompt_path": "data/prompts/benchmark/igibson/prompt_cot.md", "problems_dir": "data/planning/igibson/medium", "seed": 1, "replan": true, "fail_probability": 0.0, "enumerate_initial_state": false, "job_id": "7211616_8"}}